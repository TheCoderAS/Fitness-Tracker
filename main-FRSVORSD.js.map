{"version":3,"sources":["node_modules/moment/moment.js","node_modules/@angular/common/fesm2022/http.mjs","node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs","node_modules/@angular/router/fesm2022/router.mjs","src/app/framework/resources/nls/authentication.ts","src/app/services/messages.service.ts","src/app/services/loader.service.ts","node_modules/axios/lib/helpers/bind.js","node_modules/axios/lib/utils.js","node_modules/axios/lib/core/AxiosError.js","node_modules/axios/lib/helpers/null.js","node_modules/axios/lib/helpers/toFormData.js","node_modules/axios/lib/helpers/AxiosURLSearchParams.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/defaults/transitional.js","node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","node_modules/axios/lib/platform/browser/classes/FormData.js","node_modules/axios/lib/platform/browser/classes/Blob.js","node_modules/axios/lib/platform/browser/index.js","node_modules/axios/lib/platform/common/utils.js","node_modules/axios/lib/platform/index.js","node_modules/axios/lib/helpers/toURLEncodedForm.js","node_modules/axios/lib/helpers/formDataToJSON.js","node_modules/axios/lib/defaults/index.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/core/AxiosHeaders.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/cancel/CanceledError.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/helpers/parseProtocol.js","node_modules/axios/lib/helpers/speedometer.js","node_modules/axios/lib/helpers/throttle.js","node_modules/axios/lib/helpers/progressEventReducer.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/helpers/resolveConfig.js","node_modules/axios/lib/adapters/xhr.js","node_modules/axios/lib/helpers/composeSignals.js","node_modules/axios/lib/helpers/trackStream.js","node_modules/axios/lib/adapters/fetch.js","node_modules/axios/lib/adapters/adapters.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/env/data.js","node_modules/axios/lib/helpers/validator.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/helpers/isAxiosError.js","node_modules/axios/lib/helpers/HttpStatusCode.js","node_modules/axios/lib/axios.js","node_modules/axios/index.js","src/app/framework/resources/nls/generic.ts","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/native.js","node_modules/uuid/dist/esm-browser/v4.js","src/app/services/cordova.service.ts","src/app/services/api.service.ts","src/app/services/authentication.service.ts","src/app/animations/index.ts","node_modules/@angular/cdk/fesm2022/platform.mjs","node_modules/@angular/cdk/fesm2022/keycodes.mjs","node_modules/@angular/cdk/fesm2022/coercion.mjs","node_modules/@angular/cdk/fesm2022/observers.mjs","node_modules/@angular/cdk/fesm2022/layout.mjs","node_modules/@angular/cdk/fesm2022/a11y.mjs","node_modules/@angular/cdk/fesm2022/bidi.mjs","node_modules/@angular/material/fesm2022/core.mjs","node_modules/@angular/material/fesm2022/icon.mjs","node_modules/@angular/material/fesm2022/divider.mjs","node_modules/@angular/material/fesm2022/button.mjs","src/app/framework/modal-window/modal-window.component.ts","src/app/framework/modal-window/modal-window.component.html","src/app/framework/resources/nls/accounts.ts","node_modules/@angular/cdk/fesm2022/collections.mjs","node_modules/@angular/forms/fesm2022/forms.mjs","node_modules/@angular/material/fesm2022/list.mjs","src/app/components/account/account.component.ts","src/app/components/account/account.component.html","src/app/services/app.service.ts","src/app/framework/right-panel/right-panel.component.ts","src/app/framework/right-panel/right-panel.component.html","node_modules/@angular/cdk/fesm2022/observers/private.mjs","node_modules/@angular/material/fesm2022/form-field.mjs","node_modules/@angular/cdk/fesm2022/text-field.mjs","node_modules/@angular/material/fesm2022/input.mjs","node_modules/@angular/material/fesm2022/progress-bar.mjs","node_modules/@angular/cdk/fesm2022/scrolling.mjs","node_modules/@angular/cdk/fesm2022/portal.mjs","node_modules/@angular/cdk/fesm2022/overlay.mjs","node_modules/@angular/material/fesm2022/select.mjs","node_modules/@angular/material/fesm2022/slider.mjs","src/app/framework/form/form.resources.ts","node_modules/@angular/material/fesm2022/datepicker.mjs","src/app/framework/form/form.component.ts","src/app/framework/form/form.component.html","src/app/components/authentication/auth.resources.ts","src/app/components/account/account.resources.ts","node_modules/@angular/material/fesm2022/slide-toggle.mjs","src/app/components/reports/reports.component.ts","src/app/components/reports/reports.component.html","src/app/framework/resources/nls/dashboard.ts","node_modules/@angular/material/fesm2022/menu.mjs","node_modules/@angular/cdk/fesm2022/drag-drop.mjs","src/app/components/dashboard/widget.resources.ts","src/app/framework/fab-button/fab-button.component.ts","src/app/framework/fab-button/fab-button.component.html","src/app/components/dashboard/dashboard.component.ts","src/app/components/dashboard/dashboard.component.html","src/app/framework/resources/nls/logging.ts","src/app/components/logging/logging.resources.ts","src/app/components/logging/logging.component.ts","src/app/components/logging/logging.component.html","node_modules/@angular/material/fesm2022/card.mjs","src/app/components/authentication/authentication.component.ts","src/app/components/authentication/authentication.component.html","src/app/framework/resources/nls/tasks.ts","src/app/components/tasks/tasks.component.ts","src/app/components/tasks/tasks.component.html","src/app/framework/resources/nls/schedules.ts","src/app/components/schedules/schedules.component.ts","src/app/components/schedules/schedules.component.html","src/app/components/schedules/schedule.resources.ts","src/app/components/app/app.routes.ts","node_modules/@angular/platform-browser/fesm2022/animations/async.mjs","src/app/components/app/app.config.ts","src/app/framework/resources/nav-items.ts","src/app/framework/navbar/navbar.component.ts","src/app/framework/navbar/navbar.component.html","node_modules/@angular/material/fesm2022/progress-spinner.mjs","src/app/framework/loader/loader.component.ts","src/app/framework/loader/loader.component.html","src/app/framework/messages/messages.component.ts","src/app/framework/messages/messages.component.html","src/app/components/app/app.component.ts","src/app/components/app/app.component.html","src/main.ts"],"sourcesContent":["//! moment.js\n//! version : 2.30.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  }\n\n  // This is done to register the method called with moment()\n  // without creating circular dependencies.\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n      for (k in obj) {\n        if (hasOwnProp(obj, k)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n  function isUndefined(input) {\n    return input === void 0;\n  }\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n  function map(arr, fn) {\n    var res = [],\n      i,\n      arrLen = arr.length;\n    for (i = 0; i < arrLen; ++i) {\n      res.push(fn(arr[i], i));\n    }\n    return res;\n  }\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n    return a;\n  }\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidEra: null,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      era: null,\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n  }\n  var some;\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function (fun) {\n      var t = Object(this),\n        len = t.length >>> 0,\n        i;\n      for (i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n      return false;\n    };\n  }\n  function isValid(m) {\n    var flags = null,\n      parsedParts = false,\n      isNowValid = m._d && !isNaN(m._d.getTime());\n    if (isNowValid) {\n      flags = getParsingFlags(m);\n      parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      isNowValid = flags.overflow < 0 && !flags.empty && !flags.invalidEra && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n    }\n    if (Object.isFrozen == null || !Object.isFrozen(m)) {\n      m._isValid = isNowValid;\n    } else {\n      return isNowValid;\n    }\n    return m._isValid;\n  }\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n    return m;\n  }\n\n  // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n  var momentProperties = hooks.momentProperties = [],\n    updateInProgress = false;\n  function copyConfig(to, from) {\n    var i,\n      prop,\n      val,\n      momentPropertiesLen = momentProperties.length;\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n    if (momentPropertiesLen > 0) {\n      for (i = 0; i < momentPropertiesLen; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n    return to;\n  }\n\n  // Moment prototype object\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n      if (firstTime) {\n        var args = [],\n          arg,\n          i,\n          key,\n          argLen = arguments.length;\n        for (i = 0; i < argLen; i++) {\n          arg = '';\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n            for (key in arguments[0]) {\n              if (hasOwnProp(arguments[0], key)) {\n                arg += key + ': ' + arguments[0][key] + ', ';\n              }\n            }\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n          args.push(arg);\n        }\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n  var deprecations = {};\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n  function isFunction(input) {\n    return typeof Function !== 'undefined' && input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n  function set(config) {\n    var prop, i;\n    for (i in config) {\n      if (hasOwnProp(config, i)) {\n        prop = config[i];\n        if (isFunction(prop)) {\n          this[i] = prop;\n        } else {\n          this['_' + i] = prop;\n        }\n      }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n      prop;\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n    return res;\n  }\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n  var keys;\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function (obj) {\n      var i,\n        res = [];\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n      return res;\n    };\n  }\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n      zerosToFill = targetLength - absNumber.length,\n      sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n    localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n    formatFunctions = {},\n    formatTokenFunctions = {};\n\n  // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n      func = function () {\n        return this[callback]();\n      };\n    }\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n  }\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n      i,\n      length;\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n    return function (mom) {\n      var output = '',\n        i;\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n      return output;\n    };\n  }\n\n  // format date using native date object\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n  function expandFormat(format, locale) {\n    var i = 5;\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n    return format;\n  }\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n      formatUpper = this._longDateFormat[key.toUpperCase()];\n    if (format || !formatUpper) {\n      return format;\n    }\n    this._longDateFormat[key] = formatUpper.match(formattingTokens).map(function (tok) {\n      if (tok === 'MMMM' || tok === 'MM' || tok === 'DD' || tok === 'dddd') {\n        return tok.slice(1);\n      }\n      return tok;\n    }).join('');\n    return this._longDateFormat[key];\n  }\n  var defaultInvalidDate = 'Invalid date';\n  function invalidDate() {\n    return this._invalidDate;\n  }\n  var defaultOrdinal = '%d',\n    defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    w: 'a week',\n    ww: '%d weeks',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n  var aliases = {\n    D: 'date',\n    dates: 'date',\n    date: 'date',\n    d: 'day',\n    days: 'day',\n    day: 'day',\n    e: 'weekday',\n    weekdays: 'weekday',\n    weekday: 'weekday',\n    E: 'isoWeekday',\n    isoweekdays: 'isoWeekday',\n    isoweekday: 'isoWeekday',\n    DDD: 'dayOfYear',\n    dayofyears: 'dayOfYear',\n    dayofyear: 'dayOfYear',\n    h: 'hour',\n    hours: 'hour',\n    hour: 'hour',\n    ms: 'millisecond',\n    milliseconds: 'millisecond',\n    millisecond: 'millisecond',\n    m: 'minute',\n    minutes: 'minute',\n    minute: 'minute',\n    M: 'month',\n    months: 'month',\n    month: 'month',\n    Q: 'quarter',\n    quarters: 'quarter',\n    quarter: 'quarter',\n    s: 'second',\n    seconds: 'second',\n    second: 'second',\n    gg: 'weekYear',\n    weekyears: 'weekYear',\n    weekyear: 'weekYear',\n    GG: 'isoWeekYear',\n    isoweekyears: 'isoWeekYear',\n    isoweekyear: 'isoWeekYear',\n    w: 'week',\n    weeks: 'week',\n    week: 'week',\n    W: 'isoWeek',\n    isoweeks: 'isoWeek',\n    isoweek: 'isoWeek',\n    y: 'year',\n    years: 'year',\n    year: 'year'\n  };\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n      normalizedProp,\n      prop;\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n    return normalizedInput;\n  }\n  var priorities = {\n    date: 9,\n    day: 11,\n    weekday: 11,\n    isoWeekday: 11,\n    dayOfYear: 4,\n    hour: 13,\n    millisecond: 16,\n    minute: 14,\n    month: 8,\n    quarter: 7,\n    second: 15,\n    weekYear: 1,\n    isoWeekYear: 1,\n    week: 5,\n    isoWeek: 5,\n    year: 1\n  };\n  function getPrioritizedUnits(unitsObj) {\n    var units = [],\n      u;\n    for (u in unitsObj) {\n      if (hasOwnProp(unitsObj, u)) {\n        units.push({\n          unit: u,\n          priority: priorities[u]\n        });\n      }\n    }\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n  var match1 = /\\d/,\n    //       0 - 9\n    match2 = /\\d\\d/,\n    //      00 - 99\n    match3 = /\\d{3}/,\n    //     000 - 999\n    match4 = /\\d{4}/,\n    //    0000 - 9999\n    match6 = /[+-]?\\d{6}/,\n    // -999999 - 999999\n    match1to2 = /\\d\\d?/,\n    //       0 - 99\n    match3to4 = /\\d\\d\\d\\d?/,\n    //     999 - 9999\n    match5to6 = /\\d\\d\\d\\d\\d\\d?/,\n    //   99999 - 999999\n    match1to3 = /\\d{1,3}/,\n    //       0 - 999\n    match1to4 = /\\d{1,4}/,\n    //       0 - 9999\n    match1to6 = /[+-]?\\d{1,6}/,\n    // -999999 - 999999\n    matchUnsigned = /\\d+/,\n    //       0 - inf\n    matchSigned = /[+-]?\\d+/,\n    //    -inf - inf\n    matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi,\n    // +00:00 -00:00 +0000 -0000 or Z\n    matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi,\n    // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n    matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/,\n    // 123456789 123456789.123\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n    match1to2NoLeadingZero = /^[1-9]\\d?/,\n    //         1-99\n    match1to2HasZero = /^([1-9]\\d|\\d)/,\n    //           0-99\n    regexes;\n  regexes = {};\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n    return regexes[token](config._strict, config._locale);\n  }\n\n  // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n      value = 0;\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n    return value;\n  }\n  var tokens = {};\n  function addParseToken(token, callback) {\n    var i,\n      func = callback,\n      tokenLen;\n    if (typeof token === 'string') {\n      token = [token];\n    }\n    if (isNumber(callback)) {\n      func = function (input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n    tokenLen = token.length;\n    for (i = 0; i < tokenLen; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  }\n  var YEAR = 0,\n    MONTH = 1,\n    DATE = 2,\n    HOUR = 3,\n    MINUTE = 4,\n    SECOND = 5,\n    MILLISECOND = 6,\n    WEEK = 7,\n    WEEKDAY = 8;\n\n  // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n  // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  });\n\n  // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  // HOOKS\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  };\n\n  // MOMENTS\n\n  var getSetYear = makeGetSet('FullYear', true);\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n  function get(mom, unit) {\n    if (!mom.isValid()) {\n      return NaN;\n    }\n    var d = mom._d,\n      isUTC = mom._isUTC;\n    switch (unit) {\n      case 'Milliseconds':\n        return isUTC ? d.getUTCMilliseconds() : d.getMilliseconds();\n      case 'Seconds':\n        return isUTC ? d.getUTCSeconds() : d.getSeconds();\n      case 'Minutes':\n        return isUTC ? d.getUTCMinutes() : d.getMinutes();\n      case 'Hours':\n        return isUTC ? d.getUTCHours() : d.getHours();\n      case 'Date':\n        return isUTC ? d.getUTCDate() : d.getDate();\n      case 'Day':\n        return isUTC ? d.getUTCDay() : d.getDay();\n      case 'Month':\n        return isUTC ? d.getUTCMonth() : d.getMonth();\n      case 'FullYear':\n        return isUTC ? d.getUTCFullYear() : d.getFullYear();\n      default:\n        return NaN;\n      // Just in case\n    }\n  }\n  function set$1(mom, unit, value) {\n    var d, isUTC, year, month, date;\n    if (!mom.isValid() || isNaN(value)) {\n      return;\n    }\n    d = mom._d;\n    isUTC = mom._isUTC;\n    switch (unit) {\n      case 'Milliseconds':\n        return void (isUTC ? d.setUTCMilliseconds(value) : d.setMilliseconds(value));\n      case 'Seconds':\n        return void (isUTC ? d.setUTCSeconds(value) : d.setSeconds(value));\n      case 'Minutes':\n        return void (isUTC ? d.setUTCMinutes(value) : d.setMinutes(value));\n      case 'Hours':\n        return void (isUTC ? d.setUTCHours(value) : d.setHours(value));\n      case 'Date':\n        return void (isUTC ? d.setUTCDate(value) : d.setDate(value));\n      // case 'Day': // Not real\n      //    return void (isUTC ? d.setUTCDay(value) : d.setDay(value));\n      // case 'Month': // Not used because we need to pass two variables\n      //     return void (isUTC ? d.setUTCMonth(value) : d.setMonth(value));\n      case 'FullYear':\n        break;\n      // See below ...\n      default:\n        return;\n      // Just in case\n    }\n    year = value;\n    month = mom.month();\n    date = mom.date();\n    date = date === 29 && month === 1 && !isLeapYear(year) ? 28 : date;\n    void (isUTC ? d.setUTCFullYear(year, month, date) : d.setFullYear(year, month, date));\n  }\n\n  // MOMENTS\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n    return this;\n  }\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units),\n        i,\n        prioritizedLen = prioritized.length;\n      for (i = 0; i < prioritizedLen; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n    return this;\n  }\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n  var indexOf;\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function (o) {\n      // I know\n      var i;\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n      return -1;\n    };\n  }\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  }\n\n  // FORMATTING\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  });\n\n  // PARSING\n\n  addRegexToken('M', match1to2, match1to2NoLeadingZero);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  });\n\n  // LOCALES\n\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n    defaultMonthsShortRegex = matchWord,\n    defaultMonthsRegex = matchWord;\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n      ii,\n      mom,\n      llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n      // test the regex\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  }\n\n  // MOMENTS\n\n  function setMonth(mom, value) {\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value);\n        // TODO: Another silent failure?\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n    var month = value,\n      date = mom.date();\n    date = date < 29 ? date : Math.min(date, daysInMonth(mom.year(), month));\n    void (mom._isUTC ? mom._d.setUTCMonth(month, date) : mom._d.setMonth(month, date));\n    return mom;\n  }\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n    var shortPieces = [],\n      longPieces = [],\n      mixedPieces = [],\n      i,\n      mom,\n      shortP,\n      longP;\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortP = regexEscape(this.monthsShort(mom, ''));\n      longP = regexEscape(this.months(mom, ''));\n      shortPieces.push(shortP);\n      longPieces.push(longP);\n      mixedPieces.push(longP);\n      mixedPieces.push(shortP);\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date;\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n    return date;\n  }\n  function createUTCDate(y) {\n    var date, args;\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      args = Array.prototype.slice.call(arguments);\n      // preserve leap years using a full 400 year cycle, then reset\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n    return date;\n  }\n\n  // start-of-first-week - start-of-year\n  function firstWeekOffset(year, dow, doy) {\n    var\n      // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n      fwd = 7 + dow - doy,\n      // first-week day local weekday -- which local weekday is fwd\n      fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  }\n\n  // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n      weekOffset = firstWeekOffset(year, dow, doy),\n      dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n      resYear,\n      resDayOfYear;\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n      week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n      resWeek,\n      resYear;\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n      weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  }\n\n  // FORMATTING\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n  // PARSING\n\n  addRegexToken('w', match1to2, match1to2NoLeadingZero);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2, match1to2NoLeadingZero);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  });\n\n  // HELPERS\n\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n  };\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  }\n\n  // MOMENTS\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  // FORMATTING\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday');\n\n  // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  });\n\n  // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n      return input;\n    }\n    return null;\n  }\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n  }\n\n  // LOCALES\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    defaultWeekdaysRegex = matchWord,\n    defaultWeekdaysShortRegex = matchWord,\n    defaultWeekdaysMinRegex = matchWord;\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n      ii,\n      mom,\n      llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._weekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._weekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n\n      mom = createUTC([2000, 1]).day(i);\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n      // test the regex\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  }\n\n  // MOMENTS\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n    var day = get(this, 'Day');\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n    var minPieces = [],\n      shortPieces = [],\n      longPieces = [],\n      mixedPieces = [],\n      i,\n      mom,\n      minp,\n      shortp,\n      longp;\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = regexEscape(this.weekdaysMin(mom, ''));\n      shortp = regexEscape(this.weekdaysShort(mom, ''));\n      longp = regexEscape(this.weekdays(mom, ''));\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  }\n\n  // FORMATTING\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n  function kFormat() {\n    return this.hours() || 24;\n  }\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n  meridiem('a', true);\n  meridiem('A', false);\n\n  // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2, match1to2HasZero);\n  addRegexToken('h', match1to2, match1to2NoLeadingZero);\n  addRegexToken('k', match1to2, match1to2NoLeadingZero);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4,\n      pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4,\n      pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  });\n\n  // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    getSetHour = makeGetSet('Hours', true);\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  }\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  };\n\n  // internal storage for locale config files\n  var locales = {},\n    localeFamilies = {},\n    globalLocale;\n  function commonPrefix(arr1, arr2) {\n    var i,\n      minl = Math.min(arr1.length, arr2.length);\n    for (i = 0; i < minl; i += 1) {\n      if (arr1[i] !== arr2[i]) {\n        return i;\n      }\n    }\n    return minl;\n  }\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  }\n\n  // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n  function chooseLocale(names) {\n    var i = 0,\n      j,\n      next,\n      locale,\n      split;\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n        if (locale) {\n          return locale;\n        }\n        if (next && next.length >= j && commonPrefix(split, next) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n        j--;\n      }\n      i++;\n    }\n    return globalLocale;\n  }\n  function isLocaleNameSane(name) {\n    // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n    // Ensure name is available and function returns boolean\n    return !!(name && name.match('^[^/\\\\\\\\]*$'));\n  }\n  function loadLocale(name) {\n    var oldLocale = null,\n      aliasedRequire;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (locales[name] === undefined && typeof module !== 'undefined' && module && module.exports && isLocaleNameSane(name)) {\n      try {\n        oldLocale = globalLocale._abbr;\n        aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {\n        // mark as not found to avoid repeating expensive file require call causing high CPU\n        // when trying to find en-US, en_US, en-us for every format call\n        locales[name] = null; // null means not found\n      }\n    }\n    return locales[name];\n  }\n\n  // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n  function getSetGlobalLocale(key, values) {\n    var data;\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n    return globalLocale._abbr;\n  }\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n        parentConfig = baseConfig;\n      config.abbr = name;\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      }\n\n      // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n        tmpLocale,\n        parentConfig = baseConfig;\n      if (locales[name] != null && locales[name].parentLocale != null) {\n        // Update existing child locale in-place to avoid memory-leaks\n        locales[name].set(mergeConfigs(locales[name]._config, config));\n      } else {\n        // MERGE\n        tmpLocale = loadLocale(name);\n        if (tmpLocale != null) {\n          parentConfig = tmpLocale._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        if (tmpLocale == null) {\n          // updateLocale is called for creating a new locale\n          // Set abbr so it will have a name (getters return\n          // undefined otherwise).\n          config.abbr = name;\n        }\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n      }\n\n      // backwards compat for now: also set the locale\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n          if (name === getSetGlobalLocale()) {\n            getSetGlobalLocale(name);\n          }\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n    return locales[name];\n  }\n\n  // returns locale data\n  function getLocale(key) {\n    var locale;\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n    if (!key) {\n      return globalLocale;\n    }\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n      if (locale) {\n        return locale;\n      }\n      key = [key];\n    }\n    return chooseLocale(key);\n  }\n  function listLocales() {\n    return keys(locales);\n  }\n  function checkOverflow(m) {\n    var overflow,\n      a = m._a;\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n      getParsingFlags(m).overflow = overflow;\n    }\n    return m;\n  }\n\n  // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n    basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n    tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n    isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/], ['YYYYMM', /\\d{6}/, false], ['YYYY', /\\d{4}/, false]],\n    // iso time formats and regexes\n    isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]],\n    aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n    obsOffsets = {\n      UT: 0,\n      GMT: 0,\n      EDT: -4 * 60,\n      EST: -5 * 60,\n      CDT: -5 * 60,\n      CST: -6 * 60,\n      MDT: -6 * 60,\n      MST: -7 * 60,\n      PDT: -7 * 60,\n      PST: -8 * 60\n    };\n\n  // date from iso format\n  function configFromISO(config) {\n    var i,\n      l,\n      string = config._i,\n      match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n      allowTime,\n      dateFormat,\n      timeFormat,\n      tzFormat,\n      isoDatesLen = isoDates.length,\n      isoTimesLen = isoTimes.length;\n    if (match) {\n      getParsingFlags(config).iso = true;\n      for (i = 0, l = isoDatesLen; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n      if (match[3]) {\n        for (i = 0, l = isoTimesLen; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  }\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n    return result;\n  }\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n    return year;\n  }\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^()]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n        weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n    return true;\n  }\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10),\n        m = hm % 100,\n        h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  }\n\n  // date and time from ref 2822 format\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i)),\n      parsedArray;\n    if (match) {\n      parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  }\n\n  // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n    configFromISO(config);\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n    if (config._strict) {\n      config._isValid = false;\n    } else {\n      // Final attempt, use Input Fallback\n      hooks.createFromInputFallback(config);\n    }\n  }\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  });\n\n  // Pick the first defined of two or three arguments.\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n    if (b != null) {\n      return b;\n    }\n    return c;\n  }\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  }\n\n  // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n  function configFromArray(config) {\n    var i,\n      date,\n      input = [],\n      currentDate,\n      expectedWeekday,\n      yearToUse;\n    if (config._d) {\n      return;\n    }\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    }\n\n    // check for mismatching day of week\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4;\n\n      // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n      // Default to current week.\n      week = defaults(w.w, curWeek.week);\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  }\n\n  // constant that refers to the ISO standard\n  hooks.ISO_8601 = function () {};\n\n  // constant that refers to the RFC 2822 form\n  hooks.RFC_2822 = function () {};\n\n  // date from string and format string\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n      i,\n      parsedInput,\n      tokens,\n      token,\n      skipped,\n      stringLength = string.length,\n      totalParsedInputLength = 0,\n      era,\n      tokenLen;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n    tokenLen = tokens.length;\n    for (i = 0; i < tokenLen; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      }\n      // don't parse if it's not a known token\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    // handle era\n    era = getParsingFlags(config).era;\n    if (era !== null) {\n      config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n    }\n    configFromArray(config);\n    checkOverflow(config);\n  }\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  }\n\n  // date from string and array of format strings\n  function configFromStringAndArray(config) {\n    var tempConfig,\n      bestMoment,\n      scoreToBeat,\n      i,\n      currentScore,\n      validFormatFound,\n      bestFormatIsValid = false,\n      configfLen = config._f.length;\n    if (configfLen === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n    for (i = 0; i < configfLen; i++) {\n      currentScore = 0;\n      validFormatFound = false;\n      tempConfig = copyConfig({}, config);\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n      if (isValid(tempConfig)) {\n        validFormatFound = true;\n      }\n\n      // if there is any input that was not parsed add a penalty for that format\n      currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n      //or tokens\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n      if (!bestFormatIsValid) {\n        if (scoreToBeat == null || currentScore < scoreToBeat || validFormatFound) {\n          scoreToBeat = currentScore;\n          bestMoment = tempConfig;\n          if (validFormatFound) {\n            bestFormatIsValid = true;\n          }\n        }\n      } else {\n        if (currentScore < scoreToBeat) {\n          scoreToBeat = currentScore;\n          bestMoment = tempConfig;\n        }\n      }\n    }\n    extend(config, bestMoment || tempConfig);\n  }\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n    var i = normalizeObjectUnits(config._i),\n      dayOrDate = i.day === undefined ? i.date : i.day;\n    config._a = map([i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n    return res;\n  }\n  function prepareConfig(config) {\n    var input = config._i,\n      format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n    if (!isValid(config)) {\n      config._d = null;\n    }\n    return config;\n  }\n  function configFromInput(config) {\n    var input = config._i;\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n    if (format === true || format === false) {\n      strict = format;\n      format = undefined;\n    }\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n      var other = createLocal.apply(null, arguments);\n      if (this.isValid() && other.isValid()) {\n        return other < this ? this : other;\n      } else {\n        return createInvalid();\n      }\n    }),\n    prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n      var other = createLocal.apply(null, arguments);\n      if (this.isValid() && other.isValid()) {\n        return other > this ? this : other;\n      } else {\n        return createInvalid();\n      }\n    });\n\n  // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n  function pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n    if (!moments.length) {\n      return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n    return res;\n  }\n\n  // TODO: Use [].sort instead?\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n  var now = function () {\n    return Date.now ? Date.now() : +new Date();\n  };\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n  function isDurationValid(m) {\n    var key,\n      unitHasDecimal = false,\n      i,\n      orderLen = ordering.length;\n    for (key in m) {\n      if (hasOwnProp(m, key) && !(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n    for (i = 0; i < orderLen; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n    return true;\n  }\n  function isValid$1() {\n    return this._isValid;\n  }\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n      years = normalizedInput.year || 0,\n      quarters = normalizedInput.quarter || 0,\n      months = normalizedInput.month || 0,\n      weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n      days = normalizedInput.day || 0,\n      hours = normalizedInput.hour || 0,\n      minutes = normalizedInput.minute || 0,\n      seconds = normalizedInput.second || 0,\n      milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds + seconds * 1e3 +\n    // 1000\n    minutes * 6e4 +\n    // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days + weeks * 7;\n    // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n    this._bubble();\n  }\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  }\n\n  // compare two arrays, return the number of differences\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n      lengthDiff = Math.abs(array1.length - array2.length),\n      diffs = 0,\n      i;\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n    return diffs + lengthDiff;\n  }\n\n  // FORMATTING\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset(),\n        sign = '+';\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n  offset('Z', ':');\n  offset('ZZ', '');\n\n  // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  });\n\n  // HELPERS\n\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher),\n      chunk,\n      parts,\n      minutes;\n    if (matches === null) {\n      return null;\n    }\n    chunk = matches[matches.length - 1] || [];\n    parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  }\n\n  // Return a moment from input, that is local/utc/zone equivalent to model.\n  function cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n      // Use low-level api, because this fn is low-level api.\n      res._d.setTime(res._d.valueOf() + diff);\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset());\n  }\n\n  // HOOKS\n\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n  hooks.updateOffset = function () {};\n\n  // MOMENTS\n\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n      localAdjust;\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n      this._offset = input;\n      this._isUTC = true;\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n    return this;\n  }\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n    return this;\n  }\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n    var c = {},\n      other;\n    copyConfig(c, this);\n    c = prepareConfig(c);\n    if (c._a) {\n      other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n    return this._isDSTShifted;\n  }\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  }\n\n  // ASP.NET json date format regex\n  var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n  function createDuration(input, key) {\n    var duration = input,\n      // matching against regexp is expensive, do it on demand\n      match = null,\n      sign,\n      ret,\n      diffRes;\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input) || !isNaN(+input)) {\n      duration = {};\n      if (key) {\n        duration[key] = +input;\n      } else {\n        duration.milliseconds = +input;\n      }\n    } else if (match = aspNetRegex.exec(input)) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n      };\n    } else if (match = isoRegex.exec(input)) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n    ret = new Duration(duration);\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n    if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n      ret._isValid = input._isValid;\n    }\n    return ret;\n  }\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n  function momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n    return res;\n  }\n\n  // TODO: remove 'name' arg after deprecation is removed\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp;\n      //invert the arguments, but complain about it\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n      days = absRound(duration._days),\n      months = absRound(duration._months);\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n    updateOffset = updateOffset == null ? true : updateOffset;\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n  var add = createAdder(1, 'add'),\n    subtract = createAdder(-1, 'subtract');\n  function isString(input) {\n    return typeof input === 'string' || input instanceof String;\n  }\n\n  // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n  function isMomentInput(input) {\n    return isMoment(input) || isDate(input) || isString(input) || isNumber(input) || isNumberOrStringArray(input) || isMomentInputObject(input) || input === null || input === undefined;\n  }\n  function isMomentInputObject(input) {\n    var objectTest = isObject(input) && !isObjectEmpty(input),\n      propertyTest = false,\n      properties = ['years', 'year', 'y', 'months', 'month', 'M', 'days', 'day', 'd', 'dates', 'date', 'D', 'hours', 'hour', 'h', 'minutes', 'minute', 'm', 'seconds', 'second', 's', 'milliseconds', 'millisecond', 'ms'],\n      i,\n      property,\n      propertyLen = properties.length;\n    for (i = 0; i < propertyLen; i += 1) {\n      property = properties[i];\n      propertyTest = propertyTest || hasOwnProp(input, property);\n    }\n    return objectTest && propertyTest;\n  }\n  function isNumberOrStringArray(input) {\n    var arrayTest = isArray(input),\n      dataTypeTest = false;\n    if (arrayTest) {\n      dataTypeTest = input.filter(function (item) {\n        return !isNumber(item) && isString(input);\n      }).length === 0;\n    }\n    return arrayTest && dataTypeTest;\n  }\n  function isCalendarSpec(input) {\n    var objectTest = isObject(input) && !isObjectEmpty(input),\n      propertyTest = false,\n      properties = ['sameDay', 'nextDay', 'lastDay', 'nextWeek', 'lastWeek', 'sameElse'],\n      i,\n      property;\n    for (i = 0; i < properties.length; i += 1) {\n      property = properties[i];\n      propertyTest = propertyTest || hasOwnProp(input, property);\n    }\n    return objectTest && propertyTest;\n  }\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n  function calendar$1(time, formats) {\n    // Support for single parameter, formats only overload to the calendar function\n    if (arguments.length === 1) {\n      if (!arguments[0]) {\n        time = undefined;\n        formats = undefined;\n      } else if (isMomentInput(arguments[0])) {\n        time = arguments[0];\n        formats = undefined;\n      } else if (isCalendarSpec(arguments[0])) {\n        formats = arguments[0];\n        time = undefined;\n      }\n    }\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n      sod = cloneWithOffset(now, this).startOf('day'),\n      format = hooks.calendarFormat(this, sod) || 'sameElse',\n      output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n  function clone() {\n    return new Moment(this);\n  }\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n    units = normalizeUnits(units) || 'millisecond';\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n    units = normalizeUnits(units) || 'millisecond';\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n      localTo = isMoment(to) ? to : createLocal(to);\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n      inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n    units = normalizeUnits(units) || 'millisecond';\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n    if (!this.isValid()) {\n      return NaN;\n    }\n    that = cloneWithOffset(input, this);\n    if (!that.isValid()) {\n      return NaN;\n    }\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n      default:\n        output = this - that;\n    }\n    return asFloat ? output : absFloor(output);\n  }\n  function monthDiff(a, b) {\n    if (a.date() < b.date()) {\n      // end-of-month calculations work correct when the start month has more\n      // days than the end month.\n      return -monthDiff(b, a);\n    }\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n      // b is in (anchor - 1 month, anchor + 1 month)\n      anchor = a.clone().add(wholeMonthDiff, 'months'),\n      anchor2,\n      adjust;\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n      // linear across the month\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n      // linear across the month\n      adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n    var utc = keepOffset !== true,\n      m = utc ? this.clone().utc() : this;\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment',\n      zone = '',\n      prefix,\n      year,\n      datetime,\n      suffix;\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n    prefix = '[' + func + '(\"]';\n    year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  }\n\n  // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n  function locale(key) {\n    var newLocaleData;\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n      return this;\n    }\n  }\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n  function localeData() {\n    return this._locale;\n  }\n  var MS_PER_SECOND = 1000,\n    MS_PER_MINUTE = 60 * MS_PER_SECOND,\n    MS_PER_HOUR = 60 * MS_PER_MINUTE,\n    MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n  // actual modulo - handles negative numbers (for dates before 1970):\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n  function startOf(units) {\n    var time, startOfDate;\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n    startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n    this._d.setTime(time);\n    hooks.updateOffset(this, true);\n    return this;\n  }\n  function endOf(units) {\n    var time, startOfDate;\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n    startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n    this._d.setTime(time);\n    hooks.updateOffset(this, true);\n    return this;\n  }\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n  function isValid$2() {\n    return isValid(this);\n  }\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  }\n  addFormatToken('N', 0, 0, 'eraAbbr');\n  addFormatToken('NN', 0, 0, 'eraAbbr');\n  addFormatToken('NNN', 0, 0, 'eraAbbr');\n  addFormatToken('NNNN', 0, 0, 'eraName');\n  addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n  addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n  addFormatToken('y', ['yy', 2], 0, 'eraYear');\n  addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n  addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n  addRegexToken('N', matchEraAbbr);\n  addRegexToken('NN', matchEraAbbr);\n  addRegexToken('NNN', matchEraAbbr);\n  addRegexToken('NNNN', matchEraName);\n  addRegexToken('NNNNN', matchEraNarrow);\n  addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (input, array, config, token) {\n    var era = config._locale.erasParse(input, token, config._strict);\n    if (era) {\n      getParsingFlags(config).era = era;\n    } else {\n      getParsingFlags(config).invalidEra = input;\n    }\n  });\n  addRegexToken('y', matchUnsigned);\n  addRegexToken('yy', matchUnsigned);\n  addRegexToken('yyy', matchUnsigned);\n  addRegexToken('yyyy', matchUnsigned);\n  addRegexToken('yo', matchEraYearOrdinal);\n  addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n  addParseToken(['yo'], function (input, array, config, token) {\n    var match;\n    if (config._locale._eraYearOrdinalRegex) {\n      match = input.match(config._locale._eraYearOrdinalRegex);\n    }\n    if (config._locale.eraYearOrdinalParse) {\n      array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n    } else {\n      array[YEAR] = parseInt(input, 10);\n    }\n  });\n  function localeEras(m, format) {\n    var i,\n      l,\n      date,\n      eras = this._eras || getLocale('en')._eras;\n    for (i = 0, l = eras.length; i < l; ++i) {\n      switch (typeof eras[i].since) {\n        case 'string':\n          // truncate time\n          date = hooks(eras[i].since).startOf('day');\n          eras[i].since = date.valueOf();\n          break;\n      }\n      switch (typeof eras[i].until) {\n        case 'undefined':\n          eras[i].until = +Infinity;\n          break;\n        case 'string':\n          // truncate time\n          date = hooks(eras[i].until).startOf('day').valueOf();\n          eras[i].until = date.valueOf();\n          break;\n      }\n    }\n    return eras;\n  }\n  function localeErasParse(eraName, format, strict) {\n    var i,\n      l,\n      eras = this.eras(),\n      name,\n      abbr,\n      narrow;\n    eraName = eraName.toUpperCase();\n    for (i = 0, l = eras.length; i < l; ++i) {\n      name = eras[i].name.toUpperCase();\n      abbr = eras[i].abbr.toUpperCase();\n      narrow = eras[i].narrow.toUpperCase();\n      if (strict) {\n        switch (format) {\n          case 'N':\n          case 'NN':\n          case 'NNN':\n            if (abbr === eraName) {\n              return eras[i];\n            }\n            break;\n          case 'NNNN':\n            if (name === eraName) {\n              return eras[i];\n            }\n            break;\n          case 'NNNNN':\n            if (narrow === eraName) {\n              return eras[i];\n            }\n            break;\n        }\n      } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n        return eras[i];\n      }\n    }\n  }\n  function localeErasConvertYear(era, year) {\n    var dir = era.since <= era.until ? +1 : -1;\n    if (year === undefined) {\n      return hooks(era.since).year();\n    } else {\n      return hooks(era.since).year() + (year - era.offset) * dir;\n    }\n  }\n  function getEraName() {\n    var i,\n      l,\n      val,\n      eras = this.localeData().eras();\n    for (i = 0, l = eras.length; i < l; ++i) {\n      // truncate time\n      val = this.clone().startOf('day').valueOf();\n      if (eras[i].since <= val && val <= eras[i].until) {\n        return eras[i].name;\n      }\n      if (eras[i].until <= val && val <= eras[i].since) {\n        return eras[i].name;\n      }\n    }\n    return '';\n  }\n  function getEraNarrow() {\n    var i,\n      l,\n      val,\n      eras = this.localeData().eras();\n    for (i = 0, l = eras.length; i < l; ++i) {\n      // truncate time\n      val = this.clone().startOf('day').valueOf();\n      if (eras[i].since <= val && val <= eras[i].until) {\n        return eras[i].narrow;\n      }\n      if (eras[i].until <= val && val <= eras[i].since) {\n        return eras[i].narrow;\n      }\n    }\n    return '';\n  }\n  function getEraAbbr() {\n    var i,\n      l,\n      val,\n      eras = this.localeData().eras();\n    for (i = 0, l = eras.length; i < l; ++i) {\n      // truncate time\n      val = this.clone().startOf('day').valueOf();\n      if (eras[i].since <= val && val <= eras[i].until) {\n        return eras[i].abbr;\n      }\n      if (eras[i].until <= val && val <= eras[i].since) {\n        return eras[i].abbr;\n      }\n    }\n    return '';\n  }\n  function getEraYear() {\n    var i,\n      l,\n      dir,\n      val,\n      eras = this.localeData().eras();\n    for (i = 0, l = eras.length; i < l; ++i) {\n      dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n      // truncate time\n      val = this.clone().startOf('day').valueOf();\n      if (eras[i].since <= val && val <= eras[i].until || eras[i].until <= val && val <= eras[i].since) {\n        return (this.year() - hooks(eras[i].since).year()) * dir + eras[i].offset;\n      }\n    }\n    return this.year();\n  }\n  function erasNameRegex(isStrict) {\n    if (!hasOwnProp(this, '_erasNameRegex')) {\n      computeErasParse.call(this);\n    }\n    return isStrict ? this._erasNameRegex : this._erasRegex;\n  }\n  function erasAbbrRegex(isStrict) {\n    if (!hasOwnProp(this, '_erasAbbrRegex')) {\n      computeErasParse.call(this);\n    }\n    return isStrict ? this._erasAbbrRegex : this._erasRegex;\n  }\n  function erasNarrowRegex(isStrict) {\n    if (!hasOwnProp(this, '_erasNarrowRegex')) {\n      computeErasParse.call(this);\n    }\n    return isStrict ? this._erasNarrowRegex : this._erasRegex;\n  }\n  function matchEraAbbr(isStrict, locale) {\n    return locale.erasAbbrRegex(isStrict);\n  }\n  function matchEraName(isStrict, locale) {\n    return locale.erasNameRegex(isStrict);\n  }\n  function matchEraNarrow(isStrict, locale) {\n    return locale.erasNarrowRegex(isStrict);\n  }\n  function matchEraYearOrdinal(isStrict, locale) {\n    return locale._eraYearOrdinalRegex || matchUnsigned;\n  }\n  function computeErasParse() {\n    var abbrPieces = [],\n      namePieces = [],\n      narrowPieces = [],\n      mixedPieces = [],\n      i,\n      l,\n      erasName,\n      erasAbbr,\n      erasNarrow,\n      eras = this.eras();\n    for (i = 0, l = eras.length; i < l; ++i) {\n      erasName = regexEscape(eras[i].name);\n      erasAbbr = regexEscape(eras[i].abbr);\n      erasNarrow = regexEscape(eras[i].narrow);\n      namePieces.push(erasName);\n      abbrPieces.push(erasAbbr);\n      narrowPieces.push(erasNarrow);\n      mixedPieces.push(erasName);\n      mixedPieces.push(erasAbbr);\n      mixedPieces.push(erasNarrow);\n    }\n    this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n    this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n    this._erasNarrowRegex = new RegExp('^(' + narrowPieces.join('|') + ')', 'i');\n  }\n\n  // FORMATTING\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n  // ALIASES\n\n  // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  });\n\n  // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday() + this.localeData()._week.dow, this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n  function getISOWeeksInISOWeekYear() {\n    return weeksInYear(this.isoWeekYear(), 1, 4);\n  }\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n  function getWeeksInWeekYear() {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n  }\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n      date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  }\n\n  // FORMATTING\n\n  addFormatToken('Q', 0, 'Qo', 'quarter');\n\n  // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  });\n\n  // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  }\n\n  // FORMATTING\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n  // PARSING\n\n  addRegexToken('D', match1to2, match1to2NoLeadingZero);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  });\n\n  // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true);\n\n  // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n  // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  });\n\n  // HELPERS\n\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  }\n\n  // FORMATTING\n\n  addFormatToken('m', ['mm', 2], 0, 'minute');\n\n  // PARSING\n\n  addRegexToken('m', match1to2, match1to2HasZero);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE);\n\n  // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false);\n\n  // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second');\n\n  // PARSING\n\n  addRegexToken('s', match1to2, match1to2HasZero);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND);\n\n  // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false);\n\n  // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  });\n\n  // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token, getSetMillisecond;\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  }\n  getSetMillisecond = makeGetSet('Milliseconds', false);\n\n  // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName');\n\n  // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n    proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n      return 'Moment<' + this.format() + '>';\n    };\n  }\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.eraName = getEraName;\n  proto.eraNarrow = getEraNarrow;\n  proto.eraAbbr = getEraAbbr;\n  proto.eraYear = getEraYear;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.weeksInWeekYear = getWeeksInWeekYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n  function preParsePostFormat(string) {\n    return string;\n  }\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.eras = localeEras;\n  proto$1.erasParse = localeErasParse;\n  proto$1.erasConvertYear = localeErasConvertYear;\n  proto$1.erasAbbrRegex = erasAbbrRegex;\n  proto$1.erasNameRegex = erasNameRegex;\n  proto$1.erasNarrowRegex = erasNarrowRegex;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n  function get$1(format, index, field, setter) {\n    var locale = getLocale(),\n      utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n    format = format || '';\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n    var i,\n      out = [];\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n  }\n\n  // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n      format = format || '';\n    }\n    var locale = getLocale(),\n      shift = localeSorted ? locale._week.dow : 0,\n      i,\n      out = [];\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n  }\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n  getSetGlobalLocale('en', {\n    eras: [{\n      since: '0001-01-01',\n      until: +Infinity,\n      offset: 1,\n      name: 'Anno Domini',\n      narrow: 'AD',\n      abbr: 'AD'\n    }, {\n      since: '0000-12-31',\n      until: -Infinity,\n      offset: 1,\n      name: 'Before Christ',\n      narrow: 'BC',\n      abbr: 'BC'\n    }],\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function (number) {\n      var b = number % 10,\n        output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  });\n\n  // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  }\n\n  // supports only 2.0-style add(1, 's') or add(duration)\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  }\n\n  // supports only 2.0-style subtract(1, 's') or subtract(duration)\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n  function bubble() {\n    var milliseconds = this._milliseconds,\n      days = this._days,\n      months = this._months,\n      data = this._data,\n      seconds,\n      minutes,\n      hours,\n      years,\n      monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n    var days,\n      months,\n      milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n      switch (units) {\n        case 'month':\n          return months;\n        case 'quarter':\n          return months / 3;\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n        case 'day':\n          return days + milliseconds / 864e5;\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  }\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n  var asMilliseconds = makeAs('ms'),\n    asSeconds = makeAs('s'),\n    asMinutes = makeAs('m'),\n    asHours = makeAs('h'),\n    asDays = makeAs('d'),\n    asWeeks = makeAs('w'),\n    asMonths = makeAs('M'),\n    asQuarters = makeAs('Q'),\n    asYears = makeAs('y'),\n    valueOf$1 = asMilliseconds;\n  function clone$1() {\n    return createDuration(this);\n  }\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n  var milliseconds = makeGetter('milliseconds'),\n    seconds = makeGetter('seconds'),\n    minutes = makeGetter('minutes'),\n    hours = makeGetter('hours'),\n    days = makeGetter('days'),\n    months = makeGetter('months'),\n    years = makeGetter('years');\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n  var round = Math.round,\n    thresholds = {\n      ss: 44,\n      // a few seconds to seconds\n      s: 45,\n      // seconds to minute\n      m: 45,\n      // minutes to hour\n      h: 22,\n      // hours to day\n      d: 26,\n      // days to month/week\n      w: null,\n      // weeks to month\n      M: 11 // months to year\n    };\n\n  // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n  function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n    var duration = createDuration(posNegDuration).abs(),\n      seconds = round(duration.as('s')),\n      minutes = round(duration.as('m')),\n      hours = round(duration.as('h')),\n      days = round(duration.as('d')),\n      months = round(duration.as('M')),\n      weeks = round(duration.as('w')),\n      years = round(duration.as('y')),\n      a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days];\n    if (thresholds.w != null) {\n      a = a || weeks <= 1 && ['w'] || weeks < thresholds.w && ['ww', weeks];\n    }\n    a = a || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  }\n\n  // This function allows you to set the rounding function for relative time strings\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n    return false;\n  }\n\n  // This function allows you to set a threshold for relative time strings\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n    return true;\n  }\n  function humanize(argWithSuffix, argThresholds) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n    var withSuffix = false,\n      th = thresholds,\n      locale,\n      output;\n    if (typeof argWithSuffix === 'object') {\n      argThresholds = argWithSuffix;\n      argWithSuffix = false;\n    }\n    if (typeof argWithSuffix === 'boolean') {\n      withSuffix = argWithSuffix;\n    }\n    if (typeof argThresholds === 'object') {\n      th = Object.assign({}, thresholds, argThresholds);\n      if (argThresholds.s != null && argThresholds.ss == null) {\n        th.ss = argThresholds.s - 1;\n      }\n    }\n    locale = this.localeData();\n    output = relativeTime$1(this, !withSuffix, th, locale);\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n    return locale.postformat(output);\n  }\n  var abs$1 = Math.abs;\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n    var seconds = abs$1(this._milliseconds) / 1000,\n      days = abs$1(this._days),\n      months = abs$1(this._months),\n      minutes,\n      hours,\n      years,\n      s,\n      total = this.asSeconds(),\n      totalSign,\n      ymSign,\n      daysSign,\n      hmsSign;\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    totalSign = total < 0 ? '-' : '';\n    ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (years ? ymSign + years + 'Y' : '') + (months ? ymSign + months + 'M' : '') + (days ? daysSign + days + 'D' : '') + (hours || minutes || seconds ? 'T' : '') + (hours ? hmsSign + hours + 'H' : '') + (minutes ? hmsSign + minutes + 'M' : '') + (seconds ? hmsSign + s + 'S' : '');\n  }\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang;\n\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf');\n\n  // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  });\n\n  //! moment.js\n\n  hooks.version = '2.30.1';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto;\n\n  // currently HTML5 input type only supports 24-hour formats\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n  };\n  return hooks;\n});","/**\n * @license Angular v18.2.5\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, NgZone, runInInjectionContext, InjectionToken, ɵPendingTasks, PLATFORM_ID, ɵConsole, ɵformatRuntimeError, Inject, ɵRuntimeError, makeEnvironmentProviders, NgModule, TransferState, makeStateKey, ɵperformanceMarkFeature, APP_BOOTSTRAP_LISTENER, ApplicationRef, ɵwhenStable, ɵtruncateMiddle } from '@angular/core';\nimport { of, Observable, from } from 'rxjs';\nimport { concatMap, filter, map, finalize, switchMap, tap } from 'rxjs/operators';\nimport * as i1 from '@angular/common';\nimport { isPlatformServer, DOCUMENT, ɵparseCookieValue } from '@angular/common';\n\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * @publicApi\n */\nclass HttpHandler {}\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * @publicApi\n */\nclass HttpBackend {}\n\n/**\n * Represents the header configuration options for an HTTP request.\n * Instances are immutable. Modifying methods return a cloned\n * instance with the change. The original object is never changed.\n *\n * @publicApi\n */\nclass HttpHeaders {\n  /**  Constructs a new HTTP header object with the given values.*/\n  constructor(headers) {\n    /**\n     * Internal map of lowercased header names to the normalized\n     * form of the name (the form seen first).\n     */\n    this.normalizedNames = new Map();\n    /**\n     * Queued updates to be materialized the next initialization.\n     */\n    this.lazyUpdate = null;\n    if (!headers) {\n      this.headers = new Map();\n    } else if (typeof headers === 'string') {\n      this.lazyInit = () => {\n        this.headers = new Map();\n        headers.split('\\n').forEach(line => {\n          const index = line.indexOf(':');\n          if (index > 0) {\n            const name = line.slice(0, index);\n            const key = name.toLowerCase();\n            const value = line.slice(index + 1).trim();\n            this.maybeSetNormalizedName(name, key);\n            if (this.headers.has(key)) {\n              this.headers.get(key).push(value);\n            } else {\n              this.headers.set(key, [value]);\n            }\n          }\n        });\n      };\n    } else if (typeof Headers !== 'undefined' && headers instanceof Headers) {\n      this.headers = new Map();\n      headers.forEach((values, name) => {\n        this.setHeaderEntries(name, values);\n      });\n    } else {\n      this.lazyInit = () => {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          assertValidHeaders(headers);\n        }\n        this.headers = new Map();\n        Object.entries(headers).forEach(([name, values]) => {\n          this.setHeaderEntries(name, values);\n        });\n      };\n    }\n  }\n  /**\n   * Checks for existence of a given header.\n   *\n   * @param name The header name to check for existence.\n   *\n   * @returns True if the header exists, false otherwise.\n   */\n  has(name) {\n    this.init();\n    return this.headers.has(name.toLowerCase());\n  }\n  /**\n   * Retrieves the first value of a given header.\n   *\n   * @param name The header name.\n   *\n   * @returns The value string if the header exists, null otherwise\n   */\n  get(name) {\n    this.init();\n    const values = this.headers.get(name.toLowerCase());\n    return values && values.length > 0 ? values[0] : null;\n  }\n  /**\n   * Retrieves the names of the headers.\n   *\n   * @returns A list of header names.\n   */\n  keys() {\n    this.init();\n    return Array.from(this.normalizedNames.values());\n  }\n  /**\n   * Retrieves a list of values for a given header.\n   *\n   * @param name The header name from which to retrieve values.\n   *\n   * @returns A string of values if the header exists, null otherwise.\n   */\n  getAll(name) {\n    this.init();\n    return this.headers.get(name.toLowerCase()) || null;\n  }\n  /**\n   * Appends a new value to the existing set of values for a header\n   * and returns them in a clone of the original instance.\n   *\n   * @param name The header name for which to append the values.\n   * @param value The value to append.\n   *\n   * @returns A clone of the HTTP headers object with the value appended to the given header.\n   */\n  append(name, value) {\n    return this.clone({\n      name,\n      value,\n      op: 'a'\n    });\n  }\n  /**\n   * Sets or modifies a value for a given header in a clone of the original instance.\n   * If the header already exists, its value is replaced with the given value\n   * in the returned object.\n   *\n   * @param name The header name.\n   * @param value The value or values to set or override for the given header.\n   *\n   * @returns A clone of the HTTP headers object with the newly set header value.\n   */\n  set(name, value) {\n    return this.clone({\n      name,\n      value,\n      op: 's'\n    });\n  }\n  /**\n   * Deletes values for a given header in a clone of the original instance.\n   *\n   * @param name The header name.\n   * @param value The value or values to delete for the given header.\n   *\n   * @returns A clone of the HTTP headers object with the given value deleted.\n   */\n  delete(name, value) {\n    return this.clone({\n      name,\n      value,\n      op: 'd'\n    });\n  }\n  maybeSetNormalizedName(name, lcName) {\n    if (!this.normalizedNames.has(lcName)) {\n      this.normalizedNames.set(lcName, name);\n    }\n  }\n  init() {\n    if (!!this.lazyInit) {\n      if (this.lazyInit instanceof HttpHeaders) {\n        this.copyFrom(this.lazyInit);\n      } else {\n        this.lazyInit();\n      }\n      this.lazyInit = null;\n      if (!!this.lazyUpdate) {\n        this.lazyUpdate.forEach(update => this.applyUpdate(update));\n        this.lazyUpdate = null;\n      }\n    }\n  }\n  copyFrom(other) {\n    other.init();\n    Array.from(other.headers.keys()).forEach(key => {\n      this.headers.set(key, other.headers.get(key));\n      this.normalizedNames.set(key, other.normalizedNames.get(key));\n    });\n  }\n  clone(update) {\n    const clone = new HttpHeaders();\n    clone.lazyInit = !!this.lazyInit && this.lazyInit instanceof HttpHeaders ? this.lazyInit : this;\n    clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n    return clone;\n  }\n  applyUpdate(update) {\n    const key = update.name.toLowerCase();\n    switch (update.op) {\n      case 'a':\n      case 's':\n        let value = update.value;\n        if (typeof value === 'string') {\n          value = [value];\n        }\n        if (value.length === 0) {\n          return;\n        }\n        this.maybeSetNormalizedName(update.name, key);\n        const base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n        base.push(...value);\n        this.headers.set(key, base);\n        break;\n      case 'd':\n        const toDelete = update.value;\n        if (!toDelete) {\n          this.headers.delete(key);\n          this.normalizedNames.delete(key);\n        } else {\n          let existing = this.headers.get(key);\n          if (!existing) {\n            return;\n          }\n          existing = existing.filter(value => toDelete.indexOf(value) === -1);\n          if (existing.length === 0) {\n            this.headers.delete(key);\n            this.normalizedNames.delete(key);\n          } else {\n            this.headers.set(key, existing);\n          }\n        }\n        break;\n    }\n  }\n  setHeaderEntries(name, values) {\n    const headerValues = (Array.isArray(values) ? values : [values]).map(value => value.toString());\n    const key = name.toLowerCase();\n    this.headers.set(key, headerValues);\n    this.maybeSetNormalizedName(name, key);\n  }\n  /**\n   * @internal\n   */\n  forEach(fn) {\n    this.init();\n    Array.from(this.normalizedNames.keys()).forEach(key => fn(this.normalizedNames.get(key), this.headers.get(key)));\n  }\n}\n/**\n * Verifies that the headers object has the right shape: the values\n * must be either strings, numbers or arrays. Throws an error if an invalid\n * header value is present.\n */\nfunction assertValidHeaders(headers) {\n  for (const [key, value] of Object.entries(headers)) {\n    if (!(typeof value === 'string' || typeof value === 'number') && !Array.isArray(value)) {\n      throw new Error(`Unexpected value of the \\`${key}\\` header provided. ` + `Expecting either a string, a number or an array, but got: \\`${value}\\`.`);\n    }\n  }\n}\n\n/**\n * Provides encoding and decoding of URL parameter and query-string values.\n *\n * Serializes and parses URL parameter keys and values to encode and decode them.\n * If you pass URL query parameters without encoding,\n * the query parameters can be misinterpreted at the receiving end.\n *\n *\n * @publicApi\n */\nclass HttpUrlEncodingCodec {\n  /**\n   * Encodes a key name for a URL parameter or query-string.\n   * @param key The key name.\n   * @returns The encoded key name.\n   */\n  encodeKey(key) {\n    return standardEncoding(key);\n  }\n  /**\n   * Encodes the value of a URL parameter or query-string.\n   * @param value The value.\n   * @returns The encoded value.\n   */\n  encodeValue(value) {\n    return standardEncoding(value);\n  }\n  /**\n   * Decodes an encoded URL parameter or query-string key.\n   * @param key The encoded key name.\n   * @returns The decoded key name.\n   */\n  decodeKey(key) {\n    return decodeURIComponent(key);\n  }\n  /**\n   * Decodes an encoded URL parameter or query-string value.\n   * @param value The encoded value.\n   * @returns The decoded value.\n   */\n  decodeValue(value) {\n    return decodeURIComponent(value);\n  }\n}\nfunction paramParser(rawParams, codec) {\n  const map = new Map();\n  if (rawParams.length > 0) {\n    // The `window.location.search` can be used while creating an instance of the `HttpParams` class\n    // (e.g. `new HttpParams({ fromString: window.location.search })`). The `window.location.search`\n    // may start with the `?` char, so we strip it if it's present.\n    const params = rawParams.replace(/^\\?/, '').split('&');\n    params.forEach(param => {\n      const eqIdx = param.indexOf('=');\n      const [key, val] = eqIdx == -1 ? [codec.decodeKey(param), ''] : [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))];\n      const list = map.get(key) || [];\n      list.push(val);\n      map.set(key, list);\n    });\n  }\n  return map;\n}\n/**\n * Encode input string with standard encodeURIComponent and then un-encode specific characters.\n */\nconst STANDARD_ENCODING_REGEX = /%(\\d[a-f0-9])/gi;\nconst STANDARD_ENCODING_REPLACEMENTS = {\n  '40': '@',\n  '3A': ':',\n  '24': '$',\n  '2C': ',',\n  '3B': ';',\n  '3D': '=',\n  '3F': '?',\n  '2F': '/'\n};\nfunction standardEncoding(v) {\n  return encodeURIComponent(v).replace(STANDARD_ENCODING_REGEX, (s, t) => STANDARD_ENCODING_REPLACEMENTS[t] ?? s);\n}\nfunction valueToString(value) {\n  return `${value}`;\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable; all mutation operations return a new instance.\n *\n * @publicApi\n */\nclass HttpParams {\n  constructor(options = {}) {\n    this.updates = null;\n    this.cloneFrom = null;\n    this.encoder = options.encoder || new HttpUrlEncodingCodec();\n    if (!!options.fromString) {\n      if (!!options.fromObject) {\n        throw new Error(`Cannot specify both fromString and fromObject.`);\n      }\n      this.map = paramParser(options.fromString, this.encoder);\n    } else if (!!options.fromObject) {\n      this.map = new Map();\n      Object.keys(options.fromObject).forEach(key => {\n        const value = options.fromObject[key];\n        // convert the values to strings\n        const values = Array.isArray(value) ? value.map(valueToString) : [valueToString(value)];\n        this.map.set(key, values);\n      });\n    } else {\n      this.map = null;\n    }\n  }\n  /**\n   * Reports whether the body includes one or more values for a given parameter.\n   * @param param The parameter name.\n   * @returns True if the parameter has one or more values,\n   * false if it has no value or is not present.\n   */\n  has(param) {\n    this.init();\n    return this.map.has(param);\n  }\n  /**\n   * Retrieves the first value for a parameter.\n   * @param param The parameter name.\n   * @returns The first value of the given parameter,\n   * or `null` if the parameter is not present.\n   */\n  get(param) {\n    this.init();\n    const res = this.map.get(param);\n    return !!res ? res[0] : null;\n  }\n  /**\n   * Retrieves all values for a  parameter.\n   * @param param The parameter name.\n   * @returns All values in a string array,\n   * or `null` if the parameter not present.\n   */\n  getAll(param) {\n    this.init();\n    return this.map.get(param) || null;\n  }\n  /**\n   * Retrieves all the parameters for this body.\n   * @returns The parameter names in a string array.\n   */\n  keys() {\n    this.init();\n    return Array.from(this.map.keys());\n  }\n  /**\n   * Appends a new value to existing values for a parameter.\n   * @param param The parameter name.\n   * @param value The new value to add.\n   * @return A new body with the appended value.\n   */\n  append(param, value) {\n    return this.clone({\n      param,\n      value,\n      op: 'a'\n    });\n  }\n  /**\n   * Constructs a new body with appended values for the given parameter name.\n   * @param params parameters and values\n   * @return A new body with the new value.\n   */\n  appendAll(params) {\n    const updates = [];\n    Object.keys(params).forEach(param => {\n      const value = params[param];\n      if (Array.isArray(value)) {\n        value.forEach(_value => {\n          updates.push({\n            param,\n            value: _value,\n            op: 'a'\n          });\n        });\n      } else {\n        updates.push({\n          param,\n          value: value,\n          op: 'a'\n        });\n      }\n    });\n    return this.clone(updates);\n  }\n  /**\n   * Replaces the value for a parameter.\n   * @param param The parameter name.\n   * @param value The new value.\n   * @return A new body with the new value.\n   */\n  set(param, value) {\n    return this.clone({\n      param,\n      value,\n      op: 's'\n    });\n  }\n  /**\n   * Removes a given value or all values from a parameter.\n   * @param param The parameter name.\n   * @param value The value to remove, if provided.\n   * @return A new body with the given value removed, or with all values\n   * removed if no value is specified.\n   */\n  delete(param, value) {\n    return this.clone({\n      param,\n      value,\n      op: 'd'\n    });\n  }\n  /**\n   * Serializes the body to an encoded string, where key-value pairs (separated by `=`) are\n   * separated by `&`s.\n   */\n  toString() {\n    this.init();\n    return this.keys().map(key => {\n      const eKey = this.encoder.encodeKey(key);\n      // `a: ['1']` produces `'a=1'`\n      // `b: []` produces `''`\n      // `c: ['1', '2']` produces `'c=1&c=2'`\n      return this.map.get(key).map(value => eKey + '=' + this.encoder.encodeValue(value)).join('&');\n    })\n    // filter out empty values because `b: []` produces `''`\n    // which results in `a=1&&c=1&c=2` instead of `a=1&c=1&c=2` if we don't\n    .filter(param => param !== '').join('&');\n  }\n  clone(update) {\n    const clone = new HttpParams({\n      encoder: this.encoder\n    });\n    clone.cloneFrom = this.cloneFrom || this;\n    clone.updates = (this.updates || []).concat(update);\n    return clone;\n  }\n  init() {\n    if (this.map === null) {\n      this.map = new Map();\n    }\n    if (this.cloneFrom !== null) {\n      this.cloneFrom.init();\n      this.cloneFrom.keys().forEach(key => this.map.set(key, this.cloneFrom.map.get(key)));\n      this.updates.forEach(update => {\n        switch (update.op) {\n          case 'a':\n          case 's':\n            const base = (update.op === 'a' ? this.map.get(update.param) : undefined) || [];\n            base.push(valueToString(update.value));\n            this.map.set(update.param, base);\n            break;\n          case 'd':\n            if (update.value !== undefined) {\n              let base = this.map.get(update.param) || [];\n              const idx = base.indexOf(valueToString(update.value));\n              if (idx !== -1) {\n                base.splice(idx, 1);\n              }\n              if (base.length > 0) {\n                this.map.set(update.param, base);\n              } else {\n                this.map.delete(update.param);\n              }\n            } else {\n              this.map.delete(update.param);\n              break;\n            }\n        }\n      });\n      this.cloneFrom = this.updates = null;\n    }\n  }\n}\n\n/**\n * A token used to manipulate and access values stored in `HttpContext`.\n *\n * @publicApi\n */\nclass HttpContextToken {\n  constructor(defaultValue) {\n    this.defaultValue = defaultValue;\n  }\n}\n/**\n * Http context stores arbitrary user defined values and ensures type safety without\n * actually knowing the types. It is backed by a `Map` and guarantees that keys do not clash.\n *\n * This context is mutable and is shared between cloned requests unless explicitly specified.\n *\n * @usageNotes\n *\n * ### Usage Example\n *\n * ```typescript\n * // inside cache.interceptors.ts\n * export const IS_CACHE_ENABLED = new HttpContextToken<boolean>(() => false);\n *\n * export class CacheInterceptor implements HttpInterceptor {\n *\n *   intercept(req: HttpRequest<any>, delegate: HttpHandler): Observable<HttpEvent<any>> {\n *     if (req.context.get(IS_CACHE_ENABLED) === true) {\n *       return ...;\n *     }\n *     return delegate.handle(req);\n *   }\n * }\n *\n * // inside a service\n *\n * this.httpClient.get('/api/weather', {\n *   context: new HttpContext().set(IS_CACHE_ENABLED, true)\n * }).subscribe(...);\n * ```\n *\n * @publicApi\n */\nclass HttpContext {\n  constructor() {\n    this.map = new Map();\n  }\n  /**\n   * Store a value in the context. If a value is already present it will be overwritten.\n   *\n   * @param token The reference to an instance of `HttpContextToken`.\n   * @param value The value to store.\n   *\n   * @returns A reference to itself for easy chaining.\n   */\n  set(token, value) {\n    this.map.set(token, value);\n    return this;\n  }\n  /**\n   * Retrieve the value associated with the given token.\n   *\n   * @param token The reference to an instance of `HttpContextToken`.\n   *\n   * @returns The stored value or default if one is defined.\n   */\n  get(token) {\n    if (!this.map.has(token)) {\n      this.map.set(token, token.defaultValue());\n    }\n    return this.map.get(token);\n  }\n  /**\n   * Delete the value associated with the given token.\n   *\n   * @param token The reference to an instance of `HttpContextToken`.\n   *\n   * @returns A reference to itself for easy chaining.\n   */\n  delete(token) {\n    this.map.delete(token);\n    return this;\n  }\n  /**\n   * Checks for existence of a given token.\n   *\n   * @param token The reference to an instance of `HttpContextToken`.\n   *\n   * @returns True if the token exists, false otherwise.\n   */\n  has(token) {\n    return this.map.has(token);\n  }\n  /**\n   * @returns a list of tokens currently stored in the context.\n   */\n  keys() {\n    return this.map.keys();\n  }\n}\n\n/**\n * Determine whether the given HTTP method may include a body.\n */\nfunction mightHaveBody(method) {\n  switch (method) {\n    case 'DELETE':\n    case 'GET':\n    case 'HEAD':\n    case 'OPTIONS':\n    case 'JSONP':\n      return false;\n    default:\n      return true;\n  }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n */\nfunction isArrayBuffer(value) {\n  return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n */\nfunction isBlob(value) {\n  return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n */\nfunction isFormData(value) {\n  return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * Safely assert whether the given value is a URLSearchParams instance.\n *\n * In some execution environments URLSearchParams is not defined.\n */\nfunction isUrlSearchParams(value) {\n  return typeof URLSearchParams !== 'undefined' && value instanceof URLSearchParams;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * @publicApi\n */\nclass HttpRequest {\n  constructor(method, url, third, fourth) {\n    this.url = url;\n    /**\n     * The request body, or `null` if one isn't set.\n     *\n     * Bodies are not enforced to be immutable, as they can include a reference to any\n     * user-defined data type. However, interceptors should take care to preserve\n     * idempotence by treating them as such.\n     */\n    this.body = null;\n    /**\n     * Whether this request should be made in a way that exposes progress events.\n     *\n     * Progress events are expensive (change detection runs on each event) and so\n     * they should only be requested if the consumer intends to monitor them.\n     *\n     * Note: The `FetchBackend` doesn't support progress report on uploads.\n     */\n    this.reportProgress = false;\n    /**\n     * Whether this request should be sent with outgoing credentials (cookies).\n     */\n    this.withCredentials = false;\n    /**\n     * The expected response type of the server.\n     *\n     * This is used to parse the response appropriately before returning it to\n     * the requestee.\n     */\n    this.responseType = 'json';\n    this.method = method.toUpperCase();\n    // Next, need to figure out which argument holds the HttpRequestInit\n    // options, if any.\n    let options;\n    // Check whether a body argument is expected. The only valid way to omit\n    // the body argument is to use a known no-body method like GET.\n    if (mightHaveBody(this.method) || !!fourth) {\n      // Body is the third argument, options are the fourth.\n      this.body = third !== undefined ? third : null;\n      options = fourth;\n    } else {\n      // No body required, options are the third argument. The body stays null.\n      options = third;\n    }\n    // If options have been passed, interpret them.\n    if (options) {\n      // Normalize reportProgress and withCredentials.\n      this.reportProgress = !!options.reportProgress;\n      this.withCredentials = !!options.withCredentials;\n      // Override default response type of 'json' if one is provided.\n      if (!!options.responseType) {\n        this.responseType = options.responseType;\n      }\n      // Override headers if they're provided.\n      if (!!options.headers) {\n        this.headers = options.headers;\n      }\n      if (!!options.context) {\n        this.context = options.context;\n      }\n      if (!!options.params) {\n        this.params = options.params;\n      }\n      // We do want to assign transferCache even if it's falsy (false is valid value)\n      this.transferCache = options.transferCache;\n    }\n    // If no headers have been passed in, construct a new HttpHeaders instance.\n    this.headers ??= new HttpHeaders();\n    // If no context have been passed in, construct a new HttpContext instance.\n    this.context ??= new HttpContext();\n    // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n    if (!this.params) {\n      this.params = new HttpParams();\n      this.urlWithParams = url;\n    } else {\n      // Encode the parameters to a string in preparation for inclusion in the URL.\n      const params = this.params.toString();\n      if (params.length === 0) {\n        // No parameters, the visible URL is just the URL given at creation time.\n        this.urlWithParams = url;\n      } else {\n        // Does the URL already have query parameters? Look for '?'.\n        const qIdx = url.indexOf('?');\n        // There are 3 cases to handle:\n        // 1) No existing parameters -> append '?' followed by params.\n        // 2) '?' exists and is followed by existing query string ->\n        //    append '&' followed by params.\n        // 3) '?' exists at the end of the url -> append params directly.\n        // This basically amounts to determining the character, if any, with\n        // which to join the URL and parameters.\n        const sep = qIdx === -1 ? '?' : qIdx < url.length - 1 ? '&' : '';\n        this.urlWithParams = url + sep + params;\n      }\n    }\n  }\n  /**\n   * Transform the free-form body into a serialized format suitable for\n   * transmission to the server.\n   */\n  serializeBody() {\n    // If no body is present, no need to serialize it.\n    if (this.body === null) {\n      return null;\n    }\n    // Check whether the body is already in a serialized form. If so,\n    // it can just be returned directly.\n    if (typeof this.body === 'string' || isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) || isUrlSearchParams(this.body)) {\n      return this.body;\n    }\n    // Check whether the body is an instance of HttpUrlEncodedParams.\n    if (this.body instanceof HttpParams) {\n      return this.body.toString();\n    }\n    // Check whether the body is an object or array, and serialize with JSON if so.\n    if (typeof this.body === 'object' || typeof this.body === 'boolean' || Array.isArray(this.body)) {\n      return JSON.stringify(this.body);\n    }\n    // Fall back on toString() for everything else.\n    return this.body.toString();\n  }\n  /**\n   * Examine the body and attempt to infer an appropriate MIME type\n   * for it.\n   *\n   * If no such type can be inferred, this method will return `null`.\n   */\n  detectContentTypeHeader() {\n    // An empty body has no content type.\n    if (this.body === null) {\n      return null;\n    }\n    // FormData bodies rely on the browser's content type assignment.\n    if (isFormData(this.body)) {\n      return null;\n    }\n    // Blobs usually have their own content type. If it doesn't, then\n    // no type can be inferred.\n    if (isBlob(this.body)) {\n      return this.body.type || null;\n    }\n    // Array buffers have unknown contents and thus no type can be inferred.\n    if (isArrayBuffer(this.body)) {\n      return null;\n    }\n    // Technically, strings could be a form of JSON data, but it's safe enough\n    // to assume they're plain strings.\n    if (typeof this.body === 'string') {\n      return 'text/plain';\n    }\n    // `HttpUrlEncodedParams` has its own content-type.\n    if (this.body instanceof HttpParams) {\n      return 'application/x-www-form-urlencoded;charset=UTF-8';\n    }\n    // Arrays, objects, boolean and numbers will be encoded as JSON.\n    if (typeof this.body === 'object' || typeof this.body === 'number' || typeof this.body === 'boolean') {\n      return 'application/json';\n    }\n    // No type could be inferred.\n    return null;\n  }\n  clone(update = {}) {\n    // For method, url, and responseType, take the current value unless\n    // it is overridden in the update hash.\n    const method = update.method || this.method;\n    const url = update.url || this.url;\n    const responseType = update.responseType || this.responseType;\n    // Carefully handle the transferCache to differentiate between\n    // `false` and `undefined` in the update args.\n    const transferCache = update.transferCache ?? this.transferCache;\n    // The body is somewhat special - a `null` value in update.body means\n    // whatever current body is present is being overridden with an empty\n    // body, whereas an `undefined` value in update.body implies no\n    // override.\n    const body = update.body !== undefined ? update.body : this.body;\n    // Carefully handle the boolean options to differentiate between\n    // `false` and `undefined` in the update args.\n    const withCredentials = update.withCredentials ?? this.withCredentials;\n    const reportProgress = update.reportProgress ?? this.reportProgress;\n    // Headers and params may be appended to if `setHeaders` or\n    // `setParams` are used.\n    let headers = update.headers || this.headers;\n    let params = update.params || this.params;\n    // Pass on context if needed\n    const context = update.context ?? this.context;\n    // Check whether the caller has asked to add headers.\n    if (update.setHeaders !== undefined) {\n      // Set every requested header.\n      headers = Object.keys(update.setHeaders).reduce((headers, name) => headers.set(name, update.setHeaders[name]), headers);\n    }\n    // Check whether the caller has asked to set params.\n    if (update.setParams) {\n      // Set every requested param.\n      params = Object.keys(update.setParams).reduce((params, param) => params.set(param, update.setParams[param]), params);\n    }\n    // Finally, construct the new HttpRequest using the pieces from above.\n    return new HttpRequest(method, url, body, {\n      params,\n      headers,\n      context,\n      reportProgress,\n      responseType,\n      withCredentials,\n      transferCache\n    });\n  }\n}\n\n/**\n * Type enumeration for the different kinds of `HttpEvent`.\n *\n * @publicApi\n */\nvar HttpEventType = /*#__PURE__*/function (HttpEventType) {\n  /**\n   * The request was sent out over the wire.\n   */\n  HttpEventType[HttpEventType[\"Sent\"] = 0] = \"Sent\";\n  /**\n   * An upload progress event was received.\n   *\n   * Note: The `FetchBackend` doesn't support progress report on uploads.\n   */\n  HttpEventType[HttpEventType[\"UploadProgress\"] = 1] = \"UploadProgress\";\n  /**\n   * The response status code and headers were received.\n   */\n  HttpEventType[HttpEventType[\"ResponseHeader\"] = 2] = \"ResponseHeader\";\n  /**\n   * A download progress event was received.\n   */\n  HttpEventType[HttpEventType[\"DownloadProgress\"] = 3] = \"DownloadProgress\";\n  /**\n   * The full response including the body was received.\n   */\n  HttpEventType[HttpEventType[\"Response\"] = 4] = \"Response\";\n  /**\n   * A custom event from an interceptor or a backend.\n   */\n  HttpEventType[HttpEventType[\"User\"] = 5] = \"User\";\n  return HttpEventType;\n}(HttpEventType || {});\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * @publicApi\n */\nclass HttpResponseBase {\n  /**\n   * Super-constructor for all responses.\n   *\n   * The single parameter accepted is an initialization hash. Any properties\n   * of the response passed there will override the default values.\n   */\n  constructor(init, defaultStatus = 200, defaultStatusText = 'OK') {\n    // If the hash has values passed, use them to initialize the response.\n    // Otherwise use the default values.\n    this.headers = init.headers || new HttpHeaders();\n    this.status = init.status !== undefined ? init.status : defaultStatus;\n    this.statusText = init.statusText || defaultStatusText;\n    this.url = init.url || null;\n    // Cache the ok value to avoid defining a getter.\n    this.ok = this.status >= 200 && this.status < 300;\n  }\n}\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * @publicApi\n */\nclass HttpHeaderResponse extends HttpResponseBase {\n  /**\n   * Create a new `HttpHeaderResponse` with the given parameters.\n   */\n  constructor(init = {}) {\n    super(init);\n    this.type = HttpEventType.ResponseHeader;\n  }\n  /**\n   * Copy this `HttpHeaderResponse`, overriding its contents with the\n   * given parameter hash.\n   */\n  clone(update = {}) {\n    // Perform a straightforward initialization of the new HttpHeaderResponse,\n    // overriding the current parameters with new ones if given.\n    return new HttpHeaderResponse({\n      headers: update.headers || this.headers,\n      status: update.status !== undefined ? update.status : this.status,\n      statusText: update.statusText || this.statusText,\n      url: update.url || this.url || undefined\n    });\n  }\n}\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * @publicApi\n */\nclass HttpResponse extends HttpResponseBase {\n  /**\n   * Construct a new `HttpResponse`.\n   */\n  constructor(init = {}) {\n    super(init);\n    this.type = HttpEventType.Response;\n    this.body = init.body !== undefined ? init.body : null;\n  }\n  clone(update = {}) {\n    return new HttpResponse({\n      body: update.body !== undefined ? update.body : this.body,\n      headers: update.headers || this.headers,\n      status: update.status !== undefined ? update.status : this.status,\n      statusText: update.statusText || this.statusText,\n      url: update.url || this.url || undefined\n    });\n  }\n}\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * @publicApi\n */\nclass HttpErrorResponse extends HttpResponseBase {\n  constructor(init) {\n    // Initialize with a default status of 0 / Unknown Error.\n    super(init, 0, 'Unknown Error');\n    this.name = 'HttpErrorResponse';\n    /**\n     * Errors are never okay, even when the status code is in the 2xx success range.\n     */\n    this.ok = false;\n    // If the response was successful, then this was a parse error. Otherwise, it was\n    // a protocol-level failure of some sort. Either the request failed in transit\n    // or the server returned an unsuccessful status code.\n    if (this.status >= 200 && this.status < 300) {\n      this.message = `Http failure during parsing for ${init.url || '(unknown url)'}`;\n    } else {\n      this.message = `Http failure response for ${init.url || '(unknown url)'}: ${init.status} ${init.statusText}`;\n    }\n    this.error = init.error || null;\n  }\n}\n/**\n * We use these constant to prevent pulling the whole HttpStatusCode enum\n * Those are the only ones referenced directly by the framework\n */\nconst HTTP_STATUS_CODE_OK = 200;\nconst HTTP_STATUS_CODE_NO_CONTENT = 204;\n/**\n * Http status codes.\n * As per https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml\n * @publicApi\n */\nvar HttpStatusCode = /*#__PURE__*/function (HttpStatusCode) {\n  HttpStatusCode[HttpStatusCode[\"Continue\"] = 100] = \"Continue\";\n  HttpStatusCode[HttpStatusCode[\"SwitchingProtocols\"] = 101] = \"SwitchingProtocols\";\n  HttpStatusCode[HttpStatusCode[\"Processing\"] = 102] = \"Processing\";\n  HttpStatusCode[HttpStatusCode[\"EarlyHints\"] = 103] = \"EarlyHints\";\n  HttpStatusCode[HttpStatusCode[\"Ok\"] = 200] = \"Ok\";\n  HttpStatusCode[HttpStatusCode[\"Created\"] = 201] = \"Created\";\n  HttpStatusCode[HttpStatusCode[\"Accepted\"] = 202] = \"Accepted\";\n  HttpStatusCode[HttpStatusCode[\"NonAuthoritativeInformation\"] = 203] = \"NonAuthoritativeInformation\";\n  HttpStatusCode[HttpStatusCode[\"NoContent\"] = 204] = \"NoContent\";\n  HttpStatusCode[HttpStatusCode[\"ResetContent\"] = 205] = \"ResetContent\";\n  HttpStatusCode[HttpStatusCode[\"PartialContent\"] = 206] = \"PartialContent\";\n  HttpStatusCode[HttpStatusCode[\"MultiStatus\"] = 207] = \"MultiStatus\";\n  HttpStatusCode[HttpStatusCode[\"AlreadyReported\"] = 208] = \"AlreadyReported\";\n  HttpStatusCode[HttpStatusCode[\"ImUsed\"] = 226] = \"ImUsed\";\n  HttpStatusCode[HttpStatusCode[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n  HttpStatusCode[HttpStatusCode[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n  HttpStatusCode[HttpStatusCode[\"Found\"] = 302] = \"Found\";\n  HttpStatusCode[HttpStatusCode[\"SeeOther\"] = 303] = \"SeeOther\";\n  HttpStatusCode[HttpStatusCode[\"NotModified\"] = 304] = \"NotModified\";\n  HttpStatusCode[HttpStatusCode[\"UseProxy\"] = 305] = \"UseProxy\";\n  HttpStatusCode[HttpStatusCode[\"Unused\"] = 306] = \"Unused\";\n  HttpStatusCode[HttpStatusCode[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n  HttpStatusCode[HttpStatusCode[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n  HttpStatusCode[HttpStatusCode[\"BadRequest\"] = 400] = \"BadRequest\";\n  HttpStatusCode[HttpStatusCode[\"Unauthorized\"] = 401] = \"Unauthorized\";\n  HttpStatusCode[HttpStatusCode[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n  HttpStatusCode[HttpStatusCode[\"Forbidden\"] = 403] = \"Forbidden\";\n  HttpStatusCode[HttpStatusCode[\"NotFound\"] = 404] = \"NotFound\";\n  HttpStatusCode[HttpStatusCode[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n  HttpStatusCode[HttpStatusCode[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n  HttpStatusCode[HttpStatusCode[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n  HttpStatusCode[HttpStatusCode[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n  HttpStatusCode[HttpStatusCode[\"Conflict\"] = 409] = \"Conflict\";\n  HttpStatusCode[HttpStatusCode[\"Gone\"] = 410] = \"Gone\";\n  HttpStatusCode[HttpStatusCode[\"LengthRequired\"] = 411] = \"LengthRequired\";\n  HttpStatusCode[HttpStatusCode[\"PreconditionFailed\"] = 412] = \"PreconditionFailed\";\n  HttpStatusCode[HttpStatusCode[\"PayloadTooLarge\"] = 413] = \"PayloadTooLarge\";\n  HttpStatusCode[HttpStatusCode[\"UriTooLong\"] = 414] = \"UriTooLong\";\n  HttpStatusCode[HttpStatusCode[\"UnsupportedMediaType\"] = 415] = \"UnsupportedMediaType\";\n  HttpStatusCode[HttpStatusCode[\"RangeNotSatisfiable\"] = 416] = \"RangeNotSatisfiable\";\n  HttpStatusCode[HttpStatusCode[\"ExpectationFailed\"] = 417] = \"ExpectationFailed\";\n  HttpStatusCode[HttpStatusCode[\"ImATeapot\"] = 418] = \"ImATeapot\";\n  HttpStatusCode[HttpStatusCode[\"MisdirectedRequest\"] = 421] = \"MisdirectedRequest\";\n  HttpStatusCode[HttpStatusCode[\"UnprocessableEntity\"] = 422] = \"UnprocessableEntity\";\n  HttpStatusCode[HttpStatusCode[\"Locked\"] = 423] = \"Locked\";\n  HttpStatusCode[HttpStatusCode[\"FailedDependency\"] = 424] = \"FailedDependency\";\n  HttpStatusCode[HttpStatusCode[\"TooEarly\"] = 425] = \"TooEarly\";\n  HttpStatusCode[HttpStatusCode[\"UpgradeRequired\"] = 426] = \"UpgradeRequired\";\n  HttpStatusCode[HttpStatusCode[\"PreconditionRequired\"] = 428] = \"PreconditionRequired\";\n  HttpStatusCode[HttpStatusCode[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n  HttpStatusCode[HttpStatusCode[\"RequestHeaderFieldsTooLarge\"] = 431] = \"RequestHeaderFieldsTooLarge\";\n  HttpStatusCode[HttpStatusCode[\"UnavailableForLegalReasons\"] = 451] = \"UnavailableForLegalReasons\";\n  HttpStatusCode[HttpStatusCode[\"InternalServerError\"] = 500] = \"InternalServerError\";\n  HttpStatusCode[HttpStatusCode[\"NotImplemented\"] = 501] = \"NotImplemented\";\n  HttpStatusCode[HttpStatusCode[\"BadGateway\"] = 502] = \"BadGateway\";\n  HttpStatusCode[HttpStatusCode[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n  HttpStatusCode[HttpStatusCode[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n  HttpStatusCode[HttpStatusCode[\"HttpVersionNotSupported\"] = 505] = \"HttpVersionNotSupported\";\n  HttpStatusCode[HttpStatusCode[\"VariantAlsoNegotiates\"] = 506] = \"VariantAlsoNegotiates\";\n  HttpStatusCode[HttpStatusCode[\"InsufficientStorage\"] = 507] = \"InsufficientStorage\";\n  HttpStatusCode[HttpStatusCode[\"LoopDetected\"] = 508] = \"LoopDetected\";\n  HttpStatusCode[HttpStatusCode[\"NotExtended\"] = 510] = \"NotExtended\";\n  HttpStatusCode[HttpStatusCode[\"NetworkAuthenticationRequired\"] = 511] = \"NetworkAuthenticationRequired\";\n  return HttpStatusCode;\n}(HttpStatusCode || {});\n/**\n * Constructs an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. This function clones the object and adds the body.\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n *\n */\nfunction addBody(options, body) {\n  return {\n    body,\n    headers: options.headers,\n    context: options.context,\n    observe: options.observe,\n    params: options.params,\n    reportProgress: options.reportProgress,\n    responseType: options.responseType,\n    withCredentials: options.withCredentials,\n    transferCache: options.transferCache\n  };\n}\n/**\n * Performs HTTP requests.\n * This service is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies based on\n * the signature that is called (mainly the values of `observe` and `responseType`).\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n\n * TODO(adev): review\n * @usageNotes\n *\n * ### HTTP Request Example\n *\n * ```\n *  // GET heroes whose name contains search term\n * searchHeroes(term: string): observable<Hero[]>{\n *\n *  const params = new HttpParams({fromString: 'name=term'});\n *    return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n * }\n * ```\n *\n * Alternatively, the parameter string can be used without invoking HttpParams\n * by directly joining to the URL.\n * ```\n * this.httpClient.request('GET', this.heroesUrl + '?' + 'name=term', {responseType:'json'});\n * ```\n *\n *\n * ### JSONP Example\n * ```\n * requestJsonp(url, callback = 'callback') {\n *  return this.httpClient.jsonp(this.heroesURL, callback);\n * }\n * ```\n *\n * ### PATCH Example\n * ```\n * // PATCH one of the heroes' name\n * patchHero (id: number, heroName: string): Observable<{}> {\n * const url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n *  return this.httpClient.patch(url, {name: heroName}, httpOptions)\n *    .pipe(catchError(this.handleError('patchHero')));\n * }\n * ```\n *\n * @see [HTTP Guide](guide/http)\n * @see [HTTP Request](api/common/http/HttpRequest)\n *\n * @publicApi\n */\nlet HttpClient = /*#__PURE__*/(() => {\n  class HttpClient {\n    constructor(handler) {\n      this.handler = handler;\n    }\n    /**\n     * Constructs an observable for a generic HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * You can pass an `HttpRequest` directly as the only parameter. In this case,\n     * the call returns an observable of the raw `HttpEvent` stream.\n     *\n     * Alternatively you can pass an HTTP method as the first parameter,\n     * a URL string as the second, and an options hash containing the request body as the third.\n     * See `addBody()`. In this case, the specified `responseType` and `observe` options determine the\n     * type of returned observable.\n     *   * The `responseType` value determines how a successful response body is parsed.\n     *   * If `responseType` is the default `json`, you can pass a type interface for the resulting\n     * object as a type parameter to the call.\n     *\n     * The `observe` value determines the return type, according to what you are interested in\n     * observing.\n     *   * An `observe` value of events returns an observable of the raw `HttpEvent` stream, including\n     * progress events by default.\n     *   * An `observe` value of response returns an observable of `HttpResponse<T>`,\n     * where the `T` parameter depends on the `responseType` and any optionally provided type\n     * parameter.\n     *   * An `observe` value of body returns an observable of `<T>` with the same `T` body type.\n     *\n     */\n    request(first, url, options = {}) {\n      let req;\n      // First, check whether the primary argument is an instance of `HttpRequest`.\n      if (first instanceof HttpRequest) {\n        // It is. The other arguments must be undefined (per the signatures) and can be\n        // ignored.\n        req = first;\n      } else {\n        // It's a string, so it represents a URL. Construct a request based on it,\n        // and incorporate the remaining arguments (assuming `GET` unless a method is\n        // provided.\n        // Figure out the headers.\n        let headers = undefined;\n        if (options.headers instanceof HttpHeaders) {\n          headers = options.headers;\n        } else {\n          headers = new HttpHeaders(options.headers);\n        }\n        // Sort out parameters.\n        let params = undefined;\n        if (!!options.params) {\n          if (options.params instanceof HttpParams) {\n            params = options.params;\n          } else {\n            params = new HttpParams({\n              fromObject: options.params\n            });\n          }\n        }\n        // Construct the request.\n        req = new HttpRequest(first, url, options.body !== undefined ? options.body : null, {\n          headers,\n          context: options.context,\n          params,\n          reportProgress: options.reportProgress,\n          // By default, JSON is assumed to be returned for all calls.\n          responseType: options.responseType || 'json',\n          withCredentials: options.withCredentials,\n          transferCache: options.transferCache\n        });\n      }\n      // Start with an Observable.of() the initial request, and run the handler (which\n      // includes all interceptors) inside a concatMap(). This way, the handler runs\n      // inside an Observable chain, which causes interceptors to be re-run on every\n      // subscription (this also makes retries re-run the handler, including interceptors).\n      const events$ = of(req).pipe(concatMap(req => this.handler.handle(req)));\n      // If coming via the API signature which accepts a previously constructed HttpRequest,\n      // the only option is to get the event stream. Otherwise, return the event stream if\n      // that is what was requested.\n      if (first instanceof HttpRequest || options.observe === 'events') {\n        return events$;\n      }\n      // The requested stream contains either the full response or the body. In either\n      // case, the first step is to filter the event stream to extract a stream of\n      // responses(s).\n      const res$ = events$.pipe(filter(event => event instanceof HttpResponse));\n      // Decide which stream to return.\n      switch (options.observe || 'body') {\n        case 'body':\n          // The requested stream is the body. Map the response stream to the response\n          // body. This could be done more simply, but a misbehaving interceptor might\n          // transform the response body into a different format and ignore the requested\n          // responseType. Guard against this by validating that the response is of the\n          // requested type.\n          switch (req.responseType) {\n            case 'arraybuffer':\n              return res$.pipe(map(res => {\n                // Validate that the body is an ArrayBuffer.\n                if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                  throw new Error('Response is not an ArrayBuffer.');\n                }\n                return res.body;\n              }));\n            case 'blob':\n              return res$.pipe(map(res => {\n                // Validate that the body is a Blob.\n                if (res.body !== null && !(res.body instanceof Blob)) {\n                  throw new Error('Response is not a Blob.');\n                }\n                return res.body;\n              }));\n            case 'text':\n              return res$.pipe(map(res => {\n                // Validate that the body is a string.\n                if (res.body !== null && typeof res.body !== 'string') {\n                  throw new Error('Response is not a string.');\n                }\n                return res.body;\n              }));\n            case 'json':\n            default:\n              // No validation needed for JSON responses, as they can be of any type.\n              return res$.pipe(map(res => res.body));\n          }\n        case 'response':\n          // The response stream was requested directly, so return it.\n          return res$;\n        default:\n          // Guard against new future observe types being added.\n          throw new Error(`Unreachable: unhandled observe type ${options.observe}}`);\n      }\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `DELETE` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     *\n     * @param url     The endpoint URL.\n     * @param options The HTTP options to send with the request.\n     *\n     */\n    delete(url, options = {}) {\n      return this.request('DELETE', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `GET` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     */\n    get(url, options = {}) {\n      return this.request('GET', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `HEAD` request to execute on the server. The `HEAD` method returns\n     * meta information about the resource without transferring the\n     * resource itself. See the individual overloads for\n     * details on the return type.\n     */\n    head(url, options = {}) {\n      return this.request('HEAD', url, options);\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes a request with the special method\n     * `JSONP` to be dispatched via the interceptor pipeline.\n     * The [JSONP pattern](https://en.wikipedia.org/wiki/JSONP) works around limitations of certain\n     * API endpoints that don't support newer,\n     * and preferable [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) protocol.\n     * JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the\n     * requests even if the API endpoint is not located on the same domain (origin) as the client-side\n     * application making the request.\n     * The endpoint API must support JSONP callback for JSONP requests to work.\n     * The resource API returns the JSON response wrapped in a callback function.\n     * You can pass the callback function name as one of the query parameters.\n     * Note that JSONP requests can only be used with `GET` requests.\n     *\n     * @param url The resource URL.\n     * @param callbackParam The callback function name.\n     *\n     */\n    jsonp(url, callbackParam) {\n      return this.request('JSONP', url, {\n        params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n        observe: 'body',\n        responseType: 'json'\n      });\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes the configured\n     * `OPTIONS` request to execute on the server. This method allows the client\n     * to determine the supported HTTP methods and other capabilities of an endpoint,\n     * without implying a resource action. See the individual overloads for\n     * details on the return type.\n     */\n    options(url, options = {}) {\n      return this.request('OPTIONS', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PATCH` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     */\n    patch(url, body, options = {}) {\n      return this.request('PATCH', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `POST` request to execute on the server. The server responds with the location of\n     * the replaced resource. See the individual overloads for\n     * details on the return type.\n     */\n    post(url, body, options = {}) {\n      return this.request('POST', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PUT` request to execute on the server. The `PUT` method replaces an existing resource\n     * with a new set of values.\n     * See the individual overloads for details on the return type.\n     */\n    put(url, body, options = {}) {\n      return this.request('PUT', url, addBody(options, body));\n    }\n    static {\n      this.ɵfac = function HttpClient_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || HttpClient)(i0.ɵɵinject(HttpHandler));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: HttpClient,\n        factory: HttpClient.ɵfac\n      });\n    }\n  }\n  return HttpClient;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst XSSI_PREFIX$1 = /^\\)\\]\\}',?\\n/;\nconst REQUEST_URL_HEADER = `X-Request-URL`;\n/**\n * Determine an appropriate URL for the response, by checking either\n * response url or the X-Request-URL header.\n */\nfunction getResponseUrl$1(response) {\n  if (response.url) {\n    return response.url;\n  }\n  // stored as lowercase in the map\n  const xRequestUrl = REQUEST_URL_HEADER.toLocaleLowerCase();\n  return response.headers.get(xRequestUrl);\n}\n/**\n * Uses `fetch` to send requests to a backend server.\n *\n * This `FetchBackend` requires the support of the\n * [Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) which is available on all\n * supported browsers and on Node.js v18 or later.\n *\n * @see {@link HttpHandler}\n *\n * @publicApi\n */\nlet FetchBackend = /*#__PURE__*/(() => {\n  class FetchBackend {\n    constructor() {\n      // We use an arrow function to always reference the current global implementation of `fetch`.\n      // This is helpful for cases when the global `fetch` implementation is modified by external code,\n      // see https://github.com/angular/angular/issues/57527.\n      this.fetchImpl = inject(FetchFactory, {\n        optional: true\n      })?.fetch ?? ((...args) => globalThis.fetch(...args));\n      this.ngZone = inject(NgZone);\n    }\n    handle(request) {\n      return new Observable(observer => {\n        const aborter = new AbortController();\n        this.doRequest(request, aborter.signal, observer).then(noop, error => observer.error(new HttpErrorResponse({\n          error\n        })));\n        return () => aborter.abort();\n      });\n    }\n    async doRequest(request, signal, observer) {\n      const init = this.createRequestInit(request);\n      let response;\n      try {\n        // Run fetch outside of Angular zone.\n        // This is due to Node.js fetch implementation (Undici) which uses a number of setTimeouts to check if\n        // the response should eventually timeout which causes extra CD cycles every 500ms\n        const fetchPromise = this.ngZone.runOutsideAngular(() => this.fetchImpl(request.urlWithParams, {\n          signal,\n          ...init\n        }));\n        // Make sure Zone.js doesn't trigger false-positive unhandled promise\n        // error in case the Promise is rejected synchronously. See function\n        // description for additional information.\n        silenceSuperfluousUnhandledPromiseRejection(fetchPromise);\n        // Send the `Sent` event before awaiting the response.\n        observer.next({\n          type: HttpEventType.Sent\n        });\n        response = await fetchPromise;\n      } catch (error) {\n        observer.error(new HttpErrorResponse({\n          error,\n          status: error.status ?? 0,\n          statusText: error.statusText,\n          url: request.urlWithParams,\n          headers: error.headers\n        }));\n        return;\n      }\n      const headers = new HttpHeaders(response.headers);\n      const statusText = response.statusText;\n      const url = getResponseUrl$1(response) ?? request.urlWithParams;\n      let status = response.status;\n      let body = null;\n      if (request.reportProgress) {\n        observer.next(new HttpHeaderResponse({\n          headers,\n          status,\n          statusText,\n          url\n        }));\n      }\n      if (response.body) {\n        // Read Progress\n        const contentLength = response.headers.get('content-length');\n        const chunks = [];\n        const reader = response.body.getReader();\n        let receivedLength = 0;\n        let decoder;\n        let partialText;\n        // We have to check whether the Zone is defined in the global scope because this may be called\n        // when the zone is nooped.\n        const reqZone = typeof Zone !== 'undefined' && Zone.current;\n        // Perform response processing outside of Angular zone to\n        // ensure no excessive change detection runs are executed\n        // Here calling the async ReadableStreamDefaultReader.read() is responsible for triggering CD\n        await this.ngZone.runOutsideAngular(async () => {\n          while (true) {\n            const {\n              done,\n              value\n            } = await reader.read();\n            if (done) {\n              break;\n            }\n            chunks.push(value);\n            receivedLength += value.length;\n            if (request.reportProgress) {\n              partialText = request.responseType === 'text' ? (partialText ?? '') + (decoder ??= new TextDecoder()).decode(value, {\n                stream: true\n              }) : undefined;\n              const reportProgress = () => observer.next({\n                type: HttpEventType.DownloadProgress,\n                total: contentLength ? +contentLength : undefined,\n                loaded: receivedLength,\n                partialText\n              });\n              reqZone ? reqZone.run(reportProgress) : reportProgress();\n            }\n          }\n        });\n        // Combine all chunks.\n        const chunksAll = this.concatChunks(chunks, receivedLength);\n        try {\n          const contentType = response.headers.get('Content-Type') ?? '';\n          body = this.parseBody(request, chunksAll, contentType);\n        } catch (error) {\n          // Body loading or parsing failed\n          observer.error(new HttpErrorResponse({\n            error,\n            headers: new HttpHeaders(response.headers),\n            status: response.status,\n            statusText: response.statusText,\n            url: getResponseUrl$1(response) ?? request.urlWithParams\n          }));\n          return;\n        }\n      }\n      // Same behavior as the XhrBackend\n      if (status === 0) {\n        status = body ? HTTP_STATUS_CODE_OK : 0;\n      }\n      // ok determines whether the response will be transmitted on the event or\n      // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n      // but a successful status code can still result in an error if the user\n      // asked for JSON data and the body cannot be parsed as such.\n      const ok = status >= 200 && status < 300;\n      if (ok) {\n        observer.next(new HttpResponse({\n          body,\n          headers,\n          status,\n          statusText,\n          url\n        }));\n        // The full body has been received and delivered, no further events\n        // are possible. This request is complete.\n        observer.complete();\n      } else {\n        observer.error(new HttpErrorResponse({\n          error: body,\n          headers,\n          status,\n          statusText,\n          url\n        }));\n      }\n    }\n    parseBody(request, binContent, contentType) {\n      switch (request.responseType) {\n        case 'json':\n          // stripping the XSSI when present\n          const text = new TextDecoder().decode(binContent).replace(XSSI_PREFIX$1, '');\n          return text === '' ? null : JSON.parse(text);\n        case 'text':\n          return new TextDecoder().decode(binContent);\n        case 'blob':\n          return new Blob([binContent], {\n            type: contentType\n          });\n        case 'arraybuffer':\n          return binContent.buffer;\n      }\n    }\n    createRequestInit(req) {\n      // We could share some of this logic with the XhrBackend\n      const headers = {};\n      const credentials = req.withCredentials ? 'include' : undefined;\n      // Setting all the requested headers.\n      req.headers.forEach((name, values) => headers[name] = values.join(','));\n      // Add an Accept header if one isn't present already.\n      if (!req.headers.has('Accept')) {\n        headers['Accept'] = 'application/json, text/plain, */*';\n      }\n      // Auto-detect the Content-Type header if one isn't present already.\n      if (!req.headers.has('Content-Type')) {\n        const detectedType = req.detectContentTypeHeader();\n        // Sometimes Content-Type detection fails.\n        if (detectedType !== null) {\n          headers['Content-Type'] = detectedType;\n        }\n      }\n      return {\n        body: req.serializeBody(),\n        method: req.method,\n        headers,\n        credentials\n      };\n    }\n    concatChunks(chunks, totalLength) {\n      const chunksAll = new Uint8Array(totalLength);\n      let position = 0;\n      for (const chunk of chunks) {\n        chunksAll.set(chunk, position);\n        position += chunk.length;\n      }\n      return chunksAll;\n    }\n    static {\n      this.ɵfac = function FetchBackend_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || FetchBackend)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: FetchBackend,\n        factory: FetchBackend.ɵfac\n      });\n    }\n  }\n  return FetchBackend;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Abstract class to provide a mocked implementation of `fetch()`\n */\nclass FetchFactory {}\nfunction noop() {}\n/**\n * Zone.js treats a rejected promise that has not yet been awaited\n * as an unhandled error. This function adds a noop `.then` to make\n * sure that Zone.js doesn't throw an error if the Promise is rejected\n * synchronously.\n */\nfunction silenceSuperfluousUnhandledPromiseRejection(promise) {\n  promise.then(noop, noop);\n}\nfunction interceptorChainEndFn(req, finalHandlerFn) {\n  return finalHandlerFn(req);\n}\n/**\n * Constructs a `ChainedInterceptorFn` which adapts a legacy `HttpInterceptor` to the\n * `ChainedInterceptorFn` interface.\n */\nfunction adaptLegacyInterceptorToChain(chainTailFn, interceptor) {\n  return (initialRequest, finalHandlerFn) => interceptor.intercept(initialRequest, {\n    handle: downstreamRequest => chainTailFn(downstreamRequest, finalHandlerFn)\n  });\n}\n/**\n * Constructs a `ChainedInterceptorFn` which wraps and invokes a functional interceptor in the given\n * injector.\n */\nfunction chainedInterceptorFn(chainTailFn, interceptorFn, injector) {\n  return (initialRequest, finalHandlerFn) => runInInjectionContext(injector, () => interceptorFn(initialRequest, downstreamRequest => chainTailFn(downstreamRequest, finalHandlerFn)));\n}\n/**\n * A multi-provider token that represents the array of registered\n * `HttpInterceptor` objects.\n *\n * @publicApi\n */\nconst HTTP_INTERCEPTORS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'HTTP_INTERCEPTORS' : '');\n/**\n * A multi-provided token of `HttpInterceptorFn`s.\n */\nconst HTTP_INTERCEPTOR_FNS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'HTTP_INTERCEPTOR_FNS' : '');\n/**\n * A multi-provided token of `HttpInterceptorFn`s that are only set in root.\n */\nconst HTTP_ROOT_INTERCEPTOR_FNS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'HTTP_ROOT_INTERCEPTOR_FNS' : '');\n// TODO(atscott): We need a larger discussion about stability and what should contribute to stability.\n// Should the whole interceptor chain contribute to stability or just the backend request #55075?\n// Should HttpClient contribute to stability automatically at all?\nconst REQUESTS_CONTRIBUTE_TO_STABILITY = /*#__PURE__*/new InjectionToken(ngDevMode ? 'REQUESTS_CONTRIBUTE_TO_STABILITY' : '', {\n  providedIn: 'root',\n  factory: () => true\n});\n/**\n * Creates an `HttpInterceptorFn` which lazily initializes an interceptor chain from the legacy\n * class-based interceptors and runs the request through it.\n */\nfunction legacyInterceptorFnFactory() {\n  let chain = null;\n  return (req, handler) => {\n    if (chain === null) {\n      const interceptors = inject(HTTP_INTERCEPTORS, {\n        optional: true\n      }) ?? [];\n      // Note: interceptors are wrapped right-to-left so that final execution order is\n      // left-to-right. That is, if `interceptors` is the array `[a, b, c]`, we want to\n      // produce a chain that is conceptually `c(b(a(end)))`, which we build from the inside\n      // out.\n      chain = interceptors.reduceRight(adaptLegacyInterceptorToChain, interceptorChainEndFn);\n    }\n    const pendingTasks = inject(ɵPendingTasks);\n    const contributeToStability = inject(REQUESTS_CONTRIBUTE_TO_STABILITY);\n    if (contributeToStability) {\n      const taskId = pendingTasks.add();\n      return chain(req, handler).pipe(finalize(() => pendingTasks.remove(taskId)));\n    } else {\n      return chain(req, handler);\n    }\n  };\n}\nlet fetchBackendWarningDisplayed = false;\n/** Internal function to reset the flag in tests */\nfunction resetFetchBackendWarningFlag() {\n  fetchBackendWarningDisplayed = false;\n}\nlet HttpInterceptorHandler = /*#__PURE__*/(() => {\n  class HttpInterceptorHandler extends HttpHandler {\n    constructor(backend, injector) {\n      super();\n      this.backend = backend;\n      this.injector = injector;\n      this.chain = null;\n      this.pendingTasks = inject(ɵPendingTasks);\n      this.contributeToStability = inject(REQUESTS_CONTRIBUTE_TO_STABILITY);\n      // We strongly recommend using fetch backend for HTTP calls when SSR is used\n      // for an application. The logic below checks if that's the case and produces\n      // a warning otherwise.\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && !fetchBackendWarningDisplayed) {\n        const isServer = isPlatformServer(injector.get(PLATFORM_ID));\n        if (isServer && !(this.backend instanceof FetchBackend)) {\n          fetchBackendWarningDisplayed = true;\n          injector.get(ɵConsole).warn(ɵformatRuntimeError(2801 /* RuntimeErrorCode.NOT_USING_FETCH_BACKEND_IN_SSR */, 'Angular detected that `HttpClient` is not configured ' + \"to use `fetch` APIs. It's strongly recommended to \" + 'enable `fetch` for applications that use Server-Side Rendering ' + 'for better performance and compatibility. ' + 'To enable `fetch`, add the `withFetch()` to the `provideHttpClient()` ' + 'call at the root of the application.'));\n        }\n      }\n    }\n    handle(initialRequest) {\n      if (this.chain === null) {\n        const dedupedInterceptorFns = Array.from(new Set([...this.injector.get(HTTP_INTERCEPTOR_FNS), ...this.injector.get(HTTP_ROOT_INTERCEPTOR_FNS, [])]));\n        // Note: interceptors are wrapped right-to-left so that final execution order is\n        // left-to-right. That is, if `dedupedInterceptorFns` is the array `[a, b, c]`, we want to\n        // produce a chain that is conceptually `c(b(a(end)))`, which we build from the inside\n        // out.\n        this.chain = dedupedInterceptorFns.reduceRight((nextSequencedFn, interceptorFn) => chainedInterceptorFn(nextSequencedFn, interceptorFn, this.injector), interceptorChainEndFn);\n      }\n      if (this.contributeToStability) {\n        const taskId = this.pendingTasks.add();\n        return this.chain(initialRequest, downstreamRequest => this.backend.handle(downstreamRequest)).pipe(finalize(() => this.pendingTasks.remove(taskId)));\n      } else {\n        return this.chain(initialRequest, downstreamRequest => this.backend.handle(downstreamRequest));\n      }\n    }\n    static {\n      this.ɵfac = function HttpInterceptorHandler_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || HttpInterceptorHandler)(i0.ɵɵinject(HttpBackend), i0.ɵɵinject(i0.EnvironmentInjector));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: HttpInterceptorHandler,\n        factory: HttpInterceptorHandler.ɵfac\n      });\n    }\n  }\n  return HttpInterceptorHandler;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nlet nextRequestId = 0;\n/**\n * When a pending <script> is unsubscribed we'll move it to this document, so it won't be\n * executed.\n */\nlet foreignDocument;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nconst JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n// Error text given when a request is passed to the JsonpClientBackend that has\n// headers set\nconst JSONP_ERR_HEADERS_NOT_SUPPORTED = 'JSONP requests do not support headers.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n *\n */\nclass JsonpCallbackContext {}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n *\n */\nfunction jsonpCallbackContext() {\n  if (typeof window === 'object') {\n    return window;\n  }\n  return {};\n}\n/**\n * Processes an `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n * @see {@link HttpHandler}\n * @see {@link HttpXhrBackend}\n *\n * @publicApi\n */\nlet JsonpClientBackend = /*#__PURE__*/(() => {\n  class JsonpClientBackend {\n    constructor(callbackMap, document) {\n      this.callbackMap = callbackMap;\n      this.document = document;\n      /**\n       * A resolved promise that can be used to schedule microtasks in the event handlers.\n       */\n      this.resolvedPromise = Promise.resolve();\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     */\n    nextCallback() {\n      return `ng_jsonp_callback_${nextRequestId++}`;\n    }\n    /**\n     * Processes a JSONP request and returns an event stream of the results.\n     * @param req The request object.\n     * @returns An observable of the response events.\n     *\n     */\n    handle(req) {\n      // Firstly, check both the method and response type. If either doesn't match\n      // then the request was improperly routed here and cannot be handled.\n      if (req.method !== 'JSONP') {\n        throw new Error(JSONP_ERR_WRONG_METHOD);\n      } else if (req.responseType !== 'json') {\n        throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n      }\n      // Check the request headers. JSONP doesn't support headers and\n      // cannot set any that were supplied.\n      if (req.headers.keys().length > 0) {\n        throw new Error(JSONP_ERR_HEADERS_NOT_SUPPORTED);\n      }\n      // Everything else happens inside the Observable boundary.\n      return new Observable(observer => {\n        // The first step to make a request is to generate the callback name, and replace the\n        // callback placeholder in the URL with the name. Care has to be taken here to ensure\n        // a trailing &, if matched, gets inserted back into the URL in the correct place.\n        const callback = this.nextCallback();\n        const url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, `=${callback}$1`);\n        // Construct the <script> tag and point it at the URL.\n        const node = this.document.createElement('script');\n        node.src = url;\n        // A JSONP request requires waiting for multiple callbacks. These variables\n        // are closed over and track state across those callbacks.\n        // The response object, if one has been received, or null otherwise.\n        let body = null;\n        // Whether the response callback has been called.\n        let finished = false;\n        // Set the response callback in this.callbackMap (which will be the window\n        // object in the browser. The script being loaded via the <script> tag will\n        // eventually call this callback.\n        this.callbackMap[callback] = data => {\n          // Data has been received from the JSONP script. Firstly, delete this callback.\n          delete this.callbackMap[callback];\n          // Set state to indicate data was received.\n          body = data;\n          finished = true;\n        };\n        // cleanup() is a utility closure that removes the <script> from the page and\n        // the response callback from the window. This logic is used in both the\n        // success, error, and cancellation paths, so it's extracted out for convenience.\n        const cleanup = () => {\n          // Remove the <script> tag if it's still on the page.\n          node.remove();\n          // Remove the response callback from the callbackMap (window object in the\n          // browser).\n          delete this.callbackMap[callback];\n        };\n        // onLoad() is the success callback which runs after the response callback\n        // if the JSONP script loads successfully. The event itself is unimportant.\n        // If something went wrong, onLoad() may run without the response callback\n        // having been invoked.\n        const onLoad = event => {\n          // We wrap it in an extra Promise, to ensure the microtask\n          // is scheduled after the loaded endpoint has executed any potential microtask itself,\n          // which is not guaranteed in Internet Explorer and EdgeHTML. See issue #39496\n          this.resolvedPromise.then(() => {\n            // Cleanup the page.\n            cleanup();\n            // Check whether the response callback has run.\n            if (!finished) {\n              // It hasn't, something went wrong with the request. Return an error via\n              // the Observable error path. All JSONP errors have status 0.\n              observer.error(new HttpErrorResponse({\n                url,\n                status: 0,\n                statusText: 'JSONP Error',\n                error: new Error(JSONP_ERR_NO_CALLBACK)\n              }));\n              return;\n            }\n            // Success. body either contains the response body or null if none was\n            // returned.\n            observer.next(new HttpResponse({\n              body,\n              status: HTTP_STATUS_CODE_OK,\n              statusText: 'OK',\n              url\n            }));\n            // Complete the stream, the response is over.\n            observer.complete();\n          });\n        };\n        // onError() is the error callback, which runs if the script returned generates\n        // a Javascript error. It emits the error via the Observable error channel as\n        // a HttpErrorResponse.\n        const onError = error => {\n          cleanup();\n          // Wrap the error in a HttpErrorResponse.\n          observer.error(new HttpErrorResponse({\n            error,\n            status: 0,\n            statusText: 'JSONP Error',\n            url\n          }));\n        };\n        // Subscribe to both the success (load) and error events on the <script> tag,\n        // and add it to the page.\n        node.addEventListener('load', onLoad);\n        node.addEventListener('error', onError);\n        this.document.body.appendChild(node);\n        // The request has now been successfully sent.\n        observer.next({\n          type: HttpEventType.Sent\n        });\n        // Cancellation handler.\n        return () => {\n          if (!finished) {\n            this.removeListeners(node);\n          }\n          // And finally, clean up the page.\n          cleanup();\n        };\n      });\n    }\n    removeListeners(script) {\n      // Issue #34818\n      // Changing <script>'s ownerDocument will prevent it from execution.\n      // https://html.spec.whatwg.org/multipage/scripting.html#execute-the-script-block\n      foreignDocument ??= this.document.implementation.createHTMLDocument();\n      foreignDocument.adoptNode(script);\n    }\n    static {\n      this.ɵfac = function JsonpClientBackend_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || JsonpClientBackend)(i0.ɵɵinject(JsonpCallbackContext), i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: JsonpClientBackend,\n        factory: JsonpClientBackend.ɵfac\n      });\n    }\n  }\n  return JsonpClientBackend;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Identifies requests with the method JSONP and shifts them to the `JsonpClientBackend`.\n */\nfunction jsonpInterceptorFn(req, next) {\n  if (req.method === 'JSONP') {\n    return inject(JsonpClientBackend).handle(req);\n  }\n  // Fall through for normal HTTP requests.\n  return next(req);\n}\n/**\n * Identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * @see {@link HttpInterceptor}\n *\n * @publicApi\n */\nlet JsonpInterceptor = /*#__PURE__*/(() => {\n  class JsonpInterceptor {\n    constructor(injector) {\n      this.injector = injector;\n    }\n    /**\n     * Identifies and handles a given JSONP request.\n     * @param initialRequest The outgoing request object to handle.\n     * @param next The next interceptor in the chain, or the backend\n     * if no interceptors remain in the chain.\n     * @returns An observable of the event stream.\n     */\n    intercept(initialRequest, next) {\n      return runInInjectionContext(this.injector, () => jsonpInterceptorFn(initialRequest, downstreamRequest => next.handle(downstreamRequest)));\n    }\n    static {\n      this.ɵfac = function JsonpInterceptor_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || JsonpInterceptor)(i0.ɵɵinject(i0.EnvironmentInjector));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: JsonpInterceptor,\n        factory: JsonpInterceptor.ɵfac\n      });\n    }\n  }\n  return JsonpInterceptor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n */\nfunction getResponseUrl(xhr) {\n  if ('responseURL' in xhr && xhr.responseURL) {\n    return xhr.responseURL;\n  }\n  if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n    return xhr.getResponseHeader('X-Request-URL');\n  }\n  return null;\n}\n/**\n * Uses `XMLHttpRequest` to send requests to a backend server.\n * @see {@link HttpHandler}\n * @see {@link JsonpClientBackend}\n *\n * @publicApi\n */\nlet HttpXhrBackend = /*#__PURE__*/(() => {\n  class HttpXhrBackend {\n    constructor(xhrFactory) {\n      this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Processes a request and returns a stream of response events.\n     * @param req The request object.\n     * @returns An observable of the response events.\n     */\n    handle(req) {\n      // Quick check to give a better error message when a user attempts to use\n      // HttpClient.jsonp() without installing the HttpClientJsonpModule\n      if (req.method === 'JSONP') {\n        throw new ɵRuntimeError(-2800 /* RuntimeErrorCode.MISSING_JSONP_MODULE */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Cannot make a JSONP request without JSONP support. To fix the problem, either add the \\`withJsonpSupport()\\` call (if \\`provideHttpClient()\\` is used) or import the \\`HttpClientJsonpModule\\` in the root NgModule.`);\n      }\n      // Check whether this factory has a special function to load an XHR implementation\n      // for various non-browser environments. We currently limit it to only `ServerXhr`\n      // class, which needs to load an XHR implementation.\n      const xhrFactory = this.xhrFactory;\n      const source = xhrFactory.ɵloadImpl ? from(xhrFactory.ɵloadImpl()) : of(null);\n      return source.pipe(switchMap(() => {\n        // Everything happens on Observable subscription.\n        return new Observable(observer => {\n          // Start by setting up the XHR object with request method, URL, and withCredentials\n          // flag.\n          const xhr = xhrFactory.build();\n          xhr.open(req.method, req.urlWithParams);\n          if (req.withCredentials) {\n            xhr.withCredentials = true;\n          }\n          // Add all the requested headers.\n          req.headers.forEach((name, values) => xhr.setRequestHeader(name, values.join(',')));\n          // Add an Accept header if one isn't present already.\n          if (!req.headers.has('Accept')) {\n            xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n          }\n          // Auto-detect the Content-Type header if one isn't present already.\n          if (!req.headers.has('Content-Type')) {\n            const detectedType = req.detectContentTypeHeader();\n            // Sometimes Content-Type detection fails.\n            if (detectedType !== null) {\n              xhr.setRequestHeader('Content-Type', detectedType);\n            }\n          }\n          // Set the responseType if one was requested.\n          if (req.responseType) {\n            const responseType = req.responseType.toLowerCase();\n            // JSON responses need to be processed as text. This is because if the server\n            // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n            // xhr.response will be null, and xhr.responseText cannot be accessed to\n            // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n            // is parsed by first requesting text and then applying JSON.parse.\n            xhr.responseType = responseType !== 'json' ? responseType : 'text';\n          }\n          // Serialize the request body if one is present. If not, this will be set to null.\n          const reqBody = req.serializeBody();\n          // If progress events are enabled, response headers will be delivered\n          // in two events - the HttpHeaderResponse event and the full HttpResponse\n          // event. However, since response headers don't change in between these\n          // two events, it doesn't make sense to parse them twice. So headerResponse\n          // caches the data extracted from the response whenever it's first parsed,\n          // to ensure parsing isn't duplicated.\n          let headerResponse = null;\n          // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n          // state, and memoizes it into headerResponse.\n          const partialFromXhr = () => {\n            if (headerResponse !== null) {\n              return headerResponse;\n            }\n            const statusText = xhr.statusText || 'OK';\n            // Parse headers from XMLHttpRequest - this step is lazy.\n            const headers = new HttpHeaders(xhr.getAllResponseHeaders());\n            // Read the response URL from the XMLHttpResponse instance and fall back on the\n            // request URL.\n            const url = getResponseUrl(xhr) || req.url;\n            // Construct the HttpHeaderResponse and memoize it.\n            headerResponse = new HttpHeaderResponse({\n              headers,\n              status: xhr.status,\n              statusText,\n              url\n            });\n            return headerResponse;\n          };\n          // Next, a few closures are defined for the various events which XMLHttpRequest can\n          // emit. This allows them to be unregistered as event listeners later.\n          // First up is the load event, which represents a response being fully available.\n          const onLoad = () => {\n            // Read response state from the memoized partial data.\n            let {\n              headers,\n              status,\n              statusText,\n              url\n            } = partialFromXhr();\n            // The body will be read out if present.\n            let body = null;\n            if (status !== HTTP_STATUS_CODE_NO_CONTENT) {\n              // Use XMLHttpRequest.response if set, responseText otherwise.\n              body = typeof xhr.response === 'undefined' ? xhr.responseText : xhr.response;\n            }\n            // Normalize another potential bug (this one comes from CORS).\n            if (status === 0) {\n              status = !!body ? HTTP_STATUS_CODE_OK : 0;\n            }\n            // ok determines whether the response will be transmitted on the event or\n            // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n            // but a successful status code can still result in an error if the user\n            // asked for JSON data and the body cannot be parsed as such.\n            let ok = status >= 200 && status < 300;\n            // Check whether the body needs to be parsed as JSON (in many cases the browser\n            // will have done that already).\n            if (req.responseType === 'json' && typeof body === 'string') {\n              // Save the original body, before attempting XSSI prefix stripping.\n              const originalBody = body;\n              body = body.replace(XSSI_PREFIX, '');\n              try {\n                // Attempt the parse. If it fails, a parse error should be delivered to the\n                // user.\n                body = body !== '' ? JSON.parse(body) : null;\n              } catch (error) {\n                // Since the JSON.parse failed, it's reasonable to assume this might not have\n                // been a JSON response. Restore the original body (including any XSSI prefix)\n                // to deliver a better error response.\n                body = originalBody;\n                // If this was an error request to begin with, leave it as a string, it\n                // probably just isn't JSON. Otherwise, deliver the parsing error to the user.\n                if (ok) {\n                  // Even though the response status was 2xx, this is still an error.\n                  ok = false;\n                  // The parse error contains the text of the body that failed to parse.\n                  body = {\n                    error,\n                    text: body\n                  };\n                }\n              }\n            }\n            if (ok) {\n              // A successful response is delivered on the event stream.\n              observer.next(new HttpResponse({\n                body,\n                headers,\n                status,\n                statusText,\n                url: url || undefined\n              }));\n              // The full body has been received and delivered, no further events\n              // are possible. This request is complete.\n              observer.complete();\n            } else {\n              // An unsuccessful request is delivered on the error channel.\n              observer.error(new HttpErrorResponse({\n                // The error in this case is the response body (error from the server).\n                error: body,\n                headers,\n                status,\n                statusText,\n                url: url || undefined\n              }));\n            }\n          };\n          // The onError callback is called when something goes wrong at the network level.\n          // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n          // transmitted on the error channel.\n          const onError = error => {\n            const {\n              url\n            } = partialFromXhr();\n            const res = new HttpErrorResponse({\n              error,\n              status: xhr.status || 0,\n              statusText: xhr.statusText || 'Unknown Error',\n              url: url || undefined\n            });\n            observer.error(res);\n          };\n          // The sentHeaders flag tracks whether the HttpResponseHeaders event\n          // has been sent on the stream. This is necessary to track if progress\n          // is enabled since the event will be sent on only the first download\n          // progress event.\n          let sentHeaders = false;\n          // The download progress event handler, which is only registered if\n          // progress events are enabled.\n          const onDownProgress = event => {\n            // Send the HttpResponseHeaders event if it hasn't been sent already.\n            if (!sentHeaders) {\n              observer.next(partialFromXhr());\n              sentHeaders = true;\n            }\n            // Start building the download progress event to deliver on the response\n            // event stream.\n            let progressEvent = {\n              type: HttpEventType.DownloadProgress,\n              loaded: event.loaded\n            };\n            // Set the total number of bytes in the event if it's available.\n            if (event.lengthComputable) {\n              progressEvent.total = event.total;\n            }\n            // If the request was for text content and a partial response is\n            // available on XMLHttpRequest, include it in the progress event\n            // to allow for streaming reads.\n            if (req.responseType === 'text' && !!xhr.responseText) {\n              progressEvent.partialText = xhr.responseText;\n            }\n            // Finally, fire the event.\n            observer.next(progressEvent);\n          };\n          // The upload progress event handler, which is only registered if\n          // progress events are enabled.\n          const onUpProgress = event => {\n            // Upload progress events are simpler. Begin building the progress\n            // event.\n            let progress = {\n              type: HttpEventType.UploadProgress,\n              loaded: event.loaded\n            };\n            // If the total number of bytes being uploaded is available, include\n            // it.\n            if (event.lengthComputable) {\n              progress.total = event.total;\n            }\n            // Send the event.\n            observer.next(progress);\n          };\n          // By default, register for load and error events.\n          xhr.addEventListener('load', onLoad);\n          xhr.addEventListener('error', onError);\n          xhr.addEventListener('timeout', onError);\n          xhr.addEventListener('abort', onError);\n          // Progress events are only enabled if requested.\n          if (req.reportProgress) {\n            // Download progress is always enabled if requested.\n            xhr.addEventListener('progress', onDownProgress);\n            // Upload progress depends on whether there is a body to upload.\n            if (reqBody !== null && xhr.upload) {\n              xhr.upload.addEventListener('progress', onUpProgress);\n            }\n          }\n          // Fire the request, and notify the event stream that it was fired.\n          xhr.send(reqBody);\n          observer.next({\n            type: HttpEventType.Sent\n          });\n          // This is the return from the Observable function, which is the\n          // request cancellation handler.\n          return () => {\n            // On a cancellation, remove all registered event listeners.\n            xhr.removeEventListener('error', onError);\n            xhr.removeEventListener('abort', onError);\n            xhr.removeEventListener('load', onLoad);\n            xhr.removeEventListener('timeout', onError);\n            if (req.reportProgress) {\n              xhr.removeEventListener('progress', onDownProgress);\n              if (reqBody !== null && xhr.upload) {\n                xhr.upload.removeEventListener('progress', onUpProgress);\n              }\n            }\n            // Finally, abort the in-flight request.\n            if (xhr.readyState !== xhr.DONE) {\n              xhr.abort();\n            }\n          };\n        });\n      }));\n    }\n    static {\n      this.ɵfac = function HttpXhrBackend_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || HttpXhrBackend)(i0.ɵɵinject(i1.XhrFactory));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: HttpXhrBackend,\n        factory: HttpXhrBackend.ɵfac\n      });\n    }\n  }\n  return HttpXhrBackend;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst XSRF_ENABLED = /*#__PURE__*/new InjectionToken(ngDevMode ? 'XSRF_ENABLED' : '');\nconst XSRF_DEFAULT_COOKIE_NAME = 'XSRF-TOKEN';\nconst XSRF_COOKIE_NAME = /*#__PURE__*/new InjectionToken(ngDevMode ? 'XSRF_COOKIE_NAME' : '', {\n  providedIn: 'root',\n  factory: () => XSRF_DEFAULT_COOKIE_NAME\n});\nconst XSRF_DEFAULT_HEADER_NAME = 'X-XSRF-TOKEN';\nconst XSRF_HEADER_NAME = /*#__PURE__*/new InjectionToken(ngDevMode ? 'XSRF_HEADER_NAME' : '', {\n  providedIn: 'root',\n  factory: () => XSRF_DEFAULT_HEADER_NAME\n});\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * @publicApi\n */\nclass HttpXsrfTokenExtractor {}\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nlet HttpXsrfCookieExtractor = /*#__PURE__*/(() => {\n  class HttpXsrfCookieExtractor {\n    constructor(doc, platform, cookieName) {\n      this.doc = doc;\n      this.platform = platform;\n      this.cookieName = cookieName;\n      this.lastCookieString = '';\n      this.lastToken = null;\n      /**\n       * @internal for testing\n       */\n      this.parseCount = 0;\n    }\n    getToken() {\n      if (this.platform === 'server') {\n        return null;\n      }\n      const cookieString = this.doc.cookie || '';\n      if (cookieString !== this.lastCookieString) {\n        this.parseCount++;\n        this.lastToken = ɵparseCookieValue(cookieString, this.cookieName);\n        this.lastCookieString = cookieString;\n      }\n      return this.lastToken;\n    }\n    static {\n      this.ɵfac = function HttpXsrfCookieExtractor_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || HttpXsrfCookieExtractor)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(XSRF_COOKIE_NAME));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: HttpXsrfCookieExtractor,\n        factory: HttpXsrfCookieExtractor.ɵfac\n      });\n    }\n  }\n  return HttpXsrfCookieExtractor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction xsrfInterceptorFn(req, next) {\n  const lcUrl = req.url.toLowerCase();\n  // Skip both non-mutating requests and absolute URLs.\n  // Non-mutating requests don't require a token, and absolute URLs require special handling\n  // anyway as the cookie set\n  // on our origin is not the same as the token expected by another origin.\n  if (!inject(XSRF_ENABLED) || req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') || lcUrl.startsWith('https://')) {\n    return next(req);\n  }\n  const token = inject(HttpXsrfTokenExtractor).getToken();\n  const headerName = inject(XSRF_HEADER_NAME);\n  // Be careful not to overwrite an existing header of the same name.\n  if (token != null && !req.headers.has(headerName)) {\n    req = req.clone({\n      headers: req.headers.set(headerName, token)\n    });\n  }\n  return next(req);\n}\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nlet HttpXsrfInterceptor = /*#__PURE__*/(() => {\n  class HttpXsrfInterceptor {\n    constructor(injector) {\n      this.injector = injector;\n    }\n    intercept(initialRequest, next) {\n      return runInInjectionContext(this.injector, () => xsrfInterceptorFn(initialRequest, downstreamRequest => next.handle(downstreamRequest)));\n    }\n    static {\n      this.ɵfac = function HttpXsrfInterceptor_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || HttpXsrfInterceptor)(i0.ɵɵinject(i0.EnvironmentInjector));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: HttpXsrfInterceptor,\n        factory: HttpXsrfInterceptor.ɵfac\n      });\n    }\n  }\n  return HttpXsrfInterceptor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Identifies a particular kind of `HttpFeature`.\n *\n * @publicApi\n */\nvar HttpFeatureKind = /*#__PURE__*/function (HttpFeatureKind) {\n  HttpFeatureKind[HttpFeatureKind[\"Interceptors\"] = 0] = \"Interceptors\";\n  HttpFeatureKind[HttpFeatureKind[\"LegacyInterceptors\"] = 1] = \"LegacyInterceptors\";\n  HttpFeatureKind[HttpFeatureKind[\"CustomXsrfConfiguration\"] = 2] = \"CustomXsrfConfiguration\";\n  HttpFeatureKind[HttpFeatureKind[\"NoXsrfProtection\"] = 3] = \"NoXsrfProtection\";\n  HttpFeatureKind[HttpFeatureKind[\"JsonpSupport\"] = 4] = \"JsonpSupport\";\n  HttpFeatureKind[HttpFeatureKind[\"RequestsMadeViaParent\"] = 5] = \"RequestsMadeViaParent\";\n  HttpFeatureKind[HttpFeatureKind[\"Fetch\"] = 6] = \"Fetch\";\n  return HttpFeatureKind;\n}(HttpFeatureKind || {});\nfunction makeHttpFeature(kind, providers) {\n  return {\n    ɵkind: kind,\n    ɵproviders: providers\n  };\n}\n/**\n * Configures Angular's `HttpClient` service to be available for injection.\n *\n * By default, `HttpClient` will be configured for injection with its default options for XSRF\n * protection of outgoing requests. Additional configuration options can be provided by passing\n * feature functions to `provideHttpClient`. For example, HTTP interceptors can be added using the\n * `withInterceptors(...)` feature.\n *\n * <div class=\"alert is-helpful\">\n *\n * It's strongly recommended to enable\n * [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) for applications that use\n * Server-Side Rendering for better performance and compatibility. To enable `fetch`, add\n * `withFetch()` feature to the `provideHttpClient()` call at the root of the application:\n *\n * ```\n * provideHttpClient(withFetch());\n * ```\n *\n * </div>\n *\n * @see {@link withInterceptors}\n * @see {@link withInterceptorsFromDi}\n * @see {@link withXsrfConfiguration}\n * @see {@link withNoXsrfProtection}\n * @see {@link withJsonpSupport}\n * @see {@link withRequestsMadeViaParent}\n * @see {@link withFetch}\n */\nfunction provideHttpClient(...features) {\n  if (ngDevMode) {\n    const featureKinds = new Set(features.map(f => f.ɵkind));\n    if (featureKinds.has(HttpFeatureKind.NoXsrfProtection) && featureKinds.has(HttpFeatureKind.CustomXsrfConfiguration)) {\n      throw new Error(ngDevMode ? `Configuration error: found both withXsrfConfiguration() and withNoXsrfProtection() in the same call to provideHttpClient(), which is a contradiction.` : '');\n    }\n  }\n  const providers = [HttpClient, HttpXhrBackend, HttpInterceptorHandler, {\n    provide: HttpHandler,\n    useExisting: HttpInterceptorHandler\n  }, {\n    provide: HttpBackend,\n    useFactory: () => {\n      return inject(FetchBackend, {\n        optional: true\n      }) ?? inject(HttpXhrBackend);\n    }\n  }, {\n    provide: HTTP_INTERCEPTOR_FNS,\n    useValue: xsrfInterceptorFn,\n    multi: true\n  }, {\n    provide: XSRF_ENABLED,\n    useValue: true\n  }, {\n    provide: HttpXsrfTokenExtractor,\n    useClass: HttpXsrfCookieExtractor\n  }];\n  for (const feature of features) {\n    providers.push(...feature.ɵproviders);\n  }\n  return makeEnvironmentProviders(providers);\n}\n/**\n * Adds one or more functional-style HTTP interceptors to the configuration of the `HttpClient`\n * instance.\n *\n * @see {@link HttpInterceptorFn}\n * @see {@link provideHttpClient}\n * @publicApi\n */\nfunction withInterceptors(interceptorFns) {\n  return makeHttpFeature(HttpFeatureKind.Interceptors, interceptorFns.map(interceptorFn => {\n    return {\n      provide: HTTP_INTERCEPTOR_FNS,\n      useValue: interceptorFn,\n      multi: true\n    };\n  }));\n}\nconst LEGACY_INTERCEPTOR_FN = /*#__PURE__*/new InjectionToken(ngDevMode ? 'LEGACY_INTERCEPTOR_FN' : '');\n/**\n * Includes class-based interceptors configured using a multi-provider in the current injector into\n * the configured `HttpClient` instance.\n *\n * Prefer `withInterceptors` and functional interceptors instead, as support for DI-provided\n * interceptors may be phased out in a later release.\n *\n * @see {@link HttpInterceptor}\n * @see {@link HTTP_INTERCEPTORS}\n * @see {@link provideHttpClient}\n */\nfunction withInterceptorsFromDi() {\n  // Note: the legacy interceptor function is provided here via an intermediate token\n  // (`LEGACY_INTERCEPTOR_FN`), using a pattern which guarantees that if these providers are\n  // included multiple times, all of the multi-provider entries will have the same instance of the\n  // interceptor function. That way, the `HttpINterceptorHandler` will dedup them and legacy\n  // interceptors will not run multiple times.\n  return makeHttpFeature(HttpFeatureKind.LegacyInterceptors, [{\n    provide: LEGACY_INTERCEPTOR_FN,\n    useFactory: legacyInterceptorFnFactory\n  }, {\n    provide: HTTP_INTERCEPTOR_FNS,\n    useExisting: LEGACY_INTERCEPTOR_FN,\n    multi: true\n  }]);\n}\n/**\n * Customizes the XSRF protection for the configuration of the current `HttpClient` instance.\n *\n * This feature is incompatible with the `withNoXsrfProtection` feature.\n *\n * @see {@link provideHttpClient}\n */\nfunction withXsrfConfiguration({\n  cookieName,\n  headerName\n}) {\n  const providers = [];\n  if (cookieName !== undefined) {\n    providers.push({\n      provide: XSRF_COOKIE_NAME,\n      useValue: cookieName\n    });\n  }\n  if (headerName !== undefined) {\n    providers.push({\n      provide: XSRF_HEADER_NAME,\n      useValue: headerName\n    });\n  }\n  return makeHttpFeature(HttpFeatureKind.CustomXsrfConfiguration, providers);\n}\n/**\n * Disables XSRF protection in the configuration of the current `HttpClient` instance.\n *\n * This feature is incompatible with the `withXsrfConfiguration` feature.\n *\n * @see {@link provideHttpClient}\n */\nfunction withNoXsrfProtection() {\n  return makeHttpFeature(HttpFeatureKind.NoXsrfProtection, [{\n    provide: XSRF_ENABLED,\n    useValue: false\n  }]);\n}\n/**\n * Add JSONP support to the configuration of the current `HttpClient` instance.\n *\n * @see {@link provideHttpClient}\n */\nfunction withJsonpSupport() {\n  return makeHttpFeature(HttpFeatureKind.JsonpSupport, [JsonpClientBackend, {\n    provide: JsonpCallbackContext,\n    useFactory: jsonpCallbackContext\n  }, {\n    provide: HTTP_INTERCEPTOR_FNS,\n    useValue: jsonpInterceptorFn,\n    multi: true\n  }]);\n}\n/**\n * Configures the current `HttpClient` instance to make requests via the parent injector's\n * `HttpClient` instead of directly.\n *\n * By default, `provideHttpClient` configures `HttpClient` in its injector to be an independent\n * instance. For example, even if `HttpClient` is configured in the parent injector with\n * one or more interceptors, they will not intercept requests made via this instance.\n *\n * With this option enabled, once the request has passed through the current injector's\n * interceptors, it will be delegated to the parent injector's `HttpClient` chain instead of\n * dispatched directly, and interceptors in the parent configuration will be applied to the request.\n *\n * If there are several `HttpClient` instances in the injector hierarchy, it's possible for\n * `withRequestsMadeViaParent` to be used at multiple levels, which will cause the request to\n * \"bubble up\" until either reaching the root level or an `HttpClient` which was not configured with\n * this option.\n *\n * @see {@link provideHttpClient}\n * @developerPreview\n */\nfunction withRequestsMadeViaParent() {\n  return makeHttpFeature(HttpFeatureKind.RequestsMadeViaParent, [{\n    provide: HttpBackend,\n    useFactory: () => {\n      const handlerFromParent = inject(HttpHandler, {\n        skipSelf: true,\n        optional: true\n      });\n      if (ngDevMode && handlerFromParent === null) {\n        throw new Error('withRequestsMadeViaParent() can only be used when the parent injector also configures HttpClient');\n      }\n      return handlerFromParent;\n    }\n  }]);\n}\n/**\n * Configures the current `HttpClient` instance to make requests using the fetch API.\n *\n * Note: The Fetch API doesn't support progress report on uploads.\n *\n * @publicApi\n */\nfunction withFetch() {\n  return makeHttpFeature(HttpFeatureKind.Fetch, [FetchBackend, {\n    provide: HttpBackend,\n    useExisting: FetchBackend\n  }]);\n}\n\n/**\n * Configures XSRF protection support for outgoing requests.\n *\n * For a server that supports a cookie-based XSRF protection system,\n * use directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no names are supplied, the default cookie name is `XSRF-TOKEN`\n * and the default header name is `X-XSRF-TOKEN`.\n *\n * @publicApi\n * @deprecated Use withXsrfConfiguration({cookieName: 'XSRF-TOKEN', headerName: 'X-XSRF-TOKEN'}) as\n *     providers instead or `withNoXsrfProtection` if you want to disabled XSRF protection.\n */\nlet HttpClientXsrfModule = /*#__PURE__*/(() => {\n  class HttpClientXsrfModule {\n    /**\n     * Disable the default XSRF protection.\n     */\n    static disable() {\n      return {\n        ngModule: HttpClientXsrfModule,\n        providers: [withNoXsrfProtection().ɵproviders]\n      };\n    }\n    /**\n     * Configure XSRF protection.\n     * @param options An object that can specify either or both\n     * cookie name or header name.\n     * - Cookie name default is `XSRF-TOKEN`.\n     * - Header name default is `X-XSRF-TOKEN`.\n     *\n     */\n    static withOptions(options = {}) {\n      return {\n        ngModule: HttpClientXsrfModule,\n        providers: withXsrfConfiguration(options).ɵproviders\n      };\n    }\n    static {\n      this.ɵfac = function HttpClientXsrfModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || HttpClientXsrfModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: HttpClientXsrfModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [HttpXsrfInterceptor, {\n          provide: HTTP_INTERCEPTORS,\n          useExisting: HttpXsrfInterceptor,\n          multi: true\n        }, {\n          provide: HttpXsrfTokenExtractor,\n          useClass: HttpXsrfCookieExtractor\n        }, withXsrfConfiguration({\n          cookieName: XSRF_DEFAULT_COOKIE_NAME,\n          headerName: XSRF_DEFAULT_HEADER_NAME\n        }).ɵproviders, {\n          provide: XSRF_ENABLED,\n          useValue: true\n        }]\n      });\n    }\n  }\n  return HttpClientXsrfModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Configures the dependency injector for `HttpClient`\n * with supporting services for XSRF. Automatically imported by `HttpClientModule`.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in DI token `HTTP_INTERCEPTORS`.\n *\n * @publicApi\n * @deprecated use `provideHttpClient(withInterceptorsFromDi())` as providers instead\n */\nlet HttpClientModule = /*#__PURE__*/(() => {\n  class HttpClientModule {\n    static {\n      this.ɵfac = function HttpClientModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || HttpClientModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: HttpClientModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [provideHttpClient(withInterceptorsFromDi())]\n      });\n    }\n  }\n  return HttpClientModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Configures the dependency injector for `HttpClient`\n * with supporting services for JSONP.\n * Without this module, Jsonp requests reach the backend\n * with method JSONP, where they are rejected.\n *\n * @publicApi\n * @deprecated `withJsonpSupport()` as providers instead\n */\nlet HttpClientJsonpModule = /*#__PURE__*/(() => {\n  class HttpClientJsonpModule {\n    static {\n      this.ɵfac = function HttpClientJsonpModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || HttpClientJsonpModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: HttpClientJsonpModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [withJsonpSupport().ɵproviders]\n      });\n    }\n  }\n  return HttpClientJsonpModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * If your application uses different HTTP origins to make API calls (via `HttpClient`) on the server and\n * on the client, the `HTTP_TRANSFER_CACHE_ORIGIN_MAP` token allows you to establish a mapping\n * between those origins, so that `HttpTransferCache` feature can recognize those requests as the same\n * ones and reuse the data cached on the server during hydration on the client.\n *\n * **Important note**: the `HTTP_TRANSFER_CACHE_ORIGIN_MAP` token should *only* be provided in\n * the *server* code of your application (typically in the `app.server.config.ts` script). Angular throws an\n * error if it detects that the token is defined while running on the client.\n *\n * @usageNotes\n *\n * When the same API endpoint is accessed via `http://internal-domain.com:8080` on the server and\n * via `https://external-domain.com` on the client, you can use the following configuration:\n * ```typescript\n * // in app.server.config.ts\n * {\n *     provide: HTTP_TRANSFER_CACHE_ORIGIN_MAP,\n *     useValue: {\n *         'http://internal-domain.com:8080': 'https://external-domain.com'\n *     }\n * }\n * ```\n *\n * @publicApi\n */\nconst HTTP_TRANSFER_CACHE_ORIGIN_MAP = /*#__PURE__*/new InjectionToken(ngDevMode ? 'HTTP_TRANSFER_CACHE_ORIGIN_MAP' : '');\n/**\n * Keys within cached response data structure.\n */\nconst BODY = 'b';\nconst HEADERS = 'h';\nconst STATUS = 's';\nconst STATUS_TEXT = 'st';\nconst REQ_URL = 'u';\nconst RESPONSE_TYPE = 'rt';\nconst CACHE_OPTIONS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'HTTP_TRANSFER_STATE_CACHE_OPTIONS' : '');\n/**\n * A list of allowed HTTP methods to cache.\n */\nconst ALLOWED_METHODS = ['GET', 'HEAD'];\nfunction transferCacheInterceptorFn(req, next) {\n  const {\n    isCacheActive,\n    ...globalOptions\n  } = inject(CACHE_OPTIONS);\n  const {\n    transferCache: requestOptions,\n    method: requestMethod\n  } = req;\n  // In the following situations we do not want to cache the request\n  if (!isCacheActive || requestOptions === false ||\n  // POST requests are allowed either globally or at request level\n  requestMethod === 'POST' && !globalOptions.includePostRequests && !requestOptions || requestMethod !== 'POST' && !ALLOWED_METHODS.includes(requestMethod) ||\n  // Do not cache request that require authorization when includeRequestsWithAuthHeaders is falsey\n  !globalOptions.includeRequestsWithAuthHeaders && hasAuthHeaders(req) || globalOptions.filter?.(req) === false) {\n    return next(req);\n  }\n  const transferState = inject(TransferState);\n  const originMap = inject(HTTP_TRANSFER_CACHE_ORIGIN_MAP, {\n    optional: true\n  });\n  const isServer = isPlatformServer(inject(PLATFORM_ID));\n  if (originMap && !isServer) {\n    throw new ɵRuntimeError(2803 /* RuntimeErrorCode.HTTP_ORIGIN_MAP_USED_IN_CLIENT */, ngDevMode && 'Angular detected that the `HTTP_TRANSFER_CACHE_ORIGIN_MAP` token is configured and ' + 'present in the client side code. Please ensure that this token is only provided in the ' + 'server code of the application.');\n  }\n  const requestUrl = isServer && originMap ? mapRequestOriginUrl(req.url, originMap) : req.url;\n  const storeKey = makeCacheKey(req, requestUrl);\n  const response = transferState.get(storeKey, null);\n  let headersToInclude = globalOptions.includeHeaders;\n  if (typeof requestOptions === 'object' && requestOptions.includeHeaders) {\n    // Request-specific config takes precedence over the global config.\n    headersToInclude = requestOptions.includeHeaders;\n  }\n  if (response) {\n    const {\n      [BODY]: undecodedBody,\n      [RESPONSE_TYPE]: responseType,\n      [HEADERS]: httpHeaders,\n      [STATUS]: status,\n      [STATUS_TEXT]: statusText,\n      [REQ_URL]: url\n    } = response;\n    // Request found in cache. Respond using it.\n    let body = undecodedBody;\n    switch (responseType) {\n      case 'arraybuffer':\n        body = new TextEncoder().encode(undecodedBody).buffer;\n        break;\n      case 'blob':\n        body = new Blob([undecodedBody]);\n        break;\n    }\n    // We want to warn users accessing a header provided from the cache\n    // That HttpTransferCache alters the headers\n    // The warning will be logged a single time by HttpHeaders instance\n    let headers = new HttpHeaders(httpHeaders);\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      // Append extra logic in dev mode to produce a warning when a header\n      // that was not transferred to the client is accessed in the code via `get`\n      // and `has` calls.\n      headers = appendMissingHeadersDetection(req.url, headers, headersToInclude ?? []);\n    }\n    return of(new HttpResponse({\n      body,\n      headers,\n      status,\n      statusText,\n      url\n    }));\n  }\n  // Request not found in cache. Make the request and cache it if on the server.\n  return next(req).pipe(tap(event => {\n    if (event instanceof HttpResponse && isServer) {\n      transferState.set(storeKey, {\n        [BODY]: event.body,\n        [HEADERS]: getFilteredHeaders(event.headers, headersToInclude),\n        [STATUS]: event.status,\n        [STATUS_TEXT]: event.statusText,\n        [REQ_URL]: requestUrl,\n        [RESPONSE_TYPE]: req.responseType\n      });\n    }\n  }));\n}\n/** @returns true when the requests contains autorization related headers. */\nfunction hasAuthHeaders(req) {\n  return req.headers.has('authorization') || req.headers.has('proxy-authorization');\n}\nfunction getFilteredHeaders(headers, includeHeaders) {\n  if (!includeHeaders) {\n    return {};\n  }\n  const headersMap = {};\n  for (const key of includeHeaders) {\n    const values = headers.getAll(key);\n    if (values !== null) {\n      headersMap[key] = values;\n    }\n  }\n  return headersMap;\n}\nfunction sortAndConcatParams(params) {\n  return [...params.keys()].sort().map(k => `${k}=${params.getAll(k)}`).join('&');\n}\nfunction makeCacheKey(request, mappedRequestUrl) {\n  // make the params encoded same as a url so it's easy to identify\n  const {\n    params,\n    method,\n    responseType\n  } = request;\n  const encodedParams = sortAndConcatParams(params);\n  let serializedBody = request.serializeBody();\n  if (serializedBody instanceof URLSearchParams) {\n    serializedBody = sortAndConcatParams(serializedBody);\n  } else if (typeof serializedBody !== 'string') {\n    serializedBody = '';\n  }\n  const key = [method, responseType, mappedRequestUrl, serializedBody, encodedParams].join('|');\n  const hash = generateHash(key);\n  return makeStateKey(hash);\n}\n/**\n * A method that returns a hash representation of a string using a variant of DJB2 hash\n * algorithm.\n *\n * This is the same hashing logic that is used to generate component ids.\n */\nfunction generateHash(value) {\n  let hash = 0;\n  for (const char of value) {\n    hash = Math.imul(31, hash) + char.charCodeAt(0) << 0;\n  }\n  // Force positive number hash.\n  // 2147483647 = equivalent of Integer.MAX_VALUE.\n  hash += 2147483647 + 1;\n  return hash.toString();\n}\n/**\n * Returns the DI providers needed to enable HTTP transfer cache.\n *\n * By default, when using server rendering, requests are performed twice: once on the server and\n * other one on the browser.\n *\n * When these providers are added, requests performed on the server are cached and reused during the\n * bootstrapping of the application in the browser thus avoiding duplicate requests and reducing\n * load time.\n *\n */\nfunction withHttpTransferCache(cacheOptions) {\n  return [{\n    provide: CACHE_OPTIONS,\n    useFactory: () => {\n      ɵperformanceMarkFeature('NgHttpTransferCache');\n      return {\n        isCacheActive: true,\n        ...cacheOptions\n      };\n    }\n  }, {\n    provide: HTTP_ROOT_INTERCEPTOR_FNS,\n    useValue: transferCacheInterceptorFn,\n    multi: true,\n    deps: [TransferState, CACHE_OPTIONS]\n  }, {\n    provide: APP_BOOTSTRAP_LISTENER,\n    multi: true,\n    useFactory: () => {\n      const appRef = inject(ApplicationRef);\n      const cacheState = inject(CACHE_OPTIONS);\n      return () => {\n        ɵwhenStable(appRef).then(() => {\n          cacheState.isCacheActive = false;\n        });\n      };\n    }\n  }];\n}\n/**\n * This function will add a proxy to an HttpHeader to intercept calls to get/has\n * and log a warning if the header entry requested has been removed\n */\nfunction appendMissingHeadersDetection(url, headers, headersToInclude) {\n  const warningProduced = new Set();\n  return new Proxy(headers, {\n    get(target, prop) {\n      const value = Reflect.get(target, prop);\n      const methods = new Set(['get', 'has', 'getAll']);\n      if (typeof value !== 'function' || !methods.has(prop)) {\n        return value;\n      }\n      return headerName => {\n        // We log when the key has been removed and a warning hasn't been produced for the header\n        const key = (prop + ':' + headerName).toLowerCase(); // e.g. `get:cache-control`\n        if (!headersToInclude.includes(headerName) && !warningProduced.has(key)) {\n          warningProduced.add(key);\n          const truncatedUrl = ɵtruncateMiddle(url);\n          // TODO: create Error guide for this warning\n          console.warn(ɵformatRuntimeError(2802 /* RuntimeErrorCode.HEADERS_ALTERED_BY_TRANSFER_CACHE */, `Angular detected that the \\`${headerName}\\` header is accessed, but the value of the header ` + `was not transferred from the server to the client by the HttpTransferCache. ` + `To include the value of the \\`${headerName}\\` header for the \\`${truncatedUrl}\\` request, ` + `use the \\`includeHeaders\\` list. The \\`includeHeaders\\` can be defined either ` + `on a request level by adding the \\`transferCache\\` parameter, or on an application ` + `level by adding the \\`httpCacheTransfer.includeHeaders\\` argument to the ` + `\\`provideClientHydration()\\` call. `));\n        }\n        // invoking the original method\n        return value.apply(target, [headerName]);\n      };\n    }\n  });\n}\nfunction mapRequestOriginUrl(url, originMap) {\n  const origin = new URL(url, 'resolve://').origin;\n  const mappedOrigin = originMap[origin];\n  if (!mappedOrigin) {\n    return url;\n  }\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    verifyMappedOrigin(mappedOrigin);\n  }\n  return url.replace(origin, mappedOrigin);\n}\nfunction verifyMappedOrigin(url) {\n  if (new URL(url, 'resolve://').pathname !== '/') {\n    throw new ɵRuntimeError(2804 /* RuntimeErrorCode.HTTP_ORIGIN_MAP_CONTAINS_PATH */, 'Angular detected a URL with a path segment in the value provided for the ' + `\\`HTTP_TRANSFER_CACHE_ORIGIN_MAP\\` token: ${url}. The map should only contain origins ` + 'without any other segments.');\n  }\n}\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FetchBackend, HTTP_INTERCEPTORS, HTTP_TRANSFER_CACHE_ORIGIN_MAP, HttpBackend, HttpClient, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpContext, HttpContextToken, HttpErrorResponse, HttpEventType, HttpFeatureKind, HttpHandler, HttpHeaderResponse, HttpHeaders, HttpParams, HttpRequest, HttpResponse, HttpResponseBase, HttpStatusCode, HttpUrlEncodingCodec, HttpXhrBackend, HttpXsrfTokenExtractor, JsonpClientBackend, JsonpInterceptor, provideHttpClient, withFetch, withInterceptors, withInterceptorsFromDi, withJsonpSupport, withNoXsrfProtection, withRequestsMadeViaParent, withXsrfConfiguration, HTTP_ROOT_INTERCEPTOR_FNS as ɵHTTP_ROOT_INTERCEPTOR_FNS, HttpInterceptorHandler as ɵHttpInterceptingHandler, HttpInterceptorHandler as ɵHttpInterceptorHandler, REQUESTS_CONTRIBUTE_TO_STABILITY as ɵREQUESTS_CONTRIBUTE_TO_STABILITY, withHttpTransferCache as ɵwithHttpTransferCache };\n","/**\n * @license Angular v18.2.5\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, isPlatformServer, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nexport { ɵgetDOM } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { ɵglobal, ɵRuntimeError, Injectable, InjectionToken, Inject, APP_ID, CSP_NONCE, PLATFORM_ID, Optional, ViewEncapsulation, RendererStyleFlags2, inject, ɵGLOBAL_EVENT_DELEGATION, ɵinternalCreateApplication, ErrorHandler, ɵsetDocument, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, ɵTESTABILITY_GETTER, ɵTESTABILITY, Testability, NgZone, TestabilityRegistry, ɵINJECTOR_SCOPE, RendererFactory2, ApplicationModule, NgModule, SkipSelf, ApplicationRef, ɵConsole, forwardRef, ɵXSS_SECURITY_URL, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, ɵwithI18nSupport, ɵwithEventReplay, ENVIRONMENT_INITIALIZER, ɵformatRuntimeError, makeEnvironmentProviders, ɵwithDomHydration, Version } from '@angular/core';\nimport { ɵwithHttpTransferCache } from '@angular/common/http';\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n  constructor() {\n    super(...arguments);\n    this.supportsDOMEvents = true;\n  }\n}\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n  static makeCurrent() {\n    ɵsetRootDomAdapter(new BrowserDomAdapter());\n  }\n  onAndCancel(el, evt, listener) {\n    el.addEventListener(evt, listener);\n    return () => {\n      el.removeEventListener(evt, listener);\n    };\n  }\n  dispatchEvent(el, evt) {\n    el.dispatchEvent(evt);\n  }\n  remove(node) {\n    node.remove();\n  }\n  createElement(tagName, doc) {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElement(tagName);\n  }\n  createHtmlDocument() {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n  getDefaultDocument() {\n    return document;\n  }\n  isElementNode(node) {\n    return node.nodeType === Node.ELEMENT_NODE;\n  }\n  isShadowRoot(node) {\n    return node instanceof DocumentFragment;\n  }\n  /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n  getGlobalEventTarget(doc, target) {\n    if (target === 'window') {\n      return window;\n    }\n    if (target === 'document') {\n      return doc;\n    }\n    if (target === 'body') {\n      return doc.body;\n    }\n    return null;\n  }\n  getBaseHref(doc) {\n    const href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n  resetBaseElement() {\n    baseElement = null;\n  }\n  getUserAgent() {\n    return window.navigator.userAgent;\n  }\n  getCookie(name) {\n    return ɵparseCookieValue(document.cookie, name);\n  }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n  baseElement = baseElement || document.querySelector('base');\n  return baseElement ? baseElement.getAttribute('href') : null;\n}\nfunction relativePath(url) {\n  // The base URL doesn't really matter, we just need it so relative paths have something\n  // to resolve against. In the browser `HTMLBaseElement.href` is always absolute.\n  return new URL(url, document.baseURI).pathname;\n}\nclass BrowserGetTestability {\n  addToWindow(registry) {\n    ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n      const testability = registry.findTestabilityInTree(elem, findInAncestors);\n      if (testability == null) {\n        throw new ɵRuntimeError(5103 /* RuntimeErrorCode.TESTABILITY_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Could not find testability for element.');\n      }\n      return testability;\n    };\n    ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n    ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n    const whenAllStable = callback => {\n      const testabilities = ɵglobal['getAllAngularTestabilities']();\n      let count = testabilities.length;\n      const decrement = function () {\n        count--;\n        if (count == 0) {\n          callback();\n        }\n      };\n      testabilities.forEach(testability => {\n        testability.whenStable(decrement);\n      });\n    };\n    if (!ɵglobal['frameworkStabilizers']) {\n      ɵglobal['frameworkStabilizers'] = [];\n    }\n    ɵglobal['frameworkStabilizers'].push(whenAllStable);\n  }\n  findTestabilityInTree(registry, elem, findInAncestors) {\n    if (elem == null) {\n      return null;\n    }\n    const t = registry.getTestability(elem);\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n    if (ɵgetDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, elem.host, true);\n    }\n    return this.findTestabilityInTree(registry, elem.parentElement, true);\n  }\n}\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nlet BrowserXhr = /*#__PURE__*/(() => {\n  class BrowserXhr {\n    build() {\n      return new XMLHttpRequest();\n    }\n    static {\n      this.ɵfac = function BrowserXhr_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || BrowserXhr)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: BrowserXhr,\n        factory: BrowserXhr.ɵfac\n      });\n    }\n  }\n  return BrowserXhr;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * The injection token for plugins of the `EventManager` service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'EventManagerPlugins' : '');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nlet EventManager = /*#__PURE__*/(() => {\n  class EventManager {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    constructor(plugins, _zone) {\n      this._zone = _zone;\n      this._eventNameToPlugin = new Map();\n      plugins.forEach(plugin => {\n        plugin.manager = this;\n      });\n      this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler) {\n      const plugin = this._findPluginFor(eventName);\n      return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    getZone() {\n      return this._zone;\n    }\n    /** @internal */\n    _findPluginFor(eventName) {\n      let plugin = this._eventNameToPlugin.get(eventName);\n      if (plugin) {\n        return plugin;\n      }\n      const plugins = this._plugins;\n      plugin = plugins.find(plugin => plugin.supports(eventName));\n      if (!plugin) {\n        throw new ɵRuntimeError(5101 /* RuntimeErrorCode.NO_PLUGIN_FOR_EVENT */, (typeof ngDevMode === 'undefined' || ngDevMode) && `No event manager plugin found for event ${eventName}`);\n      }\n      this._eventNameToPlugin.set(eventName, plugin);\n      return plugin;\n    }\n    static {\n      this.ɵfac = function EventManager_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || EventManager)(i0.ɵɵinject(EVENT_MANAGER_PLUGINS), i0.ɵɵinject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: EventManager,\n        factory: EventManager.ɵfac\n      });\n    }\n  }\n  return EventManager;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The plugin definition for the `EventManager` class\n *\n * It can be used as a base class to create custom manager plugins, i.e. you can create your own\n * class that extends the `EventManagerPlugin` one.\n *\n * @publicApi\n */\nclass EventManagerPlugin {\n  // TODO: remove (has some usage in G3)\n  constructor(_doc) {\n    this._doc = _doc;\n  }\n}\n\n/** The style elements attribute name used to set value of `APP_ID` token. */\nconst APP_ID_ATTRIBUTE_NAME = 'ng-app-id';\nlet SharedStylesHost = /*#__PURE__*/(() => {\n  class SharedStylesHost {\n    constructor(doc, appId, nonce, platformId = {}) {\n      this.doc = doc;\n      this.appId = appId;\n      this.nonce = nonce;\n      this.platformId = platformId;\n      // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n      this.styleRef = new Map();\n      this.hostNodes = new Set();\n      this.styleNodesInDOM = this.collectServerRenderedStyles();\n      this.platformIsServer = isPlatformServer(platformId);\n      this.resetHostNodes();\n    }\n    addStyles(styles) {\n      for (const style of styles) {\n        const usageCount = this.changeUsageCount(style, 1);\n        if (usageCount === 1) {\n          this.onStyleAdded(style);\n        }\n      }\n    }\n    removeStyles(styles) {\n      for (const style of styles) {\n        const usageCount = this.changeUsageCount(style, -1);\n        if (usageCount <= 0) {\n          this.onStyleRemoved(style);\n        }\n      }\n    }\n    ngOnDestroy() {\n      const styleNodesInDOM = this.styleNodesInDOM;\n      if (styleNodesInDOM) {\n        styleNodesInDOM.forEach(node => node.remove());\n        styleNodesInDOM.clear();\n      }\n      for (const style of this.getAllStyles()) {\n        this.onStyleRemoved(style);\n      }\n      this.resetHostNodes();\n    }\n    addHost(hostNode) {\n      this.hostNodes.add(hostNode);\n      for (const style of this.getAllStyles()) {\n        this.addStyleToHost(hostNode, style);\n      }\n    }\n    removeHost(hostNode) {\n      this.hostNodes.delete(hostNode);\n    }\n    getAllStyles() {\n      return this.styleRef.keys();\n    }\n    onStyleAdded(style) {\n      for (const host of this.hostNodes) {\n        this.addStyleToHost(host, style);\n      }\n    }\n    onStyleRemoved(style) {\n      const styleRef = this.styleRef;\n      styleRef.get(style)?.elements?.forEach(node => node.remove());\n      styleRef.delete(style);\n    }\n    collectServerRenderedStyles() {\n      const styles = this.doc.head?.querySelectorAll(`style[${APP_ID_ATTRIBUTE_NAME}=\"${this.appId}\"]`);\n      if (styles?.length) {\n        const styleMap = new Map();\n        styles.forEach(style => {\n          if (style.textContent != null) {\n            styleMap.set(style.textContent, style);\n          }\n        });\n        return styleMap;\n      }\n      return null;\n    }\n    changeUsageCount(style, delta) {\n      const map = this.styleRef;\n      if (map.has(style)) {\n        const styleRefValue = map.get(style);\n        styleRefValue.usage += delta;\n        return styleRefValue.usage;\n      }\n      map.set(style, {\n        usage: delta,\n        elements: []\n      });\n      return delta;\n    }\n    getStyleElement(host, style) {\n      const styleNodesInDOM = this.styleNodesInDOM;\n      const styleEl = styleNodesInDOM?.get(style);\n      if (styleEl?.parentNode === host) {\n        // `styleNodesInDOM` cannot be undefined due to the above `styleNodesInDOM?.get`.\n        styleNodesInDOM.delete(style);\n        styleEl.removeAttribute(APP_ID_ATTRIBUTE_NAME);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          // This attribute is solely used for debugging purposes.\n          styleEl.setAttribute('ng-style-reused', '');\n        }\n        return styleEl;\n      } else {\n        const styleEl = this.doc.createElement('style');\n        if (this.nonce) {\n          styleEl.setAttribute('nonce', this.nonce);\n        }\n        styleEl.textContent = style;\n        if (this.platformIsServer) {\n          styleEl.setAttribute(APP_ID_ATTRIBUTE_NAME, this.appId);\n        }\n        host.appendChild(styleEl);\n        return styleEl;\n      }\n    }\n    addStyleToHost(host, style) {\n      const styleEl = this.getStyleElement(host, style);\n      const styleRef = this.styleRef;\n      const styleElRef = styleRef.get(style)?.elements;\n      if (styleElRef) {\n        styleElRef.push(styleEl);\n      } else {\n        styleRef.set(style, {\n          elements: [styleEl],\n          usage: 1\n        });\n      }\n    }\n    resetHostNodes() {\n      const hostNodes = this.hostNodes;\n      hostNodes.clear();\n      // Re-add the head element back since this is the default host.\n      hostNodes.add(this.doc.head);\n    }\n    static {\n      this.ɵfac = function SharedStylesHost_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || SharedStylesHost)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(APP_ID), i0.ɵɵinject(CSP_NONCE, 8), i0.ɵɵinject(PLATFORM_ID));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: SharedStylesHost,\n        factory: SharedStylesHost.ɵfac\n      });\n    }\n  }\n  return SharedStylesHost;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst NAMESPACE_URIS = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/',\n  'math': 'http://www.w3.org/1998/Math/MathML'\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n/**\n * The default value for the `REMOVE_STYLES_ON_COMPONENT_DESTROY` DI token.\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT = true;\n/**\n * A DI token that indicates whether styles\n * of destroyed components should be removed from DOM.\n *\n * By default, the value is set to `true`.\n * @publicApi\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY = /*#__PURE__*/new InjectionToken(ngDevMode ? 'RemoveStylesOnCompDestroy' : '', {\n  providedIn: 'root',\n  factory: () => REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT\n});\nfunction shimContentAttribute(componentShortId) {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimStylesContent(compId, styles) {\n  return styles.map(s => s.replace(COMPONENT_REGEX, compId));\n}\nlet DomRendererFactory2 = /*#__PURE__*/(() => {\n  class DomRendererFactory2 {\n    constructor(eventManager, sharedStylesHost, appId, removeStylesOnCompDestroy, doc, platformId, ngZone, nonce = null) {\n      this.eventManager = eventManager;\n      this.sharedStylesHost = sharedStylesHost;\n      this.appId = appId;\n      this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n      this.doc = doc;\n      this.platformId = platformId;\n      this.ngZone = ngZone;\n      this.nonce = nonce;\n      this.rendererByCompId = new Map();\n      this.platformIsServer = isPlatformServer(platformId);\n      this.defaultRenderer = new DefaultDomRenderer2(eventManager, doc, ngZone, this.platformIsServer);\n    }\n    createRenderer(element, type) {\n      if (!element || !type) {\n        return this.defaultRenderer;\n      }\n      if (this.platformIsServer && type.encapsulation === ViewEncapsulation.ShadowDom) {\n        // Domino does not support shadow DOM.\n        type = {\n          ...type,\n          encapsulation: ViewEncapsulation.Emulated\n        };\n      }\n      const renderer = this.getOrCreateRenderer(element, type);\n      // Renderers have different logic due to different encapsulation behaviours.\n      // Ex: for emulated, an attribute is added to the element.\n      if (renderer instanceof EmulatedEncapsulationDomRenderer2) {\n        renderer.applyToHost(element);\n      } else if (renderer instanceof NoneEncapsulationDomRenderer) {\n        renderer.applyStyles();\n      }\n      return renderer;\n    }\n    getOrCreateRenderer(element, type) {\n      const rendererByCompId = this.rendererByCompId;\n      let renderer = rendererByCompId.get(type.id);\n      if (!renderer) {\n        const doc = this.doc;\n        const ngZone = this.ngZone;\n        const eventManager = this.eventManager;\n        const sharedStylesHost = this.sharedStylesHost;\n        const removeStylesOnCompDestroy = this.removeStylesOnCompDestroy;\n        const platformIsServer = this.platformIsServer;\n        switch (type.encapsulation) {\n          case ViewEncapsulation.Emulated:\n            renderer = new EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, type, this.appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer);\n            break;\n          case ViewEncapsulation.ShadowDom:\n            return new ShadowDomRenderer(eventManager, sharedStylesHost, element, type, doc, ngZone, this.nonce, platformIsServer);\n          default:\n            renderer = new NoneEncapsulationDomRenderer(eventManager, sharedStylesHost, type, removeStylesOnCompDestroy, doc, ngZone, platformIsServer);\n            break;\n        }\n        rendererByCompId.set(type.id, renderer);\n      }\n      return renderer;\n    }\n    ngOnDestroy() {\n      this.rendererByCompId.clear();\n    }\n    static {\n      this.ɵfac = function DomRendererFactory2_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || DomRendererFactory2)(i0.ɵɵinject(EventManager), i0.ɵɵinject(SharedStylesHost), i0.ɵɵinject(APP_ID), i0.ɵɵinject(REMOVE_STYLES_ON_COMPONENT_DESTROY), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(CSP_NONCE));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: DomRendererFactory2,\n        factory: DomRendererFactory2.ɵfac\n      });\n    }\n  }\n  return DomRendererFactory2;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass DefaultDomRenderer2 {\n  constructor(eventManager, doc, ngZone, platformIsServer) {\n    this.eventManager = eventManager;\n    this.doc = doc;\n    this.ngZone = ngZone;\n    this.platformIsServer = platformIsServer;\n    this.data = Object.create(null);\n    /**\n     * By default this renderer throws when encountering synthetic properties\n     * This can be disabled for example by the AsyncAnimationRendererFactory\n     */\n    this.throwOnSyntheticProps = true;\n    this.destroyNode = null;\n  }\n  destroy() {}\n  createElement(name, namespace) {\n    if (namespace) {\n      // TODO: `|| namespace` was added in\n      // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n      // support how Ivy passed around the namespace URI rather than short name at the time. It did\n      // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n      // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n      // namespaces should be and make it consistent.\n      // Related issues:\n      // https://github.com/angular/angular/issues/44028\n      // https://github.com/angular/angular/issues/44883\n      return this.doc.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n    }\n    return this.doc.createElement(name);\n  }\n  createComment(value) {\n    return this.doc.createComment(value);\n  }\n  createText(value) {\n    return this.doc.createTextNode(value);\n  }\n  appendChild(parent, newChild) {\n    const targetParent = isTemplateNode(parent) ? parent.content : parent;\n    targetParent.appendChild(newChild);\n  }\n  insertBefore(parent, newChild, refChild) {\n    if (parent) {\n      const targetParent = isTemplateNode(parent) ? parent.content : parent;\n      targetParent.insertBefore(newChild, refChild);\n    }\n  }\n  removeChild(_parent, oldChild) {\n    oldChild.remove();\n  }\n  selectRootElement(selectorOrNode, preserveContent) {\n    let el = typeof selectorOrNode === 'string' ? this.doc.querySelector(selectorOrNode) : selectorOrNode;\n    if (!el) {\n      throw new ɵRuntimeError(-5104 /* RuntimeErrorCode.ROOT_NODE_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) && `The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n    if (!preserveContent) {\n      el.textContent = '';\n    }\n    return el;\n  }\n  parentNode(node) {\n    return node.parentNode;\n  }\n  nextSibling(node) {\n    return node.nextSibling;\n  }\n  setAttribute(el, name, value, namespace) {\n    if (namespace) {\n      name = namespace + ':' + name;\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.setAttributeNS(namespaceUri, name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n  removeAttribute(el, name, namespace) {\n    if (namespace) {\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.removeAttributeNS(namespaceUri, name);\n      } else {\n        el.removeAttribute(`${namespace}:${name}`);\n      }\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n  addClass(el, name) {\n    el.classList.add(name);\n  }\n  removeClass(el, name) {\n    el.classList.remove(name);\n  }\n  setStyle(el, style, value, flags) {\n    if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n      el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n  removeStyle(el, style, flags) {\n    if (flags & RendererStyleFlags2.DashCase) {\n      // removeProperty has no effect when used on camelCased properties.\n      el.style.removeProperty(style);\n    } else {\n      el.style[style] = '';\n    }\n  }\n  setProperty(el, name, value) {\n    if (el == null) {\n      return;\n    }\n    (typeof ngDevMode === 'undefined' || ngDevMode) && this.throwOnSyntheticProps && checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n  setValue(node, value) {\n    node.nodeValue = value;\n  }\n  listen(target, event, callback) {\n    (typeof ngDevMode === 'undefined' || ngDevMode) && this.throwOnSyntheticProps && checkNoSyntheticProp(event, 'listener');\n    if (typeof target === 'string') {\n      target = ɵgetDOM().getGlobalEventTarget(this.doc, target);\n      if (!target) {\n        throw new Error(`Unsupported event target ${target} for event ${event}`);\n      }\n    }\n    return this.eventManager.addEventListener(target, event, this.decoratePreventDefault(callback));\n  }\n  decoratePreventDefault(eventHandler) {\n    // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n    // decoratePreventDefault or is a listener added outside the Angular context so it can handle\n    // the two differently. In the first case, the special '__ngUnwrap__' token is passed to the\n    // unwrap the listener (see below).\n    return event => {\n      // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n      // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The\n      // debug_node can inspect the listener toString contents for the existence of this special\n      // token. Because the token is a string literal, it is ensured to not be modified by compiled\n      // code.\n      if (event === '__ngUnwrap__') {\n        return eventHandler;\n      }\n      // Run the event handler inside the ngZone because event handlers are not patched\n      // by Zone on the server. This is required only for tests.\n      const allowDefaultBehavior = this.platformIsServer ? this.ngZone.runGuarded(() => eventHandler(event)) : eventHandler(event);\n      if (allowDefaultBehavior === false) {\n        event.preventDefault();\n      }\n      return undefined;\n    };\n  }\n}\nconst AT_CHARCODE = /*#__PURE__*/(() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name, nameKind) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new ɵRuntimeError(5105 /* RuntimeErrorCode.UNEXPECTED_SYNTHETIC_PROPERTY */, `Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n  }\n}\nfunction isTemplateNode(node) {\n  return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n  constructor(eventManager, sharedStylesHost, hostEl, component, doc, ngZone, nonce, platformIsServer) {\n    super(eventManager, doc, ngZone, platformIsServer);\n    this.sharedStylesHost = sharedStylesHost;\n    this.hostEl = hostEl;\n    this.shadowRoot = hostEl.attachShadow({\n      mode: 'open'\n    });\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    const styles = shimStylesContent(component.id, component.styles);\n    for (const style of styles) {\n      const styleEl = document.createElement('style');\n      if (nonce) {\n        styleEl.setAttribute('nonce', nonce);\n      }\n      styleEl.textContent = style;\n      this.shadowRoot.appendChild(styleEl);\n    }\n  }\n  nodeOrShadowRoot(node) {\n    return node === this.hostEl ? this.shadowRoot : node;\n  }\n  appendChild(parent, newChild) {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n  insertBefore(parent, newChild, refChild) {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n  removeChild(_parent, oldChild) {\n    return super.removeChild(null, oldChild);\n  }\n  parentNode(node) {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n  destroy() {\n    this.sharedStylesHost.removeHost(this.shadowRoot);\n  }\n}\nclass NoneEncapsulationDomRenderer extends DefaultDomRenderer2 {\n  constructor(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, compId) {\n    super(eventManager, doc, ngZone, platformIsServer);\n    this.sharedStylesHost = sharedStylesHost;\n    this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n    this.styles = compId ? shimStylesContent(compId, component.styles) : component.styles;\n  }\n  applyStyles() {\n    this.sharedStylesHost.addStyles(this.styles);\n  }\n  destroy() {\n    if (!this.removeStylesOnCompDestroy) {\n      return;\n    }\n    this.sharedStylesHost.removeStyles(this.styles);\n  }\n}\nclass EmulatedEncapsulationDomRenderer2 extends NoneEncapsulationDomRenderer {\n  constructor(eventManager, sharedStylesHost, component, appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer) {\n    const compId = appId + '-' + component.id;\n    super(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, compId);\n    this.contentAttr = shimContentAttribute(compId);\n    this.hostAttr = shimHostAttribute(compId);\n  }\n  applyToHost(element) {\n    this.applyStyles();\n    this.setAttribute(element, this.hostAttr, '');\n  }\n  createElement(parent, name) {\n    const el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n}\nlet DomEventsPlugin = /*#__PURE__*/(() => {\n  class DomEventsPlugin extends EventManagerPlugin {\n    constructor(doc) {\n      super(doc);\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    supports(eventName) {\n      return true;\n    }\n    addEventListener(element, eventName, handler) {\n      element.addEventListener(eventName, handler, false);\n      return () => this.removeEventListener(element, eventName, handler);\n    }\n    removeEventListener(target, eventName, callback) {\n      return target.removeEventListener(eventName, callback);\n    }\n    static {\n      this.ɵfac = function DomEventsPlugin_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || DomEventsPlugin)(i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: DomEventsPlugin,\n        factory: DomEventsPlugin.ɵfac\n      });\n    }\n  }\n  return DomEventsPlugin;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet EventDelegationPlugin = /*#__PURE__*/(() => {\n  class EventDelegationPlugin extends EventManagerPlugin {\n    constructor(doc) {\n      super(doc);\n      this.delegate = inject(ɵGLOBAL_EVENT_DELEGATION, {\n        optional: true\n      });\n    }\n    supports(eventName) {\n      // If `GlobalDelegationEventPlugin` implementation is not provided,\n      // this plugin is kept disabled.\n      return this.delegate ? this.delegate.supports(eventName) : false;\n    }\n    addEventListener(element, eventName, handler) {\n      return this.delegate.addEventListener(element, eventName, handler);\n    }\n    removeEventListener(element, eventName, callback) {\n      return this.delegate.removeEventListener(element, eventName, callback);\n    }\n    static {\n      this.ɵfac = function EventDelegationPlugin_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || EventDelegationPlugin)(i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: EventDelegationPlugin,\n        factory: EventDelegationPlugin.ɵfac\n      });\n    }\n  }\n  return EventDelegationPlugin;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nconst _keyMap = {\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n  'alt': event => event.altKey,\n  'control': event => event.ctrlKey,\n  'meta': event => event.metaKey,\n  'shift': event => event.shiftKey\n};\n/**\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nlet KeyEventsPlugin = /*#__PURE__*/(() => {\n  class KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    constructor(doc) {\n      super(doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n    supports(eventName) {\n      return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n    addEventListener(element, eventName, handler) {\n      const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n      const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n      return this.manager.getZone().runOutsideAngular(() => {\n        return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n      });\n    }\n    /**\n     * Parses the user provided full keyboard event definition and normalizes it for\n     * later internal use. It ensures the string is all lowercase, converts special\n     * characters to a standard spelling, and orders all the values consistently.\n     *\n     * @param eventName The name of the key event to listen for.\n     * @returns an object with the full, normalized string, and the dom event name\n     * or null in the case when the event doesn't match a keyboard event.\n     */\n    static parseEventName(eventName) {\n      const parts = eventName.toLowerCase().split('.');\n      const domEventName = parts.shift();\n      if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n        return null;\n      }\n      const key = KeyEventsPlugin._normalizeKey(parts.pop());\n      let fullKey = '';\n      let codeIX = parts.indexOf('code');\n      if (codeIX > -1) {\n        parts.splice(codeIX, 1);\n        fullKey = 'code.';\n      }\n      MODIFIER_KEYS.forEach(modifierName => {\n        const index = parts.indexOf(modifierName);\n        if (index > -1) {\n          parts.splice(index, 1);\n          fullKey += modifierName + '.';\n        }\n      });\n      fullKey += key;\n      if (parts.length != 0 || key.length === 0) {\n        // returning null instead of throwing to let another plugin process the event\n        return null;\n      }\n      // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n      //       The code must remain in the `result['domEventName']` form.\n      // return {domEventName, fullKey};\n      const result = {};\n      result['domEventName'] = domEventName;\n      result['fullKey'] = fullKey;\n      return result;\n    }\n    /**\n     * Determines whether the actual keys pressed match the configured key code string.\n     * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n     * event is attached to the DOM during the `addEventListener` call. This is unseen\n     * by the end user and is normalized for internal consistency and parsing.\n     *\n     * @param event The keyboard event.\n     * @param fullKeyCode The normalized user defined expected key event string\n     * @returns boolean.\n     */\n    static matchEventFullKeyCode(event, fullKeyCode) {\n      let keycode = _keyMap[event.key] || event.key;\n      let key = '';\n      if (fullKeyCode.indexOf('code.') > -1) {\n        keycode = event.code;\n        key = 'code.';\n      }\n      // the keycode could be unidentified so we have to check here\n      if (keycode == null || !keycode) return false;\n      keycode = keycode.toLowerCase();\n      if (keycode === ' ') {\n        keycode = 'space'; // for readability\n      } else if (keycode === '.') {\n        keycode = 'dot'; // because '.' is used as a separator in event names\n      }\n      MODIFIER_KEYS.forEach(modifierName => {\n        if (modifierName !== keycode) {\n          const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n          if (modifierGetter(event)) {\n            key += modifierName + '.';\n          }\n        }\n      });\n      key += keycode;\n      return key === fullKeyCode;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n      return event => {\n        if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n          zone.runGuarded(() => handler(event));\n        }\n      };\n    }\n    /** @internal */\n    static _normalizeKey(keyName) {\n      return keyName === 'esc' ? 'escape' : keyName;\n    }\n    static {\n      this.ɵfac = function KeyEventsPlugin_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || KeyEventsPlugin)(i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: KeyEventsPlugin,\n        factory: KeyEventsPlugin.ɵfac\n      });\n    }\n  }\n  return KeyEventsPlugin;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/components/importing).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```typescript\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction bootstrapApplication(rootComponent, options) {\n  return ɵinternalCreateApplication({\n    rootComponent,\n    ...createProvidersConfig(options)\n  });\n}\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction createApplication(options) {\n  return ɵinternalCreateApplication(createProvidersConfig(options));\n}\nfunction createProvidersConfig(options) {\n  return {\n    appProviders: [...BROWSER_MODULE_PROVIDERS, ...(options?.providers ?? [])],\n    platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n  };\n}\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @publicApi\n */\nfunction provideProtractorTestingSupport() {\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideProtractorTestingSupport` call results in app\n  // code.\n  return [...TESTABILITY_PROVIDERS];\n}\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n}\nfunction errorHandler() {\n  return new ErrorHandler();\n}\nfunction _document() {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [{\n  provide: PLATFORM_ID,\n  useValue: ɵPLATFORM_BROWSER_ID\n}, {\n  provide: PLATFORM_INITIALIZER,\n  useValue: initDomAdapter,\n  multi: true\n}, {\n  provide: DOCUMENT,\n  useFactory: _document,\n  deps: []\n}];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = /*#__PURE__*/createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nconst BROWSER_MODULE_PROVIDERS_MARKER = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'BrowserModule Providers Marker' : '');\nconst TESTABILITY_PROVIDERS = [{\n  provide: ɵTESTABILITY_GETTER,\n  useClass: BrowserGetTestability,\n  deps: []\n}, {\n  provide: ɵTESTABILITY,\n  useClass: Testability,\n  deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n}, {\n  provide: Testability,\n  // Also provide as `Testability` for backwards-compatibility.\n  useClass: Testability,\n  deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n}];\nconst BROWSER_MODULE_PROVIDERS = [{\n  provide: ɵINJECTOR_SCOPE,\n  useValue: 'root'\n}, {\n  provide: ErrorHandler,\n  useFactory: errorHandler,\n  deps: []\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: DomEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT, NgZone, PLATFORM_ID]\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: KeyEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT]\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: EventDelegationPlugin,\n  multi: true\n}, DomRendererFactory2, SharedStylesHost, EventManager, {\n  provide: RendererFactory2,\n  useExisting: DomRendererFactory2\n}, {\n  provide: XhrFactory,\n  useClass: BrowserXhr,\n  deps: []\n}, typeof ngDevMode === 'undefined' || ngDevMode ? {\n  provide: BROWSER_MODULE_PROVIDERS_MARKER,\n  useValue: true\n} : []];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nlet BrowserModule = /*#__PURE__*/(() => {\n  class BrowserModule {\n    constructor(providersAlreadyPresent) {\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && providersAlreadyPresent) {\n        throw new ɵRuntimeError(5100 /* RuntimeErrorCode.BROWSER_MODULE_ALREADY_LOADED */, `Providers from the \\`BrowserModule\\` have already been loaded. If you need access ` + `to common directives such as NgIf and NgFor, import the \\`CommonModule\\` instead.`);\n      }\n    }\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     *\n     * @deprecated Use {@link APP_ID} instead to set the application ID.\n     */\n    static withServerTransition(params) {\n      return {\n        ngModule: BrowserModule,\n        providers: [{\n          provide: APP_ID,\n          useValue: params.appId\n        }]\n      };\n    }\n    static {\n      this.ɵfac = function BrowserModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || BrowserModule)(i0.ɵɵinject(BROWSER_MODULE_PROVIDERS_MARKER, 12));\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: BrowserModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS],\n        imports: [CommonModule, ApplicationModule]\n      });\n    }\n  }\n  return BrowserModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nlet Meta = /*#__PURE__*/(() => {\n  class Meta {\n    constructor(_doc) {\n      this._doc = _doc;\n      this._dom = ɵgetDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n    addTag(tag, forceCreation = false) {\n      if (!tag) return null;\n      return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n    addTags(tags, forceCreation = false) {\n      if (!tags) return [];\n      return tags.reduce((result, tag) => {\n        if (tag) {\n          result.push(this._getOrCreateElement(tag, forceCreation));\n        }\n        return result;\n      }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n    getTag(attrSelector) {\n      if (!attrSelector) return null;\n      return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n    getTags(attrSelector) {\n      if (!attrSelector) return [];\n      const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n      return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n    updateTag(tag, selector) {\n      if (!tag) return null;\n      selector = selector || this._parseSelector(tag);\n      const meta = this.getTag(selector);\n      if (meta) {\n        return this._setMetaElementAttributes(tag, meta);\n      }\n      return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n    removeTag(attrSelector) {\n      this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n    removeTagElement(meta) {\n      if (meta) {\n        this._dom.remove(meta);\n      }\n    }\n    _getOrCreateElement(meta, forceCreation = false) {\n      if (!forceCreation) {\n        const selector = this._parseSelector(meta);\n        // It's allowed to have multiple elements with the same name so it's not enough to\n        // just check that element with the same name already present on the page. We also need to\n        // check if element has tag attributes\n        const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n        if (elem !== undefined) return elem;\n      }\n      const element = this._dom.createElement('meta');\n      this._setMetaElementAttributes(meta, element);\n      const head = this._doc.getElementsByTagName('head')[0];\n      head.appendChild(element);\n      return element;\n    }\n    _setMetaElementAttributes(tag, el) {\n      Object.keys(tag).forEach(prop => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n      return el;\n    }\n    _parseSelector(tag) {\n      const attr = tag.name ? 'name' : 'property';\n      return `${attr}=\"${tag[attr]}\"`;\n    }\n    _containsAttributes(tag, elem) {\n      return Object.keys(tag).every(key => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n    }\n    _getMetaKeyMap(prop) {\n      return META_KEYS_MAP[prop] || prop;\n    }\n    static {\n      this.ɵfac = function Meta_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || Meta)(i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: Meta,\n        factory: Meta.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return Meta;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n  httpEquiv: 'http-equiv'\n};\n\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nlet Title = /*#__PURE__*/(() => {\n  class Title {\n    constructor(_doc) {\n      this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    getTitle() {\n      return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    setTitle(newTitle) {\n      this._doc.title = newTitle || '';\n    }\n    static {\n      this.ɵfac = function Title_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || Title)(i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: Title,\n        factory: Title.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return Title;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n    ng[name] = value;\n  }\n}\nclass ChangeDetectionPerfRecord {\n  constructor(msPerTick, numTicks) {\n    this.msPerTick = msPerTick;\n    this.numTicks = numTicks;\n  }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n  constructor(ref) {\n    this.appRef = ref.injector.get(ApplicationRef);\n  }\n  // tslint:disable:no-console\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n  timeChangeDetection(config) {\n    const record = config && config['record'];\n    const profileName = 'Change Detection';\n    // Profiler is not available in Android browsers without dev tools opened\n    if (record && 'profile' in console && typeof console.profile === 'function') {\n      console.profile(profileName);\n    }\n    const start = performance.now();\n    let numTicks = 0;\n    while (numTicks < 5 || performance.now() - start < 500) {\n      this.appRef.tick();\n      numTicks++;\n    }\n    const end = performance.now();\n    if (record && 'profileEnd' in console && typeof console.profileEnd === 'function') {\n      console.profileEnd(profileName);\n    }\n    const msPerTick = (end - start) / numTicks;\n    console.log(`ran ${numTicks} change detection cycles`);\n    console.log(`${msPerTick.toFixed(2)} ms per check`);\n    return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n  }\n}\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n  /**\n   * Match all nodes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n   */\n  static all() {\n    return () => true;\n  }\n  /**\n   * Match elements by the given CSS selector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n   */\n  static css(selector) {\n    return debugElement => {\n      return debugElement.nativeElement != null ? elementMatches(debugElement.nativeElement, selector) : false;\n    };\n  }\n  /**\n   * Match nodes that have the given directive present.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n   */\n  static directive(type) {\n    return debugNode => debugNode.providerTokens.indexOf(type) !== -1;\n  }\n}\nfunction elementMatches(n, selector) {\n  if (ɵgetDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) || n.msMatchesSelector && n.msMatchesSelector(selector) || n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n  return false;\n}\n\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n  'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see {@link HammerGestureConfig}\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = /*#__PURE__*/new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a HammerLoader to Angular.\n *\n * @see {@link HammerLoader}\n *\n * @publicApi\n */\nconst HAMMER_LOADER = /*#__PURE__*/new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nlet HammerGestureConfig = /*#__PURE__*/(() => {\n  class HammerGestureConfig {\n    constructor() {\n      /**\n       * A set of supported event names for gestures to be used in Angular.\n       * Angular supports all built-in recognizers, as listed in\n       * [HammerJS documentation](https://hammerjs.github.io/).\n       */\n      this.events = [];\n      /**\n       * Maps gesture event names to a set of configuration options\n       * that specify overrides to the default values for specific properties.\n       *\n       * The key is a supported event name to be configured,\n       * and the options object contains a set of properties, with override values\n       * to be applied to the named recognizer event.\n       * For example, to disable recognition of the rotate event, specify\n       *  `{\"rotate\": {\"enable\": false}}`.\n       *\n       * Properties that are not present take the HammerJS default values.\n       * For information about which properties are supported for which events,\n       * and their allowed and default values, see\n       * [HammerJS documentation](https://hammerjs.github.io/).\n       *\n       */\n      this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n      const mc = new Hammer(element, this.options);\n      mc.get('pinch').set({\n        enable: true\n      });\n      mc.get('rotate').set({\n        enable: true\n      });\n      for (const eventName in this.overrides) {\n        mc.get(eventName).set(this.overrides[eventName]);\n      }\n      return mc;\n    }\n    static {\n      this.ɵfac = function HammerGestureConfig_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || HammerGestureConfig)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: HammerGestureConfig,\n        factory: HammerGestureConfig.ɵfac\n      });\n    }\n  }\n  return HammerGestureConfig;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nlet HammerGesturesPlugin = /*#__PURE__*/(() => {\n  class HammerGesturesPlugin extends EventManagerPlugin {\n    constructor(doc, _config, console, loader) {\n      super(doc);\n      this._config = _config;\n      this.console = console;\n      this.loader = loader;\n      this._loaderPromise = null;\n    }\n    supports(eventName) {\n      if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n        return false;\n      }\n      if (!window.Hammer && !this.loader) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` + `loaded and no custom loader has been specified.`);\n        }\n        return false;\n      }\n      return true;\n    }\n    addEventListener(element, eventName, handler) {\n      const zone = this.manager.getZone();\n      eventName = eventName.toLowerCase();\n      // If Hammer is not present but a loader is specified, we defer adding the event listener\n      // until Hammer is loaded.\n      if (!window.Hammer && this.loader) {\n        this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader());\n        // This `addEventListener` method returns a function to remove the added listener.\n        // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n        // than remove anything.\n        let cancelRegistration = false;\n        let deregister = () => {\n          cancelRegistration = true;\n        };\n        zone.runOutsideAngular(() => this._loaderPromise.then(() => {\n          // If Hammer isn't actually loaded when the custom loader resolves, give up.\n          if (!window.Hammer) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n              this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n            }\n            deregister = () => {};\n            return;\n          }\n          if (!cancelRegistration) {\n            // Now that Hammer is loaded and the listener is being loaded for real,\n            // the deregistration function changes from canceling registration to\n            // removal.\n            deregister = this.addEventListener(element, eventName, handler);\n          }\n        }).catch(() => {\n          if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` + `Hammer.JS loader failed.`);\n          }\n          deregister = () => {};\n        }));\n        // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n        // can change the behavior of `deregister` once the listener is added. Using a closure in\n        // this way allows us to avoid any additional data structures to track listener removal.\n        return () => {\n          deregister();\n        };\n      }\n      return zone.runOutsideAngular(() => {\n        // Creating the manager bind events, must be done outside of angular\n        const mc = this._config.buildHammer(element);\n        const callback = function (eventObj) {\n          zone.runGuarded(function () {\n            handler(eventObj);\n          });\n        };\n        mc.on(eventName, callback);\n        return () => {\n          mc.off(eventName, callback);\n          // destroy mc to prevent memory leak\n          if (typeof mc.destroy === 'function') {\n            mc.destroy();\n          }\n        };\n      });\n    }\n    isCustomEvent(eventName) {\n      return this._config.events.indexOf(eventName) > -1;\n    }\n    static {\n      this.ɵfac = function HammerGesturesPlugin_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || HammerGesturesPlugin)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(HAMMER_GESTURE_CONFIG), i0.ɵɵinject(i0.ɵConsole), i0.ɵɵinject(HAMMER_LOADER, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: HammerGesturesPlugin,\n        factory: HammerGesturesPlugin.ɵfac\n      });\n    }\n  }\n  return HammerGesturesPlugin;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's `EventManager`.\n *\n * @publicApi\n */\nlet HammerModule = /*#__PURE__*/(() => {\n  class HammerModule {\n    static {\n      this.ɵfac = function HammerModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || HammerModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: HammerModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [{\n          provide: EVENT_MANAGER_PLUGINS,\n          useClass: HammerGesturesPlugin,\n          multi: true,\n          deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n        }, {\n          provide: HAMMER_GESTURE_CONFIG,\n          useClass: HammerGestureConfig,\n          deps: []\n        }]\n      });\n    }\n  }\n  return HammerModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nlet DomSanitizer = /*#__PURE__*/(() => {\n  class DomSanitizer {\n    static {\n      this.ɵfac = function DomSanitizer_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || DomSanitizer)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: DomSanitizer,\n        factory: function DomSanitizer_Factory(__ngFactoryType__) {\n          let __ngConditionalFactory__ = null;\n          if (__ngFactoryType__) {\n            __ngConditionalFactory__ = new (__ngFactoryType__ || DomSanitizer)();\n          } else {\n            __ngConditionalFactory__ = i0.ɵɵinject(DomSanitizerImpl);\n          }\n          return __ngConditionalFactory__;\n        },\n        providedIn: 'root'\n      });\n    }\n  }\n  return DomSanitizer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DomSanitizerImpl = /*#__PURE__*/(() => {\n  class DomSanitizerImpl extends DomSanitizer {\n    constructor(_doc) {\n      super();\n      this._doc = _doc;\n    }\n    sanitize(ctx, value) {\n      if (value == null) return null;\n      switch (ctx) {\n        case SecurityContext.NONE:\n          return value;\n        case SecurityContext.HTML:\n          if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* BypassType.Html */)) {\n            return ɵunwrapSafeValue(value);\n          }\n          return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n        case SecurityContext.STYLE:\n          if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* BypassType.Style */)) {\n            return ɵunwrapSafeValue(value);\n          }\n          return value;\n        case SecurityContext.SCRIPT:\n          if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* BypassType.Script */)) {\n            return ɵunwrapSafeValue(value);\n          }\n          throw new ɵRuntimeError(5200 /* RuntimeErrorCode.SANITIZATION_UNSAFE_SCRIPT */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'unsafe value used in a script context');\n        case SecurityContext.URL:\n          if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* BypassType.Url */)) {\n            return ɵunwrapSafeValue(value);\n          }\n          return ɵ_sanitizeUrl(String(value));\n        case SecurityContext.RESOURCE_URL:\n          if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* BypassType.ResourceUrl */)) {\n            return ɵunwrapSafeValue(value);\n          }\n          throw new ɵRuntimeError(5201 /* RuntimeErrorCode.SANITIZATION_UNSAFE_RESOURCE_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) && `unsafe value used in a resource URL context (see ${ɵXSS_SECURITY_URL})`);\n        default:\n          throw new ɵRuntimeError(5202 /* RuntimeErrorCode.SANITIZATION_UNEXPECTED_CTX */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Unexpected SecurityContext ${ctx} (see ${ɵXSS_SECURITY_URL})`);\n      }\n    }\n    bypassSecurityTrustHtml(value) {\n      return ɵbypassSanitizationTrustHtml(value);\n    }\n    bypassSecurityTrustStyle(value) {\n      return ɵbypassSanitizationTrustStyle(value);\n    }\n    bypassSecurityTrustScript(value) {\n      return ɵbypassSanitizationTrustScript(value);\n    }\n    bypassSecurityTrustUrl(value) {\n      return ɵbypassSanitizationTrustUrl(value);\n    }\n    bypassSecurityTrustResourceUrl(value) {\n      return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n    static {\n      this.ɵfac = function DomSanitizerImpl_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || DomSanitizerImpl)(i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: DomSanitizerImpl,\n        factory: DomSanitizerImpl.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return DomSanitizerImpl;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * The list of features as an enum to uniquely type each `HydrationFeature`.\n * @see {@link HydrationFeature}\n *\n * @publicApi\n */\nvar HydrationFeatureKind = /*#__PURE__*/function (HydrationFeatureKind) {\n  HydrationFeatureKind[HydrationFeatureKind[\"NoHttpTransferCache\"] = 0] = \"NoHttpTransferCache\";\n  HydrationFeatureKind[HydrationFeatureKind[\"HttpTransferCacheOptions\"] = 1] = \"HttpTransferCacheOptions\";\n  HydrationFeatureKind[HydrationFeatureKind[\"I18nSupport\"] = 2] = \"I18nSupport\";\n  HydrationFeatureKind[HydrationFeatureKind[\"EventReplay\"] = 3] = \"EventReplay\";\n  return HydrationFeatureKind;\n}(HydrationFeatureKind || {});\n/**\n * Helper function to create an object that represents a Hydration feature.\n */\nfunction hydrationFeature(ɵkind, ɵproviders = [], ɵoptions = {}) {\n  return {\n    ɵkind,\n    ɵproviders\n  };\n}\n/**\n * Disables HTTP transfer cache. Effectively causes HTTP requests to be performed twice: once on the\n * server and other one on the browser.\n *\n * @publicApi\n */\nfunction withNoHttpTransferCache() {\n  // This feature has no providers and acts as a flag that turns off\n  // HTTP transfer cache (which otherwise is turned on by default).\n  return hydrationFeature(HydrationFeatureKind.NoHttpTransferCache);\n}\n/**\n * The function accepts a an object, which allows to configure cache parameters,\n * such as which headers should be included (no headers are included by default),\n * wether POST requests should be cached or a callback function to determine if a\n * particular request should be cached.\n *\n * @publicApi\n */\nfunction withHttpTransferCacheOptions(options) {\n  // This feature has no providers and acts as a flag to pass options to the HTTP transfer cache.\n  return hydrationFeature(HydrationFeatureKind.HttpTransferCacheOptions, ɵwithHttpTransferCache(options));\n}\n/**\n * Enables support for hydrating i18n blocks.\n *\n * @developerPreview\n * @publicApi\n */\nfunction withI18nSupport() {\n  return hydrationFeature(HydrationFeatureKind.I18nSupport, ɵwithI18nSupport());\n}\n/**\n * Enables support for replaying user events (e.g. `click`s) that happened on a page\n * before hydration logic has completed. Once an application is hydrated, all captured\n * events are replayed and relevant event listeners are executed.\n *\n * @usageNotes\n *\n * Basic example of how you can enable event replay in your application when\n * `bootstrapApplication` function is used:\n * ```\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration(withEventReplay())]\n * });\n * ```\n * @developerPreview\n * @publicApi\n * @see {@link provideClientHydration}\n */\nfunction withEventReplay() {\n  return hydrationFeature(HydrationFeatureKind.EventReplay, ɵwithEventReplay());\n}\n/**\n * Returns an `ENVIRONMENT_INITIALIZER` token setup with a function\n * that verifies whether compatible ZoneJS was used in an application\n * and logs a warning in a console if it's not the case.\n */\nfunction provideZoneJsCompatibilityDetector() {\n  return [{\n    provide: ENVIRONMENT_INITIALIZER,\n    useValue: () => {\n      const ngZone = inject(NgZone);\n      // Checking `ngZone instanceof NgZone` would be insufficient here,\n      // because custom implementations might use NgZone as a base class.\n      if (ngZone.constructor !== NgZone) {\n        const console = inject(ɵConsole);\n        const message = ɵformatRuntimeError(-5000 /* RuntimeErrorCode.UNSUPPORTED_ZONEJS_INSTANCE */, 'Angular detected that hydration was enabled for an application ' + 'that uses a custom or a noop Zone.js implementation. ' + 'This is not yet a fully supported configuration.');\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n      }\n    },\n    multi: true\n  }];\n}\n/**\n * Sets up providers necessary to enable hydration functionality for the application.\n *\n * By default, the function enables the recommended set of features for the optimal\n * performance for most of the applications. It includes the following features:\n *\n * * Reconciling DOM hydration. Learn more about it [here](guide/hydration).\n * * [`HttpClient`](api/common/http/HttpClient) response caching while running on the server and\n * transferring this cache to the client to avoid extra HTTP requests. Learn more about data caching\n * [here](guide/ssr#caching-data-when-using-httpclient).\n *\n * These functions allow you to disable some of the default features or enable new ones:\n *\n * * {@link withNoHttpTransferCache} to disable HTTP transfer cache\n * * {@link withHttpTransferCacheOptions} to configure some HTTP transfer cache options\n * * {@link withI18nSupport} to enable hydration support for i18n blocks\n * * {@link withEventReplay} to enable support for replaying user events\n *\n * @usageNotes\n *\n * Basic example of how you can enable hydration in your application when\n * `bootstrapApplication` function is used:\n * ```\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration()]\n * });\n * ```\n *\n * Alternatively if you are using NgModules, you would add `provideClientHydration`\n * to your root app module's provider list.\n * ```\n * @NgModule({\n *   declarations: [RootCmp],\n *   bootstrap: [RootCmp],\n *   providers: [provideClientHydration()],\n * })\n * export class AppModule {}\n * ```\n *\n * @see {@link withNoHttpTransferCache}\n * @see {@link withHttpTransferCacheOptions}\n * @see {@link withI18nSupport}\n * @see {@link withEventReplay}\n *\n * @param features Optional features to configure additional router behaviors.\n * @returns A set of providers to enable hydration.\n *\n * @publicApi\n */\nfunction provideClientHydration(...features) {\n  const providers = [];\n  const featuresKind = new Set();\n  const hasHttpTransferCacheOptions = featuresKind.has(HydrationFeatureKind.HttpTransferCacheOptions);\n  for (const {\n    ɵproviders,\n    ɵkind\n  } of features) {\n    featuresKind.add(ɵkind);\n    if (ɵproviders.length) {\n      providers.push(ɵproviders);\n    }\n  }\n  if (typeof ngDevMode !== 'undefined' && ngDevMode && featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) && hasHttpTransferCacheOptions) {\n    // TODO: Make this a runtime error\n    throw new Error('Configuration error: found both withHttpTransferCacheOptions() and withNoHttpTransferCache() in the same call to provideClientHydration(), which is a contradiction.');\n  }\n  return makeEnvironmentProviders([typeof ngDevMode !== 'undefined' && ngDevMode ? provideZoneJsCompatibilityDetector() : [], ɵwithDomHydration(), featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) || hasHttpTransferCacheOptions ? [] : ɵwithHttpTransferCache({}), providers]);\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser package.\n */\n/**\n * @publicApi\n */\nconst VERSION = /*#__PURE__*/new Version('18.2.5');\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, EventManagerPlugin, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, HydrationFeatureKind, Meta, REMOVE_STYLES_ON_COMPONENT_DESTROY, Title, VERSION, bootstrapApplication, createApplication, disableDebugTools, enableDebugTools, platformBrowser, provideClientHydration, provideProtractorTestingSupport, withEventReplay, withHttpTransferCacheOptions, withI18nSupport, withNoHttpTransferCache, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, SharedStylesHost as ɵSharedStylesHost, initDomAdapter as ɵinitDomAdapter };\n","/**\n * @license Angular v18.2.5\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { ɵisPromise, ɵRuntimeError, Injectable, createEnvironmentInjector, ɵisNgModule, isStandalone, EventEmitter, inject, ViewContainerRef, ChangeDetectorRef, Directive, Input, Output, InjectionToken, reflectComponentType, ɵisInjectable, runInInjectionContext, Component, Compiler, NgModuleFactory, NgZone, afterNextRender, EnvironmentInjector, ɵConsole, ɵPendingTasks, ɵɵsanitizeUrlOrResourceUrl, booleanAttribute, Attribute, HostBinding, HostListener, Optional, ContentChildren, makeEnvironmentProviders, APP_BOOTSTRAP_LISTENER, ENVIRONMENT_INITIALIZER, Injector, ApplicationRef, InjectFlags, APP_INITIALIZER, SkipSelf, NgModule, Inject, Version } from '@angular/core';\nimport { isObservable, from, of, BehaviorSubject, combineLatest, EmptyError, concat, defer, pipe, throwError, EMPTY, ConnectableObservable, Subject, Subscription } from 'rxjs';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, Location, ViewportScroller, LOCATION_INITIALIZED, LocationStrategy, HashLocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { map, switchMap, take, startWith, filter, mergeMap, first, concatMap, tap, catchError, scan, defaultIfEmpty, last as last$1, takeLast, mapTo, finalize, refCount, takeUntil, mergeAll } from 'rxjs/operators';\nimport * as i1 from '@angular/platform-browser';\n\n/**\n * The primary routing outlet.\n *\n * @publicApi\n */\nconst PRIMARY_OUTLET = 'primary';\n/**\n * A private symbol used to store the value of `Route.title` inside the `Route.data` if it is a\n * static string or `Route.resolve` if anything else. This allows us to reuse the existing route\n * data/resolvers to support the title feature without new instrumentation in the `Router` pipeline.\n */\nconst RouteTitleKey = /* @__PURE__ */Symbol('RouteTitle');\nclass ParamsAsMap {\n  constructor(params) {\n    this.params = params || {};\n  }\n  has(name) {\n    return Object.prototype.hasOwnProperty.call(this.params, name);\n  }\n  get(name) {\n    if (this.has(name)) {\n      const v = this.params[name];\n      return Array.isArray(v) ? v[0] : v;\n    }\n    return null;\n  }\n  getAll(name) {\n    if (this.has(name)) {\n      const v = this.params[name];\n      return Array.isArray(v) ? v : [v];\n    }\n    return [];\n  }\n  get keys() {\n    return Object.keys(this.params);\n  }\n}\n/**\n * Converts a `Params` instance to a `ParamMap`.\n * @param params The instance to convert.\n * @returns The new map instance.\n *\n * @publicApi\n */\nfunction convertToParamMap(params) {\n  return new ParamsAsMap(params);\n}\n/**\n * Matches the route configuration (`route`) against the actual URL (`segments`).\n *\n * When no matcher is defined on a `Route`, this is the matcher used by the Router by default.\n *\n * @param segments The remaining unmatched segments in the current navigation\n * @param segmentGroup The current segment group being matched\n * @param route The `Route` to match against.\n *\n * @see {@link UrlMatchResult}\n * @see {@link Route}\n *\n * @returns The resulting match information or `null` if the `route` should not match.\n * @publicApi\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n  const parts = route.path.split('/');\n  if (parts.length > segments.length) {\n    // The actual URL is shorter than the config, no match\n    return null;\n  }\n  if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || parts.length < segments.length)) {\n    // The config is longer than the actual URL but we are looking for a full match, return null\n    return null;\n  }\n  const posParams = {};\n  // Check each config part against the actual URL\n  for (let index = 0; index < parts.length; index++) {\n    const part = parts[index];\n    const segment = segments[index];\n    const isParameter = part[0] === ':';\n    if (isParameter) {\n      posParams[part.substring(1)] = segment;\n    } else if (part !== segment.path) {\n      // The actual URL part does not match the config, no match\n      return null;\n    }\n  }\n  return {\n    consumed: segments.slice(0, parts.length),\n    posParams\n  };\n}\nfunction shallowEqualArrays(a, b) {\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; ++i) {\n    if (!shallowEqual(a[i], b[i])) return false;\n  }\n  return true;\n}\nfunction shallowEqual(a, b) {\n  // While `undefined` should never be possible, it would sometimes be the case in IE 11\n  // and pre-chromium Edge. The check below accounts for this edge case.\n  const k1 = a ? getDataKeys(a) : undefined;\n  const k2 = b ? getDataKeys(b) : undefined;\n  if (!k1 || !k2 || k1.length != k2.length) {\n    return false;\n  }\n  let key;\n  for (let i = 0; i < k1.length; i++) {\n    key = k1[i];\n    if (!equalArraysOrString(a[key], b[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\n * Gets the keys of an object, including `symbol` keys.\n */\nfunction getDataKeys(obj) {\n  return [...Object.keys(obj), ...Object.getOwnPropertySymbols(obj)];\n}\n/**\n * Test equality for arrays of strings or a string.\n */\nfunction equalArraysOrString(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) return false;\n    const aSorted = [...a].sort();\n    const bSorted = [...b].sort();\n    return aSorted.every((val, index) => bSorted[index] === val);\n  } else {\n    return a === b;\n  }\n}\n/**\n * Return the last element of an array.\n */\nfunction last(a) {\n  return a.length > 0 ? a[a.length - 1] : null;\n}\nfunction wrapIntoObservable(value) {\n  if (isObservable(value)) {\n    return value;\n  }\n  if (ɵisPromise(value)) {\n    // Use `Promise.resolve()` to wrap promise-like instances.\n    // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n    // change detection.\n    return from(Promise.resolve(value));\n  }\n  return of(value);\n}\nconst pathCompareMap = {\n  'exact': equalSegmentGroups,\n  'subset': containsSegmentGroup\n};\nconst paramCompareMap = {\n  'exact': equalParams,\n  'subset': containsParams,\n  'ignored': () => true\n};\nfunction containsTree(container, containee, options) {\n  return pathCompareMap[options.paths](container.root, containee.root, options.matrixParams) && paramCompareMap[options.queryParams](container.queryParams, containee.queryParams) && !(options.fragment === 'exact' && container.fragment !== containee.fragment);\n}\nfunction equalParams(container, containee) {\n  // TODO: This does not handle array params correctly.\n  return shallowEqual(container, containee);\n}\nfunction equalSegmentGroups(container, containee, matrixParams) {\n  if (!equalPath(container.segments, containee.segments)) return false;\n  if (!matrixParamsMatch(container.segments, containee.segments, matrixParams)) {\n    return false;\n  }\n  if (container.numberOfChildren !== containee.numberOfChildren) return false;\n  for (const c in containee.children) {\n    if (!container.children[c]) return false;\n    if (!equalSegmentGroups(container.children[c], containee.children[c], matrixParams)) return false;\n  }\n  return true;\n}\nfunction containsParams(container, containee) {\n  return Object.keys(containee).length <= Object.keys(container).length && Object.keys(containee).every(key => equalArraysOrString(container[key], containee[key]));\n}\nfunction containsSegmentGroup(container, containee, matrixParams) {\n  return containsSegmentGroupHelper(container, containee, containee.segments, matrixParams);\n}\nfunction containsSegmentGroupHelper(container, containee, containeePaths, matrixParams) {\n  if (container.segments.length > containeePaths.length) {\n    const current = container.segments.slice(0, containeePaths.length);\n    if (!equalPath(current, containeePaths)) return false;\n    if (containee.hasChildren()) return false;\n    if (!matrixParamsMatch(current, containeePaths, matrixParams)) return false;\n    return true;\n  } else if (container.segments.length === containeePaths.length) {\n    if (!equalPath(container.segments, containeePaths)) return false;\n    if (!matrixParamsMatch(container.segments, containeePaths, matrixParams)) return false;\n    for (const c in containee.children) {\n      if (!container.children[c]) return false;\n      if (!containsSegmentGroup(container.children[c], containee.children[c], matrixParams)) {\n        return false;\n      }\n    }\n    return true;\n  } else {\n    const current = containeePaths.slice(0, container.segments.length);\n    const next = containeePaths.slice(container.segments.length);\n    if (!equalPath(container.segments, current)) return false;\n    if (!matrixParamsMatch(container.segments, current, matrixParams)) return false;\n    if (!container.children[PRIMARY_OUTLET]) return false;\n    return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next, matrixParams);\n  }\n}\nfunction matrixParamsMatch(containerPaths, containeePaths, options) {\n  return containeePaths.every((containeeSegment, i) => {\n    return paramCompareMap[options](containerPaths[i].parameters, containeeSegment.parameters);\n  });\n}\n/**\n * @description\n *\n * Represents the parsed URL.\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass UrlTree {\n  constructor( /** The root segment group of the URL tree */\n  root = new UrlSegmentGroup([], {}), /** The query params of the URL */\n  queryParams = {}, /** The fragment of the URL */\n  fragment = null) {\n    this.root = root;\n    this.queryParams = queryParams;\n    this.fragment = fragment;\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (root.segments.length > 0) {\n        throw new ɵRuntimeError(4015 /* RuntimeErrorCode.INVALID_ROOT_URL_SEGMENT */, 'The root `UrlSegmentGroup` should not contain `segments`. ' + 'Instead, these segments belong in the `children` so they can be associated with a named outlet.');\n      }\n    }\n  }\n  get queryParamMap() {\n    this._queryParamMap ??= convertToParamMap(this.queryParams);\n    return this._queryParamMap;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return DEFAULT_SERIALIZER.serialize(this);\n  }\n}\n/**\n * @description\n *\n * Represents the parsed URL segment group.\n *\n * See `UrlTree` for more information.\n *\n * @publicApi\n */\nclass UrlSegmentGroup {\n  constructor( /** The URL segments of this group. See `UrlSegment` for more information */\n  segments, /** The list of children of this group */\n  children) {\n    this.segments = segments;\n    this.children = children;\n    /** The parent node in the url tree */\n    this.parent = null;\n    Object.values(children).forEach(v => v.parent = this);\n  }\n  /** Whether the segment has child segments */\n  hasChildren() {\n    return this.numberOfChildren > 0;\n  }\n  /** Number of child segments */\n  get numberOfChildren() {\n    return Object.keys(this.children).length;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return serializePaths(this);\n  }\n}\n/**\n * @description\n *\n * Represents a single URL segment.\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass UrlSegment {\n  constructor( /** The path part of a URL segment */\n  path, /** The matrix parameters associated with a segment */\n  parameters) {\n    this.path = path;\n    this.parameters = parameters;\n  }\n  get parameterMap() {\n    this._parameterMap ??= convertToParamMap(this.parameters);\n    return this._parameterMap;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return serializePath(this);\n  }\n}\nfunction equalSegments(as, bs) {\n  return equalPath(as, bs) && as.every((a, i) => shallowEqual(a.parameters, bs[i].parameters));\n}\nfunction equalPath(as, bs) {\n  if (as.length !== bs.length) return false;\n  return as.every((a, i) => a.path === bs[i].path);\n}\nfunction mapChildrenIntoArray(segment, fn) {\n  let res = [];\n  Object.entries(segment.children).forEach(([childOutlet, child]) => {\n    if (childOutlet === PRIMARY_OUTLET) {\n      res = res.concat(fn(child, childOutlet));\n    }\n  });\n  Object.entries(segment.children).forEach(([childOutlet, child]) => {\n    if (childOutlet !== PRIMARY_OUTLET) {\n      res = res.concat(fn(child, childOutlet));\n    }\n  });\n  return res;\n}\n/**\n * @description\n *\n * Serializes and deserializes a URL string into a URL tree.\n *\n * The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See `DefaultUrlSerializer` for an example of a URL serializer.\n *\n * @publicApi\n */\nlet UrlSerializer = /*#__PURE__*/(() => {\n  class UrlSerializer {\n    static {\n      this.ɵfac = function UrlSerializer_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || UrlSerializer)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: UrlSerializer,\n        factory: () => (() => new DefaultUrlSerializer())(),\n        providedIn: 'root'\n      });\n    }\n  }\n  return UrlSerializer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n *\n * A default implementation of the `UrlSerializer`.\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * @publicApi\n */\nclass DefaultUrlSerializer {\n  /** Parses a url into a `UrlTree` */\n  parse(url) {\n    const p = new UrlParser(url);\n    return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n  }\n  /** Converts a `UrlTree` into a url */\n  serialize(tree) {\n    const segment = `/${serializeSegment(tree.root, true)}`;\n    const query = serializeQueryParams(tree.queryParams);\n    const fragment = typeof tree.fragment === `string` ? `#${encodeUriFragment(tree.fragment)}` : '';\n    return `${segment}${query}${fragment}`;\n  }\n}\nconst DEFAULT_SERIALIZER = /*#__PURE__*/new DefaultUrlSerializer();\nfunction serializePaths(segment) {\n  return segment.segments.map(p => serializePath(p)).join('/');\n}\nfunction serializeSegment(segment, root) {\n  if (!segment.hasChildren()) {\n    return serializePaths(segment);\n  }\n  if (root) {\n    const primary = segment.children[PRIMARY_OUTLET] ? serializeSegment(segment.children[PRIMARY_OUTLET], false) : '';\n    const children = [];\n    Object.entries(segment.children).forEach(([k, v]) => {\n      if (k !== PRIMARY_OUTLET) {\n        children.push(`${k}:${serializeSegment(v, false)}`);\n      }\n    });\n    return children.length > 0 ? `${primary}(${children.join('//')})` : primary;\n  } else {\n    const children = mapChildrenIntoArray(segment, (v, k) => {\n      if (k === PRIMARY_OUTLET) {\n        return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n      }\n      return [`${k}:${serializeSegment(v, false)}`];\n    });\n    // use no parenthesis if the only child is a primary outlet route\n    if (Object.keys(segment.children).length === 1 && segment.children[PRIMARY_OUTLET] != null) {\n      return `${serializePaths(segment)}/${children[0]}`;\n    }\n    return `${serializePaths(segment)}/(${children.join('//')})`;\n  }\n}\n/**\n * Encodes a URI string with the default encoding. This function will only ever be called from\n * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n * have to be encoded per https://url.spec.whatwg.org.\n */\nfunction encodeUriString(s) {\n  return encodeURIComponent(s).replace(/%40/g, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',');\n}\n/**\n * This function should be used to encode both keys and values in a query string key/value. In\n * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriQuery(s) {\n  return encodeUriString(s).replace(/%3B/gi, ';');\n}\n/**\n * This function should be used to encode a URL fragment. In the following URL, you need to call\n * encodeUriFragment on \"f\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriFragment(s) {\n  return encodeURI(s);\n}\n/**\n * This function should be run on any URI segment as well as the key and value in a key/value\n * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n * \"mk\", and \"mv\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriSegment(s) {\n  return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\nfunction decode(s) {\n  return decodeURIComponent(s);\n}\n// Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n// decodeURIComponent function will not decode \"+\" as a space.\nfunction decodeQuery(s) {\n  return decode(s.replace(/\\+/g, '%20'));\n}\nfunction serializePath(path) {\n  return `${encodeUriSegment(path.path)}${serializeMatrixParams(path.parameters)}`;\n}\nfunction serializeMatrixParams(params) {\n  return Object.entries(params).map(([key, value]) => `;${encodeUriSegment(key)}=${encodeUriSegment(value)}`).join('');\n}\nfunction serializeQueryParams(params) {\n  const strParams = Object.entries(params).map(([name, value]) => {\n    return Array.isArray(value) ? value.map(v => `${encodeUriQuery(name)}=${encodeUriQuery(v)}`).join('&') : `${encodeUriQuery(name)}=${encodeUriQuery(value)}`;\n  }).filter(s => s);\n  return strParams.length ? `?${strParams.join('&')}` : '';\n}\nconst SEGMENT_RE = /^[^\\/()?;#]+/;\nfunction matchSegments(str) {\n  const match = str.match(SEGMENT_RE);\n  return match ? match[0] : '';\n}\nconst MATRIX_PARAM_SEGMENT_RE = /^[^\\/()?;=#]+/;\nfunction matchMatrixKeySegments(str) {\n  const match = str.match(MATRIX_PARAM_SEGMENT_RE);\n  return match ? match[0] : '';\n}\nconst QUERY_PARAM_RE = /^[^=?&#]+/;\n// Return the name of the query param at the start of the string or an empty string\nfunction matchQueryParams(str) {\n  const match = str.match(QUERY_PARAM_RE);\n  return match ? match[0] : '';\n}\nconst QUERY_PARAM_VALUE_RE = /^[^&#]+/;\n// Return the value of the query param at the start of the string or an empty string\nfunction matchUrlQueryParamValue(str) {\n  const match = str.match(QUERY_PARAM_VALUE_RE);\n  return match ? match[0] : '';\n}\nclass UrlParser {\n  constructor(url) {\n    this.url = url;\n    this.remaining = url;\n  }\n  parseRootSegment() {\n    this.consumeOptional('/');\n    if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n      return new UrlSegmentGroup([], {});\n    }\n    // The root segment group never has segments\n    return new UrlSegmentGroup([], this.parseChildren());\n  }\n  parseQueryParams() {\n    const params = {};\n    if (this.consumeOptional('?')) {\n      do {\n        this.parseQueryParam(params);\n      } while (this.consumeOptional('&'));\n    }\n    return params;\n  }\n  parseFragment() {\n    return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n  }\n  parseChildren() {\n    if (this.remaining === '') {\n      return {};\n    }\n    this.consumeOptional('/');\n    const segments = [];\n    if (!this.peekStartsWith('(')) {\n      segments.push(this.parseSegment());\n    }\n    while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n      this.capture('/');\n      segments.push(this.parseSegment());\n    }\n    let children = {};\n    if (this.peekStartsWith('/(')) {\n      this.capture('/');\n      children = this.parseParens(true);\n    }\n    let res = {};\n    if (this.peekStartsWith('(')) {\n      res = this.parseParens(false);\n    }\n    if (segments.length > 0 || Object.keys(children).length > 0) {\n      res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n    }\n    return res;\n  }\n  // parse a segment with its matrix parameters\n  // ie `name;k1=v1;k2`\n  parseSegment() {\n    const path = matchSegments(this.remaining);\n    if (path === '' && this.peekStartsWith(';')) {\n      throw new ɵRuntimeError(4009 /* RuntimeErrorCode.EMPTY_PATH_WITH_PARAMS */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Empty path url segment cannot have parameters: '${this.remaining}'.`);\n    }\n    this.capture(path);\n    return new UrlSegment(decode(path), this.parseMatrixParams());\n  }\n  parseMatrixParams() {\n    const params = {};\n    while (this.consumeOptional(';')) {\n      this.parseParam(params);\n    }\n    return params;\n  }\n  parseParam(params) {\n    const key = matchMatrixKeySegments(this.remaining);\n    if (!key) {\n      return;\n    }\n    this.capture(key);\n    let value = '';\n    if (this.consumeOptional('=')) {\n      const valueMatch = matchSegments(this.remaining);\n      if (valueMatch) {\n        value = valueMatch;\n        this.capture(value);\n      }\n    }\n    params[decode(key)] = decode(value);\n  }\n  // Parse a single query parameter `name[=value]`\n  parseQueryParam(params) {\n    const key = matchQueryParams(this.remaining);\n    if (!key) {\n      return;\n    }\n    this.capture(key);\n    let value = '';\n    if (this.consumeOptional('=')) {\n      const valueMatch = matchUrlQueryParamValue(this.remaining);\n      if (valueMatch) {\n        value = valueMatch;\n        this.capture(value);\n      }\n    }\n    const decodedKey = decodeQuery(key);\n    const decodedVal = decodeQuery(value);\n    if (params.hasOwnProperty(decodedKey)) {\n      // Append to existing values\n      let currentVal = params[decodedKey];\n      if (!Array.isArray(currentVal)) {\n        currentVal = [currentVal];\n        params[decodedKey] = currentVal;\n      }\n      currentVal.push(decodedVal);\n    } else {\n      // Create a new value\n      params[decodedKey] = decodedVal;\n    }\n  }\n  // parse `(a/b//outlet_name:c/d)`\n  parseParens(allowPrimary) {\n    const segments = {};\n    this.capture('(');\n    while (!this.consumeOptional(')') && this.remaining.length > 0) {\n      const path = matchSegments(this.remaining);\n      const next = this.remaining[path.length];\n      // if is is not one of these characters, then the segment was unescaped\n      // or the group was not closed\n      if (next !== '/' && next !== ')' && next !== ';') {\n        throw new ɵRuntimeError(4010 /* RuntimeErrorCode.UNPARSABLE_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Cannot parse url '${this.url}'`);\n      }\n      let outletName = undefined;\n      if (path.indexOf(':') > -1) {\n        outletName = path.slice(0, path.indexOf(':'));\n        this.capture(outletName);\n        this.capture(':');\n      } else if (allowPrimary) {\n        outletName = PRIMARY_OUTLET;\n      }\n      const children = this.parseChildren();\n      segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] : new UrlSegmentGroup([], children);\n      this.consumeOptional('//');\n    }\n    return segments;\n  }\n  peekStartsWith(str) {\n    return this.remaining.startsWith(str);\n  }\n  // Consumes the prefix when it is present and returns whether it has been consumed\n  consumeOptional(str) {\n    if (this.peekStartsWith(str)) {\n      this.remaining = this.remaining.substring(str.length);\n      return true;\n    }\n    return false;\n  }\n  capture(str) {\n    if (!this.consumeOptional(str)) {\n      throw new ɵRuntimeError(4011 /* RuntimeErrorCode.UNEXPECTED_VALUE_IN_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Expected \"${str}\".`);\n    }\n  }\n}\nfunction createRoot(rootCandidate) {\n  return rootCandidate.segments.length > 0 ? new UrlSegmentGroup([], {\n    [PRIMARY_OUTLET]: rootCandidate\n  }) : rootCandidate;\n}\n/**\n * Recursively\n * - merges primary segment children into their parents\n * - drops empty children (those which have no segments and no children themselves). This latter\n * prevents serializing a group into something like `/a(aux:)`, where `aux` is an empty child\n * segment.\n * - merges named outlets without a primary segment sibling into the children. This prevents\n * serializing a URL like `//(a:a)(b:b) instead of `/(a:a//b:b)` when the aux b route lives on the\n * root but the `a` route lives under an empty path primary route.\n */\nfunction squashSegmentGroup(segmentGroup) {\n  const newChildren = {};\n  for (const [childOutlet, child] of Object.entries(segmentGroup.children)) {\n    const childCandidate = squashSegmentGroup(child);\n    // moves named children in an empty path primary child into this group\n    if (childOutlet === PRIMARY_OUTLET && childCandidate.segments.length === 0 && childCandidate.hasChildren()) {\n      for (const [grandChildOutlet, grandChild] of Object.entries(childCandidate.children)) {\n        newChildren[grandChildOutlet] = grandChild;\n      }\n    } // don't add empty children\n    else if (childCandidate.segments.length > 0 || childCandidate.hasChildren()) {\n      newChildren[childOutlet] = childCandidate;\n    }\n  }\n  const s = new UrlSegmentGroup(segmentGroup.segments, newChildren);\n  return mergeTrivialChildren(s);\n}\n/**\n * When possible, merges the primary outlet child into the parent `UrlSegmentGroup`.\n *\n * When a segment group has only one child which is a primary outlet, merges that child into the\n * parent. That is, the child segment group's segments are merged into the `s` and the child's\n * children become the children of `s`. Think of this like a 'squash', merging the child segment\n * group into the parent.\n */\nfunction mergeTrivialChildren(s) {\n  if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n    const c = s.children[PRIMARY_OUTLET];\n    return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n  }\n  return s;\n}\nfunction isUrlTree(v) {\n  return v instanceof UrlTree;\n}\n\n/**\n * Creates a `UrlTree` relative to an `ActivatedRouteSnapshot`.\n *\n * @publicApi\n *\n *\n * @param relativeTo The `ActivatedRouteSnapshot` to apply the commands to\n * @param commands An array of URL fragments with which to construct the new URL tree.\n * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n * segments, followed by the parameters for each segment.\n * The fragments are applied to the one provided in the `relativeTo` parameter.\n * @param queryParams The query parameters for the `UrlTree`. `null` if the `UrlTree` does not have\n *     any query parameters.\n * @param fragment The fragment for the `UrlTree`. `null` if the `UrlTree` does not have a fragment.\n *\n * @usageNotes\n *\n * ```\n * // create /team/33/user/11\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, 'user', 11]);\n *\n * // create /team/33;expand=true/user/11\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, {expand: true}, 'user', 11]);\n *\n * // you can collapse static segments like this (this works only with the first passed-in value):\n * createUrlTreeFromSnapshot(snapshot, ['/team/33/user', userId]);\n *\n * // If the first segment can contain slashes, and you do not want the router to split it,\n * // you can do the following:\n * createUrlTreeFromSnapshot(snapshot, [{segmentPath: '/one/two'}]);\n *\n * // create /team/33/(user/11//right:chat)\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, {outlets: {primary: 'user/11', right:\n * 'chat'}}], null, null);\n *\n * // remove the right secondary node\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n *\n * // For the examples below, assume the current URL is for the `/team/33/user/11` and the\n * `ActivatedRouteSnapshot` points to `user/11`:\n *\n * // navigate to /team/33/user/11/details\n * createUrlTreeFromSnapshot(snapshot, ['details']);\n *\n * // navigate to /team/33/user/22\n * createUrlTreeFromSnapshot(snapshot, ['../22']);\n *\n * // navigate to /team/44/user/22\n * createUrlTreeFromSnapshot(snapshot, ['../../team/44/user/22']);\n * ```\n */\nfunction createUrlTreeFromSnapshot(relativeTo, commands, queryParams = null, fragment = null) {\n  const relativeToUrlSegmentGroup = createSegmentGroupFromRoute(relativeTo);\n  return createUrlTreeFromSegmentGroup(relativeToUrlSegmentGroup, commands, queryParams, fragment);\n}\nfunction createSegmentGroupFromRoute(route) {\n  let targetGroup;\n  function createSegmentGroupFromRouteRecursive(currentRoute) {\n    const childOutlets = {};\n    for (const childSnapshot of currentRoute.children) {\n      const root = createSegmentGroupFromRouteRecursive(childSnapshot);\n      childOutlets[childSnapshot.outlet] = root;\n    }\n    const segmentGroup = new UrlSegmentGroup(currentRoute.url, childOutlets);\n    if (currentRoute === route) {\n      targetGroup = segmentGroup;\n    }\n    return segmentGroup;\n  }\n  const rootCandidate = createSegmentGroupFromRouteRecursive(route.root);\n  const rootSegmentGroup = createRoot(rootCandidate);\n  return targetGroup ?? rootSegmentGroup;\n}\nfunction createUrlTreeFromSegmentGroup(relativeTo, commands, queryParams, fragment) {\n  let root = relativeTo;\n  while (root.parent) {\n    root = root.parent;\n  }\n  // There are no commands so the `UrlTree` goes to the same path as the one created from the\n  // `UrlSegmentGroup`. All we need to do is update the `queryParams` and `fragment` without\n  // applying any other logic.\n  if (commands.length === 0) {\n    return tree(root, root, root, queryParams, fragment);\n  }\n  const nav = computeNavigation(commands);\n  if (nav.toRoot()) {\n    return tree(root, root, new UrlSegmentGroup([], {}), queryParams, fragment);\n  }\n  const position = findStartingPositionForTargetGroup(nav, root, relativeTo);\n  const newSegmentGroup = position.processChildren ? updateSegmentGroupChildren(position.segmentGroup, position.index, nav.commands) : updateSegmentGroup(position.segmentGroup, position.index, nav.commands);\n  return tree(root, position.segmentGroup, newSegmentGroup, queryParams, fragment);\n}\nfunction isMatrixParams(command) {\n  return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * Determines if a given command has an `outlets` map. When we encounter a command\n * with an outlets k/v map, we need to apply each outlet individually to the existing segment.\n */\nfunction isCommandWithOutlets(command) {\n  return typeof command === 'object' && command != null && command.outlets;\n}\nfunction tree(oldRoot, oldSegmentGroup, newSegmentGroup, queryParams, fragment) {\n  let qp = {};\n  if (queryParams) {\n    Object.entries(queryParams).forEach(([name, value]) => {\n      qp[name] = Array.isArray(value) ? value.map(v => `${v}`) : `${value}`;\n    });\n  }\n  let rootCandidate;\n  if (oldRoot === oldSegmentGroup) {\n    rootCandidate = newSegmentGroup;\n  } else {\n    rootCandidate = replaceSegment(oldRoot, oldSegmentGroup, newSegmentGroup);\n  }\n  const newRoot = createRoot(squashSegmentGroup(rootCandidate));\n  return new UrlTree(newRoot, qp, fragment);\n}\n/**\n * Replaces the `oldSegment` which is located in some child of the `current` with the `newSegment`.\n * This also has the effect of creating new `UrlSegmentGroup` copies to update references. This\n * shouldn't be necessary but the fallback logic for an invalid ActivatedRoute in the creation uses\n * the Router's current url tree. If we don't create new segment groups, we end up modifying that\n * value.\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n  const children = {};\n  Object.entries(current.children).forEach(([outletName, c]) => {\n    if (c === oldSegment) {\n      children[outletName] = newSegment;\n    } else {\n      children[outletName] = replaceSegment(c, oldSegment, newSegment);\n    }\n  });\n  return new UrlSegmentGroup(current.segments, children);\n}\nclass Navigation {\n  constructor(isAbsolute, numberOfDoubleDots, commands) {\n    this.isAbsolute = isAbsolute;\n    this.numberOfDoubleDots = numberOfDoubleDots;\n    this.commands = commands;\n    if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n      throw new ɵRuntimeError(4003 /* RuntimeErrorCode.ROOT_SEGMENT_MATRIX_PARAMS */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Root segment cannot have matrix parameters');\n    }\n    const cmdWithOutlet = commands.find(isCommandWithOutlets);\n    if (cmdWithOutlet && cmdWithOutlet !== last(commands)) {\n      throw new ɵRuntimeError(4004 /* RuntimeErrorCode.MISPLACED_OUTLETS_COMMAND */, (typeof ngDevMode === 'undefined' || ngDevMode) && '{outlets:{}} has to be the last command');\n    }\n  }\n  toRoot() {\n    return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n  }\n}\n/** Transforms commands to a normalized `Navigation` */\nfunction computeNavigation(commands) {\n  if (typeof commands[0] === 'string' && commands.length === 1 && commands[0] === '/') {\n    return new Navigation(true, 0, commands);\n  }\n  let numberOfDoubleDots = 0;\n  let isAbsolute = false;\n  const res = commands.reduce((res, cmd, cmdIdx) => {\n    if (typeof cmd === 'object' && cmd != null) {\n      if (cmd.outlets) {\n        const outlets = {};\n        Object.entries(cmd.outlets).forEach(([name, commands]) => {\n          outlets[name] = typeof commands === 'string' ? commands.split('/') : commands;\n        });\n        return [...res, {\n          outlets\n        }];\n      }\n      if (cmd.segmentPath) {\n        return [...res, cmd.segmentPath];\n      }\n    }\n    if (!(typeof cmd === 'string')) {\n      return [...res, cmd];\n    }\n    if (cmdIdx === 0) {\n      cmd.split('/').forEach((urlPart, partIndex) => {\n        if (partIndex == 0 && urlPart === '.') {\n          // skip './a'\n        } else if (partIndex == 0 && urlPart === '') {\n          //  '/a'\n          isAbsolute = true;\n        } else if (urlPart === '..') {\n          //  '../a'\n          numberOfDoubleDots++;\n        } else if (urlPart != '') {\n          res.push(urlPart);\n        }\n      });\n      return res;\n    }\n    return [...res, cmd];\n  }, []);\n  return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nclass Position {\n  constructor(segmentGroup, processChildren, index) {\n    this.segmentGroup = segmentGroup;\n    this.processChildren = processChildren;\n    this.index = index;\n  }\n}\nfunction findStartingPositionForTargetGroup(nav, root, target) {\n  if (nav.isAbsolute) {\n    return new Position(root, true, 0);\n  }\n  if (!target) {\n    // `NaN` is used only to maintain backwards compatibility with incorrectly mocked\n    // `ActivatedRouteSnapshot` in tests. In prior versions of this code, the position here was\n    // determined based on an internal property that was rarely mocked, resulting in `NaN`. In\n    // reality, this code path should _never_ be touched since `target` is not allowed to be falsey.\n    return new Position(root, false, NaN);\n  }\n  if (target.parent === null) {\n    return new Position(target, true, 0);\n  }\n  const modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n  const index = target.segments.length - 1 + modifier;\n  return createPositionApplyingDoubleDots(target, index, nav.numberOfDoubleDots);\n}\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n  let g = group;\n  let ci = index;\n  let dd = numberOfDoubleDots;\n  while (dd > ci) {\n    dd -= ci;\n    g = g.parent;\n    if (!g) {\n      throw new ɵRuntimeError(4005 /* RuntimeErrorCode.INVALID_DOUBLE_DOTS */, (typeof ngDevMode === 'undefined' || ngDevMode) && \"Invalid number of '../'\");\n    }\n    ci = g.segments.length;\n  }\n  return new Position(g, false, ci - dd);\n}\nfunction getOutlets(commands) {\n  if (isCommandWithOutlets(commands[0])) {\n    return commands[0].outlets;\n  }\n  return {\n    [PRIMARY_OUTLET]: commands\n  };\n}\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n  segmentGroup ??= new UrlSegmentGroup([], {});\n  if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n    return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n  }\n  const m = prefixedWith(segmentGroup, startIndex, commands);\n  const slicedCommands = commands.slice(m.commandIndex);\n  if (m.match && m.pathIndex < segmentGroup.segments.length) {\n    const g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n    g.children[PRIMARY_OUTLET] = new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n    return updateSegmentGroupChildren(g, 0, slicedCommands);\n  } else if (m.match && slicedCommands.length === 0) {\n    return new UrlSegmentGroup(segmentGroup.segments, {});\n  } else if (m.match && !segmentGroup.hasChildren()) {\n    return createNewSegmentGroup(segmentGroup, startIndex, commands);\n  } else if (m.match) {\n    return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n  } else {\n    return createNewSegmentGroup(segmentGroup, startIndex, commands);\n  }\n}\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n  if (commands.length === 0) {\n    return new UrlSegmentGroup(segmentGroup.segments, {});\n  } else {\n    const outlets = getOutlets(commands);\n    const children = {};\n    // If the set of commands applies to anything other than the primary outlet and the child\n    // segment is an empty path primary segment on its own, we want to apply the commands to the\n    // empty child path rather than here. The outcome is that the empty primary child is effectively\n    // removed from the final output UrlTree. Imagine the following config:\n    //\n    // {path: '', children: [{path: '**', outlet: 'popup'}]}.\n    //\n    // Navigation to /(popup:a) will activate the child outlet correctly Given a follow-up\n    // navigation with commands\n    // ['/', {outlets: {'popup': 'b'}}], we _would not_ want to apply the outlet commands to the\n    // root segment because that would result in\n    // //(popup:a)(popup:b) since the outlet command got applied one level above where it appears in\n    // the `ActivatedRoute` rather than updating the existing one.\n    //\n    // Because empty paths do not appear in the URL segments and the fact that the segments used in\n    // the output `UrlTree` are squashed to eliminate these empty paths where possible\n    // https://github.com/angular/angular/blob/13f10de40e25c6900ca55bd83b36bd533dacfa9e/packages/router/src/url_tree.ts#L755\n    // it can be hard to determine what is the right thing to do when applying commands to a\n    // `UrlSegmentGroup` that is created from an \"unsquashed\"/expanded `ActivatedRoute` tree.\n    // This code effectively \"squashes\" empty path primary routes when they have no siblings on\n    // the same level of the tree.\n    if (Object.keys(outlets).some(o => o !== PRIMARY_OUTLET) && segmentGroup.children[PRIMARY_OUTLET] && segmentGroup.numberOfChildren === 1 && segmentGroup.children[PRIMARY_OUTLET].segments.length === 0) {\n      const childrenOfEmptyChild = updateSegmentGroupChildren(segmentGroup.children[PRIMARY_OUTLET], startIndex, commands);\n      return new UrlSegmentGroup(segmentGroup.segments, childrenOfEmptyChild.children);\n    }\n    Object.entries(outlets).forEach(([outlet, commands]) => {\n      if (typeof commands === 'string') {\n        commands = [commands];\n      }\n      if (commands !== null) {\n        children[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n      }\n    });\n    Object.entries(segmentGroup.children).forEach(([childOutlet, child]) => {\n      if (outlets[childOutlet] === undefined) {\n        children[childOutlet] = child;\n      }\n    });\n    return new UrlSegmentGroup(segmentGroup.segments, children);\n  }\n}\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n  let currentCommandIndex = 0;\n  let currentPathIndex = startIndex;\n  const noMatch = {\n    match: false,\n    pathIndex: 0,\n    commandIndex: 0\n  };\n  while (currentPathIndex < segmentGroup.segments.length) {\n    if (currentCommandIndex >= commands.length) return noMatch;\n    const path = segmentGroup.segments[currentPathIndex];\n    const command = commands[currentCommandIndex];\n    // Do not try to consume command as part of the prefixing if it has outlets because it can\n    // contain outlets other than the one being processed. Consuming the outlets command would\n    // result in other outlets being ignored.\n    if (isCommandWithOutlets(command)) {\n      break;\n    }\n    const curr = `${command}`;\n    const next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n    if (currentPathIndex > 0 && curr === undefined) break;\n    if (curr && next && typeof next === 'object' && next.outlets === undefined) {\n      if (!compare(curr, next, path)) return noMatch;\n      currentCommandIndex += 2;\n    } else {\n      if (!compare(curr, {}, path)) return noMatch;\n      currentCommandIndex++;\n    }\n    currentPathIndex++;\n  }\n  return {\n    match: true,\n    pathIndex: currentPathIndex,\n    commandIndex: currentCommandIndex\n  };\n}\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n  const paths = segmentGroup.segments.slice(0, startIndex);\n  let i = 0;\n  while (i < commands.length) {\n    const command = commands[i];\n    if (isCommandWithOutlets(command)) {\n      const children = createNewSegmentChildren(command.outlets);\n      return new UrlSegmentGroup(paths, children);\n    }\n    // if we start with an object literal, we need to reuse the path part from the segment\n    if (i === 0 && isMatrixParams(commands[0])) {\n      const p = segmentGroup.segments[startIndex];\n      paths.push(new UrlSegment(p.path, stringify(commands[0])));\n      i++;\n      continue;\n    }\n    const curr = isCommandWithOutlets(command) ? command.outlets[PRIMARY_OUTLET] : `${command}`;\n    const next = i < commands.length - 1 ? commands[i + 1] : null;\n    if (curr && next && isMatrixParams(next)) {\n      paths.push(new UrlSegment(curr, stringify(next)));\n      i += 2;\n    } else {\n      paths.push(new UrlSegment(curr, {}));\n      i++;\n    }\n  }\n  return new UrlSegmentGroup(paths, {});\n}\nfunction createNewSegmentChildren(outlets) {\n  const children = {};\n  Object.entries(outlets).forEach(([outlet, commands]) => {\n    if (typeof commands === 'string') {\n      commands = [commands];\n    }\n    if (commands !== null) {\n      children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n    }\n  });\n  return children;\n}\nfunction stringify(params) {\n  const res = {};\n  Object.entries(params).forEach(([k, v]) => res[k] = `${v}`);\n  return res;\n}\nfunction compare(path, params, segment) {\n  return path == segment.path && shallowEqual(params, segment.parameters);\n}\nconst IMPERATIVE_NAVIGATION = 'imperative';\n/**\n * Identifies the type of a router event.\n *\n * @publicApi\n */\nvar EventType = /*#__PURE__*/function (EventType) {\n  EventType[EventType[\"NavigationStart\"] = 0] = \"NavigationStart\";\n  EventType[EventType[\"NavigationEnd\"] = 1] = \"NavigationEnd\";\n  EventType[EventType[\"NavigationCancel\"] = 2] = \"NavigationCancel\";\n  EventType[EventType[\"NavigationError\"] = 3] = \"NavigationError\";\n  EventType[EventType[\"RoutesRecognized\"] = 4] = \"RoutesRecognized\";\n  EventType[EventType[\"ResolveStart\"] = 5] = \"ResolveStart\";\n  EventType[EventType[\"ResolveEnd\"] = 6] = \"ResolveEnd\";\n  EventType[EventType[\"GuardsCheckStart\"] = 7] = \"GuardsCheckStart\";\n  EventType[EventType[\"GuardsCheckEnd\"] = 8] = \"GuardsCheckEnd\";\n  EventType[EventType[\"RouteConfigLoadStart\"] = 9] = \"RouteConfigLoadStart\";\n  EventType[EventType[\"RouteConfigLoadEnd\"] = 10] = \"RouteConfigLoadEnd\";\n  EventType[EventType[\"ChildActivationStart\"] = 11] = \"ChildActivationStart\";\n  EventType[EventType[\"ChildActivationEnd\"] = 12] = \"ChildActivationEnd\";\n  EventType[EventType[\"ActivationStart\"] = 13] = \"ActivationStart\";\n  EventType[EventType[\"ActivationEnd\"] = 14] = \"ActivationEnd\";\n  EventType[EventType[\"Scroll\"] = 15] = \"Scroll\";\n  EventType[EventType[\"NavigationSkipped\"] = 16] = \"NavigationSkipped\";\n  return EventType;\n}(EventType || {});\n/**\n * Base for events the router goes through, as opposed to events tied to a specific\n * route. Fired one time for any given navigation.\n *\n * The following code shows how a class subscribes to router events.\n *\n * ```ts\n * import {Event, RouterEvent, Router} from '@angular/router';\n *\n * class MyService {\n *   constructor(public router: Router) {\n *     router.events.pipe(\n *        filter((e: Event | RouterEvent): e is RouterEvent => e instanceof RouterEvent)\n *     ).subscribe((e: RouterEvent) => {\n *       // Do something\n *     });\n *   }\n * }\n * ```\n *\n * @see {@link Event}\n * @see [Router events summary](guide/routing/router-reference#router-events)\n * @publicApi\n */\nclass RouterEvent {\n  constructor( /** A unique ID that the router assigns to every router navigation. */\n  id, /** The URL that is the destination for this navigation. */\n  url) {\n    this.id = id;\n    this.url = url;\n  }\n}\n/**\n * An event triggered when a navigation starts.\n *\n * @publicApi\n */\nclass NavigationStart extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  navigationTrigger = 'imperative', /** @docsNotRequired */\n  restoredState = null) {\n    super(id, url);\n    this.type = EventType.NavigationStart;\n    this.navigationTrigger = navigationTrigger;\n    this.restoredState = restoredState;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `NavigationStart(id: ${this.id}, url: '${this.url}')`;\n  }\n}\n/**\n * An event triggered when a navigation ends successfully.\n *\n * @see {@link NavigationStart}\n * @see {@link NavigationCancel}\n * @see {@link NavigationError}\n *\n * @publicApi\n */\nclass NavigationEnd extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.type = EventType.NavigationEnd;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;\n  }\n}\n/**\n * A code for the `NavigationCancel` event of the `Router` to indicate the\n * reason a navigation failed.\n *\n * @publicApi\n */\nvar NavigationCancellationCode = /*#__PURE__*/function (NavigationCancellationCode) {\n  /**\n   * A navigation failed because a guard returned a `UrlTree` to redirect.\n   */\n  NavigationCancellationCode[NavigationCancellationCode[\"Redirect\"] = 0] = \"Redirect\";\n  /**\n   * A navigation failed because a more recent navigation started.\n   */\n  NavigationCancellationCode[NavigationCancellationCode[\"SupersededByNewNavigation\"] = 1] = \"SupersededByNewNavigation\";\n  /**\n   * A navigation failed because one of the resolvers completed without emitting a value.\n   */\n  NavigationCancellationCode[NavigationCancellationCode[\"NoDataFromResolver\"] = 2] = \"NoDataFromResolver\";\n  /**\n   * A navigation failed because a guard returned `false`.\n   */\n  NavigationCancellationCode[NavigationCancellationCode[\"GuardRejected\"] = 3] = \"GuardRejected\";\n  return NavigationCancellationCode;\n}(NavigationCancellationCode || {});\n/**\n * A code for the `NavigationSkipped` event of the `Router` to indicate the\n * reason a navigation was skipped.\n *\n * @publicApi\n */\nvar NavigationSkippedCode = /*#__PURE__*/function (NavigationSkippedCode) {\n  /**\n   * A navigation was skipped because the navigation URL was the same as the current Router URL.\n   */\n  NavigationSkippedCode[NavigationSkippedCode[\"IgnoredSameUrlNavigation\"] = 0] = \"IgnoredSameUrlNavigation\";\n  /**\n   * A navigation was skipped because the configured `UrlHandlingStrategy` return `false` for both\n   * the current Router URL and the target of the navigation.\n   *\n   * @see {@link UrlHandlingStrategy}\n   */\n  NavigationSkippedCode[NavigationSkippedCode[\"IgnoredByUrlHandlingStrategy\"] = 1] = \"IgnoredByUrlHandlingStrategy\";\n  return NavigationSkippedCode;\n}(NavigationSkippedCode || {});\n/**\n * An event triggered when a navigation is canceled, directly or indirectly.\n * This can happen for several reasons including when a route guard\n * returns `false` or initiates a redirect by returning a `UrlTree`.\n *\n * @see {@link NavigationStart}\n * @see {@link NavigationEnd}\n * @see {@link NavigationError}\n *\n * @publicApi\n */\nclass NavigationCancel extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url,\n  /**\n   * A description of why the navigation was cancelled. For debug purposes only. Use `code`\n   * instead for a stable cancellation reason that can be used in production.\n   */\n  reason,\n  /**\n   * A code to indicate why the navigation was canceled. This cancellation code is stable for\n   * the reason and can be relied on whereas the `reason` string could change and should not be\n   * used in production.\n   */\n  code) {\n    super(id, url);\n    this.reason = reason;\n    this.code = code;\n    this.type = EventType.NavigationCancel;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;\n  }\n}\n/**\n * An event triggered when a navigation is skipped.\n * This can happen for a couple reasons including onSameUrlHandling\n * is set to `ignore` and the navigation URL is not different than the\n * current state.\n *\n * @publicApi\n */\nclass NavigationSkipped extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url,\n  /**\n   * A description of why the navigation was skipped. For debug purposes only. Use `code`\n   * instead for a stable skipped reason that can be used in production.\n   */\n  reason,\n  /**\n   * A code to indicate why the navigation was skipped. This code is stable for\n   * the reason and can be relied on whereas the `reason` string could change and should not be\n   * used in production.\n   */\n  code) {\n    super(id, url);\n    this.reason = reason;\n    this.code = code;\n    this.type = EventType.NavigationSkipped;\n  }\n}\n/**\n * An event triggered when a navigation fails due to an unexpected error.\n *\n * @see {@link NavigationStart}\n * @see {@link NavigationEnd}\n * @see {@link NavigationCancel}\n *\n * @publicApi\n */\nclass NavigationError extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  error,\n  /**\n   * The target of the navigation when the error occurred.\n   *\n   * Note that this can be `undefined` because an error could have occurred before the\n   * `RouterStateSnapshot` was created for the navigation.\n   */\n  target) {\n    super(id, url);\n    this.error = error;\n    this.target = target;\n    this.type = EventType.NavigationError;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;\n  }\n}\n/**\n * An event triggered when routes are recognized.\n *\n * @publicApi\n */\nclass RoutesRecognized extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n    this.type = EventType.RoutesRecognized;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n/**\n * An event triggered at the start of the Guard phase of routing.\n *\n * @see {@link GuardsCheckEnd}\n *\n * @publicApi\n */\nclass GuardsCheckStart extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n    this.type = EventType.GuardsCheckStart;\n  }\n  toString() {\n    return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n/**\n * An event triggered at the end of the Guard phase of routing.\n *\n * @see {@link GuardsCheckStart}\n *\n * @publicApi\n */\nclass GuardsCheckEnd extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state, /** @docsNotRequired */\n  shouldActivate) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n    this.shouldActivate = shouldActivate;\n    this.type = EventType.GuardsCheckEnd;\n  }\n  toString() {\n    return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;\n  }\n}\n/**\n * An event triggered at the start of the Resolve phase of routing.\n *\n * Runs in the \"resolve\" phase whether or not there is anything to resolve.\n * In future, may change to only run when there are things to be resolved.\n *\n * @see {@link ResolveEnd}\n *\n * @publicApi\n */\nclass ResolveStart extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n    this.type = EventType.ResolveStart;\n  }\n  toString() {\n    return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n/**\n * An event triggered at the end of the Resolve phase of routing.\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ResolveEnd extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n    this.type = EventType.ResolveEnd;\n  }\n  toString() {\n    return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n/**\n * An event triggered before lazy loading a route configuration.\n *\n * @see {@link RouteConfigLoadEnd}\n *\n * @publicApi\n */\nclass RouteConfigLoadStart {\n  constructor( /** @docsNotRequired */\n  route) {\n    this.route = route;\n    this.type = EventType.RouteConfigLoadStart;\n  }\n  toString() {\n    return `RouteConfigLoadStart(path: ${this.route.path})`;\n  }\n}\n/**\n * An event triggered when a route has been lazy loaded.\n *\n * @see {@link RouteConfigLoadStart}\n *\n * @publicApi\n */\nclass RouteConfigLoadEnd {\n  constructor( /** @docsNotRequired */\n  route) {\n    this.route = route;\n    this.type = EventType.RouteConfigLoadEnd;\n  }\n  toString() {\n    return `RouteConfigLoadEnd(path: ${this.route.path})`;\n  }\n}\n/**\n * An event triggered at the start of the child-activation\n * part of the Resolve phase of routing.\n * @see {@link ChildActivationEnd}\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ChildActivationStart {\n  constructor( /** @docsNotRequired */\n  snapshot) {\n    this.snapshot = snapshot;\n    this.type = EventType.ChildActivationStart;\n  }\n  toString() {\n    const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n    return `ChildActivationStart(path: '${path}')`;\n  }\n}\n/**\n * An event triggered at the end of the child-activation part\n * of the Resolve phase of routing.\n * @see {@link ChildActivationStart}\n * @see {@link ResolveStart}\n * @publicApi\n */\nclass ChildActivationEnd {\n  constructor( /** @docsNotRequired */\n  snapshot) {\n    this.snapshot = snapshot;\n    this.type = EventType.ChildActivationEnd;\n  }\n  toString() {\n    const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n    return `ChildActivationEnd(path: '${path}')`;\n  }\n}\n/**\n * An event triggered at the start of the activation part\n * of the Resolve phase of routing.\n * @see {@link ActivationEnd}\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ActivationStart {\n  constructor( /** @docsNotRequired */\n  snapshot) {\n    this.snapshot = snapshot;\n    this.type = EventType.ActivationStart;\n  }\n  toString() {\n    const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n    return `ActivationStart(path: '${path}')`;\n  }\n}\n/**\n * An event triggered at the end of the activation part\n * of the Resolve phase of routing.\n * @see {@link ActivationStart}\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ActivationEnd {\n  constructor( /** @docsNotRequired */\n  snapshot) {\n    this.snapshot = snapshot;\n    this.type = EventType.ActivationEnd;\n  }\n  toString() {\n    const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n    return `ActivationEnd(path: '${path}')`;\n  }\n}\n/**\n * An event triggered by scrolling.\n *\n * @publicApi\n */\nclass Scroll {\n  constructor( /** @docsNotRequired */\n  routerEvent, /** @docsNotRequired */\n  position, /** @docsNotRequired */\n  anchor) {\n    this.routerEvent = routerEvent;\n    this.position = position;\n    this.anchor = anchor;\n    this.type = EventType.Scroll;\n  }\n  toString() {\n    const pos = this.position ? `${this.position[0]}, ${this.position[1]}` : null;\n    return `Scroll(anchor: '${this.anchor}', position: '${pos}')`;\n  }\n}\nclass BeforeActivateRoutes {}\nclass RedirectRequest {\n  constructor(url, navigationBehaviorOptions) {\n    this.url = url;\n    this.navigationBehaviorOptions = navigationBehaviorOptions;\n  }\n}\nfunction stringifyEvent(routerEvent) {\n  switch (routerEvent.type) {\n    case EventType.ActivationEnd:\n      return `ActivationEnd(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.ActivationStart:\n      return `ActivationStart(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.ChildActivationEnd:\n      return `ChildActivationEnd(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.ChildActivationStart:\n      return `ChildActivationStart(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.GuardsCheckEnd:\n      return `GuardsCheckEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state}, shouldActivate: ${routerEvent.shouldActivate})`;\n    case EventType.GuardsCheckStart:\n      return `GuardsCheckStart(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n    case EventType.NavigationCancel:\n      return `NavigationCancel(id: ${routerEvent.id}, url: '${routerEvent.url}')`;\n    case EventType.NavigationSkipped:\n      return `NavigationSkipped(id: ${routerEvent.id}, url: '${routerEvent.url}')`;\n    case EventType.NavigationEnd:\n      return `NavigationEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}')`;\n    case EventType.NavigationError:\n      return `NavigationError(id: ${routerEvent.id}, url: '${routerEvent.url}', error: ${routerEvent.error})`;\n    case EventType.NavigationStart:\n      return `NavigationStart(id: ${routerEvent.id}, url: '${routerEvent.url}')`;\n    case EventType.ResolveEnd:\n      return `ResolveEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n    case EventType.ResolveStart:\n      return `ResolveStart(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n    case EventType.RouteConfigLoadEnd:\n      return `RouteConfigLoadEnd(path: ${routerEvent.route.path})`;\n    case EventType.RouteConfigLoadStart:\n      return `RouteConfigLoadStart(path: ${routerEvent.route.path})`;\n    case EventType.RoutesRecognized:\n      return `RoutesRecognized(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n    case EventType.Scroll:\n      const pos = routerEvent.position ? `${routerEvent.position[0]}, ${routerEvent.position[1]}` : null;\n      return `Scroll(anchor: '${routerEvent.anchor}', position: '${pos}')`;\n  }\n}\n\n/**\n * Creates an `EnvironmentInjector` if the `Route` has providers and one does not already exist\n * and returns the injector. Otherwise, if the `Route` does not have `providers`, returns the\n * `currentInjector`.\n *\n * @param route The route that might have providers\n * @param currentInjector The parent injector of the `Route`\n */\nfunction getOrCreateRouteInjectorIfNeeded(route, currentInjector) {\n  if (route.providers && !route._injector) {\n    route._injector = createEnvironmentInjector(route.providers, currentInjector, `Route: ${route.path}`);\n  }\n  return route._injector ?? currentInjector;\n}\nfunction getLoadedRoutes(route) {\n  return route._loadedRoutes;\n}\nfunction getLoadedInjector(route) {\n  return route._loadedInjector;\n}\nfunction getLoadedComponent(route) {\n  return route._loadedComponent;\n}\nfunction getProvidersInjector(route) {\n  return route._injector;\n}\nfunction validateConfig(config, parentPath = '', requireStandaloneComponents = false) {\n  // forEach doesn't iterate undefined values\n  for (let i = 0; i < config.length; i++) {\n    const route = config[i];\n    const fullPath = getFullPath(parentPath, route);\n    validateNode(route, fullPath, requireStandaloneComponents);\n  }\n}\nfunction assertStandalone(fullPath, component) {\n  if (component && ɵisNgModule(component)) {\n    throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}'. You are using 'loadComponent' with a module, ` + `but it must be used with standalone components. Use 'loadChildren' instead.`);\n  } else if (component && !isStandalone(component)) {\n    throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}'. The component must be standalone.`);\n  }\n}\nfunction validateNode(route, fullPath, requireStandaloneComponents) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (!route) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `\n      Invalid configuration of route '${fullPath}': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    `);\n    }\n    if (Array.isArray(route)) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': Array cannot be specified`);\n    }\n    if (!route.redirectTo && !route.component && !route.loadComponent && !route.children && !route.loadChildren && route.outlet && route.outlet !== PRIMARY_OUTLET) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': a componentless route without children or loadChildren cannot have a named outlet set`);\n    }\n    if (route.redirectTo && route.children) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and children cannot be used together`);\n    }\n    if (route.redirectTo && route.loadChildren) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and loadChildren cannot be used together`);\n    }\n    if (route.children && route.loadChildren) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': children and loadChildren cannot be used together`);\n    }\n    if (route.redirectTo && (route.component || route.loadComponent)) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and component/loadComponent cannot be used together`);\n    }\n    if (route.component && route.loadComponent) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': component and loadComponent cannot be used together`);\n    }\n    if (route.redirectTo && route.canActivate) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and canActivate cannot be used together. Redirects happen before activation ` + `so canActivate will never be executed.`);\n    }\n    if (route.path && route.matcher) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': path and matcher cannot be used together`);\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.loadComponent && !route.children && !route.loadChildren) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}'. One of the following must be provided: component, loadComponent, redirectTo, children or loadChildren`);\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': routes must have either a path or a matcher specified`);\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': path cannot start with a slash`);\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n      const exp = `The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.`;\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '{path: \"${fullPath}\", redirectTo: \"${route.redirectTo}\"}': please provide 'pathMatch'. ${exp}`);\n    }\n    if (requireStandaloneComponents) {\n      assertStandalone(fullPath, route.component);\n    }\n  }\n  if (route.children) {\n    validateConfig(route.children, fullPath, requireStandaloneComponents);\n  }\n}\nfunction getFullPath(parentPath, currentRoute) {\n  if (!currentRoute) {\n    return parentPath;\n  }\n  if (!parentPath && !currentRoute.path) {\n    return '';\n  } else if (parentPath && !currentRoute.path) {\n    return `${parentPath}/`;\n  } else if (!parentPath && currentRoute.path) {\n    return currentRoute.path;\n  } else {\n    return `${parentPath}/${currentRoute.path}`;\n  }\n}\n/** Returns the `route.outlet` or PRIMARY_OUTLET if none exists. */\nfunction getOutlet(route) {\n  return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * Sorts the `routes` such that the ones with an outlet matching `outletName` come first.\n * The order of the configs is otherwise preserved.\n */\nfunction sortByMatchingOutlets(routes, outletName) {\n  const sortedConfig = routes.filter(r => getOutlet(r) === outletName);\n  sortedConfig.push(...routes.filter(r => getOutlet(r) !== outletName));\n  return sortedConfig;\n}\n/**\n * Gets the first injector in the snapshot's parent tree.\n *\n * If the `Route` has a static list of providers, the returned injector will be the one created from\n * those. If it does not exist, the returned injector may come from the parents, which may be from a\n * loaded config or their static providers.\n *\n * Returns `null` if there is neither this nor any parents have a stored injector.\n *\n * Generally used for retrieving the injector to use for getting tokens for guards/resolvers and\n * also used for getting the correct injector to use for creating components.\n */\nfunction getClosestRouteInjector(snapshot) {\n  if (!snapshot) return null;\n  // If the current route has its own injector, which is created from the static providers on the\n  // route itself, we should use that. Otherwise, we start at the parent since we do not want to\n  // include the lazy loaded injector from this route.\n  if (snapshot.routeConfig?._injector) {\n    return snapshot.routeConfig._injector;\n  }\n  for (let s = snapshot.parent; s; s = s.parent) {\n    const route = s.routeConfig;\n    // Note that the order here is important. `_loadedInjector` stored on the route with\n    // `loadChildren: () => NgModule` so it applies to child routes with priority. The `_injector`\n    // is created from the static providers on that parent route, so it applies to the children as\n    // well, but only if there is no lazy loaded NgModuleRef injector.\n    if (route?._loadedInjector) return route._loadedInjector;\n    if (route?._injector) return route._injector;\n  }\n  return null;\n}\n\n/**\n * Store contextual information about a `RouterOutlet`\n *\n * @publicApi\n */\nclass OutletContext {\n  get injector() {\n    return getClosestRouteInjector(this.route?.snapshot) ?? this.rootInjector;\n  }\n  // TODO(atscott): Only here to avoid a \"breaking\" change in a patch/minor. Remove in v19.\n  set injector(_) {}\n  constructor(rootInjector) {\n    this.rootInjector = rootInjector;\n    this.outlet = null;\n    this.route = null;\n    this.children = new ChildrenOutletContexts(this.rootInjector);\n    this.attachRef = null;\n  }\n}\n/**\n * Store contextual information about the children (= nested) `RouterOutlet`\n *\n * @publicApi\n */\nlet ChildrenOutletContexts = /*#__PURE__*/(() => {\n  class ChildrenOutletContexts {\n    /** @nodoc */\n    constructor(rootInjector) {\n      this.rootInjector = rootInjector;\n      // contexts for child outlets, by name.\n      this.contexts = new Map();\n    }\n    /** Called when a `RouterOutlet` directive is instantiated */\n    onChildOutletCreated(childName, outlet) {\n      const context = this.getOrCreateContext(childName);\n      context.outlet = outlet;\n      this.contexts.set(childName, context);\n    }\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     */\n    onChildOutletDestroyed(childName) {\n      const context = this.getContext(childName);\n      if (context) {\n        context.outlet = null;\n        context.attachRef = null;\n      }\n    }\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     */\n    onOutletDeactivated() {\n      const contexts = this.contexts;\n      this.contexts = new Map();\n      return contexts;\n    }\n    onOutletReAttached(contexts) {\n      this.contexts = contexts;\n    }\n    getOrCreateContext(childName) {\n      let context = this.getContext(childName);\n      if (!context) {\n        context = new OutletContext(this.rootInjector);\n        this.contexts.set(childName, context);\n      }\n      return context;\n    }\n    getContext(childName) {\n      return this.contexts.get(childName) || null;\n    }\n    static {\n      this.ɵfac = function ChildrenOutletContexts_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ChildrenOutletContexts)(i0.ɵɵinject(i0.EnvironmentInjector));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ChildrenOutletContexts,\n        factory: ChildrenOutletContexts.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ChildrenOutletContexts;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass Tree {\n  constructor(root) {\n    this._root = root;\n  }\n  get root() {\n    return this._root.value;\n  }\n  /**\n   * @internal\n   */\n  parent(t) {\n    const p = this.pathFromRoot(t);\n    return p.length > 1 ? p[p.length - 2] : null;\n  }\n  /**\n   * @internal\n   */\n  children(t) {\n    const n = findNode(t, this._root);\n    return n ? n.children.map(t => t.value) : [];\n  }\n  /**\n   * @internal\n   */\n  firstChild(t) {\n    const n = findNode(t, this._root);\n    return n && n.children.length > 0 ? n.children[0].value : null;\n  }\n  /**\n   * @internal\n   */\n  siblings(t) {\n    const p = findPath(t, this._root);\n    if (p.length < 2) return [];\n    const c = p[p.length - 2].children.map(c => c.value);\n    return c.filter(cc => cc !== t);\n  }\n  /**\n   * @internal\n   */\n  pathFromRoot(t) {\n    return findPath(t, this._root).map(s => s.value);\n  }\n}\n// DFS for the node matching the value\nfunction findNode(value, node) {\n  if (value === node.value) return node;\n  for (const child of node.children) {\n    const node = findNode(value, child);\n    if (node) return node;\n  }\n  return null;\n}\n// Return the path to the node with the given value using DFS\nfunction findPath(value, node) {\n  if (value === node.value) return [node];\n  for (const child of node.children) {\n    const path = findPath(value, child);\n    if (path.length) {\n      path.unshift(node);\n      return path;\n    }\n  }\n  return [];\n}\nclass TreeNode {\n  constructor(value, children) {\n    this.value = value;\n    this.children = children;\n  }\n  toString() {\n    return `TreeNode(${this.value})`;\n  }\n}\n// Return the list of T indexed by outlet name\nfunction nodeChildrenAsMap(node) {\n  const map = {};\n  if (node) {\n    node.children.forEach(child => map[child.value.outlet] = child);\n  }\n  return map;\n}\n\n/**\n * Represents the state of the router as a tree of activated routes.\n *\n * @usageNotes\n *\n * Every node in the route tree is an `ActivatedRoute` instance\n * that knows about the \"consumed\" URL segments, the extracted parameters,\n * and the resolved data.\n * Use the `ActivatedRoute` properties to traverse the tree from any node.\n *\n * The following fragment shows how a component gets the root node\n * of the current state to establish its own route tree:\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @see {@link ActivatedRoute}\n * @see [Getting route information](guide/routing/common-router-tasks#getting-route-information)\n *\n * @publicApi\n */\nclass RouterState extends Tree {\n  /** @internal */\n  constructor(root, /** The current snapshot of the router state */\n  snapshot) {\n    super(root);\n    this.snapshot = snapshot;\n    setRouterState(this, root);\n  }\n  toString() {\n    return this.snapshot.toString();\n  }\n}\nfunction createEmptyState(rootComponent) {\n  const snapshot = createEmptyStateSnapshot(rootComponent);\n  const emptyUrl = new BehaviorSubject([new UrlSegment('', {})]);\n  const emptyParams = new BehaviorSubject({});\n  const emptyData = new BehaviorSubject({});\n  const emptyQueryParams = new BehaviorSubject({});\n  const fragment = new BehaviorSubject('');\n  const activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n  activated.snapshot = snapshot.root;\n  return new RouterState(new TreeNode(activated, []), snapshot);\n}\nfunction createEmptyStateSnapshot(rootComponent) {\n  const emptyParams = {};\n  const emptyData = {};\n  const emptyQueryParams = {};\n  const fragment = '';\n  const activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, {});\n  return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * Provides access to information about a route associated with a component\n * that is loaded in an outlet.\n * Use to traverse the `RouterState` tree and extract information from nodes.\n *\n * The following example shows how to construct a component using information from a\n * currently activated route.\n *\n * Note: the observables in this class only emit when the current and previous values differ based\n * on shallow equality. For example, changing deeply nested properties in resolved `data` will not\n * cause the `ActivatedRoute.data` `Observable` to emit a new value.\n *\n * {@example router/activated-route/module.ts region=\"activated-route\"\n *     header=\"activated-route.component.ts\"}\n *\n * @see [Getting route information](guide/routing/common-router-tasks#getting-route-information)\n *\n * @publicApi\n */\nclass ActivatedRoute {\n  /** @internal */\n  constructor( /** @internal */\n  urlSubject, /** @internal */\n  paramsSubject, /** @internal */\n  queryParamsSubject, /** @internal */\n  fragmentSubject, /** @internal */\n  dataSubject, /** The outlet name of the route, a constant. */\n  outlet, /** The component of the route, a constant. */\n  component, futureSnapshot) {\n    this.urlSubject = urlSubject;\n    this.paramsSubject = paramsSubject;\n    this.queryParamsSubject = queryParamsSubject;\n    this.fragmentSubject = fragmentSubject;\n    this.dataSubject = dataSubject;\n    this.outlet = outlet;\n    this.component = component;\n    this._futureSnapshot = futureSnapshot;\n    this.title = this.dataSubject?.pipe(map(d => d[RouteTitleKey])) ?? of(undefined);\n    // TODO(atscott): Verify that these can be changed to `.asObservable()` with TGP.\n    this.url = urlSubject;\n    this.params = paramsSubject;\n    this.queryParams = queryParamsSubject;\n    this.fragment = fragmentSubject;\n    this.data = dataSubject;\n  }\n  /** The configuration used to match this route. */\n  get routeConfig() {\n    return this._futureSnapshot.routeConfig;\n  }\n  /** The root of the router state. */\n  get root() {\n    return this._routerState.root;\n  }\n  /** The parent of this route in the router state tree. */\n  get parent() {\n    return this._routerState.parent(this);\n  }\n  /** The first child of this route in the router state tree. */\n  get firstChild() {\n    return this._routerState.firstChild(this);\n  }\n  /** The children of this route in the router state tree. */\n  get children() {\n    return this._routerState.children(this);\n  }\n  /** The path from the root of the router state tree to this route. */\n  get pathFromRoot() {\n    return this._routerState.pathFromRoot(this);\n  }\n  /**\n   * An Observable that contains a map of the required and optional parameters\n   * specific to the route.\n   * The map supports retrieving single and multiple values from the same parameter.\n   */\n  get paramMap() {\n    this._paramMap ??= this.params.pipe(map(p => convertToParamMap(p)));\n    return this._paramMap;\n  }\n  /**\n   * An Observable that contains a map of the query parameters available to all routes.\n   * The map supports retrieving single and multiple values from the query parameter.\n   */\n  get queryParamMap() {\n    this._queryParamMap ??= this.queryParams.pipe(map(p => convertToParamMap(p)));\n    return this._queryParamMap;\n  }\n  toString() {\n    return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})`;\n  }\n}\n/**\n * Returns the inherited params, data, and resolve for a given route.\n *\n * By default, we do not inherit parent data unless the current route is path-less or the parent\n * route is component-less.\n */\nfunction getInherited(route, parent, paramsInheritanceStrategy = 'emptyOnly') {\n  let inherited;\n  const {\n    routeConfig\n  } = route;\n  if (parent !== null && (paramsInheritanceStrategy === 'always' ||\n  // inherit parent data if route is empty path\n  routeConfig?.path === '' ||\n  // inherit parent data if parent was componentless\n  !parent.component && !parent.routeConfig?.loadComponent)) {\n    inherited = {\n      params: {\n        ...parent.params,\n        ...route.params\n      },\n      data: {\n        ...parent.data,\n        ...route.data\n      },\n      resolve: {\n        // Snapshots are created with data inherited from parent and guards (i.e. canActivate) can\n        // change data because it's not frozen...\n        // This first line could be deleted chose to break/disallow mutating the `data` object in\n        // guards.\n        // Note that data from parents still override this mutated data so anyone relying on this\n        // might be surprised that it doesn't work if parent data is inherited but otherwise does.\n        ...route.data,\n        // Ensure inherited resolved data overrides inherited static data\n        ...parent.data,\n        // static data from the current route overrides any inherited data\n        ...routeConfig?.data,\n        // resolved data from current route overrides everything\n        ...route._resolvedData\n      }\n    };\n  } else {\n    inherited = {\n      params: {\n        ...route.params\n      },\n      data: {\n        ...route.data\n      },\n      resolve: {\n        ...route.data,\n        ...(route._resolvedData ?? {})\n      }\n    };\n  }\n  if (routeConfig && hasStaticTitle(routeConfig)) {\n    inherited.resolve[RouteTitleKey] = routeConfig.title;\n  }\n  return inherited;\n}\n/**\n * @description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n * traverse the router state tree.\n *\n * The following example initializes a component with route information extracted\n * from the snapshot of the root node at the time of creation.\n *\n * ```\n * @Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass ActivatedRouteSnapshot {\n  /** The resolved route title */\n  get title() {\n    // Note: This _must_ be a getter because the data is mutated in the resolvers. Title will not be\n    // available at the time of class instantiation.\n    return this.data?.[RouteTitleKey];\n  }\n  /** @internal */\n  constructor( /** The URL segments matched by this route */\n  url,\n  /**\n   *  The matrix parameters scoped to this route.\n   *\n   *  You can compute all params (or data) in the router state or to get params outside\n   *  of an activated component by traversing the `RouterState` tree as in the following\n   *  example:\n   *  ```\n   *  collectRouteParams(router: Router) {\n   *    let params = {};\n   *    let stack: ActivatedRouteSnapshot[] = [router.routerState.snapshot.root];\n   *    while (stack.length > 0) {\n   *      const route = stack.pop()!;\n   *      params = {...params, ...route.params};\n   *      stack.push(...route.children);\n   *    }\n   *    return params;\n   *  }\n   *  ```\n   */\n  params, /** The query parameters shared by all the routes */\n  queryParams, /** The URL fragment shared by all the routes */\n  fragment, /** The static and resolved data of this route */\n  data, /** The outlet name of the route */\n  outlet, /** The component of the route */\n  component, routeConfig, resolve) {\n    this.url = url;\n    this.params = params;\n    this.queryParams = queryParams;\n    this.fragment = fragment;\n    this.data = data;\n    this.outlet = outlet;\n    this.component = component;\n    this.routeConfig = routeConfig;\n    this._resolve = resolve;\n  }\n  /** The root of the router state */\n  get root() {\n    return this._routerState.root;\n  }\n  /** The parent of this route in the router state tree */\n  get parent() {\n    return this._routerState.parent(this);\n  }\n  /** The first child of this route in the router state tree */\n  get firstChild() {\n    return this._routerState.firstChild(this);\n  }\n  /** The children of this route in the router state tree */\n  get children() {\n    return this._routerState.children(this);\n  }\n  /** The path from the root of the router state tree to this route */\n  get pathFromRoot() {\n    return this._routerState.pathFromRoot(this);\n  }\n  get paramMap() {\n    this._paramMap ??= convertToParamMap(this.params);\n    return this._paramMap;\n  }\n  get queryParamMap() {\n    this._queryParamMap ??= convertToParamMap(this.queryParams);\n    return this._queryParamMap;\n  }\n  toString() {\n    const url = this.url.map(segment => segment.toString()).join('/');\n    const matched = this.routeConfig ? this.routeConfig.path : '';\n    return `Route(url:'${url}', path:'${matched}')`;\n  }\n}\n/**\n * @description\n *\n * Represents the state of the router at a moment in time.\n *\n * This is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * The following example shows how a component is initialized with information\n * from the snapshot of the root node's state at the time of creation.\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass RouterStateSnapshot extends Tree {\n  /** @internal */\n  constructor( /** The url from which this snapshot was created */\n  url, root) {\n    super(root);\n    this.url = url;\n    setRouterState(this, root);\n  }\n  toString() {\n    return serializeNode(this._root);\n  }\n}\nfunction setRouterState(state, node) {\n  node.value._routerState = state;\n  node.children.forEach(c => setRouterState(state, c));\n}\nfunction serializeNode(node) {\n  const c = node.children.length > 0 ? ` { ${node.children.map(serializeNode).join(', ')} } ` : '';\n  return `${node.value}${c}`;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n */\nfunction advanceActivatedRoute(route) {\n  if (route.snapshot) {\n    const currentSnapshot = route.snapshot;\n    const nextSnapshot = route._futureSnapshot;\n    route.snapshot = nextSnapshot;\n    if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n      route.queryParamsSubject.next(nextSnapshot.queryParams);\n    }\n    if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n      route.fragmentSubject.next(nextSnapshot.fragment);\n    }\n    if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n      route.paramsSubject.next(nextSnapshot.params);\n    }\n    if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n      route.urlSubject.next(nextSnapshot.url);\n    }\n    if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n      route.dataSubject.next(nextSnapshot.data);\n    }\n  } else {\n    route.snapshot = route._futureSnapshot;\n    // this is for resolved data\n    route.dataSubject.next(route._futureSnapshot.data);\n  }\n}\nfunction equalParamsAndUrlSegments(a, b) {\n  const equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n  const parentsMismatch = !a.parent !== !b.parent;\n  return equalUrlParams && !parentsMismatch && (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));\n}\nfunction hasStaticTitle(config) {\n  return typeof config.title === 'string' || config.title === null;\n}\n\n/**\n * @description\n *\n * Acts as a placeholder that Angular dynamically fills based on the current router state.\n *\n * Each outlet can have a unique name, determined by the optional `name` attribute.\n * The name cannot be set or changed dynamically. If not set, default value is \"primary\".\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * Named outlets can be the targets of secondary routes.\n * The `Route` object for a secondary route has an `outlet` property to identify the target outlet:\n *\n * `{path: <base-path>, component: <component>, outlet: <target_outlet_name>}`\n *\n * Using named outlets and secondary routes, you can target multiple outlets in\n * the same `RouterLink` directive.\n *\n * The router keeps track of separate branches in a navigation tree for each named outlet and\n * generates a representation of that tree in the URL.\n * The URL for a secondary route uses the following syntax to specify both the primary and secondary\n * routes at the same time:\n *\n * `http://base-path/primary-route-path(outlet-name:route-path)`\n *\n * A router outlet emits an activate event when a new component is instantiated,\n * deactivate event when a component is destroyed.\n * An attached event emits when the `RouteReuseStrategy` instructs the outlet to reattach the\n * subtree, and the detached event emits when the `RouteReuseStrategy` instructs the outlet to\n * detach the subtree.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'\n *   (attach)='onAttach($event)'\n *   (detach)='onDetach($event)'></router-outlet>\n * ```\n *\n * @see {@link RouterLink}\n * @see {@link Route}\n * @ngModule RouterModule\n *\n * @publicApi\n */\nlet RouterOutlet = /*#__PURE__*/(() => {\n  class RouterOutlet {\n    constructor() {\n      this.activated = null;\n      this._activatedRoute = null;\n      /**\n       * The name of the outlet\n       *\n       */\n      this.name = PRIMARY_OUTLET;\n      this.activateEvents = new EventEmitter();\n      this.deactivateEvents = new EventEmitter();\n      /**\n       * Emits an attached component instance when the `RouteReuseStrategy` instructs to re-attach a\n       * previously detached subtree.\n       **/\n      this.attachEvents = new EventEmitter();\n      /**\n       * Emits a detached component instance when the `RouteReuseStrategy` instructs to detach the\n       * subtree.\n       */\n      this.detachEvents = new EventEmitter();\n      this.parentContexts = inject(ChildrenOutletContexts);\n      this.location = inject(ViewContainerRef);\n      this.changeDetector = inject(ChangeDetectorRef);\n      this.inputBinder = inject(INPUT_BINDER, {\n        optional: true\n      });\n      /** @nodoc */\n      this.supportsBindingToComponentInputs = true;\n    }\n    /** @internal */\n    get activatedComponentRef() {\n      return this.activated;\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (changes['name']) {\n        const {\n          firstChange,\n          previousValue\n        } = changes['name'];\n        if (firstChange) {\n          // The first change is handled by ngOnInit. Because ngOnChanges doesn't get called when no\n          // input is set at all, we need to centrally handle the first change there.\n          return;\n        }\n        // unregister with the old name\n        if (this.isTrackedInParentContexts(previousValue)) {\n          this.deactivate();\n          this.parentContexts.onChildOutletDestroyed(previousValue);\n        }\n        // register the new name\n        this.initializeOutletWithName();\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      // Ensure that the registered outlet is this one before removing it on the context.\n      if (this.isTrackedInParentContexts(this.name)) {\n        this.parentContexts.onChildOutletDestroyed(this.name);\n      }\n      this.inputBinder?.unsubscribeFromRouteData(this);\n    }\n    isTrackedInParentContexts(outletName) {\n      return this.parentContexts.getContext(outletName)?.outlet === this;\n    }\n    /** @nodoc */\n    ngOnInit() {\n      this.initializeOutletWithName();\n    }\n    initializeOutletWithName() {\n      this.parentContexts.onChildOutletCreated(this.name, this);\n      if (this.activated) {\n        return;\n      }\n      // If the outlet was not instantiated at the time the route got activated we need to populate\n      // the outlet when it is initialized (ie inside a NgIf)\n      const context = this.parentContexts.getContext(this.name);\n      if (context?.route) {\n        if (context.attachRef) {\n          // `attachRef` is populated when there is an existing component to mount\n          this.attach(context.attachRef, context.route);\n        } else {\n          // otherwise the component defined in the configuration is created\n          this.activateWith(context.route, context.injector);\n        }\n      }\n    }\n    get isActivated() {\n      return !!this.activated;\n    }\n    /**\n     * @returns The currently activated component instance.\n     * @throws An error if the outlet is not activated.\n     */\n    get component() {\n      if (!this.activated) throw new ɵRuntimeError(4012 /* RuntimeErrorCode.OUTLET_NOT_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Outlet is not activated');\n      return this.activated.instance;\n    }\n    get activatedRoute() {\n      if (!this.activated) throw new ɵRuntimeError(4012 /* RuntimeErrorCode.OUTLET_NOT_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Outlet is not activated');\n      return this._activatedRoute;\n    }\n    get activatedRouteData() {\n      if (this._activatedRoute) {\n        return this._activatedRoute.snapshot.data;\n      }\n      return {};\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     */\n    detach() {\n      if (!this.activated) throw new ɵRuntimeError(4012 /* RuntimeErrorCode.OUTLET_NOT_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Outlet is not activated');\n      this.location.detach();\n      const cmp = this.activated;\n      this.activated = null;\n      this._activatedRoute = null;\n      this.detachEvents.emit(cmp.instance);\n      return cmp;\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     */\n    attach(ref, activatedRoute) {\n      this.activated = ref;\n      this._activatedRoute = activatedRoute;\n      this.location.insert(ref.hostView);\n      this.inputBinder?.bindActivatedRouteToOutletComponent(this);\n      this.attachEvents.emit(ref.instance);\n    }\n    deactivate() {\n      if (this.activated) {\n        const c = this.component;\n        this.activated.destroy();\n        this.activated = null;\n        this._activatedRoute = null;\n        this.deactivateEvents.emit(c);\n      }\n    }\n    activateWith(activatedRoute, environmentInjector) {\n      if (this.isActivated) {\n        throw new ɵRuntimeError(4013 /* RuntimeErrorCode.OUTLET_ALREADY_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Cannot activate an already activated outlet');\n      }\n      this._activatedRoute = activatedRoute;\n      const location = this.location;\n      const snapshot = activatedRoute.snapshot;\n      const component = snapshot.component;\n      const childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n      const injector = new OutletInjector(activatedRoute, childContexts, location.injector);\n      this.activated = location.createComponent(component, {\n        index: location.length,\n        injector,\n        environmentInjector: environmentInjector\n      });\n      // Calling `markForCheck` to make sure we will run the change detection when the\n      // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n      this.changeDetector.markForCheck();\n      this.inputBinder?.bindActivatedRouteToOutletComponent(this);\n      this.activateEvents.emit(this.activated.instance);\n    }\n    static {\n      this.ɵfac = function RouterOutlet_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || RouterOutlet)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: RouterOutlet,\n        selectors: [[\"router-outlet\"]],\n        inputs: {\n          name: \"name\"\n        },\n        outputs: {\n          activateEvents: \"activate\",\n          deactivateEvents: \"deactivate\",\n          attachEvents: \"attach\",\n          detachEvents: \"detach\"\n        },\n        exportAs: [\"outlet\"],\n        standalone: true,\n        features: [i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return RouterOutlet;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass OutletInjector {\n  /**\n   * This injector has a special handing for the `ActivatedRoute` and\n   * `ChildrenOutletContexts` tokens: it returns corresponding values for those\n   * tokens dynamically. This behavior is different from the regular injector logic,\n   * when we initialize and store a value, which is later returned for all inject\n   * requests.\n   *\n   * In some cases (e.g. when using `@defer`), this dynamic behavior requires special\n   * handling. This function allows to identify an instance of the `OutletInjector` and\n   * create an instance of it without referring to the class itself (so this logic can\n   * be invoked from the `core` package). This helps to retain dynamic behavior for the\n   * mentioned tokens.\n   *\n   * Note: it's a temporary solution and we should explore how to support this case better.\n   */\n  __ngOutletInjector(parentInjector) {\n    return new OutletInjector(this.route, this.childContexts, parentInjector);\n  }\n  constructor(route, childContexts, parent) {\n    this.route = route;\n    this.childContexts = childContexts;\n    this.parent = parent;\n  }\n  get(token, notFoundValue) {\n    if (token === ActivatedRoute) {\n      return this.route;\n    }\n    if (token === ChildrenOutletContexts) {\n      return this.childContexts;\n    }\n    return this.parent.get(token, notFoundValue);\n  }\n}\nconst INPUT_BINDER = /*#__PURE__*/new InjectionToken('');\n/**\n * Injectable used as a tree-shakable provider for opting in to binding router data to component\n * inputs.\n *\n * The RouterOutlet registers itself with this service when an `ActivatedRoute` is attached or\n * activated. When this happens, the service subscribes to the `ActivatedRoute` observables (params,\n * queryParams, data) and sets the inputs of the component using `ComponentRef.setInput`.\n * Importantly, when an input does not have an item in the route data with a matching key, this\n * input is set to `undefined`. If it were not done this way, the previous information would be\n * retained if the data got removed from the route (i.e. if a query parameter is removed).\n *\n * The `RouterOutlet` should unregister itself when destroyed via `unsubscribeFromRouteData` so that\n * the subscriptions are cleaned up.\n */\nlet RoutedComponentInputBinder = /*#__PURE__*/(() => {\n  class RoutedComponentInputBinder {\n    constructor() {\n      this.outletDataSubscriptions = new Map();\n    }\n    bindActivatedRouteToOutletComponent(outlet) {\n      this.unsubscribeFromRouteData(outlet);\n      this.subscribeToRouteData(outlet);\n    }\n    unsubscribeFromRouteData(outlet) {\n      this.outletDataSubscriptions.get(outlet)?.unsubscribe();\n      this.outletDataSubscriptions.delete(outlet);\n    }\n    subscribeToRouteData(outlet) {\n      const {\n        activatedRoute\n      } = outlet;\n      const dataSubscription = combineLatest([activatedRoute.queryParams, activatedRoute.params, activatedRoute.data]).pipe(switchMap(([queryParams, params, data], index) => {\n        data = {\n          ...queryParams,\n          ...params,\n          ...data\n        };\n        // Get the first result from the data subscription synchronously so it's available to\n        // the component as soon as possible (and doesn't require a second change detection).\n        if (index === 0) {\n          return of(data);\n        }\n        // Promise.resolve is used to avoid synchronously writing the wrong data when\n        // two of the Observables in the `combineLatest` stream emit one after\n        // another.\n        return Promise.resolve(data);\n      })).subscribe(data => {\n        // Outlet may have been deactivated or changed names to be associated with a different\n        // route\n        if (!outlet.isActivated || !outlet.activatedComponentRef || outlet.activatedRoute !== activatedRoute || activatedRoute.component === null) {\n          this.unsubscribeFromRouteData(outlet);\n          return;\n        }\n        const mirror = reflectComponentType(activatedRoute.component);\n        if (!mirror) {\n          this.unsubscribeFromRouteData(outlet);\n          return;\n        }\n        for (const {\n          templateName\n        } of mirror.inputs) {\n          outlet.activatedComponentRef.setInput(templateName, data[templateName]);\n        }\n      });\n      this.outletDataSubscriptions.set(outlet, dataSubscription);\n    }\n    static {\n      this.ɵfac = function RoutedComponentInputBinder_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || RoutedComponentInputBinder)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: RoutedComponentInputBinder,\n        factory: RoutedComponentInputBinder.ɵfac\n      });\n    }\n  }\n  return RoutedComponentInputBinder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n  const root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n  return new RouterState(root, curr);\n}\nfunction createNode(routeReuseStrategy, curr, prevState) {\n  // reuse an activated route that is currently displayed on the screen\n  if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n    const value = prevState.value;\n    value._futureSnapshot = curr.value;\n    const children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n    return new TreeNode(value, children);\n  } else {\n    if (routeReuseStrategy.shouldAttach(curr.value)) {\n      // retrieve an activated route that is used to be displayed, but is not currently displayed\n      const detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n      if (detachedRouteHandle !== null) {\n        const tree = detachedRouteHandle.route;\n        tree.value._futureSnapshot = curr.value;\n        tree.children = curr.children.map(c => createNode(routeReuseStrategy, c));\n        return tree;\n      }\n    }\n    const value = createActivatedRoute(curr.value);\n    const children = curr.children.map(c => createNode(routeReuseStrategy, c));\n    return new TreeNode(value, children);\n  }\n}\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n  return curr.children.map(child => {\n    for (const p of prevState.children) {\n      if (routeReuseStrategy.shouldReuseRoute(child.value, p.value.snapshot)) {\n        return createNode(routeReuseStrategy, child, p);\n      }\n    }\n    return createNode(routeReuseStrategy, child);\n  });\n}\nfunction createActivatedRoute(c) {\n  return new ActivatedRoute(new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.queryParams), new BehaviorSubject(c.fragment), new BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n\n/**\n * Can be returned by a `Router` guard to instruct the `Router` to redirect rather than continue\n * processing the path of the in-flight navigation. The `redirectTo` indicates _where_ the new\n * navigation should go to and the optional `navigationBehaviorOptions` can provide more information\n * about _how_ to perform the navigation.\n *\n * ```ts\n * const route: Route = {\n *   path: \"user/:userId\",\n *   component: User,\n *   canActivate: [\n *     () => {\n *       const router = inject(Router);\n *       const authService = inject(AuthenticationService);\n *\n *       if (!authService.isLoggedIn()) {\n *         const loginPath = router.parseUrl(\"/login\");\n *         return new RedirectCommand(loginPath, {\n *           skipLocationChange: \"true\",\n *         });\n *       }\n *\n *       return true;\n *     },\n *   ],\n * };\n * ```\n * @see [Routing guide](guide/routing/common-router-tasks#preventing-unauthorized-access)\n *\n * @publicApi\n */\nclass RedirectCommand {\n  constructor(redirectTo, navigationBehaviorOptions) {\n    this.redirectTo = redirectTo;\n    this.navigationBehaviorOptions = navigationBehaviorOptions;\n  }\n}\nconst NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\nfunction redirectingNavigationError(urlSerializer, redirect) {\n  const {\n    redirectTo,\n    navigationBehaviorOptions\n  } = isUrlTree(redirect) ? {\n    redirectTo: redirect,\n    navigationBehaviorOptions: undefined\n  } : redirect;\n  const error = navigationCancelingError(ngDevMode && `Redirecting to \"${urlSerializer.serialize(redirectTo)}\"`, NavigationCancellationCode.Redirect);\n  error.url = redirectTo;\n  error.navigationBehaviorOptions = navigationBehaviorOptions;\n  return error;\n}\nfunction navigationCancelingError(message, code) {\n  const error = new Error(`NavigationCancelingError: ${message || ''}`);\n  error[NAVIGATION_CANCELING_ERROR] = true;\n  error.cancellationCode = code;\n  return error;\n}\nfunction isRedirectingNavigationCancelingError(error) {\n  return isNavigationCancelingError(error) && isUrlTree(error.url);\n}\nfunction isNavigationCancelingError(error) {\n  return !!error && error[NAVIGATION_CANCELING_ERROR];\n}\nlet warnedAboutUnsupportedInputBinding = false;\nconst activateRoutes = (rootContexts, routeReuseStrategy, forwardEvent, inputBindingEnabled) => map(t => {\n  new ActivateRoutes(routeReuseStrategy, t.targetRouterState, t.currentRouterState, forwardEvent, inputBindingEnabled).activate(rootContexts);\n  return t;\n});\nclass ActivateRoutes {\n  constructor(routeReuseStrategy, futureState, currState, forwardEvent, inputBindingEnabled) {\n    this.routeReuseStrategy = routeReuseStrategy;\n    this.futureState = futureState;\n    this.currState = currState;\n    this.forwardEvent = forwardEvent;\n    this.inputBindingEnabled = inputBindingEnabled;\n  }\n  activate(parentContexts) {\n    const futureRoot = this.futureState._root;\n    const currRoot = this.currState ? this.currState._root : null;\n    this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n    advanceActivatedRoute(this.futureState.root);\n    this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n  }\n  // De-activate the child route that are not re-used for the future state\n  deactivateChildRoutes(futureNode, currNode, contexts) {\n    const children = nodeChildrenAsMap(currNode);\n    // Recurse on the routes active in the future state to de-activate deeper children\n    futureNode.children.forEach(futureChild => {\n      const childOutletName = futureChild.value.outlet;\n      this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n      delete children[childOutletName];\n    });\n    // De-activate the routes that will not be re-used\n    Object.values(children).forEach(v => {\n      this.deactivateRouteAndItsChildren(v, contexts);\n    });\n  }\n  deactivateRoutes(futureNode, currNode, parentContext) {\n    const future = futureNode.value;\n    const curr = currNode ? currNode.value : null;\n    if (future === curr) {\n      // Reusing the node, check to see if the children need to be de-activated\n      if (future.component) {\n        // If we have a normal route, we need to go through an outlet.\n        const context = parentContext.getContext(future.outlet);\n        if (context) {\n          this.deactivateChildRoutes(futureNode, currNode, context.children);\n        }\n      } else {\n        // if we have a componentless route, we recurse but keep the same outlet map.\n        this.deactivateChildRoutes(futureNode, currNode, parentContext);\n      }\n    } else {\n      if (curr) {\n        // Deactivate the current route which will not be re-used\n        this.deactivateRouteAndItsChildren(currNode, parentContext);\n      }\n    }\n  }\n  deactivateRouteAndItsChildren(route, parentContexts) {\n    // If there is no component, the Route is never attached to an outlet (because there is no\n    // component to attach).\n    if (route.value.component && this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n      this.detachAndStoreRouteSubtree(route, parentContexts);\n    } else {\n      this.deactivateRouteAndOutlet(route, parentContexts);\n    }\n  }\n  detachAndStoreRouteSubtree(route, parentContexts) {\n    const context = parentContexts.getContext(route.value.outlet);\n    const contexts = context && route.value.component ? context.children : parentContexts;\n    const children = nodeChildrenAsMap(route);\n    for (const treeNode of Object.values(children)) {\n      this.deactivateRouteAndItsChildren(treeNode, contexts);\n    }\n    if (context && context.outlet) {\n      const componentRef = context.outlet.detach();\n      const contexts = context.children.onOutletDeactivated();\n      this.routeReuseStrategy.store(route.value.snapshot, {\n        componentRef,\n        route,\n        contexts\n      });\n    }\n  }\n  deactivateRouteAndOutlet(route, parentContexts) {\n    const context = parentContexts.getContext(route.value.outlet);\n    // The context could be `null` if we are on a componentless route but there may still be\n    // children that need deactivating.\n    const contexts = context && route.value.component ? context.children : parentContexts;\n    const children = nodeChildrenAsMap(route);\n    for (const treeNode of Object.values(children)) {\n      this.deactivateRouteAndItsChildren(treeNode, contexts);\n    }\n    if (context) {\n      if (context.outlet) {\n        // Destroy the component\n        context.outlet.deactivate();\n        // Destroy the contexts for all the outlets that were in the component\n        context.children.onOutletDeactivated();\n      }\n      // Clear the information about the attached component on the context but keep the reference to\n      // the outlet. Clear even if outlet was not yet activated to avoid activating later with old\n      // info\n      context.attachRef = null;\n      context.route = null;\n    }\n  }\n  activateChildRoutes(futureNode, currNode, contexts) {\n    const children = nodeChildrenAsMap(currNode);\n    futureNode.children.forEach(c => {\n      this.activateRoutes(c, children[c.value.outlet], contexts);\n      this.forwardEvent(new ActivationEnd(c.value.snapshot));\n    });\n    if (futureNode.children.length) {\n      this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n    }\n  }\n  activateRoutes(futureNode, currNode, parentContexts) {\n    const future = futureNode.value;\n    const curr = currNode ? currNode.value : null;\n    advanceActivatedRoute(future);\n    // reusing the node\n    if (future === curr) {\n      if (future.component) {\n        // If we have a normal route, we need to go through an outlet.\n        const context = parentContexts.getOrCreateContext(future.outlet);\n        this.activateChildRoutes(futureNode, currNode, context.children);\n      } else {\n        // if we have a componentless route, we recurse but keep the same outlet map.\n        this.activateChildRoutes(futureNode, currNode, parentContexts);\n      }\n    } else {\n      if (future.component) {\n        // if we have a normal route, we need to place the component into the outlet and recurse.\n        const context = parentContexts.getOrCreateContext(future.outlet);\n        if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n          const stored = this.routeReuseStrategy.retrieve(future.snapshot);\n          this.routeReuseStrategy.store(future.snapshot, null);\n          context.children.onOutletReAttached(stored.contexts);\n          context.attachRef = stored.componentRef;\n          context.route = stored.route.value;\n          if (context.outlet) {\n            // Attach right away when the outlet has already been instantiated\n            // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n            context.outlet.attach(stored.componentRef, stored.route.value);\n          }\n          advanceActivatedRoute(stored.route.value);\n          this.activateChildRoutes(futureNode, null, context.children);\n        } else {\n          context.attachRef = null;\n          context.route = future;\n          if (context.outlet) {\n            // Activate the outlet when it has already been instantiated\n            // Otherwise it will get activated from its `ngOnInit` when instantiated\n            context.outlet.activateWith(future, context.injector);\n          }\n          this.activateChildRoutes(futureNode, null, context.children);\n        }\n      } else {\n        // if we have a componentless route, we recurse but keep the same outlet map.\n        this.activateChildRoutes(futureNode, null, parentContexts);\n      }\n    }\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      const context = parentContexts.getOrCreateContext(future.outlet);\n      const outlet = context.outlet;\n      if (outlet && this.inputBindingEnabled && !outlet.supportsBindingToComponentInputs && !warnedAboutUnsupportedInputBinding) {\n        console.warn(`'withComponentInputBinding' feature is enabled but ` + `this application is using an outlet that may not support binding to component inputs.`);\n        warnedAboutUnsupportedInputBinding = true;\n      }\n    }\n  }\n}\nclass CanActivate {\n  constructor(path) {\n    this.path = path;\n    this.route = this.path[this.path.length - 1];\n  }\n}\nclass CanDeactivate {\n  constructor(component, route) {\n    this.component = component;\n    this.route = route;\n  }\n}\nfunction getAllRouteGuards(future, curr, parentContexts) {\n  const futureRoot = future._root;\n  const currRoot = curr ? curr._root : null;\n  return getChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n}\nfunction getCanActivateChild(p) {\n  const canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n  if (!canActivateChild || canActivateChild.length === 0) return null;\n  return {\n    node: p,\n    guards: canActivateChild\n  };\n}\nfunction getTokenOrFunctionIdentity(tokenOrFunction, injector) {\n  const NOT_FOUND = Symbol();\n  const result = injector.get(tokenOrFunction, NOT_FOUND);\n  if (result === NOT_FOUND) {\n    if (typeof tokenOrFunction === 'function' && !ɵisInjectable(tokenOrFunction)) {\n      // We think the token is just a function so return it as-is\n      return tokenOrFunction;\n    } else {\n      // This will throw the not found error\n      return injector.get(tokenOrFunction);\n    }\n  }\n  return result;\n}\nfunction getChildRouteGuards(futureNode, currNode, contexts, futurePath, checks = {\n  canDeactivateChecks: [],\n  canActivateChecks: []\n}) {\n  const prevChildren = nodeChildrenAsMap(currNode);\n  // Process the children of the future route\n  futureNode.children.forEach(c => {\n    getRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]), checks);\n    delete prevChildren[c.value.outlet];\n  });\n  // Process any children left from the current route (not active for the future route)\n  Object.entries(prevChildren).forEach(([k, v]) => deactivateRouteAndItsChildren(v, contexts.getContext(k), checks));\n  return checks;\n}\nfunction getRouteGuards(futureNode, currNode, parentContexts, futurePath, checks = {\n  canDeactivateChecks: [],\n  canActivateChecks: []\n}) {\n  const future = futureNode.value;\n  const curr = currNode ? currNode.value : null;\n  const context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n  // reusing the node\n  if (curr && future.routeConfig === curr.routeConfig) {\n    const shouldRun = shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n    if (shouldRun) {\n      checks.canActivateChecks.push(new CanActivate(futurePath));\n    } else {\n      // we need to set the data\n      future.data = curr.data;\n      future._resolvedData = curr._resolvedData;\n    }\n    // If we have a component, we need to go through an outlet.\n    if (future.component) {\n      getChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath, checks);\n      // if we have a componentless route, we recurse but keep the same outlet map.\n    } else {\n      getChildRouteGuards(futureNode, currNode, parentContexts, futurePath, checks);\n    }\n    if (shouldRun && context && context.outlet && context.outlet.isActivated) {\n      checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, curr));\n    }\n  } else {\n    if (curr) {\n      deactivateRouteAndItsChildren(currNode, context, checks);\n    }\n    checks.canActivateChecks.push(new CanActivate(futurePath));\n    // If we have a component, we need to go through an outlet.\n    if (future.component) {\n      getChildRouteGuards(futureNode, null, context ? context.children : null, futurePath, checks);\n      // if we have a componentless route, we recurse but keep the same outlet map.\n    } else {\n      getChildRouteGuards(futureNode, null, parentContexts, futurePath, checks);\n    }\n  }\n  return checks;\n}\nfunction shouldRunGuardsAndResolvers(curr, future, mode) {\n  if (typeof mode === 'function') {\n    return mode(curr, future);\n  }\n  switch (mode) {\n    case 'pathParamsChange':\n      return !equalPath(curr.url, future.url);\n    case 'pathParamsOrQueryParamsChange':\n      return !equalPath(curr.url, future.url) || !shallowEqual(curr.queryParams, future.queryParams);\n    case 'always':\n      return true;\n    case 'paramsOrQueryParamsChange':\n      return !equalParamsAndUrlSegments(curr, future) || !shallowEqual(curr.queryParams, future.queryParams);\n    case 'paramsChange':\n    default:\n      return !equalParamsAndUrlSegments(curr, future);\n  }\n}\nfunction deactivateRouteAndItsChildren(route, context, checks) {\n  const children = nodeChildrenAsMap(route);\n  const r = route.value;\n  Object.entries(children).forEach(([childName, node]) => {\n    if (!r.component) {\n      deactivateRouteAndItsChildren(node, context, checks);\n    } else if (context) {\n      deactivateRouteAndItsChildren(node, context.children.getContext(childName), checks);\n    } else {\n      deactivateRouteAndItsChildren(node, null, checks);\n    }\n  });\n  if (!r.component) {\n    checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n  } else if (context && context.outlet && context.outlet.isActivated) {\n    checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n  } else {\n    checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n  }\n}\n\n/**\n * Simple function check, but generic so type inference will flow. Example:\n *\n * function product(a: number, b: number) {\n *   return a * b;\n * }\n *\n * if (isFunction<product>(fn)) {\n *   return fn(1, 2);\n * } else {\n *   throw \"Must provide the `product` function\";\n * }\n */\nfunction isFunction(v) {\n  return typeof v === 'function';\n}\nfunction isBoolean(v) {\n  return typeof v === 'boolean';\n}\nfunction isCanLoad(guard) {\n  return guard && isFunction(guard.canLoad);\n}\nfunction isCanActivate(guard) {\n  return guard && isFunction(guard.canActivate);\n}\nfunction isCanActivateChild(guard) {\n  return guard && isFunction(guard.canActivateChild);\n}\nfunction isCanDeactivate(guard) {\n  return guard && isFunction(guard.canDeactivate);\n}\nfunction isCanMatch(guard) {\n  return guard && isFunction(guard.canMatch);\n}\nfunction isEmptyError(e) {\n  return e instanceof EmptyError || e?.name === 'EmptyError';\n}\nconst INITIAL_VALUE = /* @__PURE__ */Symbol('INITIAL_VALUE');\nfunction prioritizedGuardValue() {\n  return switchMap(obs => {\n    return combineLatest(obs.map(o => o.pipe(take(1), startWith(INITIAL_VALUE)))).pipe(map(results => {\n      for (const result of results) {\n        if (result === true) {\n          // If result is true, check the next one\n          continue;\n        } else if (result === INITIAL_VALUE) {\n          // If guard has not finished, we need to stop processing.\n          return INITIAL_VALUE;\n        } else if (result === false || isRedirect(result)) {\n          // Result finished and was not true. Return the result.\n          // Note that we only allow false/UrlTree/RedirectCommand. Other values are considered invalid and\n          // ignored.\n          return result;\n        }\n      }\n      // Everything resolved to true. Return true.\n      return true;\n    }), filter(item => item !== INITIAL_VALUE), take(1));\n  });\n}\nfunction isRedirect(val) {\n  return isUrlTree(val) || val instanceof RedirectCommand;\n}\nfunction checkGuards(injector, forwardEvent) {\n  return mergeMap(t => {\n    const {\n      targetSnapshot,\n      currentSnapshot,\n      guards: {\n        canActivateChecks,\n        canDeactivateChecks\n      }\n    } = t;\n    if (canDeactivateChecks.length === 0 && canActivateChecks.length === 0) {\n      return of({\n        ...t,\n        guardsResult: true\n      });\n    }\n    return runCanDeactivateChecks(canDeactivateChecks, targetSnapshot, currentSnapshot, injector).pipe(mergeMap(canDeactivate => {\n      return canDeactivate && isBoolean(canDeactivate) ? runCanActivateChecks(targetSnapshot, canActivateChecks, injector, forwardEvent) : of(canDeactivate);\n    }), map(guardsResult => ({\n      ...t,\n      guardsResult\n    })));\n  });\n}\nfunction runCanDeactivateChecks(checks, futureRSS, currRSS, injector) {\n  return from(checks).pipe(mergeMap(check => runCanDeactivate(check.component, check.route, currRSS, futureRSS, injector)), first(result => {\n    return result !== true;\n  }, true));\n}\nfunction runCanActivateChecks(futureSnapshot, checks, injector, forwardEvent) {\n  return from(checks).pipe(concatMap(check => {\n    return concat(fireChildActivationStart(check.route.parent, forwardEvent), fireActivationStart(check.route, forwardEvent), runCanActivateChild(futureSnapshot, check.path, injector), runCanActivate(futureSnapshot, check.route, injector));\n  }), first(result => {\n    return result !== true;\n  }, true));\n}\n/**\n * This should fire off `ActivationStart` events for each route being activated at this\n * level.\n * In other words, if you're activating `a` and `b` below, `path` will contain the\n * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n * return\n * `true` so checks continue to run.\n */\nfunction fireActivationStart(snapshot, forwardEvent) {\n  if (snapshot !== null && forwardEvent) {\n    forwardEvent(new ActivationStart(snapshot));\n  }\n  return of(true);\n}\n/**\n * This should fire off `ChildActivationStart` events for each route being activated at this\n * level.\n * In other words, if you're activating `a` and `b` below, `path` will contain the\n * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n * return\n * `true` so checks continue to run.\n */\nfunction fireChildActivationStart(snapshot, forwardEvent) {\n  if (snapshot !== null && forwardEvent) {\n    forwardEvent(new ChildActivationStart(snapshot));\n  }\n  return of(true);\n}\nfunction runCanActivate(futureRSS, futureARS, injector) {\n  const canActivate = futureARS.routeConfig ? futureARS.routeConfig.canActivate : null;\n  if (!canActivate || canActivate.length === 0) return of(true);\n  const canActivateObservables = canActivate.map(canActivate => {\n    return defer(() => {\n      const closestInjector = getClosestRouteInjector(futureARS) ?? injector;\n      const guard = getTokenOrFunctionIdentity(canActivate, closestInjector);\n      const guardVal = isCanActivate(guard) ? guard.canActivate(futureARS, futureRSS) : runInInjectionContext(closestInjector, () => guard(futureARS, futureRSS));\n      return wrapIntoObservable(guardVal).pipe(first());\n    });\n  });\n  return of(canActivateObservables).pipe(prioritizedGuardValue());\n}\nfunction runCanActivateChild(futureRSS, path, injector) {\n  const futureARS = path[path.length - 1];\n  const canActivateChildGuards = path.slice(0, path.length - 1).reverse().map(p => getCanActivateChild(p)).filter(_ => _ !== null);\n  const canActivateChildGuardsMapped = canActivateChildGuards.map(d => {\n    return defer(() => {\n      const guardsMapped = d.guards.map(canActivateChild => {\n        const closestInjector = getClosestRouteInjector(d.node) ?? injector;\n        const guard = getTokenOrFunctionIdentity(canActivateChild, closestInjector);\n        const guardVal = isCanActivateChild(guard) ? guard.canActivateChild(futureARS, futureRSS) : runInInjectionContext(closestInjector, () => guard(futureARS, futureRSS));\n        return wrapIntoObservable(guardVal).pipe(first());\n      });\n      return of(guardsMapped).pipe(prioritizedGuardValue());\n    });\n  });\n  return of(canActivateChildGuardsMapped).pipe(prioritizedGuardValue());\n}\nfunction runCanDeactivate(component, currARS, currRSS, futureRSS, injector) {\n  const canDeactivate = currARS && currARS.routeConfig ? currARS.routeConfig.canDeactivate : null;\n  if (!canDeactivate || canDeactivate.length === 0) return of(true);\n  const canDeactivateObservables = canDeactivate.map(c => {\n    const closestInjector = getClosestRouteInjector(currARS) ?? injector;\n    const guard = getTokenOrFunctionIdentity(c, closestInjector);\n    const guardVal = isCanDeactivate(guard) ? guard.canDeactivate(component, currARS, currRSS, futureRSS) : runInInjectionContext(closestInjector, () => guard(component, currARS, currRSS, futureRSS));\n    return wrapIntoObservable(guardVal).pipe(first());\n  });\n  return of(canDeactivateObservables).pipe(prioritizedGuardValue());\n}\nfunction runCanLoadGuards(injector, route, segments, urlSerializer) {\n  const canLoad = route.canLoad;\n  if (canLoad === undefined || canLoad.length === 0) {\n    return of(true);\n  }\n  const canLoadObservables = canLoad.map(injectionToken => {\n    const guard = getTokenOrFunctionIdentity(injectionToken, injector);\n    const guardVal = isCanLoad(guard) ? guard.canLoad(route, segments) : runInInjectionContext(injector, () => guard(route, segments));\n    return wrapIntoObservable(guardVal);\n  });\n  return of(canLoadObservables).pipe(prioritizedGuardValue(), redirectIfUrlTree(urlSerializer));\n}\nfunction redirectIfUrlTree(urlSerializer) {\n  return pipe(tap(result => {\n    if (typeof result === 'boolean') return;\n    throw redirectingNavigationError(urlSerializer, result);\n  }), map(result => result === true));\n}\nfunction runCanMatchGuards(injector, route, segments, urlSerializer) {\n  const canMatch = route.canMatch;\n  if (!canMatch || canMatch.length === 0) return of(true);\n  const canMatchObservables = canMatch.map(injectionToken => {\n    const guard = getTokenOrFunctionIdentity(injectionToken, injector);\n    const guardVal = isCanMatch(guard) ? guard.canMatch(route, segments) : runInInjectionContext(injector, () => guard(route, segments));\n    return wrapIntoObservable(guardVal);\n  });\n  return of(canMatchObservables).pipe(prioritizedGuardValue(), redirectIfUrlTree(urlSerializer));\n}\nclass NoMatch {\n  constructor(segmentGroup) {\n    this.segmentGroup = segmentGroup || null;\n  }\n}\nclass AbsoluteRedirect extends Error {\n  constructor(urlTree) {\n    super();\n    this.urlTree = urlTree;\n  }\n}\nfunction noMatch$1(segmentGroup) {\n  return throwError(new NoMatch(segmentGroup));\n}\nfunction absoluteRedirect(newTree) {\n  return throwError(new AbsoluteRedirect(newTree));\n}\nfunction namedOutletsRedirect(redirectTo) {\n  return throwError(new ɵRuntimeError(4000 /* RuntimeErrorCode.NAMED_OUTLET_REDIRECT */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Only absolute redirects can have named outlets. redirectTo: '${redirectTo}'`));\n}\nfunction canLoadFails(route) {\n  return throwError(navigationCancelingError((typeof ngDevMode === 'undefined' || ngDevMode) && `Cannot load children because the guard of the route \"path: '${route.path}'\" returned false`, NavigationCancellationCode.GuardRejected));\n}\nclass ApplyRedirects {\n  constructor(urlSerializer, urlTree) {\n    this.urlSerializer = urlSerializer;\n    this.urlTree = urlTree;\n  }\n  lineralizeSegments(route, urlTree) {\n    let res = [];\n    let c = urlTree.root;\n    while (true) {\n      res = res.concat(c.segments);\n      if (c.numberOfChildren === 0) {\n        return of(res);\n      }\n      if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n        return namedOutletsRedirect(`${route.redirectTo}`);\n      }\n      c = c.children[PRIMARY_OUTLET];\n    }\n  }\n  applyRedirectCommands(segments, redirectTo, posParams, currentSnapshot, injector) {\n    if (typeof redirectTo !== 'string') {\n      const redirectToFn = redirectTo;\n      const {\n        queryParams,\n        fragment,\n        routeConfig,\n        url,\n        outlet,\n        params,\n        data,\n        title\n      } = currentSnapshot;\n      const newRedirect = runInInjectionContext(injector, () => redirectToFn({\n        params,\n        data,\n        queryParams,\n        fragment,\n        routeConfig,\n        url,\n        outlet,\n        title\n      }));\n      if (newRedirect instanceof UrlTree) {\n        throw new AbsoluteRedirect(newRedirect);\n      }\n      redirectTo = newRedirect;\n    }\n    const newTree = this.applyRedirectCreateUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    if (redirectTo[0] === '/') {\n      throw new AbsoluteRedirect(newTree);\n    }\n    return newTree;\n  }\n  applyRedirectCreateUrlTree(redirectTo, urlTree, segments, posParams) {\n    const newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n    return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n  }\n  createQueryParams(redirectToParams, actualParams) {\n    const res = {};\n    Object.entries(redirectToParams).forEach(([k, v]) => {\n      const copySourceValue = typeof v === 'string' && v[0] === ':';\n      if (copySourceValue) {\n        const sourceName = v.substring(1);\n        res[k] = actualParams[sourceName];\n      } else {\n        res[k] = v;\n      }\n    });\n    return res;\n  }\n  createSegmentGroup(redirectTo, group, segments, posParams) {\n    const updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n    let children = {};\n    Object.entries(group.children).forEach(([name, child]) => {\n      children[name] = this.createSegmentGroup(redirectTo, child, segments, posParams);\n    });\n    return new UrlSegmentGroup(updatedSegments, children);\n  }\n  createSegments(redirectTo, redirectToSegments, actualSegments, posParams) {\n    return redirectToSegments.map(s => s.path[0] === ':' ? this.findPosParam(redirectTo, s, posParams) : this.findOrReturn(s, actualSegments));\n  }\n  findPosParam(redirectTo, redirectToUrlSegment, posParams) {\n    const pos = posParams[redirectToUrlSegment.path.substring(1)];\n    if (!pos) throw new ɵRuntimeError(4001 /* RuntimeErrorCode.MISSING_REDIRECT */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Cannot redirect to '${redirectTo}'. Cannot find '${redirectToUrlSegment.path}'.`);\n    return pos;\n  }\n  findOrReturn(redirectToUrlSegment, actualSegments) {\n    let idx = 0;\n    for (const s of actualSegments) {\n      if (s.path === redirectToUrlSegment.path) {\n        actualSegments.splice(idx);\n        return s;\n      }\n      idx++;\n    }\n    return redirectToUrlSegment;\n  }\n}\nconst noMatch = {\n  matched: false,\n  consumedSegments: [],\n  remainingSegments: [],\n  parameters: {},\n  positionalParamSegments: {}\n};\nfunction matchWithChecks(segmentGroup, route, segments, injector, urlSerializer) {\n  const result = match(segmentGroup, route, segments);\n  if (!result.matched) {\n    return of(result);\n  }\n  // Only create the Route's `EnvironmentInjector` if it matches the attempted\n  // navigation\n  injector = getOrCreateRouteInjectorIfNeeded(route, injector);\n  return runCanMatchGuards(injector, route, segments, urlSerializer).pipe(map(v => v === true ? result : {\n    ...noMatch\n  }));\n}\nfunction match(segmentGroup, route, segments) {\n  if (route.path === '**') {\n    return createWildcardMatchResult(segments);\n  }\n  if (route.path === '') {\n    if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n      return {\n        ...noMatch\n      };\n    }\n    return {\n      matched: true,\n      consumedSegments: [],\n      remainingSegments: segments,\n      parameters: {},\n      positionalParamSegments: {}\n    };\n  }\n  const matcher = route.matcher || defaultUrlMatcher;\n  const res = matcher(segments, segmentGroup, route);\n  if (!res) return {\n    ...noMatch\n  };\n  const posParams = {};\n  Object.entries(res.posParams ?? {}).forEach(([k, v]) => {\n    posParams[k] = v.path;\n  });\n  const parameters = res.consumed.length > 0 ? {\n    ...posParams,\n    ...res.consumed[res.consumed.length - 1].parameters\n  } : posParams;\n  return {\n    matched: true,\n    consumedSegments: res.consumed,\n    remainingSegments: segments.slice(res.consumed.length),\n    // TODO(atscott): investigate combining parameters and positionalParamSegments\n    parameters,\n    positionalParamSegments: res.posParams ?? {}\n  };\n}\nfunction createWildcardMatchResult(segments) {\n  return {\n    matched: true,\n    parameters: segments.length > 0 ? last(segments).parameters : {},\n    consumedSegments: segments,\n    remainingSegments: [],\n    positionalParamSegments: {}\n  };\n}\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n  if (slicedSegments.length > 0 && containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n    const s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n    return {\n      segmentGroup: s,\n      slicedSegments: []\n    };\n  }\n  if (slicedSegments.length === 0 && containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n    const s = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n    return {\n      segmentGroup: s,\n      slicedSegments\n    };\n  }\n  const s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n  return {\n    segmentGroup: s,\n    slicedSegments\n  };\n}\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n  const res = {};\n  for (const r of routes) {\n    if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n      const s = new UrlSegmentGroup([], {});\n      res[getOutlet(r)] = s;\n    }\n  }\n  return {\n    ...children,\n    ...res\n  };\n}\nfunction createChildrenForEmptyPaths(routes, primarySegment) {\n  const res = {};\n  res[PRIMARY_OUTLET] = primarySegment;\n  for (const r of routes) {\n    if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n      const s = new UrlSegmentGroup([], {});\n      res[getOutlet(r)] = s;\n    }\n  }\n  return res;\n}\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n  return routes.some(r => emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet(r) !== PRIMARY_OUTLET);\n}\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n  return routes.some(r => emptyPathMatch(segmentGroup, slicedSegments, r));\n}\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n  if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n    return false;\n  }\n  return r.path === '';\n}\nfunction noLeftoversInUrl(segmentGroup, segments, outlet) {\n  return segments.length === 0 && !segmentGroup.children[outlet];\n}\n\n/**\n * Class used to indicate there were no additional route config matches but that all segments of\n * the URL were consumed during matching so the route was URL matched. When this happens, we still\n * try to match child configs in case there are empty path children.\n */\nclass NoLeftoversInUrl {}\nfunction recognize$1(injector, configLoader, rootComponentType, config, urlTree, urlSerializer, paramsInheritanceStrategy = 'emptyOnly') {\n  return new Recognizer(injector, configLoader, rootComponentType, config, urlTree, paramsInheritanceStrategy, urlSerializer).recognize();\n}\nconst MAX_ALLOWED_REDIRECTS = 31;\nclass Recognizer {\n  constructor(injector, configLoader, rootComponentType, config, urlTree, paramsInheritanceStrategy, urlSerializer) {\n    this.injector = injector;\n    this.configLoader = configLoader;\n    this.rootComponentType = rootComponentType;\n    this.config = config;\n    this.urlTree = urlTree;\n    this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n    this.urlSerializer = urlSerializer;\n    this.applyRedirects = new ApplyRedirects(this.urlSerializer, this.urlTree);\n    this.absoluteRedirectCount = 0;\n    this.allowRedirects = true;\n  }\n  noMatchError(e) {\n    return new ɵRuntimeError(4002 /* RuntimeErrorCode.NO_MATCH */, typeof ngDevMode === 'undefined' || ngDevMode ? `Cannot match any routes. URL Segment: '${e.segmentGroup}'` : `'${e.segmentGroup}'`);\n  }\n  recognize() {\n    const rootSegmentGroup = split(this.urlTree.root, [], [], this.config).segmentGroup;\n    return this.match(rootSegmentGroup).pipe(map(({\n      children,\n      rootSnapshot\n    }) => {\n      const rootNode = new TreeNode(rootSnapshot, children);\n      const routeState = new RouterStateSnapshot('', rootNode);\n      const tree = createUrlTreeFromSnapshot(rootSnapshot, [], this.urlTree.queryParams, this.urlTree.fragment);\n      // https://github.com/angular/angular/issues/47307\n      // Creating the tree stringifies the query params\n      // We don't want to do this here so reassign them to the original.\n      tree.queryParams = this.urlTree.queryParams;\n      routeState.url = this.urlSerializer.serialize(tree);\n      return {\n        state: routeState,\n        tree\n      };\n    }));\n  }\n  match(rootSegmentGroup) {\n    // Use Object.freeze to prevent readers of the Router state from modifying it outside\n    // of a navigation, resulting in the router being out of sync with the browser.\n    const rootSnapshot = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze({\n      ...this.urlTree.queryParams\n    }), this.urlTree.fragment, Object.freeze({}), PRIMARY_OUTLET, this.rootComponentType, null, {});\n    return this.processSegmentGroup(this.injector, this.config, rootSegmentGroup, PRIMARY_OUTLET, rootSnapshot).pipe(map(children => {\n      return {\n        children,\n        rootSnapshot\n      };\n    }), catchError(e => {\n      if (e instanceof AbsoluteRedirect) {\n        this.urlTree = e.urlTree;\n        return this.match(e.urlTree.root);\n      }\n      if (e instanceof NoMatch) {\n        throw this.noMatchError(e);\n      }\n      throw e;\n    }));\n  }\n  processSegmentGroup(injector, config, segmentGroup, outlet, parentRoute) {\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n      return this.processChildren(injector, config, segmentGroup, parentRoute);\n    }\n    return this.processSegment(injector, config, segmentGroup, segmentGroup.segments, outlet, true, parentRoute).pipe(map(child => child instanceof TreeNode ? [child] : []));\n  }\n  /**\n   * Matches every child outlet in the `segmentGroup` to a `Route` in the config. Returns `null` if\n   * we cannot find a match for _any_ of the children.\n   *\n   * @param config - The `Routes` to match against\n   * @param segmentGroup - The `UrlSegmentGroup` whose children need to be matched against the\n   *     config.\n   */\n  processChildren(injector, config, segmentGroup, parentRoute) {\n    // Expand outlets one at a time, starting with the primary outlet. We need to do it this way\n    // because an absolute redirect from the primary outlet takes precedence.\n    const childOutlets = [];\n    for (const child of Object.keys(segmentGroup.children)) {\n      if (child === 'primary') {\n        childOutlets.unshift(child);\n      } else {\n        childOutlets.push(child);\n      }\n    }\n    return from(childOutlets).pipe(concatMap(childOutlet => {\n      const child = segmentGroup.children[childOutlet];\n      // Sort the config so that routes with outlets that match the one being activated\n      // appear first, followed by routes for other outlets, which might match if they have\n      // an empty path.\n      const sortedConfig = sortByMatchingOutlets(config, childOutlet);\n      return this.processSegmentGroup(injector, sortedConfig, child, childOutlet, parentRoute);\n    }), scan((children, outletChildren) => {\n      children.push(...outletChildren);\n      return children;\n    }), defaultIfEmpty(null), last$1(), mergeMap(children => {\n      if (children === null) return noMatch$1(segmentGroup);\n      // Because we may have matched two outlets to the same empty path segment, we can have\n      // multiple activated results for the same outlet. We should merge the children of\n      // these results so the final return value is only one `TreeNode` per outlet.\n      const mergedChildren = mergeEmptyPathMatches(children);\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // This should really never happen - we are only taking the first match for each\n        // outlet and merge the empty path matches.\n        checkOutletNameUniqueness(mergedChildren);\n      }\n      sortActivatedRouteSnapshots(mergedChildren);\n      return of(mergedChildren);\n    }));\n  }\n  processSegment(injector, routes, segmentGroup, segments, outlet, allowRedirects, parentRoute) {\n    return from(routes).pipe(concatMap(r => {\n      return this.processSegmentAgainstRoute(r._injector ?? injector, routes, r, segmentGroup, segments, outlet, allowRedirects, parentRoute).pipe(catchError(e => {\n        if (e instanceof NoMatch) {\n          return of(null);\n        }\n        throw e;\n      }));\n    }), first(x => !!x), catchError(e => {\n      if (isEmptyError(e)) {\n        if (noLeftoversInUrl(segmentGroup, segments, outlet)) {\n          return of(new NoLeftoversInUrl());\n        }\n        return noMatch$1(segmentGroup);\n      }\n      throw e;\n    }));\n  }\n  processSegmentAgainstRoute(injector, routes, route, rawSegment, segments, outlet, allowRedirects, parentRoute) {\n    // We allow matches to empty paths when the outlets differ so we can match a url like `/(b:b)` to\n    // a config like\n    // * `{path: '', children: [{path: 'b', outlet: 'b'}]}`\n    // or even\n    // * `{path: '', outlet: 'a', children: [{path: 'b', outlet: 'b'}]`\n    //\n    // The exception here is when the segment outlet is for the primary outlet. This would\n    // result in a match inside the named outlet because all children there are written as primary\n    // outlets. So we need to prevent child named outlet matches in a url like `/b` in a config like\n    // * `{path: '', outlet: 'x' children: [{path: 'b'}]}`\n    // This should only match if the url is `/(x:b)`.\n    if (getOutlet(route) !== outlet && (outlet === PRIMARY_OUTLET || !emptyPathMatch(rawSegment, segments, route))) {\n      return noMatch$1(rawSegment);\n    }\n    if (route.redirectTo === undefined) {\n      return this.matchSegmentAgainstRoute(injector, rawSegment, route, segments, outlet, parentRoute);\n    }\n    if (this.allowRedirects && allowRedirects) {\n      return this.expandSegmentAgainstRouteUsingRedirect(injector, rawSegment, routes, route, segments, outlet, parentRoute);\n    }\n    return noMatch$1(rawSegment);\n  }\n  expandSegmentAgainstRouteUsingRedirect(injector, segmentGroup, routes, route, segments, outlet, parentRoute) {\n    const {\n      matched,\n      parameters,\n      consumedSegments,\n      positionalParamSegments,\n      remainingSegments\n    } = match(segmentGroup, route, segments);\n    if (!matched) return noMatch$1(segmentGroup);\n    // TODO(atscott): Move all of this under an if(ngDevMode) as a breaking change and allow stack\n    // size exceeded in production\n    if (typeof route.redirectTo === 'string' && route.redirectTo[0] === '/') {\n      this.absoluteRedirectCount++;\n      if (this.absoluteRedirectCount > MAX_ALLOWED_REDIRECTS) {\n        if (ngDevMode) {\n          throw new ɵRuntimeError(4016 /* RuntimeErrorCode.INFINITE_REDIRECT */, `Detected possible infinite redirect when redirecting from '${this.urlTree}' to '${route.redirectTo}'.\\n` + `This is currently a dev mode only error but will become a` + ` call stack size exceeded error in production in a future major version.`);\n        }\n        this.allowRedirects = false;\n      }\n    }\n    const currentSnapshot = new ActivatedRouteSnapshot(segments, parameters, Object.freeze({\n      ...this.urlTree.queryParams\n    }), this.urlTree.fragment, getData(route), getOutlet(route), route.component ?? route._loadedComponent ?? null, route, getResolve(route));\n    const inherited = getInherited(currentSnapshot, parentRoute, this.paramsInheritanceStrategy);\n    currentSnapshot.params = Object.freeze(inherited.params);\n    currentSnapshot.data = Object.freeze(inherited.data);\n    const newTree = this.applyRedirects.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments, currentSnapshot, injector);\n    return this.applyRedirects.lineralizeSegments(route, newTree).pipe(mergeMap(newSegments => {\n      return this.processSegment(injector, routes, segmentGroup, newSegments.concat(remainingSegments), outlet, false, parentRoute);\n    }));\n  }\n  matchSegmentAgainstRoute(injector, rawSegment, route, segments, outlet, parentRoute) {\n    const matchResult = matchWithChecks(rawSegment, route, segments, injector, this.urlSerializer);\n    if (route.path === '**') {\n      // Prior versions of the route matching algorithm would stop matching at the wildcard route.\n      // We should investigate a better strategy for any existing children. Otherwise, these\n      // child segments are silently dropped from the navigation.\n      // https://github.com/angular/angular/issues/40089\n      rawSegment.children = {};\n    }\n    return matchResult.pipe(switchMap(result => {\n      if (!result.matched) {\n        return noMatch$1(rawSegment);\n      }\n      // If the route has an injector created from providers, we should start using that.\n      injector = route._injector ?? injector;\n      return this.getChildConfig(injector, route, segments).pipe(switchMap(({\n        routes: childConfig\n      }) => {\n        const childInjector = route._loadedInjector ?? injector;\n        const {\n          parameters,\n          consumedSegments,\n          remainingSegments\n        } = result;\n        const snapshot = new ActivatedRouteSnapshot(consumedSegments, parameters, Object.freeze({\n          ...this.urlTree.queryParams\n        }), this.urlTree.fragment, getData(route), getOutlet(route), route.component ?? route._loadedComponent ?? null, route, getResolve(route));\n        const inherited = getInherited(snapshot, parentRoute, this.paramsInheritanceStrategy);\n        snapshot.params = Object.freeze(inherited.params);\n        snapshot.data = Object.freeze(inherited.data);\n        const {\n          segmentGroup,\n          slicedSegments\n        } = split(rawSegment, consumedSegments, remainingSegments, childConfig);\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n          return this.processChildren(childInjector, childConfig, segmentGroup, snapshot).pipe(map(children => {\n            return new TreeNode(snapshot, children);\n          }));\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n          return of(new TreeNode(snapshot, []));\n        }\n        const matchedOnOutlet = getOutlet(route) === outlet;\n        // If we matched a config due to empty path match on a different outlet, we need to\n        // continue passing the current outlet for the segment rather than switch to PRIMARY.\n        // Note that we switch to primary when we have a match because outlet configs look like\n        // this: {path: 'a', outlet: 'a', children: [\n        //  {path: 'b', component: B},\n        //  {path: 'c', component: C},\n        // ]}\n        // Notice that the children of the named outlet are configured with the primary outlet\n        return this.processSegment(childInjector, childConfig, segmentGroup, slicedSegments, matchedOnOutlet ? PRIMARY_OUTLET : outlet, true, snapshot).pipe(map(child => {\n          return new TreeNode(snapshot, child instanceof TreeNode ? [child] : []);\n        }));\n      }));\n    }));\n  }\n  getChildConfig(injector, route, segments) {\n    if (route.children) {\n      // The children belong to the same module\n      return of({\n        routes: route.children,\n        injector\n      });\n    }\n    if (route.loadChildren) {\n      // lazy children belong to the loaded module\n      if (route._loadedRoutes !== undefined) {\n        return of({\n          routes: route._loadedRoutes,\n          injector: route._loadedInjector\n        });\n      }\n      return runCanLoadGuards(injector, route, segments, this.urlSerializer).pipe(mergeMap(shouldLoadResult => {\n        if (shouldLoadResult) {\n          return this.configLoader.loadChildren(injector, route).pipe(tap(cfg => {\n            route._loadedRoutes = cfg.routes;\n            route._loadedInjector = cfg.injector;\n          }));\n        }\n        return canLoadFails(route);\n      }));\n    }\n    return of({\n      routes: [],\n      injector\n    });\n  }\n}\nfunction sortActivatedRouteSnapshots(nodes) {\n  nodes.sort((a, b) => {\n    if (a.value.outlet === PRIMARY_OUTLET) return -1;\n    if (b.value.outlet === PRIMARY_OUTLET) return 1;\n    return a.value.outlet.localeCompare(b.value.outlet);\n  });\n}\nfunction hasEmptyPathConfig(node) {\n  const config = node.value.routeConfig;\n  return config && config.path === '';\n}\n/**\n * Finds `TreeNode`s with matching empty path route configs and merges them into `TreeNode` with\n * the children from each duplicate. This is necessary because different outlets can match a\n * single empty path route config and the results need to then be merged.\n */\nfunction mergeEmptyPathMatches(nodes) {\n  const result = [];\n  // The set of nodes which contain children that were merged from two duplicate empty path nodes.\n  const mergedNodes = new Set();\n  for (const node of nodes) {\n    if (!hasEmptyPathConfig(node)) {\n      result.push(node);\n      continue;\n    }\n    const duplicateEmptyPathNode = result.find(resultNode => node.value.routeConfig === resultNode.value.routeConfig);\n    if (duplicateEmptyPathNode !== undefined) {\n      duplicateEmptyPathNode.children.push(...node.children);\n      mergedNodes.add(duplicateEmptyPathNode);\n    } else {\n      result.push(node);\n    }\n  }\n  // For each node which has children from multiple sources, we need to recompute a new `TreeNode`\n  // by also merging those children. This is necessary when there are multiple empty path configs\n  // in a row. Put another way: whenever we combine children of two nodes, we need to also check\n  // if any of those children can be combined into a single node as well.\n  for (const mergedNode of mergedNodes) {\n    const mergedChildren = mergeEmptyPathMatches(mergedNode.children);\n    result.push(new TreeNode(mergedNode.value, mergedChildren));\n  }\n  return result.filter(n => !mergedNodes.has(n));\n}\nfunction checkOutletNameUniqueness(nodes) {\n  const names = {};\n  nodes.forEach(n => {\n    const routeWithSameOutletName = names[n.value.outlet];\n    if (routeWithSameOutletName) {\n      const p = routeWithSameOutletName.url.map(s => s.toString()).join('/');\n      const c = n.value.url.map(s => s.toString()).join('/');\n      throw new ɵRuntimeError(4006 /* RuntimeErrorCode.TWO_SEGMENTS_WITH_SAME_OUTLET */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Two segments cannot have the same outlet name: '${p}' and '${c}'.`);\n    }\n    names[n.value.outlet] = n.value;\n  });\n}\nfunction getData(route) {\n  return route.data || {};\n}\nfunction getResolve(route) {\n  return route.resolve || {};\n}\nfunction recognize(injector, configLoader, rootComponentType, config, serializer, paramsInheritanceStrategy) {\n  return mergeMap(t => recognize$1(injector, configLoader, rootComponentType, config, t.extractedUrl, serializer, paramsInheritanceStrategy).pipe(map(({\n    state: targetSnapshot,\n    tree: urlAfterRedirects\n  }) => {\n    return {\n      ...t,\n      targetSnapshot,\n      urlAfterRedirects\n    };\n  })));\n}\nfunction resolveData(paramsInheritanceStrategy, injector) {\n  return mergeMap(t => {\n    const {\n      targetSnapshot,\n      guards: {\n        canActivateChecks\n      }\n    } = t;\n    if (!canActivateChecks.length) {\n      return of(t);\n    }\n    // Iterating a Set in javascript  happens in insertion order so it is safe to use a `Set` to\n    // preserve the correct order that the resolvers should run in.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set#description\n    const routesWithResolversToRun = new Set(canActivateChecks.map(check => check.route));\n    const routesNeedingDataUpdates = new Set();\n    for (const route of routesWithResolversToRun) {\n      if (routesNeedingDataUpdates.has(route)) {\n        continue;\n      }\n      // All children under the route with a resolver to run need to recompute inherited data.\n      for (const newRoute of flattenRouteTree(route)) {\n        routesNeedingDataUpdates.add(newRoute);\n      }\n    }\n    let routesProcessed = 0;\n    return from(routesNeedingDataUpdates).pipe(concatMap(route => {\n      if (routesWithResolversToRun.has(route)) {\n        return runResolve(route, targetSnapshot, paramsInheritanceStrategy, injector);\n      } else {\n        route.data = getInherited(route, route.parent, paramsInheritanceStrategy).resolve;\n        return of(void 0);\n      }\n    }), tap(() => routesProcessed++), takeLast(1), mergeMap(_ => routesProcessed === routesNeedingDataUpdates.size ? of(t) : EMPTY));\n  });\n}\n/**\n *  Returns the `ActivatedRouteSnapshot` tree as an array, using DFS to traverse the route tree.\n */\nfunction flattenRouteTree(route) {\n  const descendants = route.children.map(child => flattenRouteTree(child)).flat();\n  return [route, ...descendants];\n}\nfunction runResolve(futureARS, futureRSS, paramsInheritanceStrategy, injector) {\n  const config = futureARS.routeConfig;\n  const resolve = futureARS._resolve;\n  if (config?.title !== undefined && !hasStaticTitle(config)) {\n    resolve[RouteTitleKey] = config.title;\n  }\n  return resolveNode(resolve, futureARS, futureRSS, injector).pipe(map(resolvedData => {\n    futureARS._resolvedData = resolvedData;\n    futureARS.data = getInherited(futureARS, futureARS.parent, paramsInheritanceStrategy).resolve;\n    return null;\n  }));\n}\nfunction resolveNode(resolve, futureARS, futureRSS, injector) {\n  const keys = getDataKeys(resolve);\n  if (keys.length === 0) {\n    return of({});\n  }\n  const data = {};\n  return from(keys).pipe(mergeMap(key => getResolver(resolve[key], futureARS, futureRSS, injector).pipe(first(), tap(value => {\n    if (value instanceof RedirectCommand) {\n      throw redirectingNavigationError(new DefaultUrlSerializer(), value);\n    }\n    data[key] = value;\n  }))), takeLast(1), mapTo(data), catchError(e => isEmptyError(e) ? EMPTY : throwError(e)));\n}\nfunction getResolver(injectionToken, futureARS, futureRSS, injector) {\n  const closestInjector = getClosestRouteInjector(futureARS) ?? injector;\n  const resolver = getTokenOrFunctionIdentity(injectionToken, closestInjector);\n  const resolverValue = resolver.resolve ? resolver.resolve(futureARS, futureRSS) : runInInjectionContext(closestInjector, () => resolver(futureARS, futureRSS));\n  return wrapIntoObservable(resolverValue);\n}\n\n/**\n * Perform a side effect through a switchMap for every emission on the source Observable,\n * but return an Observable that is identical to the source. It's essentially the same as\n * the `tap` operator, but if the side effectful `next` function returns an ObservableInput,\n * it will wait before continuing with the original value.\n */\nfunction switchTap(next) {\n  return switchMap(v => {\n    const nextResult = next(v);\n    if (nextResult) {\n      return from(nextResult).pipe(map(() => v));\n    }\n    return of(v);\n  });\n}\n\n/**\n * Provides a strategy for setting the page title after a router navigation.\n *\n * The built-in implementation traverses the router state snapshot and finds the deepest primary\n * outlet with `title` property. Given the `Routes` below, navigating to\n * `/base/child(popup:aux)` would result in the document title being set to \"child\".\n * ```\n * [\n *   {path: 'base', title: 'base', children: [\n *     {path: 'child', title: 'child'},\n *   ],\n *   {path: 'aux', outlet: 'popup', title: 'popupTitle'}\n * ]\n * ```\n *\n * This class can be used as a base class for custom title strategies. That is, you can create your\n * own class that extends the `TitleStrategy`. Note that in the above example, the `title`\n * from the named outlet is never used. However, a custom strategy might be implemented to\n * incorporate titles in named outlets.\n *\n * @publicApi\n * @see [Page title guide](guide/routing/common-router-tasks#setting-the-page-title)\n */\nlet TitleStrategy = /*#__PURE__*/(() => {\n  class TitleStrategy {\n    /**\n     * @returns The `title` of the deepest primary route.\n     */\n    buildTitle(snapshot) {\n      let pageTitle;\n      let route = snapshot.root;\n      while (route !== undefined) {\n        pageTitle = this.getResolvedTitleForRoute(route) ?? pageTitle;\n        route = route.children.find(child => child.outlet === PRIMARY_OUTLET);\n      }\n      return pageTitle;\n    }\n    /**\n     * Given an `ActivatedRouteSnapshot`, returns the final value of the\n     * `Route.title` property, which can either be a static string or a resolved value.\n     */\n    getResolvedTitleForRoute(snapshot) {\n      return snapshot.data[RouteTitleKey];\n    }\n    static {\n      this.ɵfac = function TitleStrategy_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TitleStrategy)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: TitleStrategy,\n        factory: () => (() => inject(DefaultTitleStrategy))(),\n        providedIn: 'root'\n      });\n    }\n  }\n  return TitleStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The default `TitleStrategy` used by the router that updates the title using the `Title` service.\n */\nlet DefaultTitleStrategy = /*#__PURE__*/(() => {\n  class DefaultTitleStrategy extends TitleStrategy {\n    constructor(title) {\n      super();\n      this.title = title;\n    }\n    /**\n     * Sets the title of the browser to the given value.\n     *\n     * @param title The `pageTitle` from the deepest primary route.\n     */\n    updateTitle(snapshot) {\n      const title = this.buildTitle(snapshot);\n      if (title !== undefined) {\n        this.title.setTitle(title);\n      }\n    }\n    static {\n      this.ɵfac = function DefaultTitleStrategy_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || DefaultTitleStrategy)(i0.ɵɵinject(i1.Title));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: DefaultTitleStrategy,\n        factory: DefaultTitleStrategy.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return DefaultTitleStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A DI token for the router service.\n *\n * @publicApi\n */\nconst ROUTER_CONFIGURATION = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'router config' : '', {\n  providedIn: 'root',\n  factory: () => ({})\n});\n\n/**\n * This component is used internally within the router to be a placeholder when an empty\n * router-outlet is needed. For example, with a config such as:\n *\n * `{path: 'parent', outlet: 'nav', children: [...]}`\n *\n * In order to render, there needs to be a component on this config, which will default\n * to this `EmptyOutletComponent`.\n */\nlet ɵEmptyOutletComponent = /*#__PURE__*/(() => {\n  class ɵEmptyOutletComponent {\n    static {\n      this.ɵfac = function ɵEmptyOutletComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ɵEmptyOutletComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: ɵEmptyOutletComponent,\n        selectors: [[\"ng-component\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 1,\n        vars: 0,\n        template: function _EmptyOutletComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelement(0, \"router-outlet\");\n          }\n        },\n        dependencies: [RouterOutlet],\n        encapsulation: 2\n      });\n    }\n  }\n  return ɵEmptyOutletComponent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Makes a copy of the config and adds any default required properties.\n */\nfunction standardizeConfig(r) {\n  const children = r.children && r.children.map(standardizeConfig);\n  const c = children ? {\n    ...r,\n    children\n  } : {\n    ...r\n  };\n  if (!c.component && !c.loadComponent && (children || c.loadChildren) && c.outlet && c.outlet !== PRIMARY_OUTLET) {\n    c.component = ɵEmptyOutletComponent;\n  }\n  return c;\n}\n\n/**\n * The DI token for a router configuration.\n *\n * `ROUTES` is a low level API for router configuration via dependency injection.\n *\n * We recommend that in almost all cases to use higher level APIs such as `RouterModule.forRoot()`,\n * `provideRouter`, or `Router.resetConfig()`.\n *\n * @publicApi\n */\nconst ROUTES = /*#__PURE__*/new InjectionToken(ngDevMode ? 'ROUTES' : '');\nlet RouterConfigLoader = /*#__PURE__*/(() => {\n  class RouterConfigLoader {\n    constructor() {\n      this.componentLoaders = new WeakMap();\n      this.childrenLoaders = new WeakMap();\n      this.compiler = inject(Compiler);\n    }\n    loadComponent(route) {\n      if (this.componentLoaders.get(route)) {\n        return this.componentLoaders.get(route);\n      } else if (route._loadedComponent) {\n        return of(route._loadedComponent);\n      }\n      if (this.onLoadStartListener) {\n        this.onLoadStartListener(route);\n      }\n      const loadRunner = wrapIntoObservable(route.loadComponent()).pipe(map(maybeUnwrapDefaultExport), tap(component => {\n        if (this.onLoadEndListener) {\n          this.onLoadEndListener(route);\n        }\n        (typeof ngDevMode === 'undefined' || ngDevMode) && assertStandalone(route.path ?? '', component);\n        route._loadedComponent = component;\n      }), finalize(() => {\n        this.componentLoaders.delete(route);\n      }));\n      // Use custom ConnectableObservable as share in runners pipe increasing the bundle size too much\n      const loader = new ConnectableObservable(loadRunner, () => new Subject()).pipe(refCount());\n      this.componentLoaders.set(route, loader);\n      return loader;\n    }\n    loadChildren(parentInjector, route) {\n      if (this.childrenLoaders.get(route)) {\n        return this.childrenLoaders.get(route);\n      } else if (route._loadedRoutes) {\n        return of({\n          routes: route._loadedRoutes,\n          injector: route._loadedInjector\n        });\n      }\n      if (this.onLoadStartListener) {\n        this.onLoadStartListener(route);\n      }\n      const moduleFactoryOrRoutes$ = loadChildren(route, this.compiler, parentInjector, this.onLoadEndListener);\n      const loadRunner = moduleFactoryOrRoutes$.pipe(finalize(() => {\n        this.childrenLoaders.delete(route);\n      }));\n      // Use custom ConnectableObservable as share in runners pipe increasing the bundle size too much\n      const loader = new ConnectableObservable(loadRunner, () => new Subject()).pipe(refCount());\n      this.childrenLoaders.set(route, loader);\n      return loader;\n    }\n    static {\n      this.ɵfac = function RouterConfigLoader_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || RouterConfigLoader)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: RouterConfigLoader,\n        factory: RouterConfigLoader.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return RouterConfigLoader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Executes a `route.loadChildren` callback and converts the result to an array of child routes and\n * an injector if that callback returned a module.\n *\n * This function is used for the route discovery during prerendering\n * in @angular-devkit/build-angular. If there are any updates to the contract here, it will require\n * an update to the extractor.\n */\nfunction loadChildren(route, compiler, parentInjector, onLoadEndListener) {\n  return wrapIntoObservable(route.loadChildren()).pipe(map(maybeUnwrapDefaultExport), mergeMap(t => {\n    if (t instanceof NgModuleFactory || Array.isArray(t)) {\n      return of(t);\n    } else {\n      return from(compiler.compileModuleAsync(t));\n    }\n  }), map(factoryOrRoutes => {\n    if (onLoadEndListener) {\n      onLoadEndListener(route);\n    }\n    // This injector comes from the `NgModuleRef` when lazy loading an `NgModule`. There is\n    // no injector associated with lazy loading a `Route` array.\n    let injector;\n    let rawRoutes;\n    let requireStandaloneComponents = false;\n    if (Array.isArray(factoryOrRoutes)) {\n      rawRoutes = factoryOrRoutes;\n      requireStandaloneComponents = true;\n    } else {\n      injector = factoryOrRoutes.create(parentInjector).injector;\n      // When loading a module that doesn't provide `RouterModule.forChild()` preloader\n      // will get stuck in an infinite loop. The child module's Injector will look to\n      // its parent `Injector` when it doesn't find any ROUTES so it will return routes\n      // for it's parent module instead.\n      rawRoutes = injector.get(ROUTES, [], {\n        optional: true,\n        self: true\n      }).flat();\n    }\n    const routes = rawRoutes.map(standardizeConfig);\n    (typeof ngDevMode === 'undefined' || ngDevMode) && validateConfig(routes, route.path, requireStandaloneComponents);\n    return {\n      routes,\n      injector\n    };\n  }));\n}\nfunction isWrappedDefaultExport(value) {\n  // We use `in` here with a string key `'default'`, because we expect `DefaultExport` objects to be\n  // dynamically imported ES modules with a spec-mandated `default` key. Thus we don't expect that\n  // `default` will be a renamed property.\n  return value && typeof value === 'object' && 'default' in value;\n}\nfunction maybeUnwrapDefaultExport(input) {\n  // As per `isWrappedDefaultExport`, the `default` key here is generated by the browser and not\n  // subject to property renaming, so we reference it with bracket access.\n  return isWrappedDefaultExport(input) ? input['default'] : input;\n}\n\n/**\n * @description\n *\n * Provides a way to migrate AngularJS applications to Angular.\n *\n * @publicApi\n */\nlet UrlHandlingStrategy = /*#__PURE__*/(() => {\n  class UrlHandlingStrategy {\n    static {\n      this.ɵfac = function UrlHandlingStrategy_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || UrlHandlingStrategy)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: UrlHandlingStrategy,\n        factory: () => (() => inject(DefaultUrlHandlingStrategy))(),\n        providedIn: 'root'\n      });\n    }\n  }\n  return UrlHandlingStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @publicApi\n */\nlet DefaultUrlHandlingStrategy = /*#__PURE__*/(() => {\n  class DefaultUrlHandlingStrategy {\n    shouldProcessUrl(url) {\n      return true;\n    }\n    extract(url) {\n      return url;\n    }\n    merge(newUrlPart, wholeUrl) {\n      return newUrlPart;\n    }\n    static {\n      this.ɵfac = function DefaultUrlHandlingStrategy_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || DefaultUrlHandlingStrategy)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: DefaultUrlHandlingStrategy,\n        factory: DefaultUrlHandlingStrategy.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return DefaultUrlHandlingStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/// <reference types=\"dom-view-transitions\" />\nconst CREATE_VIEW_TRANSITION = /*#__PURE__*/new InjectionToken(ngDevMode ? 'view transition helper' : '');\nconst VIEW_TRANSITION_OPTIONS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'view transition options' : '');\n/**\n * A helper function for using browser view transitions. This function skips the call to\n * `startViewTransition` if the browser does not support it.\n *\n * @returns A Promise that resolves when the view transition callback begins.\n */\nfunction createViewTransition(injector, from, to) {\n  const transitionOptions = injector.get(VIEW_TRANSITION_OPTIONS);\n  const document = injector.get(DOCUMENT);\n  // Create promises outside the Angular zone to avoid causing extra change detections\n  return injector.get(NgZone).runOutsideAngular(() => {\n    if (!document.startViewTransition || transitionOptions.skipNextTransition) {\n      transitionOptions.skipNextTransition = false;\n      // The timing of `startViewTransition` is closer to a macrotask. It won't be called\n      // until the current event loop exits so we use a promise resolved in a timeout instead\n      // of Promise.resolve().\n      return new Promise(resolve => setTimeout(resolve));\n    }\n    let resolveViewTransitionStarted;\n    const viewTransitionStarted = new Promise(resolve => {\n      resolveViewTransitionStarted = resolve;\n    });\n    const transition = document.startViewTransition(() => {\n      resolveViewTransitionStarted();\n      // We don't actually update dom within the transition callback. The resolving of the above\n      // promise unblocks the Router navigation, which synchronously activates and deactivates\n      // routes (the DOM update). This view transition waits for the next change detection to\n      // complete (below), which includes the update phase of the routed components.\n      return createRenderPromise(injector);\n    });\n    const {\n      onViewTransitionCreated\n    } = transitionOptions;\n    if (onViewTransitionCreated) {\n      runInInjectionContext(injector, () => onViewTransitionCreated({\n        transition,\n        from,\n        to\n      }));\n    }\n    return viewTransitionStarted;\n  });\n}\n/**\n * Creates a promise that resolves after next render.\n */\nfunction createRenderPromise(injector) {\n  return new Promise(resolve => {\n    // Wait for the microtask queue to empty after the next render happens (by waiting a macrotask).\n    // This ensures any follow-up renders in the microtask queue are completed before the\n    // view transition starts animating.\n    afterNextRender({\n      read: () => setTimeout(resolve)\n    }, {\n      injector\n    });\n  });\n}\nconst NAVIGATION_ERROR_HANDLER = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'navigation error handler' : '');\nlet NavigationTransitions = /*#__PURE__*/(() => {\n  class NavigationTransitions {\n    get hasRequestedNavigation() {\n      return this.navigationId !== 0;\n    }\n    constructor() {\n      this.currentNavigation = null;\n      this.currentTransition = null;\n      this.lastSuccessfulNavigation = null;\n      /**\n       * These events are used to communicate back to the Router about the state of the transition. The\n       * Router wants to respond to these events in various ways. Because the `NavigationTransition`\n       * class is not public, this event subject is not publicly exposed.\n       */\n      this.events = new Subject();\n      /**\n       * Used to abort the current transition with an error.\n       */\n      this.transitionAbortSubject = new Subject();\n      this.configLoader = inject(RouterConfigLoader);\n      this.environmentInjector = inject(EnvironmentInjector);\n      this.urlSerializer = inject(UrlSerializer);\n      this.rootContexts = inject(ChildrenOutletContexts);\n      this.location = inject(Location);\n      this.inputBindingEnabled = inject(INPUT_BINDER, {\n        optional: true\n      }) !== null;\n      this.titleStrategy = inject(TitleStrategy);\n      this.options = inject(ROUTER_CONFIGURATION, {\n        optional: true\n      }) || {};\n      this.paramsInheritanceStrategy = this.options.paramsInheritanceStrategy || 'emptyOnly';\n      this.urlHandlingStrategy = inject(UrlHandlingStrategy);\n      this.createViewTransition = inject(CREATE_VIEW_TRANSITION, {\n        optional: true\n      });\n      this.navigationErrorHandler = inject(NAVIGATION_ERROR_HANDLER, {\n        optional: true\n      });\n      this.navigationId = 0;\n      /**\n       * Hook that enables you to pause navigation after the preactivation phase.\n       * Used by `RouterModule`.\n       *\n       * @internal\n       */\n      this.afterPreactivation = () => of(void 0);\n      /** @internal */\n      this.rootComponentType = null;\n      const onLoadStart = r => this.events.next(new RouteConfigLoadStart(r));\n      const onLoadEnd = r => this.events.next(new RouteConfigLoadEnd(r));\n      this.configLoader.onLoadEndListener = onLoadEnd;\n      this.configLoader.onLoadStartListener = onLoadStart;\n    }\n    complete() {\n      this.transitions?.complete();\n    }\n    handleNavigationRequest(request) {\n      const id = ++this.navigationId;\n      this.transitions?.next({\n        ...this.transitions.value,\n        ...request,\n        id\n      });\n    }\n    setupNavigations(router, initialUrlTree, initialRouterState) {\n      this.transitions = new BehaviorSubject({\n        id: 0,\n        currentUrlTree: initialUrlTree,\n        currentRawUrl: initialUrlTree,\n        extractedUrl: this.urlHandlingStrategy.extract(initialUrlTree),\n        urlAfterRedirects: this.urlHandlingStrategy.extract(initialUrlTree),\n        rawUrl: initialUrlTree,\n        extras: {},\n        resolve: () => {},\n        reject: () => {},\n        promise: Promise.resolve(true),\n        source: IMPERATIVE_NAVIGATION,\n        restoredState: null,\n        currentSnapshot: initialRouterState.snapshot,\n        targetSnapshot: null,\n        currentRouterState: initialRouterState,\n        targetRouterState: null,\n        guards: {\n          canActivateChecks: [],\n          canDeactivateChecks: []\n        },\n        guardsResult: null\n      });\n      return this.transitions.pipe(filter(t => t.id !== 0),\n      // Extract URL\n      map(t => ({\n        ...t,\n        extractedUrl: this.urlHandlingStrategy.extract(t.rawUrl)\n      })),\n      // Using switchMap so we cancel executing navigations when a new one comes in\n      switchMap(overallTransitionState => {\n        let completed = false;\n        let errored = false;\n        return of(overallTransitionState).pipe(switchMap(t => {\n          // It is possible that `switchMap` fails to cancel previous navigations if a new one happens synchronously while the operator\n          // is processing the `next` notification of that previous navigation. This can happen when a new navigation (say 2) cancels a\n          // previous one (1) and yet another navigation (3) happens synchronously in response to the `NavigationCancel` event for (1).\n          // https://github.com/ReactiveX/rxjs/issues/7455\n          if (this.navigationId > overallTransitionState.id) {\n            const cancellationReason = typeof ngDevMode === 'undefined' || ngDevMode ? `Navigation ID ${overallTransitionState.id} is not equal to the current navigation id ${this.navigationId}` : '';\n            this.cancelNavigationTransition(overallTransitionState, cancellationReason, NavigationCancellationCode.SupersededByNewNavigation);\n            return EMPTY;\n          }\n          this.currentTransition = overallTransitionState;\n          // Store the Navigation object\n          this.currentNavigation = {\n            id: t.id,\n            initialUrl: t.rawUrl,\n            extractedUrl: t.extractedUrl,\n            targetBrowserUrl: typeof t.extras.browserUrl === 'string' ? this.urlSerializer.parse(t.extras.browserUrl) : t.extras.browserUrl,\n            trigger: t.source,\n            extras: t.extras,\n            previousNavigation: !this.lastSuccessfulNavigation ? null : {\n              ...this.lastSuccessfulNavigation,\n              previousNavigation: null\n            }\n          };\n          const urlTransition = !router.navigated || this.isUpdatingInternalState() || this.isUpdatedBrowserUrl();\n          const onSameUrlNavigation = t.extras.onSameUrlNavigation ?? router.onSameUrlNavigation;\n          if (!urlTransition && onSameUrlNavigation !== 'reload') {\n            const reason = typeof ngDevMode === 'undefined' || ngDevMode ? `Navigation to ${t.rawUrl} was ignored because it is the same as the current Router URL.` : '';\n            this.events.next(new NavigationSkipped(t.id, this.urlSerializer.serialize(t.rawUrl), reason, NavigationSkippedCode.IgnoredSameUrlNavigation));\n            t.resolve(false);\n            return EMPTY;\n          }\n          if (this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl)) {\n            return of(t).pipe(\n            // Fire NavigationStart event\n            switchMap(t => {\n              const transition = this.transitions?.getValue();\n              this.events.next(new NavigationStart(t.id, this.urlSerializer.serialize(t.extractedUrl), t.source, t.restoredState));\n              if (transition !== this.transitions?.getValue()) {\n                return EMPTY;\n              }\n              // This delay is required to match old behavior that forced\n              // navigation to always be async\n              return Promise.resolve(t);\n            }),\n            // Recognize\n            recognize(this.environmentInjector, this.configLoader, this.rootComponentType, router.config, this.urlSerializer, this.paramsInheritanceStrategy),\n            // Update URL if in `eager` update mode\n            tap(t => {\n              overallTransitionState.targetSnapshot = t.targetSnapshot;\n              overallTransitionState.urlAfterRedirects = t.urlAfterRedirects;\n              this.currentNavigation = {\n                ...this.currentNavigation,\n                finalUrl: t.urlAfterRedirects\n              };\n              // Fire RoutesRecognized\n              const routesRecognized = new RoutesRecognized(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n              this.events.next(routesRecognized);\n            }));\n          } else if (urlTransition && this.urlHandlingStrategy.shouldProcessUrl(t.currentRawUrl)) {\n            /* When the current URL shouldn't be processed, but the previous one\n             * was, we handle this \"error condition\" by navigating to the\n             * previously successful URL, but leaving the URL intact.*/\n            const {\n              id,\n              extractedUrl,\n              source,\n              restoredState,\n              extras\n            } = t;\n            const navStart = new NavigationStart(id, this.urlSerializer.serialize(extractedUrl), source, restoredState);\n            this.events.next(navStart);\n            const targetSnapshot = createEmptyState(this.rootComponentType).snapshot;\n            this.currentTransition = overallTransitionState = {\n              ...t,\n              targetSnapshot,\n              urlAfterRedirects: extractedUrl,\n              extras: {\n                ...extras,\n                skipLocationChange: false,\n                replaceUrl: false\n              }\n            };\n            this.currentNavigation.finalUrl = extractedUrl;\n            return of(overallTransitionState);\n          } else {\n            /* When neither the current or previous URL can be processed, do\n             * nothing other than update router's internal reference to the\n             * current \"settled\" URL. This way the next navigation will be coming\n             * from the current URL in the browser.\n             */\n            const reason = typeof ngDevMode === 'undefined' || ngDevMode ? `Navigation was ignored because the UrlHandlingStrategy` + ` indicated neither the current URL ${t.currentRawUrl} nor target URL ${t.rawUrl} should be processed.` : '';\n            this.events.next(new NavigationSkipped(t.id, this.urlSerializer.serialize(t.extractedUrl), reason, NavigationSkippedCode.IgnoredByUrlHandlingStrategy));\n            t.resolve(false);\n            return EMPTY;\n          }\n        }),\n        // --- GUARDS ---\n        tap(t => {\n          const guardsStart = new GuardsCheckStart(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n          this.events.next(guardsStart);\n        }), map(t => {\n          this.currentTransition = overallTransitionState = {\n            ...t,\n            guards: getAllRouteGuards(t.targetSnapshot, t.currentSnapshot, this.rootContexts)\n          };\n          return overallTransitionState;\n        }), checkGuards(this.environmentInjector, evt => this.events.next(evt)), tap(t => {\n          overallTransitionState.guardsResult = t.guardsResult;\n          if (t.guardsResult && typeof t.guardsResult !== 'boolean') {\n            throw redirectingNavigationError(this.urlSerializer, t.guardsResult);\n          }\n          const guardsEnd = new GuardsCheckEnd(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot, !!t.guardsResult);\n          this.events.next(guardsEnd);\n        }), filter(t => {\n          if (!t.guardsResult) {\n            this.cancelNavigationTransition(t, '', NavigationCancellationCode.GuardRejected);\n            return false;\n          }\n          return true;\n        }),\n        // --- RESOLVE ---\n        switchTap(t => {\n          if (t.guards.canActivateChecks.length) {\n            return of(t).pipe(tap(t => {\n              const resolveStart = new ResolveStart(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n              this.events.next(resolveStart);\n            }), switchMap(t => {\n              let dataResolved = false;\n              return of(t).pipe(resolveData(this.paramsInheritanceStrategy, this.environmentInjector), tap({\n                next: () => dataResolved = true,\n                complete: () => {\n                  if (!dataResolved) {\n                    this.cancelNavigationTransition(t, typeof ngDevMode === 'undefined' || ngDevMode ? `At least one route resolver didn't emit any value.` : '', NavigationCancellationCode.NoDataFromResolver);\n                  }\n                }\n              }));\n            }), tap(t => {\n              const resolveEnd = new ResolveEnd(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n              this.events.next(resolveEnd);\n            }));\n          }\n          return undefined;\n        }),\n        // --- LOAD COMPONENTS ---\n        switchTap(t => {\n          const loadComponents = route => {\n            const loaders = [];\n            if (route.routeConfig?.loadComponent && !route.routeConfig._loadedComponent) {\n              loaders.push(this.configLoader.loadComponent(route.routeConfig).pipe(tap(loadedComponent => {\n                route.component = loadedComponent;\n              }), map(() => void 0)));\n            }\n            for (const child of route.children) {\n              loaders.push(...loadComponents(child));\n            }\n            return loaders;\n          };\n          return combineLatest(loadComponents(t.targetSnapshot.root)).pipe(defaultIfEmpty(null), take(1));\n        }), switchTap(() => this.afterPreactivation()), switchMap(() => {\n          const {\n            currentSnapshot,\n            targetSnapshot\n          } = overallTransitionState;\n          const viewTransitionStarted = this.createViewTransition?.(this.environmentInjector, currentSnapshot.root, targetSnapshot.root);\n          // If view transitions are enabled, block the navigation until the view\n          // transition callback starts. Otherwise, continue immediately.\n          return viewTransitionStarted ? from(viewTransitionStarted).pipe(map(() => overallTransitionState)) : of(overallTransitionState);\n        }), map(t => {\n          const targetRouterState = createRouterState(router.routeReuseStrategy, t.targetSnapshot, t.currentRouterState);\n          this.currentTransition = overallTransitionState = {\n            ...t,\n            targetRouterState\n          };\n          this.currentNavigation.targetRouterState = targetRouterState;\n          return overallTransitionState;\n        }), tap(() => {\n          this.events.next(new BeforeActivateRoutes());\n        }), activateRoutes(this.rootContexts, router.routeReuseStrategy, evt => this.events.next(evt), this.inputBindingEnabled),\n        // Ensure that if some observable used to drive the transition doesn't\n        // complete, the navigation still finalizes This should never happen, but\n        // this is done as a safety measure to avoid surfacing this error (#49567).\n        take(1), tap({\n          next: t => {\n            completed = true;\n            this.lastSuccessfulNavigation = this.currentNavigation;\n            this.events.next(new NavigationEnd(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects)));\n            this.titleStrategy?.updateTitle(t.targetRouterState.snapshot);\n            t.resolve(true);\n          },\n          complete: () => {\n            completed = true;\n          }\n        }),\n        // There used to be a lot more logic happening directly within the\n        // transition Observable. Some of this logic has been refactored out to\n        // other places but there may still be errors that happen there. This gives\n        // us a way to cancel the transition from the outside. This may also be\n        // required in the future to support something like the abort signal of the\n        // Navigation API where the navigation gets aborted from outside the\n        // transition.\n        takeUntil(this.transitionAbortSubject.pipe(tap(err => {\n          throw err;\n        }))), finalize(() => {\n          /* When the navigation stream finishes either through error or success,\n           * we set the `completed` or `errored` flag. However, there are some\n           * situations where we could get here without either of those being set.\n           * For instance, a redirect during NavigationStart. Therefore, this is a\n           * catch-all to make sure the NavigationCancel event is fired when a\n           * navigation gets cancelled but not caught by other means. */\n          if (!completed && !errored) {\n            const cancelationReason = typeof ngDevMode === 'undefined' || ngDevMode ? `Navigation ID ${overallTransitionState.id} is not equal to the current navigation id ${this.navigationId}` : '';\n            this.cancelNavigationTransition(overallTransitionState, cancelationReason, NavigationCancellationCode.SupersededByNewNavigation);\n          }\n          // Only clear current navigation if it is still set to the one that\n          // finalized.\n          if (this.currentTransition?.id === overallTransitionState.id) {\n            this.currentNavigation = null;\n            this.currentTransition = null;\n          }\n        }), catchError(e => {\n          errored = true;\n          /* This error type is issued during Redirect, and is handled as a\n           * cancellation rather than an error. */\n          if (isNavigationCancelingError(e)) {\n            this.events.next(new NavigationCancel(overallTransitionState.id, this.urlSerializer.serialize(overallTransitionState.extractedUrl), e.message, e.cancellationCode));\n            // When redirecting, we need to delay resolving the navigation\n            // promise and push it to the redirect navigation\n            if (!isRedirectingNavigationCancelingError(e)) {\n              overallTransitionState.resolve(false);\n            } else {\n              this.events.next(new RedirectRequest(e.url, e.navigationBehaviorOptions));\n            }\n            /* All other errors should reset to the router's internal URL reference\n             * to the pre-error state. */\n          } else {\n            const navigationError = new NavigationError(overallTransitionState.id, this.urlSerializer.serialize(overallTransitionState.extractedUrl), e, overallTransitionState.targetSnapshot ?? undefined);\n            try {\n              const navigationErrorHandlerResult = runInInjectionContext(this.environmentInjector, () => this.navigationErrorHandler?.(navigationError));\n              if (navigationErrorHandlerResult instanceof RedirectCommand) {\n                const {\n                  message,\n                  cancellationCode\n                } = redirectingNavigationError(this.urlSerializer, navigationErrorHandlerResult);\n                this.events.next(new NavigationCancel(overallTransitionState.id, this.urlSerializer.serialize(overallTransitionState.extractedUrl), message, cancellationCode));\n                this.events.next(new RedirectRequest(navigationErrorHandlerResult.redirectTo, navigationErrorHandlerResult.navigationBehaviorOptions));\n              } else {\n                this.events.next(navigationError);\n                // TODO(atscott): remove deprecation on errorHandler in RouterModule.forRoot and change behavior to provide NAVIGATION_ERROR_HANDLER\n                // Note: Still remove public `Router.errorHandler` property, as this is supposed to be configured in DI.\n                const errorHandlerResult = router.errorHandler(e);\n                overallTransitionState.resolve(!!errorHandlerResult);\n              }\n            } catch (ee) {\n              // TODO(atscott): consider flipping the default behavior of\n              // resolveNavigationPromiseOnError to be `resolve(false)` when\n              // undefined. This is the most sane thing to do given that\n              // applications very rarely handle the promise rejection and, as a\n              // result, would get \"unhandled promise rejection\" console logs.\n              // The vast majority of applications would not be affected by this\n              // change so omitting a migration seems reasonable. Instead,\n              // applications that rely on rejection can specifically opt-in to the\n              // old behavior.\n              if (this.options.resolveNavigationPromiseOnError) {\n                overallTransitionState.resolve(false);\n              } else {\n                overallTransitionState.reject(ee);\n              }\n            }\n          }\n          return EMPTY;\n        }));\n        // casting because `pipe` returns observable({}) when called with 8+ arguments\n      }));\n    }\n    cancelNavigationTransition(t, reason, code) {\n      const navCancel = new NavigationCancel(t.id, this.urlSerializer.serialize(t.extractedUrl), reason, code);\n      this.events.next(navCancel);\n      t.resolve(false);\n    }\n    /**\n     * @returns Whether we're navigating to somewhere that is not what the Router is\n     * currently set to.\n     */\n    isUpdatingInternalState() {\n      // TODO(atscott): The serializer should likely be used instead of\n      // `UrlTree.toString()`. Custom serializers are often written to handle\n      // things better than the default one (objects, for example will be\n      // [Object object] with the custom serializer and be \"the same\" when they\n      // aren't).\n      // (Same for isUpdatedBrowserUrl)\n      return this.currentTransition?.extractedUrl.toString() !== this.currentTransition?.currentUrlTree.toString();\n    }\n    /**\n     * @returns Whether we're updating the browser URL to something new (navigation is going\n     * to somewhere not displayed in the URL bar and we will update the URL\n     * bar if navigation succeeds).\n     */\n    isUpdatedBrowserUrl() {\n      // The extracted URL is the part of the URL that this application cares about. `extract` may\n      // return only part of the browser URL and that part may have not changed even if some other\n      // portion of the URL did.\n      const currentBrowserUrl = this.urlHandlingStrategy.extract(this.urlSerializer.parse(this.location.path(true)));\n      const targetBrowserUrl = this.currentNavigation?.targetBrowserUrl ?? this.currentNavigation?.extractedUrl;\n      return currentBrowserUrl.toString() !== targetBrowserUrl?.toString() && !this.currentNavigation?.extras.skipLocationChange;\n    }\n    static {\n      this.ɵfac = function NavigationTransitions_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NavigationTransitions)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: NavigationTransitions,\n        factory: NavigationTransitions.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return NavigationTransitions;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction isBrowserTriggeredNavigation(source) {\n  return source !== IMPERATIVE_NAVIGATION;\n}\n\n/**\n * @description\n *\n * Provides a way to customize when activated routes get reused.\n *\n * @publicApi\n */\nlet RouteReuseStrategy = /*#__PURE__*/(() => {\n  class RouteReuseStrategy {\n    static {\n      this.ɵfac = function RouteReuseStrategy_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || RouteReuseStrategy)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: RouteReuseStrategy,\n        factory: () => (() => inject(DefaultRouteReuseStrategy))(),\n        providedIn: 'root'\n      });\n    }\n  }\n  return RouteReuseStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n *\n * This base route reuse strategy only reuses routes when the matched router configs are\n * identical. This prevents components from being destroyed and recreated\n * when just the route parameters, query parameters or fragment change\n * (that is, the existing component is _reused_).\n *\n * This strategy does not store any routes for later reuse.\n *\n * Angular uses this strategy by default.\n *\n *\n * It can be used as a base class for custom route reuse strategies, i.e. you can create your own\n * class that extends the `BaseRouteReuseStrategy` one.\n * @publicApi\n */\nclass BaseRouteReuseStrategy {\n  /**\n   * Whether the given route should detach for later reuse.\n   * Always returns false for `BaseRouteReuseStrategy`.\n   * */\n  shouldDetach(route) {\n    return false;\n  }\n  /**\n   * A no-op; the route is never stored since this strategy never detaches routes for later re-use.\n   */\n  store(route, detachedTree) {}\n  /** Returns `false`, meaning the route (and its subtree) is never reattached */\n  shouldAttach(route) {\n    return false;\n  }\n  /** Returns `null` because this strategy does not store routes for later re-use. */\n  retrieve(route) {\n    return null;\n  }\n  /**\n   * Determines if a route should be reused.\n   * This strategy returns `true` when the future route config and current route config are\n   * identical.\n   */\n  shouldReuseRoute(future, curr) {\n    return future.routeConfig === curr.routeConfig;\n  }\n}\nlet DefaultRouteReuseStrategy = /*#__PURE__*/(() => {\n  class DefaultRouteReuseStrategy extends BaseRouteReuseStrategy {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵDefaultRouteReuseStrategy_BaseFactory;\n        return function DefaultRouteReuseStrategy_Factory(__ngFactoryType__) {\n          return (ɵDefaultRouteReuseStrategy_BaseFactory || (ɵDefaultRouteReuseStrategy_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultRouteReuseStrategy)))(__ngFactoryType__ || DefaultRouteReuseStrategy);\n        };\n      })();\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: DefaultRouteReuseStrategy,\n        factory: DefaultRouteReuseStrategy.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return DefaultRouteReuseStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StateManager = /*#__PURE__*/(() => {\n  class StateManager {\n    static {\n      this.ɵfac = function StateManager_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || StateManager)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: StateManager,\n        factory: () => (() => inject(HistoryStateManager))(),\n        providedIn: 'root'\n      });\n    }\n  }\n  return StateManager;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet HistoryStateManager = /*#__PURE__*/(() => {\n  class HistoryStateManager extends StateManager {\n    constructor() {\n      super(...arguments);\n      this.location = inject(Location);\n      this.urlSerializer = inject(UrlSerializer);\n      this.options = inject(ROUTER_CONFIGURATION, {\n        optional: true\n      }) || {};\n      this.canceledNavigationResolution = this.options.canceledNavigationResolution || 'replace';\n      this.urlHandlingStrategy = inject(UrlHandlingStrategy);\n      this.urlUpdateStrategy = this.options.urlUpdateStrategy || 'deferred';\n      this.currentUrlTree = new UrlTree();\n      this.rawUrlTree = this.currentUrlTree;\n      /**\n       * The id of the currently active page in the router.\n       * Updated to the transition's target id on a successful navigation.\n       *\n       * This is used to track what page the router last activated. When an attempted navigation fails,\n       * the router can then use this to compute how to restore the state back to the previously active\n       * page.\n       */\n      this.currentPageId = 0;\n      this.lastSuccessfulId = -1;\n      this.routerState = createEmptyState(null);\n      this.stateMemento = this.createStateMemento();\n    }\n    getCurrentUrlTree() {\n      return this.currentUrlTree;\n    }\n    getRawUrlTree() {\n      return this.rawUrlTree;\n    }\n    restoredState() {\n      return this.location.getState();\n    }\n    /**\n     * The ɵrouterPageId of whatever page is currently active in the browser history. This is\n     * important for computing the target page id for new navigations because we need to ensure each\n     * page id in the browser history is 1 more than the previous entry.\n     */\n    get browserPageId() {\n      if (this.canceledNavigationResolution !== 'computed') {\n        return this.currentPageId;\n      }\n      return this.restoredState()?.ɵrouterPageId ?? this.currentPageId;\n    }\n    getRouterState() {\n      return this.routerState;\n    }\n    createStateMemento() {\n      return {\n        rawUrlTree: this.rawUrlTree,\n        currentUrlTree: this.currentUrlTree,\n        routerState: this.routerState\n      };\n    }\n    registerNonRouterCurrentEntryChangeListener(listener) {\n      return this.location.subscribe(event => {\n        if (event['type'] === 'popstate') {\n          listener(event['url'], event.state);\n        }\n      });\n    }\n    handleRouterEvent(e, currentTransition) {\n      if (e instanceof NavigationStart) {\n        this.stateMemento = this.createStateMemento();\n      } else if (e instanceof NavigationSkipped) {\n        this.rawUrlTree = currentTransition.initialUrl;\n      } else if (e instanceof RoutesRecognized) {\n        if (this.urlUpdateStrategy === 'eager') {\n          if (!currentTransition.extras.skipLocationChange) {\n            const rawUrl = this.urlHandlingStrategy.merge(currentTransition.finalUrl, currentTransition.initialUrl);\n            this.setBrowserUrl(currentTransition.targetBrowserUrl ?? rawUrl, currentTransition);\n          }\n        }\n      } else if (e instanceof BeforeActivateRoutes) {\n        this.currentUrlTree = currentTransition.finalUrl;\n        this.rawUrlTree = this.urlHandlingStrategy.merge(currentTransition.finalUrl, currentTransition.initialUrl);\n        this.routerState = currentTransition.targetRouterState;\n        if (this.urlUpdateStrategy === 'deferred' && !currentTransition.extras.skipLocationChange) {\n          this.setBrowserUrl(currentTransition.targetBrowserUrl ?? this.rawUrlTree, currentTransition);\n        }\n      } else if (e instanceof NavigationCancel && (e.code === NavigationCancellationCode.GuardRejected || e.code === NavigationCancellationCode.NoDataFromResolver)) {\n        this.restoreHistory(currentTransition);\n      } else if (e instanceof NavigationError) {\n        this.restoreHistory(currentTransition, true);\n      } else if (e instanceof NavigationEnd) {\n        this.lastSuccessfulId = e.id;\n        this.currentPageId = this.browserPageId;\n      }\n    }\n    setBrowserUrl(url, transition) {\n      const path = url instanceof UrlTree ? this.urlSerializer.serialize(url) : url;\n      if (this.location.isCurrentPathEqualTo(path) || !!transition.extras.replaceUrl) {\n        // replacements do not update the target page\n        const currentBrowserPageId = this.browserPageId;\n        const state = {\n          ...transition.extras.state,\n          ...this.generateNgRouterState(transition.id, currentBrowserPageId)\n        };\n        this.location.replaceState(path, '', state);\n      } else {\n        const state = {\n          ...transition.extras.state,\n          ...this.generateNgRouterState(transition.id, this.browserPageId + 1)\n        };\n        this.location.go(path, '', state);\n      }\n    }\n    /**\n     * Performs the necessary rollback action to restore the browser URL to the\n     * state before the transition.\n     */\n    restoreHistory(navigation, restoringFromCaughtError = false) {\n      if (this.canceledNavigationResolution === 'computed') {\n        const currentBrowserPageId = this.browserPageId;\n        const targetPagePosition = this.currentPageId - currentBrowserPageId;\n        if (targetPagePosition !== 0) {\n          this.location.historyGo(targetPagePosition);\n        } else if (this.currentUrlTree === navigation.finalUrl && targetPagePosition === 0) {\n          // We got to the activation stage (where currentUrlTree is set to the navigation's\n          // finalUrl), but we weren't moving anywhere in history (skipLocationChange or replaceUrl).\n          // We still need to reset the router state back to what it was when the navigation started.\n          this.resetState(navigation);\n          this.resetUrlToCurrentUrlTree();\n        } else {\n          // The browser URL and router state was not updated before the navigation cancelled so\n          // there's no restoration needed.\n        }\n      } else if (this.canceledNavigationResolution === 'replace') {\n        // TODO(atscott): It seems like we should _always_ reset the state here. It would be a no-op\n        // for `deferred` navigations that haven't change the internal state yet because guards\n        // reject. For 'eager' navigations, it seems like we also really should reset the state\n        // because the navigation was cancelled. Investigate if this can be done by running TGP.\n        if (restoringFromCaughtError) {\n          this.resetState(navigation);\n        }\n        this.resetUrlToCurrentUrlTree();\n      }\n    }\n    resetState(navigation) {\n      this.routerState = this.stateMemento.routerState;\n      this.currentUrlTree = this.stateMemento.currentUrlTree;\n      // Note here that we use the urlHandlingStrategy to get the reset `rawUrlTree` because it may be\n      // configured to handle only part of the navigation URL. This means we would only want to reset\n      // the part of the navigation handled by the Angular router rather than the whole URL. In\n      // addition, the URLHandlingStrategy may be configured to specifically preserve parts of the URL\n      // when merging, such as the query params so they are not lost on a refresh.\n      this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, navigation.finalUrl ?? this.rawUrlTree);\n    }\n    resetUrlToCurrentUrlTree() {\n      this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', this.generateNgRouterState(this.lastSuccessfulId, this.currentPageId));\n    }\n    generateNgRouterState(navigationId, routerPageId) {\n      if (this.canceledNavigationResolution === 'computed') {\n        return {\n          navigationId,\n          ɵrouterPageId: routerPageId\n        };\n      }\n      return {\n        navigationId\n      };\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵHistoryStateManager_BaseFactory;\n        return function HistoryStateManager_Factory(__ngFactoryType__) {\n          return (ɵHistoryStateManager_BaseFactory || (ɵHistoryStateManager_BaseFactory = i0.ɵɵgetInheritedFactory(HistoryStateManager)))(__ngFactoryType__ || HistoryStateManager);\n        };\n      })();\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: HistoryStateManager,\n        factory: HistoryStateManager.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return HistoryStateManager;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar NavigationResult = /*#__PURE__*/function (NavigationResult) {\n  NavigationResult[NavigationResult[\"COMPLETE\"] = 0] = \"COMPLETE\";\n  NavigationResult[NavigationResult[\"FAILED\"] = 1] = \"FAILED\";\n  NavigationResult[NavigationResult[\"REDIRECTING\"] = 2] = \"REDIRECTING\";\n  return NavigationResult;\n}(NavigationResult || {});\n/**\n * Performs the given action once the router finishes its next/current navigation.\n *\n * The navigation is considered complete under the following conditions:\n * - `NavigationCancel` event emits and the code is not `NavigationCancellationCode.Redirect` or\n * `NavigationCancellationCode.SupersededByNewNavigation`. In these cases, the\n * redirecting/superseding navigation must finish.\n * - `NavigationError`, `NavigationEnd`, or `NavigationSkipped` event emits\n */\nfunction afterNextNavigation(router, action) {\n  router.events.pipe(filter(e => e instanceof NavigationEnd || e instanceof NavigationCancel || e instanceof NavigationError || e instanceof NavigationSkipped), map(e => {\n    if (e instanceof NavigationEnd || e instanceof NavigationSkipped) {\n      return NavigationResult.COMPLETE;\n    }\n    const redirecting = e instanceof NavigationCancel ? e.code === NavigationCancellationCode.Redirect || e.code === NavigationCancellationCode.SupersededByNewNavigation : false;\n    return redirecting ? NavigationResult.REDIRECTING : NavigationResult.FAILED;\n  }), filter(result => result !== NavigationResult.REDIRECTING), take(1)).subscribe(() => {\n    action();\n  });\n}\nfunction defaultErrorHandler(error) {\n  throw error;\n}\n/**\n * The equivalent `IsActiveMatchOptions` options for `Router.isActive` is called with `true`\n * (exact = true).\n */\nconst exactMatchOptions = {\n  paths: 'exact',\n  fragment: 'ignored',\n  matrixParams: 'ignored',\n  queryParams: 'exact'\n};\n/**\n * The equivalent `IsActiveMatchOptions` options for `Router.isActive` is called with `false`\n * (exact = false).\n */\nconst subsetMatchOptions = {\n  paths: 'subset',\n  fragment: 'ignored',\n  matrixParams: 'ignored',\n  queryParams: 'subset'\n};\n/**\n * @description\n *\n * A service that facilitates navigation among views and URL manipulation capabilities.\n * This service is provided in the root scope and configured with [provideRouter](api/router/provideRouter).\n *\n * @see {@link Route}\n * @see {@link provideRouter}\n * @see [Routing and Navigation Guide](guide/routing/common-router-tasks).\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nlet Router = /*#__PURE__*/(() => {\n  class Router {\n    get currentUrlTree() {\n      return this.stateManager.getCurrentUrlTree();\n    }\n    get rawUrlTree() {\n      return this.stateManager.getRawUrlTree();\n    }\n    /**\n     * An event stream for routing events.\n     */\n    get events() {\n      // TODO(atscott): This _should_ be events.asObservable(). However, this change requires internal\n      // cleanup: tests are doing `(route.events as Subject<Event>).next(...)`. This isn't\n      // allowed/supported but we still have to fix these or file bugs against the teams before making\n      // the change.\n      return this._events;\n    }\n    /**\n     * The current state of routing in this NgModule.\n     */\n    get routerState() {\n      return this.stateManager.getRouterState();\n    }\n    constructor() {\n      this.disposed = false;\n      this.console = inject(ɵConsole);\n      this.stateManager = inject(StateManager);\n      this.options = inject(ROUTER_CONFIGURATION, {\n        optional: true\n      }) || {};\n      this.pendingTasks = inject(ɵPendingTasks);\n      this.urlUpdateStrategy = this.options.urlUpdateStrategy || 'deferred';\n      this.navigationTransitions = inject(NavigationTransitions);\n      this.urlSerializer = inject(UrlSerializer);\n      this.location = inject(Location);\n      this.urlHandlingStrategy = inject(UrlHandlingStrategy);\n      /**\n       * The private `Subject` type for the public events exposed in the getter. This is used internally\n       * to push events to. The separate field allows us to expose separate types in the public API\n       * (i.e., an Observable rather than the Subject).\n       */\n      this._events = new Subject();\n      /**\n       * A handler for navigation errors in this NgModule.\n       *\n       * @deprecated Subscribe to the `Router` events and watch for `NavigationError` instead.\n       *   `provideRouter` has the `withNavigationErrorHandler` feature to make this easier.\n       * @see {@link withNavigationErrorHandler}\n       */\n      this.errorHandler = this.options.errorHandler || defaultErrorHandler;\n      /**\n       * True if at least one navigation event has occurred,\n       * false otherwise.\n       */\n      this.navigated = false;\n      /**\n       * A strategy for re-using routes.\n       *\n       * @deprecated Configure using `providers` instead:\n       *   `{provide: RouteReuseStrategy, useClass: MyStrategy}`.\n       */\n      this.routeReuseStrategy = inject(RouteReuseStrategy);\n      /**\n       * How to handle a navigation request to the current URL.\n       *\n       *\n       * @deprecated Configure this through `provideRouter` or `RouterModule.forRoot` instead.\n       * @see {@link withRouterConfig}\n       * @see {@link provideRouter}\n       * @see {@link RouterModule}\n       */\n      this.onSameUrlNavigation = this.options.onSameUrlNavigation || 'ignore';\n      this.config = inject(ROUTES, {\n        optional: true\n      })?.flat() ?? [];\n      /**\n       * Indicates whether the application has opted in to binding Router data to component inputs.\n       *\n       * This option is enabled by the `withComponentInputBinding` feature of `provideRouter` or\n       * `bindToComponentInputs` in the `ExtraOptions` of `RouterModule.forRoot`.\n       */\n      this.componentInputBindingEnabled = !!inject(INPUT_BINDER, {\n        optional: true\n      });\n      this.eventsSubscription = new Subscription();\n      this.resetConfig(this.config);\n      this.navigationTransitions.setupNavigations(this, this.currentUrlTree, this.routerState).subscribe({\n        error: e => {\n          this.console.warn(ngDevMode ? `Unhandled Navigation Error: ${e}` : e);\n        }\n      });\n      this.subscribeToNavigationEvents();\n    }\n    subscribeToNavigationEvents() {\n      const subscription = this.navigationTransitions.events.subscribe(e => {\n        try {\n          const currentTransition = this.navigationTransitions.currentTransition;\n          const currentNavigation = this.navigationTransitions.currentNavigation;\n          if (currentTransition !== null && currentNavigation !== null) {\n            this.stateManager.handleRouterEvent(e, currentNavigation);\n            if (e instanceof NavigationCancel && e.code !== NavigationCancellationCode.Redirect && e.code !== NavigationCancellationCode.SupersededByNewNavigation) {\n              // It seems weird that `navigated` is set to `true` when the navigation is rejected,\n              // however it's how things were written initially. Investigation would need to be done\n              // to determine if this can be removed.\n              this.navigated = true;\n            } else if (e instanceof NavigationEnd) {\n              this.navigated = true;\n            } else if (e instanceof RedirectRequest) {\n              const opts = e.navigationBehaviorOptions;\n              const mergedTree = this.urlHandlingStrategy.merge(e.url, currentTransition.currentRawUrl);\n              const extras = {\n                browserUrl: currentTransition.extras.browserUrl,\n                info: currentTransition.extras.info,\n                skipLocationChange: currentTransition.extras.skipLocationChange,\n                // The URL is already updated at this point if we have 'eager' URL\n                // updates or if the navigation was triggered by the browser (back\n                // button, URL bar, etc). We want to replace that item in history\n                // if the navigation is rejected.\n                replaceUrl: currentTransition.extras.replaceUrl || this.urlUpdateStrategy === 'eager' || isBrowserTriggeredNavigation(currentTransition.source),\n                // allow developer to override default options with RedirectCommand\n                ...opts\n              };\n              this.scheduleNavigation(mergedTree, IMPERATIVE_NAVIGATION, null, extras, {\n                resolve: currentTransition.resolve,\n                reject: currentTransition.reject,\n                promise: currentTransition.promise\n              });\n            }\n          }\n          // Note that it's important to have the Router process the events _before_ the event is\n          // pushed through the public observable. This ensures the correct router state is in place\n          // before applications observe the events.\n          if (isPublicRouterEvent(e)) {\n            this._events.next(e);\n          }\n        } catch (e) {\n          this.navigationTransitions.transitionAbortSubject.next(e);\n        }\n      });\n      this.eventsSubscription.add(subscription);\n    }\n    /** @internal */\n    resetRootComponentType(rootComponentType) {\n      // TODO: vsavkin router 4.0 should make the root component set to null\n      // this will simplify the lifecycle of the router.\n      this.routerState.root.component = rootComponentType;\n      this.navigationTransitions.rootComponentType = rootComponentType;\n    }\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     */\n    initialNavigation() {\n      this.setUpLocationChangeListener();\n      if (!this.navigationTransitions.hasRequestedNavigation) {\n        this.navigateToSyncWithBrowser(this.location.path(true), IMPERATIVE_NAVIGATION, this.stateManager.restoredState());\n      }\n    }\n    /**\n     * Sets up the location change listener. This listener detects navigations triggered from outside\n     * the Router (the browser back/forward buttons, for example) and schedules a corresponding Router\n     * navigation so that the correct events, guards, etc. are triggered.\n     */\n    setUpLocationChangeListener() {\n      // Don't need to use Zone.wrap any more, because zone.js\n      // already patch onPopState, so location change callback will\n      // run into ngZone\n      this.nonRouterCurrentEntryChangeSubscription ??= this.stateManager.registerNonRouterCurrentEntryChangeListener((url, state) => {\n        // The `setTimeout` was added in #12160 and is likely to support Angular/AngularJS\n        // hybrid apps.\n        setTimeout(() => {\n          this.navigateToSyncWithBrowser(url, 'popstate', state);\n        }, 0);\n      });\n    }\n    /**\n     * Schedules a router navigation to synchronize Router state with the browser state.\n     *\n     * This is done as a response to a popstate event and the initial navigation. These\n     * two scenarios represent times when the browser URL/state has been updated and\n     * the Router needs to respond to ensure its internal state matches.\n     */\n    navigateToSyncWithBrowser(url, source, state) {\n      const extras = {\n        replaceUrl: true\n      };\n      // TODO: restoredState should always include the entire state, regardless\n      // of navigationId. This requires a breaking change to update the type on\n      // NavigationStart’s restoredState, which currently requires navigationId\n      // to always be present. The Router used to only restore history state if\n      // a navigationId was present.\n      // The stored navigationId is used by the RouterScroller to retrieve the scroll\n      // position for the page.\n      const restoredState = state?.navigationId ? state : null;\n      // Separate to NavigationStart.restoredState, we must also restore the state to\n      // history.state and generate a new navigationId, since it will be overwritten\n      if (state) {\n        const stateCopy = {\n          ...state\n        };\n        delete stateCopy.navigationId;\n        delete stateCopy.ɵrouterPageId;\n        if (Object.keys(stateCopy).length !== 0) {\n          extras.state = stateCopy;\n        }\n      }\n      const urlTree = this.parseUrl(url);\n      this.scheduleNavigation(urlTree, source, restoredState, extras);\n    }\n    /** The current URL. */\n    get url() {\n      return this.serializeUrl(this.currentUrlTree);\n    }\n    /**\n     * Returns the current `Navigation` object when the router is navigating,\n     * and `null` when idle.\n     */\n    getCurrentNavigation() {\n      return this.navigationTransitions.currentNavigation;\n    }\n    /**\n     * The `Navigation` object of the most recent navigation to succeed and `null` if there\n     *     has not been a successful navigation yet.\n     */\n    get lastSuccessfulNavigation() {\n      return this.navigationTransitions.lastSuccessfulNavigation;\n    }\n    /**\n     * Resets the route configuration used for navigation and generating links.\n     *\n     * @param config The route array for the new configuration.\n     *\n     * @usageNotes\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     */\n    resetConfig(config) {\n      (typeof ngDevMode === 'undefined' || ngDevMode) && validateConfig(config);\n      this.config = config.map(standardizeConfig);\n      this.navigated = false;\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.dispose();\n    }\n    /** Disposes of the router. */\n    dispose() {\n      this.navigationTransitions.complete();\n      if (this.nonRouterCurrentEntryChangeSubscription) {\n        this.nonRouterCurrentEntryChangeSubscription.unsubscribe();\n        this.nonRouterCurrentEntryChangeSubscription = undefined;\n      }\n      this.disposed = true;\n      this.eventsSubscription.unsubscribe();\n    }\n    /**\n     * Appends URL segments to the current URL tree to create a new URL tree.\n     *\n     * @param commands An array of URL fragments with which to construct the new URL tree.\n     * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n     * segments, followed by the parameters for each segment.\n     * The fragments are applied to the current URL tree or the one provided  in the `relativeTo`\n     * property of the options object, if supplied.\n     * @param navigationExtras Options that control the navigation strategy.\n     * @returns The new URL tree.\n     *\n     * @usageNotes\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it,\n     * // you can do the following:\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     *\n     * Note that a value of `null` or `undefined` for `relativeTo` indicates that the\n     * tree should be created relative to the root.\n     * ```\n     */\n    createUrlTree(commands, navigationExtras = {}) {\n      const {\n        relativeTo,\n        queryParams,\n        fragment,\n        queryParamsHandling,\n        preserveFragment\n      } = navigationExtras;\n      const f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n      let q = null;\n      switch (queryParamsHandling ?? this.options.defaultQueryParamsHandling) {\n        case 'merge':\n          q = {\n            ...this.currentUrlTree.queryParams,\n            ...queryParams\n          };\n          break;\n        case 'preserve':\n          q = this.currentUrlTree.queryParams;\n          break;\n        default:\n          q = queryParams || null;\n      }\n      if (q !== null) {\n        q = this.removeEmptyProps(q);\n      }\n      let relativeToUrlSegmentGroup;\n      try {\n        const relativeToSnapshot = relativeTo ? relativeTo.snapshot : this.routerState.snapshot.root;\n        relativeToUrlSegmentGroup = createSegmentGroupFromRoute(relativeToSnapshot);\n      } catch (e) {\n        // This is strictly for backwards compatibility with tests that create\n        // invalid `ActivatedRoute` mocks.\n        // Note: the difference between having this fallback for invalid `ActivatedRoute` setups and\n        // just throwing is ~500 test failures. Fixing all of those tests by hand is not feasible at\n        // the moment.\n        if (typeof commands[0] !== 'string' || commands[0][0] !== '/') {\n          // Navigations that were absolute in the old way of creating UrlTrees\n          // would still work because they wouldn't attempt to match the\n          // segments in the `ActivatedRoute` to the `currentUrlTree` but\n          // instead just replace the root segment with the navigation result.\n          // Non-absolute navigations would fail to apply the commands because\n          // the logic could not find the segment to replace (so they'd act like there were no\n          // commands).\n          commands = [];\n        }\n        relativeToUrlSegmentGroup = this.currentUrlTree.root;\n      }\n      return createUrlTreeFromSegmentGroup(relativeToUrlSegmentGroup, commands, q, f ?? null);\n    }\n    /**\n     * Navigates to a view using an absolute route path.\n     *\n     * @param url An absolute path for a defined route. The function does not apply any delta to the\n     *     current URL.\n     * @param extras An object containing properties that modify the navigation strategy.\n     *\n     * @returns A Promise that resolves to 'true' when navigation succeeds,\n     * to 'false' when navigation fails, or is rejected on error.\n     *\n     * @usageNotes\n     *\n     * The following calls request navigation to an absolute path.\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * @see [Routing and Navigation guide](guide/routing/common-router-tasks)\n     *\n     */\n    navigateByUrl(url, extras = {\n      skipLocationChange: false\n    }) {\n      const urlTree = isUrlTree(url) ? url : this.parseUrl(url);\n      const mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n      return this.scheduleNavigation(mergedTree, IMPERATIVE_NAVIGATION, null, extras);\n    }\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * @param commands An array of URL fragments with which to construct the target URL.\n     * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n     * segments, followed by the parameters for each segment.\n     * The fragments are applied to the current URL or the one provided  in the `relativeTo` property\n     * of the options object, if supplied.\n     * @param extras An options object that determines how the URL should be constructed or\n     *     interpreted.\n     *\n     * @returns A Promise that resolves to `true` when navigation succeeds, or `false` when navigation\n     *     fails. The Promise is rejected when an error occurs if `resolveNavigationPromiseOnError` is\n     * not `true`.\n     *\n     * @usageNotes\n     *\n     * The following calls request navigation to a dynamic route path relative to the current URL.\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL, overriding the default behavior\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * @see [Routing and Navigation guide](guide/routing/common-router-tasks)\n     *\n     */\n    navigate(commands, extras = {\n      skipLocationChange: false\n    }) {\n      validateCommands(commands);\n      return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    }\n    /** Serializes a `UrlTree` into a string */\n    serializeUrl(url) {\n      return this.urlSerializer.serialize(url);\n    }\n    /** Parses a string into a `UrlTree` */\n    parseUrl(url) {\n      try {\n        return this.urlSerializer.parse(url);\n      } catch {\n        return this.urlSerializer.parse('/');\n      }\n    }\n    isActive(url, matchOptions) {\n      let options;\n      if (matchOptions === true) {\n        options = {\n          ...exactMatchOptions\n        };\n      } else if (matchOptions === false) {\n        options = {\n          ...subsetMatchOptions\n        };\n      } else {\n        options = matchOptions;\n      }\n      if (isUrlTree(url)) {\n        return containsTree(this.currentUrlTree, url, options);\n      }\n      const urlTree = this.parseUrl(url);\n      return containsTree(this.currentUrlTree, urlTree, options);\n    }\n    removeEmptyProps(params) {\n      return Object.entries(params).reduce((result, [key, value]) => {\n        if (value !== null && value !== undefined) {\n          result[key] = value;\n        }\n        return result;\n      }, {});\n    }\n    scheduleNavigation(rawUrl, source, restoredState, extras, priorPromise) {\n      if (this.disposed) {\n        return Promise.resolve(false);\n      }\n      let resolve;\n      let reject;\n      let promise;\n      if (priorPromise) {\n        resolve = priorPromise.resolve;\n        reject = priorPromise.reject;\n        promise = priorPromise.promise;\n      } else {\n        promise = new Promise((res, rej) => {\n          resolve = res;\n          reject = rej;\n        });\n      }\n      // Indicate that the navigation is happening.\n      const taskId = this.pendingTasks.add();\n      afterNextNavigation(this, () => {\n        // Remove pending task in a microtask to allow for cancelled\n        // initial navigations and redirects within the same task.\n        queueMicrotask(() => this.pendingTasks.remove(taskId));\n      });\n      this.navigationTransitions.handleNavigationRequest({\n        source,\n        restoredState,\n        currentUrlTree: this.currentUrlTree,\n        currentRawUrl: this.currentUrlTree,\n        rawUrl,\n        extras,\n        resolve: resolve,\n        reject: reject,\n        promise,\n        currentSnapshot: this.routerState.snapshot,\n        currentRouterState: this.routerState\n      });\n      // Make sure that the error is propagated even though `processNavigations` catch\n      // handler does not rethrow\n      return promise.catch(e => {\n        return Promise.reject(e);\n      });\n    }\n    static {\n      this.ɵfac = function Router_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || Router)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: Router,\n        factory: Router.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return Router;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction validateCommands(commands) {\n  for (let i = 0; i < commands.length; i++) {\n    const cmd = commands[i];\n    if (cmd == null) {\n      throw new ɵRuntimeError(4008 /* RuntimeErrorCode.NULLISH_COMMAND */, (typeof ngDevMode === 'undefined' || ngDevMode) && `The requested path contains ${cmd} segment at index ${i}`);\n    }\n  }\n}\nfunction isPublicRouterEvent(e) {\n  return !(e instanceof BeforeActivateRoutes) && !(e instanceof RedirectRequest);\n}\n\n/**\n * @description\n *\n * When applied to an element in a template, makes that element a link\n * that initiates navigation to a route. Navigation opens one or more routed components\n * in one or more `<router-outlet>` locations on the page.\n *\n * Given a route configuration `[{ path: 'user/:name', component: UserCmp }]`,\n * the following creates a static link to the route:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * You can use dynamic values to generate the link.\n * For a dynamic link, pass an array of path segments,\n * followed by the params for each segment.\n * For example, `['/team', teamId, 'user', userName, {details: true}]`\n * generates a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one term and combined with dynamic segments.\n * For example, `['/team/11/user', userName, {details: true}]`\n *\n * The input that you provide to the link is treated as a delta to the current URL.\n * For instance, suppose the current URL is `/user/(box//aux:team)`.\n * The link `<a [routerLink]=\"['/user/jim']\">Jim</a>` creates the URL\n * `/user/(jim//aux:team)`.\n * See {@link Router#createUrlTree} for more information.\n *\n * @usageNotes\n *\n * You can use absolute or relative paths in a link, set query parameters,\n * control how parameters are handled, and keep a history of navigation states.\n *\n * ### Relative link paths\n *\n * The first segment name can be prepended with `/`, `./`, or `../`.\n * * If the first segment begins with `/`, the router looks up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router\n *   looks in the children of the current activated route.\n * * If the first segment begins with `../`, the router goes up one level in the route tree.\n *\n * ### Setting and handling query params and fragments\n *\n * The following link adds a query parameter and a fragment to the generated URL:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * By default, the directive constructs the new URL using the given query parameters.\n * The example generates the link: `/user/bob?debug=true#education`.\n *\n * You can instruct the directive to handle query parameters differently\n * by specifying the `queryParamsHandling` option in the link.\n * Allowed values are:\n *\n *  - `'merge'`: Merge the given `queryParams` into the current query params.\n *  - `'preserve'`: Preserve the current query params.\n *\n * For example:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * `queryParams`, `fragment`, `queryParamsHandling`, `preserveFragment`, and `relativeTo`\n * cannot be used when the `routerLink` input is a `UrlTree`.\n *\n * See {@link UrlCreationOptions#queryParamsHandling}.\n *\n * ### Preserving navigation history\n *\n * You can provide a `state` value to be persisted to the browser's\n * [`History.state` property](https://developer.mozilla.org/en-US/docs/Web/API/History#Properties).\n * For example:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [state]=\"{tracingId: 123}\">\n *   link to user component\n * </a>\n * ```\n *\n * Use {@link Router#getCurrentNavigation} to retrieve a saved\n * navigation-state value. For example, to capture the `tracingId` during the `NavigationStart`\n * event:\n *\n * ```\n * // Get NavigationStart events\n * router.events.pipe(filter(e => e instanceof NavigationStart)).subscribe(e => {\n *   const navigation = router.getCurrentNavigation();\n *   tracingService.trace({id: navigation.extras.state.tracingId});\n * });\n * ```\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nlet RouterLink = /*#__PURE__*/(() => {\n  class RouterLink {\n    constructor(router, route, tabIndexAttribute, renderer, el, locationStrategy) {\n      this.router = router;\n      this.route = route;\n      this.tabIndexAttribute = tabIndexAttribute;\n      this.renderer = renderer;\n      this.el = el;\n      this.locationStrategy = locationStrategy;\n      /**\n       * Represents an `href` attribute value applied to a host element,\n       * when a host element is `<a>`. For other tags, the value is `null`.\n       */\n      this.href = null;\n      /** @internal */\n      this.onChanges = new Subject();\n      /**\n       * Passed to {@link Router#createUrlTree} as part of the\n       * `UrlCreationOptions`.\n       * @see {@link UrlCreationOptions#preserveFragment}\n       * @see {@link Router#createUrlTree}\n       */\n      this.preserveFragment = false;\n      /**\n       * Passed to {@link Router#navigateByUrl} as part of the\n       * `NavigationBehaviorOptions`.\n       * @see {@link NavigationBehaviorOptions#skipLocationChange}\n       * @see {@link Router#navigateByUrl}\n       */\n      this.skipLocationChange = false;\n      /**\n       * Passed to {@link Router#navigateByUrl} as part of the\n       * `NavigationBehaviorOptions`.\n       * @see {@link NavigationBehaviorOptions#replaceUrl}\n       * @see {@link Router#navigateByUrl}\n       */\n      this.replaceUrl = false;\n      this.routerLinkInput = null;\n      const tagName = el.nativeElement.tagName?.toLowerCase();\n      this.isAnchorElement = tagName === 'a' || tagName === 'area';\n      if (this.isAnchorElement) {\n        this.subscription = router.events.subscribe(s => {\n          if (s instanceof NavigationEnd) {\n            this.updateHref();\n          }\n        });\n      } else {\n        this.setTabIndexIfNotOnNativeEl('0');\n      }\n    }\n    /**\n     * Modifies the tab index if there was not a tabindex attribute on the element during\n     * instantiation.\n     */\n    setTabIndexIfNotOnNativeEl(newTabIndex) {\n      if (this.tabIndexAttribute != null /* both `null` and `undefined` */ || this.isAnchorElement) {\n        return;\n      }\n      this.applyAttributeValue('tabindex', newTabIndex);\n    }\n    /** @nodoc */\n    // TODO(atscott): Remove changes parameter in major version as a breaking change.\n    ngOnChanges(changes) {\n      if (ngDevMode && isUrlTree(this.routerLinkInput) && (this.fragment !== undefined || this.queryParams || this.queryParamsHandling || this.preserveFragment || this.relativeTo)) {\n        throw new ɵRuntimeError(4016 /* RuntimeErrorCode.INVALID_ROUTER_LINK_INPUTS */, 'Cannot configure queryParams or fragment when using a UrlTree as the routerLink input value.');\n      }\n      if (this.isAnchorElement) {\n        this.updateHref();\n      }\n      // This is subscribed to by `RouterLinkActive` so that it knows to update when there are changes\n      // to the RouterLinks it's tracking.\n      this.onChanges.next(this);\n    }\n    /**\n     * Commands to pass to {@link Router#createUrlTree} or a `UrlTree`.\n     *   - **array**: commands to pass to {@link Router#createUrlTree}.\n     *   - **string**: shorthand for array of commands with just the string, i.e. `['/route']`\n     *   - **UrlTree**: a `UrlTree` for this link rather than creating one from the commands\n     *     and other inputs that correspond to properties of `UrlCreationOptions`.\n     *   - **null|undefined**: effectively disables the `routerLink`\n     * @see {@link Router#createUrlTree}\n     */\n    set routerLink(commandsOrUrlTree) {\n      if (commandsOrUrlTree == null) {\n        this.routerLinkInput = null;\n        this.setTabIndexIfNotOnNativeEl(null);\n      } else {\n        if (isUrlTree(commandsOrUrlTree)) {\n          this.routerLinkInput = commandsOrUrlTree;\n        } else {\n          this.routerLinkInput = Array.isArray(commandsOrUrlTree) ? commandsOrUrlTree : [commandsOrUrlTree];\n        }\n        this.setTabIndexIfNotOnNativeEl('0');\n      }\n    }\n    /** @nodoc */\n    onClick(button, ctrlKey, shiftKey, altKey, metaKey) {\n      const urlTree = this.urlTree;\n      if (urlTree === null) {\n        return true;\n      }\n      if (this.isAnchorElement) {\n        if (button !== 0 || ctrlKey || shiftKey || altKey || metaKey) {\n          return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n          return true;\n        }\n      }\n      const extras = {\n        skipLocationChange: this.skipLocationChange,\n        replaceUrl: this.replaceUrl,\n        state: this.state,\n        info: this.info\n      };\n      this.router.navigateByUrl(urlTree, extras);\n      // Return `false` for `<a>` elements to prevent default action\n      // and cancel the native behavior, since the navigation is handled\n      // by the Router.\n      return !this.isAnchorElement;\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.subscription?.unsubscribe();\n    }\n    updateHref() {\n      const urlTree = this.urlTree;\n      this.href = urlTree !== null && this.locationStrategy ? this.locationStrategy?.prepareExternalUrl(this.router.serializeUrl(urlTree)) : null;\n      const sanitizedValue = this.href === null ? null :\n      // This class represents a directive that can be added to both `<a>` elements,\n      // as well as other elements. As a result, we can't define security context at\n      // compile time. So the security context is deferred to runtime.\n      // The `ɵɵsanitizeUrlOrResourceUrl` selects the necessary sanitizer function\n      // based on the tag and property names. The logic mimics the one from\n      // `packages/compiler/src/schema/dom_security_schema.ts`, which is used at compile time.\n      //\n      // Note: we should investigate whether we can switch to using `@HostBinding('attr.href')`\n      // instead of applying a value via a renderer, after a final merge of the\n      // `RouterLinkWithHref` directive.\n      ɵɵsanitizeUrlOrResourceUrl(this.href, this.el.nativeElement.tagName.toLowerCase(), 'href');\n      this.applyAttributeValue('href', sanitizedValue);\n    }\n    applyAttributeValue(attrName, attrValue) {\n      const renderer = this.renderer;\n      const nativeElement = this.el.nativeElement;\n      if (attrValue !== null) {\n        renderer.setAttribute(nativeElement, attrName, attrValue);\n      } else {\n        renderer.removeAttribute(nativeElement, attrName);\n      }\n    }\n    get urlTree() {\n      if (this.routerLinkInput === null) {\n        return null;\n      } else if (isUrlTree(this.routerLinkInput)) {\n        return this.routerLinkInput;\n      }\n      return this.router.createUrlTree(this.routerLinkInput, {\n        // If the `relativeTo` input is not defined, we want to use `this.route` by default.\n        // Otherwise, we should use the value provided by the user in the input.\n        relativeTo: this.relativeTo !== undefined ? this.relativeTo : this.route,\n        queryParams: this.queryParams,\n        fragment: this.fragment,\n        queryParamsHandling: this.queryParamsHandling,\n        preserveFragment: this.preserveFragment\n      });\n    }\n    static {\n      this.ɵfac = function RouterLink_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || RouterLink)(i0.ɵɵdirectiveInject(Router), i0.ɵɵdirectiveInject(ActivatedRoute), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.LocationStrategy));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: RouterLink,\n        selectors: [[\"\", \"routerLink\", \"\"]],\n        hostVars: 1,\n        hostBindings: function RouterLink_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"click\", function RouterLink_click_HostBindingHandler($event) {\n              return ctx.onClick($event.button, $event.ctrlKey, $event.shiftKey, $event.altKey, $event.metaKey);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"target\", ctx.target);\n          }\n        },\n        inputs: {\n          target: \"target\",\n          queryParams: \"queryParams\",\n          fragment: \"fragment\",\n          queryParamsHandling: \"queryParamsHandling\",\n          state: \"state\",\n          info: \"info\",\n          relativeTo: \"relativeTo\",\n          preserveFragment: [2, \"preserveFragment\", \"preserveFragment\", booleanAttribute],\n          skipLocationChange: [2, \"skipLocationChange\", \"skipLocationChange\", booleanAttribute],\n          replaceUrl: [2, \"replaceUrl\", \"replaceUrl\", booleanAttribute],\n          routerLink: \"routerLink\"\n        },\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return RouterLink;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n *\n * @description\n *\n * Tracks whether the linked route of an element is currently active, and allows you\n * to specify one or more CSS classes to add to the element when the linked route\n * is active.\n *\n * Use this directive to create a visual distinction for elements associated with an active route.\n * For example, the following code highlights the word \"Bob\" when the router\n * activates the associated route:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * Whenever the URL is either '/user' or '/user/bob', the \"active-link\" class is\n * added to the anchor tag. If the URL changes, the class is removed.\n *\n * You can set more than one class using a space-separated string or an array.\n * For example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * To add the classes only when the URL matches the link exactly, add the option `exact: true`:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * To directly check the `isActive` status of the link, assign the `RouterLinkActive`\n * instance to a template variable.\n * For example, the following checks the status without assigning any CSS classes:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * You can apply the `RouterLinkActive` directive to an ancestor of linked elements.\n * For example, the following sets the active-link class on the `<div>`  parent tag\n * when the URL is either '/user/jim' or '/user/bob'.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * The `RouterLinkActive` directive can also be used to set the aria-current attribute\n * to provide an alternative distinction for active elements to visually impaired users.\n *\n * For example, the following code adds the 'active' class to the Home Page link when it is\n * indeed active and in such case also sets its aria-current attribute to 'page':\n *\n * ```\n * <a routerLink=\"/\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">Home Page</a>\n * ```\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nlet RouterLinkActive = /*#__PURE__*/(() => {\n  class RouterLinkActive {\n    get isActive() {\n      return this._isActive;\n    }\n    constructor(router, element, renderer, cdr, link) {\n      this.router = router;\n      this.element = element;\n      this.renderer = renderer;\n      this.cdr = cdr;\n      this.link = link;\n      this.classes = [];\n      this._isActive = false;\n      /**\n       * Options to configure how to determine if the router link is active.\n       *\n       * These options are passed to the `Router.isActive()` function.\n       *\n       * @see {@link Router#isActive}\n       */\n      this.routerLinkActiveOptions = {\n        exact: false\n      };\n      /**\n       *\n       * You can use the output `isActiveChange` to get notified each time the link becomes\n       * active or inactive.\n       *\n       * Emits:\n       * true  -> Route is active\n       * false -> Route is inactive\n       *\n       * ```\n       * <a\n       *  routerLink=\"/user/bob\"\n       *  routerLinkActive=\"active-link\"\n       *  (isActiveChange)=\"this.onRouterLinkActive($event)\">Bob</a>\n       * ```\n       */\n      this.isActiveChange = new EventEmitter();\n      this.routerEventsSubscription = router.events.subscribe(s => {\n        if (s instanceof NavigationEnd) {\n          this.update();\n        }\n      });\n    }\n    /** @nodoc */\n    ngAfterContentInit() {\n      // `of(null)` is used to force subscribe body to execute once immediately (like `startWith`).\n      of(this.links.changes, of(null)).pipe(mergeAll()).subscribe(_ => {\n        this.update();\n        this.subscribeToEachLinkOnChanges();\n      });\n    }\n    subscribeToEachLinkOnChanges() {\n      this.linkInputChangesSubscription?.unsubscribe();\n      const allLinkChanges = [...this.links.toArray(), this.link].filter(link => !!link).map(link => link.onChanges);\n      this.linkInputChangesSubscription = from(allLinkChanges).pipe(mergeAll()).subscribe(link => {\n        if (this._isActive !== this.isLinkActive(this.router)(link)) {\n          this.update();\n        }\n      });\n    }\n    set routerLinkActive(data) {\n      const classes = Array.isArray(data) ? data : data.split(' ');\n      this.classes = classes.filter(c => !!c);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      this.update();\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.routerEventsSubscription.unsubscribe();\n      this.linkInputChangesSubscription?.unsubscribe();\n    }\n    update() {\n      if (!this.links || !this.router.navigated) return;\n      queueMicrotask(() => {\n        const hasActiveLinks = this.hasActiveLinks();\n        this.classes.forEach(c => {\n          if (hasActiveLinks) {\n            this.renderer.addClass(this.element.nativeElement, c);\n          } else {\n            this.renderer.removeClass(this.element.nativeElement, c);\n          }\n        });\n        if (hasActiveLinks && this.ariaCurrentWhenActive !== undefined) {\n          this.renderer.setAttribute(this.element.nativeElement, 'aria-current', this.ariaCurrentWhenActive.toString());\n        } else {\n          this.renderer.removeAttribute(this.element.nativeElement, 'aria-current');\n        }\n        // Only emit change if the active state changed.\n        if (this._isActive !== hasActiveLinks) {\n          this._isActive = hasActiveLinks;\n          this.cdr.markForCheck();\n          // Emit on isActiveChange after classes are updated\n          this.isActiveChange.emit(hasActiveLinks);\n        }\n      });\n    }\n    isLinkActive(router) {\n      const options = isActiveMatchOptions(this.routerLinkActiveOptions) ? this.routerLinkActiveOptions :\n      // While the types should disallow `undefined` here, it's possible without strict inputs\n      this.routerLinkActiveOptions.exact || false;\n      return link => {\n        const urlTree = link.urlTree;\n        return urlTree ? router.isActive(urlTree, options) : false;\n      };\n    }\n    hasActiveLinks() {\n      const isActiveCheckFn = this.isLinkActive(this.router);\n      return this.link && isActiveCheckFn(this.link) || this.links.some(isActiveCheckFn);\n    }\n    static {\n      this.ɵfac = function RouterLinkActive_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || RouterLinkActive)(i0.ɵɵdirectiveInject(Router), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(RouterLink, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: RouterLinkActive,\n        selectors: [[\"\", \"routerLinkActive\", \"\"]],\n        contentQueries: function RouterLinkActive_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, RouterLink, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.links = _t);\n          }\n        },\n        inputs: {\n          routerLinkActiveOptions: \"routerLinkActiveOptions\",\n          ariaCurrentWhenActive: \"ariaCurrentWhenActive\",\n          routerLinkActive: \"routerLinkActive\"\n        },\n        outputs: {\n          isActiveChange: \"isActiveChange\"\n        },\n        exportAs: [\"routerLinkActive\"],\n        standalone: true,\n        features: [i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return RouterLinkActive;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use instead of `'paths' in options` to be compatible with property renaming\n */\nfunction isActiveMatchOptions(options) {\n  return !!options.paths;\n}\n\n/**\n * @description\n *\n * Provides a preloading strategy.\n *\n * @publicApi\n */\nclass PreloadingStrategy {}\n/**\n * @description\n *\n * Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * ```\n * RouterModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * @publicApi\n */\nlet PreloadAllModules = /*#__PURE__*/(() => {\n  class PreloadAllModules {\n    preload(route, fn) {\n      return fn().pipe(catchError(() => of(null)));\n    }\n    static {\n      this.ɵfac = function PreloadAllModules_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || PreloadAllModules)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: PreloadAllModules,\n        factory: PreloadAllModules.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return PreloadAllModules;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n *\n * Provides a preloading strategy that does not preload any modules.\n *\n * This strategy is enabled by default.\n *\n * @publicApi\n */\nlet NoPreloading = /*#__PURE__*/(() => {\n  class NoPreloading {\n    preload(route, fn) {\n      return of(null);\n    }\n    static {\n      this.ɵfac = function NoPreloading_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NoPreloading)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: NoPreloading,\n        factory: NoPreloading.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return NoPreloading;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * @publicApi\n */\nlet RouterPreloader = /*#__PURE__*/(() => {\n  class RouterPreloader {\n    constructor(router, compiler, injector, preloadingStrategy, loader) {\n      this.router = router;\n      this.injector = injector;\n      this.preloadingStrategy = preloadingStrategy;\n      this.loader = loader;\n    }\n    setUpPreloading() {\n      this.subscription = this.router.events.pipe(filter(e => e instanceof NavigationEnd), concatMap(() => this.preload())).subscribe(() => {});\n    }\n    preload() {\n      return this.processRoutes(this.injector, this.router.config);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n    processRoutes(injector, routes) {\n      const res = [];\n      for (const route of routes) {\n        if (route.providers && !route._injector) {\n          route._injector = createEnvironmentInjector(route.providers, injector, `Route: ${route.path}`);\n        }\n        const injectorForCurrentRoute = route._injector ?? injector;\n        const injectorForChildren = route._loadedInjector ?? injectorForCurrentRoute;\n        // Note that `canLoad` is only checked as a condition that prevents `loadChildren` and not\n        // `loadComponent`. `canLoad` guards only block loading of child routes by design. This\n        // happens as a consequence of needing to descend into children for route matching immediately\n        // while component loading is deferred until route activation. Because `canLoad` guards can\n        // have side effects, we cannot execute them here so we instead skip preloading altogether\n        // when present. Lastly, it remains to be decided whether `canLoad` should behave this way\n        // at all. Code splitting and lazy loading is separate from client-side authorization checks\n        // and should not be used as a security measure to prevent loading of code.\n        if (route.loadChildren && !route._loadedRoutes && route.canLoad === undefined || route.loadComponent && !route._loadedComponent) {\n          res.push(this.preloadConfig(injectorForCurrentRoute, route));\n        }\n        if (route.children || route._loadedRoutes) {\n          res.push(this.processRoutes(injectorForChildren, route.children ?? route._loadedRoutes));\n        }\n      }\n      return from(res).pipe(mergeAll());\n    }\n    preloadConfig(injector, route) {\n      return this.preloadingStrategy.preload(route, () => {\n        let loadedChildren$;\n        if (route.loadChildren && route.canLoad === undefined) {\n          loadedChildren$ = this.loader.loadChildren(injector, route);\n        } else {\n          loadedChildren$ = of(null);\n        }\n        const recursiveLoadChildren$ = loadedChildren$.pipe(mergeMap(config => {\n          if (config === null) {\n            return of(void 0);\n          }\n          route._loadedRoutes = config.routes;\n          route._loadedInjector = config.injector;\n          // If the loaded config was a module, use that as the module/module injector going\n          // forward. Otherwise, continue using the current module/module injector.\n          return this.processRoutes(config.injector ?? injector, config.routes);\n        }));\n        if (route.loadComponent && !route._loadedComponent) {\n          const loadComponent$ = this.loader.loadComponent(route);\n          return from([recursiveLoadChildren$, loadComponent$]).pipe(mergeAll());\n        } else {\n          return recursiveLoadChildren$;\n        }\n      });\n    }\n    static {\n      this.ɵfac = function RouterPreloader_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || RouterPreloader)(i0.ɵɵinject(Router), i0.ɵɵinject(i0.Compiler), i0.ɵɵinject(i0.EnvironmentInjector), i0.ɵɵinject(PreloadingStrategy), i0.ɵɵinject(RouterConfigLoader));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: RouterPreloader,\n        factory: RouterPreloader.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return RouterPreloader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst ROUTER_SCROLLER = /*#__PURE__*/new InjectionToken('');\nlet RouterScroller = /*#__PURE__*/(() => {\n  class RouterScroller {\n    /** @nodoc */\n    constructor(urlSerializer, transitions, viewportScroller, zone, options = {}) {\n      this.urlSerializer = urlSerializer;\n      this.transitions = transitions;\n      this.viewportScroller = viewportScroller;\n      this.zone = zone;\n      this.options = options;\n      this.lastId = 0;\n      this.lastSource = 'imperative';\n      this.restoredId = 0;\n      this.store = {};\n      // Default both options to 'disabled'\n      options.scrollPositionRestoration ||= 'disabled';\n      options.anchorScrolling ||= 'disabled';\n    }\n    init() {\n      // we want to disable the automatic scrolling because having two places\n      // responsible for scrolling results race conditions, especially given\n      // that browser don't implement this behavior consistently\n      if (this.options.scrollPositionRestoration !== 'disabled') {\n        this.viewportScroller.setHistoryScrollRestoration('manual');\n      }\n      this.routerEventsSubscription = this.createScrollEvents();\n      this.scrollEventsSubscription = this.consumeScrollEvents();\n    }\n    createScrollEvents() {\n      return this.transitions.events.subscribe(e => {\n        if (e instanceof NavigationStart) {\n          // store the scroll position of the current stable navigations.\n          this.store[this.lastId] = this.viewportScroller.getScrollPosition();\n          this.lastSource = e.navigationTrigger;\n          this.restoredId = e.restoredState ? e.restoredState.navigationId : 0;\n        } else if (e instanceof NavigationEnd) {\n          this.lastId = e.id;\n          this.scheduleScrollEvent(e, this.urlSerializer.parse(e.urlAfterRedirects).fragment);\n        } else if (e instanceof NavigationSkipped && e.code === NavigationSkippedCode.IgnoredSameUrlNavigation) {\n          this.lastSource = undefined;\n          this.restoredId = 0;\n          this.scheduleScrollEvent(e, this.urlSerializer.parse(e.url).fragment);\n        }\n      });\n    }\n    consumeScrollEvents() {\n      return this.transitions.events.subscribe(e => {\n        if (!(e instanceof Scroll)) return;\n        // a popstate event. The pop state event will always ignore anchor scrolling.\n        if (e.position) {\n          if (this.options.scrollPositionRestoration === 'top') {\n            this.viewportScroller.scrollToPosition([0, 0]);\n          } else if (this.options.scrollPositionRestoration === 'enabled') {\n            this.viewportScroller.scrollToPosition(e.position);\n          }\n          // imperative navigation \"forward\"\n        } else {\n          if (e.anchor && this.options.anchorScrolling === 'enabled') {\n            this.viewportScroller.scrollToAnchor(e.anchor);\n          } else if (this.options.scrollPositionRestoration !== 'disabled') {\n            this.viewportScroller.scrollToPosition([0, 0]);\n          }\n        }\n      });\n    }\n    scheduleScrollEvent(routerEvent, anchor) {\n      this.zone.runOutsideAngular(() => {\n        // The scroll event needs to be delayed until after change detection. Otherwise, we may\n        // attempt to restore the scroll position before the router outlet has fully rendered the\n        // component by executing its update block of the template function.\n        setTimeout(() => {\n          this.zone.run(() => {\n            this.transitions.events.next(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));\n          });\n        }, 0);\n      });\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.routerEventsSubscription?.unsubscribe();\n      this.scrollEventsSubscription?.unsubscribe();\n    }\n    static {\n      this.ɵfac = function RouterScroller_Factory(__ngFactoryType__) {\n        i0.ɵɵinvalidFactory();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: RouterScroller,\n        factory: RouterScroller.ɵfac\n      });\n    }\n  }\n  return RouterScroller;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Sets up providers necessary to enable `Router` functionality for the application.\n * Allows to configure a set of routes as well as extra features that should be enabled.\n *\n * @usageNotes\n *\n * Basic example of how you can add a Router to your application:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent, {\n *   providers: [provideRouter(appRoutes)]\n * });\n * ```\n *\n * You can also enable optional features in the Router by adding functions from the `RouterFeatures`\n * type:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes,\n *         withDebugTracing(),\n *         withRouterConfig({paramsInheritanceStrategy: 'always'}))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link RouterFeatures}\n *\n * @publicApi\n * @param routes A set of `Route`s to use for the application routing table.\n * @param features Optional features to configure additional router behaviors.\n * @returns A set of providers to setup a Router.\n */\nfunction provideRouter(routes, ...features) {\n  return makeEnvironmentProviders([{\n    provide: ROUTES,\n    multi: true,\n    useValue: routes\n  }, typeof ngDevMode === 'undefined' || ngDevMode ? {\n    provide: ROUTER_IS_PROVIDED,\n    useValue: true\n  } : [], {\n    provide: ActivatedRoute,\n    useFactory: rootRoute,\n    deps: [Router]\n  }, {\n    provide: APP_BOOTSTRAP_LISTENER,\n    multi: true,\n    useFactory: getBootstrapListener\n  }, features.map(feature => feature.ɵproviders)]);\n}\nfunction rootRoute(router) {\n  return router.routerState.root;\n}\n/**\n * Helper function to create an object that represents a Router feature.\n */\nfunction routerFeature(kind, providers) {\n  return {\n    ɵkind: kind,\n    ɵproviders: providers\n  };\n}\n/**\n * An Injection token used to indicate whether `provideRouter` or `RouterModule.forRoot` was ever\n * called.\n */\nconst ROUTER_IS_PROVIDED = /*#__PURE__*/new InjectionToken('', {\n  providedIn: 'root',\n  factory: () => false\n});\nconst routerIsProvidedDevModeCheck = {\n  provide: ENVIRONMENT_INITIALIZER,\n  multi: true,\n  useFactory() {\n    return () => {\n      if (!inject(ROUTER_IS_PROVIDED)) {\n        console.warn('`provideRoutes` was called without `provideRouter` or `RouterModule.forRoot`. ' + 'This is likely a mistake.');\n      }\n    };\n  }\n};\n/**\n * Registers a DI provider for a set of routes.\n * @param routes The route configuration to provide.\n *\n * @usageNotes\n *\n * ```\n * @NgModule({\n *   providers: [provideRoutes(ROUTES)]\n * })\n * class LazyLoadedChildModule {}\n * ```\n *\n * @deprecated If necessary, provide routes using the `ROUTES` `InjectionToken`.\n * @see {@link ROUTES}\n * @publicApi\n */\nfunction provideRoutes(routes) {\n  return [{\n    provide: ROUTES,\n    multi: true,\n    useValue: routes\n  }, typeof ngDevMode === 'undefined' || ngDevMode ? routerIsProvidedDevModeCheck : []];\n}\n/**\n * Enables customizable scrolling behavior for router navigations.\n *\n * @usageNotes\n *\n * Basic example of how you can enable scrolling feature:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withInMemoryScrolling())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n * @see {@link ViewportScroller}\n *\n * @publicApi\n * @param options Set of configuration parameters to customize scrolling behavior, see\n *     `InMemoryScrollingOptions` for additional information.\n * @returns A set of providers for use with `provideRouter`.\n */\nfunction withInMemoryScrolling(options = {}) {\n  const providers = [{\n    provide: ROUTER_SCROLLER,\n    useFactory: () => {\n      const viewportScroller = inject(ViewportScroller);\n      const zone = inject(NgZone);\n      const transitions = inject(NavigationTransitions);\n      const urlSerializer = inject(UrlSerializer);\n      return new RouterScroller(urlSerializer, transitions, viewportScroller, zone, options);\n    }\n  }];\n  return routerFeature(4 /* RouterFeatureKind.InMemoryScrollingFeature */, providers);\n}\nfunction getBootstrapListener() {\n  const injector = inject(Injector);\n  return bootstrappedComponentRef => {\n    const ref = injector.get(ApplicationRef);\n    if (bootstrappedComponentRef !== ref.components[0]) {\n      return;\n    }\n    const router = injector.get(Router);\n    const bootstrapDone = injector.get(BOOTSTRAP_DONE);\n    if (injector.get(INITIAL_NAVIGATION) === 1 /* InitialNavigation.EnabledNonBlocking */) {\n      router.initialNavigation();\n    }\n    injector.get(ROUTER_PRELOADER, null, InjectFlags.Optional)?.setUpPreloading();\n    injector.get(ROUTER_SCROLLER, null, InjectFlags.Optional)?.init();\n    router.resetRootComponentType(ref.componentTypes[0]);\n    if (!bootstrapDone.closed) {\n      bootstrapDone.next();\n      bootstrapDone.complete();\n      bootstrapDone.unsubscribe();\n    }\n  };\n}\n/**\n * A subject used to indicate that the bootstrapping phase is done. When initial navigation is\n * `enabledBlocking`, the first navigation waits until bootstrapping is finished before continuing\n * to the activation phase.\n */\nconst BOOTSTRAP_DONE = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'bootstrap done indicator' : '', {\n  factory: () => {\n    return new Subject();\n  }\n});\nconst INITIAL_NAVIGATION = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'initial navigation' : '', {\n  providedIn: 'root',\n  factory: () => 1 /* InitialNavigation.EnabledNonBlocking */\n});\n/**\n * Configures initial navigation to start before the root component is created.\n *\n * The bootstrap is blocked until the initial navigation is complete. This should be set in case\n * you use [server-side rendering](guide/ssr), but do not enable [hydration](guide/hydration) for\n * your application.\n *\n * @usageNotes\n *\n * Basic example of how you can enable this navigation behavior:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withEnabledBlockingInitialNavigation())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @publicApi\n * @returns A set of providers for use with `provideRouter`.\n */\nfunction withEnabledBlockingInitialNavigation() {\n  const providers = [{\n    provide: INITIAL_NAVIGATION,\n    useValue: 0 /* InitialNavigation.EnabledBlocking */\n  }, {\n    provide: APP_INITIALIZER,\n    multi: true,\n    deps: [Injector],\n    useFactory: injector => {\n      const locationInitialized = injector.get(LOCATION_INITIALIZED, Promise.resolve());\n      return () => {\n        return locationInitialized.then(() => {\n          return new Promise(resolve => {\n            const router = injector.get(Router);\n            const bootstrapDone = injector.get(BOOTSTRAP_DONE);\n            afterNextNavigation(router, () => {\n              // Unblock APP_INITIALIZER in case the initial navigation was canceled or errored\n              // without a redirect.\n              resolve(true);\n            });\n            injector.get(NavigationTransitions).afterPreactivation = () => {\n              // Unblock APP_INITIALIZER once we get to `afterPreactivation`. At this point, we\n              // assume activation will complete successfully (even though this is not\n              // guaranteed).\n              resolve(true);\n              return bootstrapDone.closed ? of(void 0) : bootstrapDone;\n            };\n            router.initialNavigation();\n          });\n        });\n      };\n    }\n  }];\n  return routerFeature(2 /* RouterFeatureKind.EnabledBlockingInitialNavigationFeature */, providers);\n}\n/**\n * Disables initial navigation.\n *\n * Use if there is a reason to have more control over when the router starts its initial navigation\n * due to some complex initialization logic.\n *\n * @usageNotes\n *\n * Basic example of how you can disable initial navigation:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withDisabledInitialNavigation())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withDisabledInitialNavigation() {\n  const providers = [{\n    provide: APP_INITIALIZER,\n    multi: true,\n    useFactory: () => {\n      const router = inject(Router);\n      return () => {\n        router.setUpLocationChangeListener();\n      };\n    }\n  }, {\n    provide: INITIAL_NAVIGATION,\n    useValue: 2 /* InitialNavigation.Disabled */\n  }];\n  return routerFeature(3 /* RouterFeatureKind.DisabledInitialNavigationFeature */, providers);\n}\n/**\n * Enables logging of all internal navigation events to the console.\n * Extra logging might be useful for debugging purposes to inspect Router event sequence.\n *\n * @usageNotes\n *\n * Basic example of how you can enable debug tracing:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withDebugTracing())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withDebugTracing() {\n  let providers = [];\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    providers = [{\n      provide: ENVIRONMENT_INITIALIZER,\n      multi: true,\n      useFactory: () => {\n        const router = inject(Router);\n        return () => router.events.subscribe(e => {\n          // tslint:disable:no-console\n          console.group?.(`Router Event: ${e.constructor.name}`);\n          console.log(stringifyEvent(e));\n          console.log(e);\n          console.groupEnd?.();\n          // tslint:enable:no-console\n        });\n      }\n    }];\n  } else {\n    providers = [];\n  }\n  return routerFeature(1 /* RouterFeatureKind.DebugTracingFeature */, providers);\n}\nconst ROUTER_PRELOADER = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'router preloader' : '');\n/**\n * Allows to configure a preloading strategy to use. The strategy is configured by providing a\n * reference to a class that implements a `PreloadingStrategy`.\n *\n * @usageNotes\n *\n * Basic example of how you can configure preloading:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withPreloading(PreloadAllModules))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @param preloadingStrategy A reference to a class that implements a `PreloadingStrategy` that\n *     should be used.\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withPreloading(preloadingStrategy) {\n  const providers = [{\n    provide: ROUTER_PRELOADER,\n    useExisting: RouterPreloader\n  }, {\n    provide: PreloadingStrategy,\n    useExisting: preloadingStrategy\n  }];\n  return routerFeature(0 /* RouterFeatureKind.PreloadingFeature */, providers);\n}\n/**\n * Allows to provide extra parameters to configure Router.\n *\n * @usageNotes\n *\n * Basic example of how you can provide extra configuration options:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withRouterConfig({\n *          onSameUrlNavigation: 'reload'\n *       }))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @param options A set of parameters to configure Router, see `RouterConfigOptions` for\n *     additional information.\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withRouterConfig(options) {\n  const providers = [{\n    provide: ROUTER_CONFIGURATION,\n    useValue: options\n  }];\n  return routerFeature(5 /* RouterFeatureKind.RouterConfigurationFeature */, providers);\n}\n/**\n * Provides the location strategy that uses the URL fragment instead of the history API.\n *\n * @usageNotes\n *\n * Basic example of how you can use the hash location option:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withHashLocation())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n * @see {@link HashLocationStrategy}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withHashLocation() {\n  const providers = [{\n    provide: LocationStrategy,\n    useClass: HashLocationStrategy\n  }];\n  return routerFeature(6 /* RouterFeatureKind.RouterHashLocationFeature */, providers);\n}\n/**\n * Provides a function which is called when a navigation error occurs.\n *\n * This function is run inside application's [injection context](guide/di/dependency-injection-context)\n * so you can use the [`inject`](api/core/inject) function.\n *\n * This function can return a `RedirectCommand` to convert the error to a redirect, similar to returning\n * a `UrlTree` or `RedirectCommand` from a guard. This will also prevent the `Router` from emitting\n * `NavigationError`; it will instead emit `NavigationCancel` with code NavigationCancellationCode.Redirect.\n * Return values other than `RedirectCommand` are ignored and do not change any behavior with respect to\n * how the `Router` handles the error.\n *\n * @usageNotes\n *\n * Basic example of how you can use the error handler option:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withNavigationErrorHandler((e: NavigationError) =>\n * inject(MyErrorTracker).trackError(e)))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link NavigationError}\n * @see {@link core/inject}\n * @see {@link runInInjectionContext}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withNavigationErrorHandler(handler) {\n  const providers = [{\n    provide: NAVIGATION_ERROR_HANDLER,\n    useValue: handler\n  }];\n  return routerFeature(7 /* RouterFeatureKind.NavigationErrorHandlerFeature */, providers);\n}\n/**\n * Enables binding information from the `Router` state directly to the inputs of the component in\n * `Route` configurations.\n *\n * @usageNotes\n *\n * Basic example of how you can enable the feature:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withComponentInputBinding())\n *     ]\n *   }\n * );\n * ```\n *\n * @returns A set of providers for use with `provideRouter`.\n */\nfunction withComponentInputBinding() {\n  const providers = [RoutedComponentInputBinder, {\n    provide: INPUT_BINDER,\n    useExisting: RoutedComponentInputBinder\n  }];\n  return routerFeature(8 /* RouterFeatureKind.ComponentInputBindingFeature */, providers);\n}\n/**\n * Enables view transitions in the Router by running the route activation and deactivation inside of\n * `document.startViewTransition`.\n *\n * Note: The View Transitions API is not available in all browsers. If the browser does not support\n * view transitions, the Router will not attempt to start a view transition and continue processing\n * the navigation as usual.\n *\n * @usageNotes\n *\n * Basic example of how you can enable the feature:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withViewTransitions())\n *     ]\n *   }\n * );\n * ```\n *\n * @returns A set of providers for use with `provideRouter`.\n * @see https://developer.chrome.com/docs/web-platform/view-transitions/\n * @see https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API\n * @experimental\n */\nfunction withViewTransitions(options) {\n  const providers = [{\n    provide: CREATE_VIEW_TRANSITION,\n    useValue: createViewTransition\n  }, {\n    provide: VIEW_TRANSITION_OPTIONS,\n    useValue: {\n      skipNextTransition: !!options?.skipInitialTransition,\n      ...options\n    }\n  }];\n  return routerFeature(9 /* RouterFeatureKind.ViewTransitionsFeature */, providers);\n}\n\n/**\n * The directives defined in the `RouterModule`.\n */\nconst ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkActive, ɵEmptyOutletComponent];\n/**\n * @docsNotRequired\n */\nconst ROUTER_FORROOT_GUARD = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'router duplicate forRoot guard' : 'ROUTER_FORROOT_GUARD');\n// TODO(atscott): All of these except `ActivatedRoute` are `providedIn: 'root'`. They are only kept\n// here to avoid a breaking change whereby the provider order matters based on where the\n// `RouterModule`/`RouterTestingModule` is imported. These can/should be removed as a \"breaking\"\n// change in a major version.\nconst ROUTER_PROVIDERS = [Location, {\n  provide: UrlSerializer,\n  useClass: DefaultUrlSerializer\n}, Router, ChildrenOutletContexts, {\n  provide: ActivatedRoute,\n  useFactory: rootRoute,\n  deps: [Router]\n}, RouterConfigLoader,\n// Only used to warn when `provideRoutes` is used without `RouterModule` or `provideRouter`. Can\n// be removed when `provideRoutes` is removed.\ntypeof ngDevMode === 'undefined' || ngDevMode ? {\n  provide: ROUTER_IS_PROVIDED,\n  useValue: true\n} : []];\n/**\n * @description\n *\n * Adds directives and providers for in-app navigation among views defined in an application.\n * Use the Angular `Router` service to declaratively specify application states and manage state\n * transitions.\n *\n * You can import this NgModule multiple times, once for each lazy-loaded bundle.\n * However, only one `Router` service can be active.\n * To ensure this, there are two ways to register routes when importing this module:\n *\n * * The `forRoot()` method creates an `NgModule` that contains all the directives, the given\n * routes, and the `Router` service itself.\n * * The `forChild()` method creates an `NgModule` that contains all the directives and the given\n * routes, but does not include the `Router` service.\n *\n * @see [Routing and Navigation guide](guide/routing/common-router-tasks) for an\n * overview of how the `Router` service should be used.\n *\n * @publicApi\n */\nlet RouterModule = /*#__PURE__*/(() => {\n  class RouterModule {\n    constructor(guard) {}\n    /**\n     * Creates and configures a module with all the router providers and directives.\n     * Optionally sets up an application listener to perform an initial navigation.\n     *\n     * When registering the NgModule at the root, import as follows:\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forRoot(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @param routes An array of `Route` objects that define the navigation paths for the application.\n     * @param config An `ExtraOptions` configuration object that controls how navigation is performed.\n     * @return The new `NgModule`.\n     *\n     */\n    static forRoot(routes, config) {\n      return {\n        ngModule: RouterModule,\n        providers: [ROUTER_PROVIDERS, typeof ngDevMode === 'undefined' || ngDevMode ? config?.enableTracing ? withDebugTracing().ɵproviders : [] : [], {\n          provide: ROUTES,\n          multi: true,\n          useValue: routes\n        }, {\n          provide: ROUTER_FORROOT_GUARD,\n          useFactory: provideForRootGuard,\n          deps: [[Router, new Optional(), new SkipSelf()]]\n        }, {\n          provide: ROUTER_CONFIGURATION,\n          useValue: config ? config : {}\n        }, config?.useHash ? provideHashLocationStrategy() : providePathLocationStrategy(), provideRouterScroller(), config?.preloadingStrategy ? withPreloading(config.preloadingStrategy).ɵproviders : [], config?.initialNavigation ? provideInitialNavigation(config) : [], config?.bindToComponentInputs ? withComponentInputBinding().ɵproviders : [], config?.enableViewTransitions ? withViewTransitions().ɵproviders : [], provideRouterInitializer()]\n      };\n    }\n    /**\n     * Creates a module with all the router directives and a provider registering routes,\n     * without creating a new Router service.\n     * When registering for submodules and lazy-loaded submodules, create the NgModule as follows:\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @param routes An array of `Route` objects that define the navigation paths for the submodule.\n     * @return The new NgModule.\n     *\n     */\n    static forChild(routes) {\n      return {\n        ngModule: RouterModule,\n        providers: [{\n          provide: ROUTES,\n          multi: true,\n          useValue: routes\n        }]\n      };\n    }\n    static {\n      this.ɵfac = function RouterModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || RouterModule)(i0.ɵɵinject(ROUTER_FORROOT_GUARD, 8));\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: RouterModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return RouterModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * For internal use by `RouterModule` only. Note that this differs from `withInMemoryRouterScroller`\n * because it reads from the `ExtraOptions` which should not be used in the standalone world.\n */\nfunction provideRouterScroller() {\n  return {\n    provide: ROUTER_SCROLLER,\n    useFactory: () => {\n      const viewportScroller = inject(ViewportScroller);\n      const zone = inject(NgZone);\n      const config = inject(ROUTER_CONFIGURATION);\n      const transitions = inject(NavigationTransitions);\n      const urlSerializer = inject(UrlSerializer);\n      if (config.scrollOffset) {\n        viewportScroller.setOffset(config.scrollOffset);\n      }\n      return new RouterScroller(urlSerializer, transitions, viewportScroller, zone, config);\n    }\n  };\n}\n// Note: For internal use only with `RouterModule`. Standalone setup via `provideRouter` should\n// provide hash location directly via `{provide: LocationStrategy, useClass: HashLocationStrategy}`.\nfunction provideHashLocationStrategy() {\n  return {\n    provide: LocationStrategy,\n    useClass: HashLocationStrategy\n  };\n}\n// Note: For internal use only with `RouterModule`. Standalone setup via `provideRouter` does not\n// need this at all because `PathLocationStrategy` is the default factory for `LocationStrategy`.\nfunction providePathLocationStrategy() {\n  return {\n    provide: LocationStrategy,\n    useClass: PathLocationStrategy\n  };\n}\nfunction provideForRootGuard(router) {\n  if ((typeof ngDevMode === 'undefined' || ngDevMode) && router) {\n    throw new ɵRuntimeError(4007 /* RuntimeErrorCode.FOR_ROOT_CALLED_TWICE */, `The Router was provided more than once. This can happen if 'forRoot' is used outside of the root injector.` + ` Lazy loaded modules should use RouterModule.forChild() instead.`);\n  }\n  return 'guarded';\n}\n// Note: For internal use only with `RouterModule`. Standalone router setup with `provideRouter`\n// users call `withXInitialNavigation` directly.\nfunction provideInitialNavigation(config) {\n  return [config.initialNavigation === 'disabled' ? withDisabledInitialNavigation().ɵproviders : [], config.initialNavigation === 'enabledBlocking' ? withEnabledBlockingInitialNavigation().ɵproviders : []];\n}\n// TODO(atscott): This should not be in the public API\n/**\n * A DI token for the router initializer that\n * is called after the app is bootstrapped.\n *\n * @publicApi\n */\nconst ROUTER_INITIALIZER = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'Router Initializer' : '');\nfunction provideRouterInitializer() {\n  return [\n  // ROUTER_INITIALIZER token should be removed. It's public API but shouldn't be. We can just\n  // have `getBootstrapListener` directly attached to APP_BOOTSTRAP_LISTENER.\n  {\n    provide: ROUTER_INITIALIZER,\n    useFactory: getBootstrapListener\n  }, {\n    provide: APP_BOOTSTRAP_LISTENER,\n    multi: true,\n    useExisting: ROUTER_INITIALIZER\n  }];\n}\n\n/**\n * Maps an array of injectable classes with canMatch functions to an array of equivalent\n * `CanMatchFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanMatch(providers) {\n  return providers.map(provider => (...params) => inject(provider).canMatch(...params));\n}\n/**\n * Maps an array of injectable classes with canActivate functions to an array of equivalent\n * `CanActivateFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanActivate(providers) {\n  return providers.map(provider => (...params) => inject(provider).canActivate(...params));\n}\n/**\n * Maps an array of injectable classes with canActivateChild functions to an array of equivalent\n * `CanActivateChildFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanActivateChild(providers) {\n  return providers.map(provider => (...params) => inject(provider).canActivateChild(...params));\n}\n/**\n * Maps an array of injectable classes with canDeactivate functions to an array of equivalent\n * `CanDeactivateFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanDeactivate(providers) {\n  return providers.map(provider => (...params) => inject(provider).canDeactivate(...params));\n}\n/**\n * Maps an injectable class with a resolve function to an equivalent `ResolveFn`\n * for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='Resolve'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToResolve(provider) {\n  return (...params) => inject(provider).resolve(...params);\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the router package.\n */\n/**\n * @publicApi\n */\nconst VERSION = /*#__PURE__*/new Version('18.2.5');\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ActivatedRoute, ActivatedRouteSnapshot, ActivationEnd, ActivationStart, BaseRouteReuseStrategy, ChildActivationEnd, ChildActivationStart, ChildrenOutletContexts, DefaultTitleStrategy, DefaultUrlSerializer, EventType, GuardsCheckEnd, GuardsCheckStart, NavigationCancel, NavigationCancellationCode, NavigationEnd, NavigationError, NavigationSkipped, NavigationSkippedCode, NavigationStart, NoPreloading, OutletContext, PRIMARY_OUTLET, PreloadAllModules, PreloadingStrategy, ROUTER_CONFIGURATION, ROUTER_INITIALIZER, ROUTES, RedirectCommand, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RouteReuseStrategy, Router, RouterEvent, RouterLink, RouterLinkActive, RouterLink as RouterLinkWithHref, RouterModule, RouterOutlet, RouterPreloader, RouterState, RouterStateSnapshot, RoutesRecognized, Scroll, TitleStrategy, UrlHandlingStrategy, UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree, VERSION, convertToParamMap, createUrlTreeFromSnapshot, defaultUrlMatcher, mapToCanActivate, mapToCanActivateChild, mapToCanDeactivate, mapToCanMatch, mapToResolve, provideRouter, provideRoutes, withComponentInputBinding, withDebugTracing, withDisabledInitialNavigation, withEnabledBlockingInitialNavigation, withHashLocation, withInMemoryScrolling, withNavigationErrorHandler, withPreloading, withRouterConfig, withViewTransitions, ɵEmptyOutletComponent, ROUTER_PROVIDERS as ɵROUTER_PROVIDERS, afterNextNavigation as ɵafterNextNavigation, loadChildren as ɵloadChildren };\n","const nls = {\n  authFailed: 'Authentication Failed.',\n  passwordPlaceHolder: 'Enter your password',\n  emailPlaceHolder: 'Enter your email',\n  email: 'Email',\n  password: 'Password',\n  emailRequired: 'Please enter your email!',\n  passwordRequired: 'Please enter your password!',\n  invalidEmail: 'Please enter valid email!',\n  invalidPassword: 'Please enter valid password!',\n  fname: 'First Name',\n  lname: 'Last Name',\n  gender: 'Gender',\n  phone: 'Mobile Number',\n  lnameRequired: 'Please enter last name!',\n  genderRequired: 'Please select gender!',\n  fnameRequired: 'Please enter first name!',\n  createAccount: 'Don\\'t have an account? Signup Here!',\n  loginExisting: 'Already have an account? Login Here!',\n  Signup: \"Sign Up\",\n  Login: \"Login\",\n  welcome: \"Welcome to FlexTrack\",\n  SignupSubheading: \"Create a new account\",\n  LoginSubheading: \"Login to your existing account\",\n  logoutSuccess: \"Logged out successfully!\",\n  loginSuccess: \"Logged in successfully!\",\n  confirmpassword: \"Confirm Password\",\n  passwordMatchError: \"Passwords do not match.\",\n  phoneRequired: \"Mobile Number is required.\",\n  invalidMobileFormat: \"Mobile number format should be 123-456-7890 or 1234567890\",\n  SignupError: \"User registered. Please login to continue.\",\n  UserSessionExpired: \"Session Expired. Please login again.\",\n  EnableBiometric: \"Enable Biometric\",\n  EnableBiometricMessage: \"Do you want to enable biometric sign-on for FlexTrack?\",\n  BiometricEnrolledOnDevice: \"Biometric enrollment found on your device.\",\n  BiometricLoginError: \"Biometric login failed.\",\n  CannotUseBiometric: \"User credentials changed. Can't use biometric sign-on.\",\n  loginUsingBiometric: \"Login using Biometric\"\n};\nexport default nls;\n","import { Injectable, signal, WritableSignal } from '@angular/core';\n\nexport interface Message {\n  id: number;\n  type: 'success' | 'error' | 'warning';\n  text: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessagesService {\n  private currentId = 0;\n  messages: WritableSignal<Message[]> = signal([]);\n\n  showMessage(type: 'success' | 'error' | 'warning', text: string) {\n    const id = this.currentId++;\n    const message: Message = { id, type, text };\n    this.messages.update((currentMessages) => [...currentMessages, message]);\n\n    setTimeout(() => {\n      this.removeMessage(id);\n    }, 3000); // 3 seconds\n  }\n\n  success(message: string) {\n    this.showMessage('success', message);\n  }\n\n  error(message: string) {\n    this.showMessage('error', message);\n  }\n\n  warning(message: string) {\n    this.showMessage('warning', message);\n  }\n\n  private removeMessage(id: number) {\n    this.messages.update((currentMessages) =>\n      currentMessages.filter((msg) => msg.id !== id)\n    );\n  }\n}\n","import { Injectable, signal, WritableSignal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  isLoading: WritableSignal<boolean>=signal(true);\n\n  changeLoaderState(state: string) {\n    if (state === 'stop') {\n      this.isLoading.set(false);\n    } else if (state === 'start') {\n      this.isLoading.set(true)\n    }\n  }\n}\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {\n  toString\n} = Object.prototype;\nconst {\n  getPrototypeOf\n} = Object;\nconst kindOf = (cache => thing => {\n  const str = toString.call(thing);\n  return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\nconst kindOfTest = type => {\n  type = type.toLowerCase();\n  return thing => kindOf(thing) === type;\n};\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {\n  isArray\n} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = val && val.buffer && isArrayBuffer(val.buffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = thing => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = val => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n};\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = val => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = thing => {\n  let kind;\n  return thing && (typeof FormData === 'function' && thing instanceof FormData || isFunction(thing.append) && ((kind = kindOf(thing)) === 'formdata' ||\n  // detect form-data instance\n  kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]'));\n};\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = str => str.trim ? str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {\n  allOwnKeys = false\n} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : typeof window !== 'undefined' ? window : global;\n})();\nconst isContextDefined = context => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge( /* obj1, obj2, obj3, ... */\n) {\n  const {\n    caseless\n  } = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  };\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {\n  allOwnKeys\n} = {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {\n    allOwnKeys\n  });\n  return a;\n};\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = content => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n};\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n};\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n  return destObj;\n};\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n};\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = thing => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n};\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n  const iterator = generator.call(obj);\n  let result;\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n};\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n  return arr;\n};\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g, function replacer(m, p1, p2) {\n    return p1.toUpperCase() + p2;\n  });\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({\n  hasOwnProperty\n}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n  Object.defineProperties(obj, reducedDescriptors);\n};\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = obj => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n    const value = obj[name];\n    if (!isFunction(value)) return;\n    descriptor.enumerable = false;\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n};\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n  const define = arr => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  };\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n  return obj;\n};\nconst noop = () => {};\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n};\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz';\nconst DIGIT = '0123456789';\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n};\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {\n    length\n  } = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length | 0];\n  }\n  return str;\n};\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\nconst toJSONObject = obj => {\n  const stack = new Array(10);\n  const visit = (source, i) => {\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n      if (!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n        stack[i] = undefined;\n        return target;\n      }\n    }\n    return source;\n  };\n  return visit(obj, 0);\n};\nconst isAsyncFn = kindOfTest('AsyncFunction');\nconst isThenable = thing => thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({\n      source,\n      data\n    }) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n    return cb => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    };\n  })(`axios@${Math.random()}`, []) : cb => setTimeout(cb);\n})(typeof setImmediate === 'function', isFunction(_global.postMessage));\nconst asap = typeof queueMicrotask !== 'undefined' ? queueMicrotask.bind(_global) : typeof process !== 'undefined' && process.nextTick || _setImmediate;\n\n// *********************\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty,\n  // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = new Error().stack;\n  }\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n['ERR_BAD_OPTION_VALUE', 'ERR_BAD_OPTION', 'ECONNABORTED', 'ETIMEDOUT', 'ERR_NETWORK', 'ERR_FR_TOO_MANY_REDIRECTS', 'ERR_DEPRECATED', 'ERR_BAD_RESPONSE', 'ERR_BAD_REQUEST', 'ERR_CANCELED', 'ERR_NOT_SUPPORT', 'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {\n    value: code\n  };\n});\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {\n  value: true\n});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n  axiosError.cause = error;\n  axiosError.name = error.name;\n  customProps && Object.assign(axiosError, customProps);\n  return axiosError;\n};\nexport default AxiosError;","// eslint-disable-next-line strict\nexport default null;","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n  function convertValue(value) {\n    if (value === null) return '';\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (utils.isArray(value) && isFlatArray(value) || (utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n          // eslint-disable-next-line no-nested-ternary\n          indexes === true ? renderKey([key], index, dots) : indexes === null ? key : key + '[]', convertValue(el));\n        });\n        return false;\n      }\n    }\n    if (isVisitable(value)) {\n      return true;\n    }\n    formData.append(renderKey(path, key, dots), convertValue(value));\n    return false;\n  }\n  const stack = [];\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n    stack.push(value);\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers);\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n    stack.pop();\n  }\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n  build(obj);\n  return formData;\n}\nexport default toFormData;","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n  params && toFormData(params, this, options);\n}\nconst prototype = AxiosURLSearchParams.prototype;\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function (value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\nexport default AxiosURLSearchParams;","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  const _encode = options && options.encode || encode;\n  const serializeFn = options && options.serialize;\n  let serializedParams;\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ? params.toString() : new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n  return url;\n}","'use strict';\n\nimport utils from './../utils.js';\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\nexport default InterceptorManager;","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;","'use strict';\n\nexport default typeof Blob !== 'undefined' ? Blob : null;","import URLSearchParams from './classes/URLSearchParams.js';\nimport FormData from './classes/FormData.js';\nimport Blob from './classes/Blob.js';\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv && (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return typeof WorkerGlobalScope !== 'undefined' &&\n  // eslint-disable-next-line no-undef\n  self instanceof WorkerGlobalScope && typeof self.importScripts === 'function';\n})();\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\nexport { hasBrowserEnv, hasStandardBrowserWebWorkerEnv, hasStandardBrowserEnv, _navigator as navigator, origin };","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\nexport default {\n  ...utils,\n  ...platform\n};","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function (value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    if (name === '__proto__') return true;\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n      return !isNumericKey;\n    }\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n    const result = buildPath(path, value, target[name], index);\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n    return !isNumericKey;\n  }\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n    return obj;\n  }\n  return null;\n}\nexport default formDataToJSON;","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n  return (encoder || JSON.stringify)(rawValue);\n}\nconst defaults = {\n  transitional: transitionalDefaults,\n  adapter: ['xhr', 'http', 'fetch'],\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n    const isFormData = utils.isFormData(data);\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n    if (utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n    let isFileList;\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n        return toFormData(isFileList ? {\n          'files[]': data\n        } : data, _FormData && new _FormData(), this.formSerializer);\n      }\n    }\n    if (isObjectPayload || hasJSONContentType) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n    if (data && utils.isString(data) && (forcedJSONParsing && !this.responseType || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n    return data;\n  }],\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n  maxContentLength: -1,\n  maxBodyLength: -1,\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], method => {\n  defaults.headers[method] = {};\n});\nexport default defaults;","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet(['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent']);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default (rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n    if (!key || parsed[key] && ignoreDuplicateOf[key]) {\n      return;\n    }\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n  return parsed;\n});","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\nconst $internals = Symbol('internals');\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n  while (match = tokensRE.exec(str)) {\n    tokens[match[1]] = match[2];\n  }\n  return tokens;\n}\nconst isValidHeaderName = str => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n  if (!utils.isString(value)) return;\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\nfunction formatHeader(header) {\n  return header.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n    return char.toUpperCase() + str;\n  });\n}\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function (arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n      const key = utils.findKey(self, lHeader);\n      if (!key || self[key] === undefined || _rewrite === true || _rewrite === undefined && self[key] !== false) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n    const setHeaders = (headers, _rewrite) => utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite);\n    } else if (utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n    return this;\n  }\n  get(header, parser) {\n    header = normalizeHeader(header);\n    if (header) {\n      const key = utils.findKey(this, header);\n      if (key) {\n        const value = this[key];\n        if (!parser) {\n          return value;\n        }\n        if (parser === true) {\n          return parseTokens(value);\n        }\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n  has(header, matcher) {\n    header = normalizeHeader(header);\n    if (header) {\n      const key = utils.findKey(this, header);\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n    return false;\n  }\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n      if (_header) {\n        const key = utils.findKey(self, _header);\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n          deleted = true;\n        }\n      }\n    }\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n    return deleted;\n  }\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n    while (i--) {\n      const key = keys[i];\n      if (!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n    return deleted;\n  }\n  normalize(format) {\n    const self = this;\n    const headers = {};\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n      const normalized = format ? formatHeader(header) : String(header).trim();\n      if (normalized !== header) {\n        delete self[header];\n      }\n      self[normalized] = normalizeValue(value);\n      headers[normalized] = true;\n    });\n    return this;\n  }\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n    return obj;\n  }\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n  static concat(first, ...targets) {\n    const computed = new this(first);\n    targets.forEach(target => computed.set(target));\n    return computed;\n  }\n  static accessor(header) {\n    const internals = this[$internals] = this[$internals] = {\n      accessors: {}\n    };\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n    return this;\n  }\n}\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({\n  value\n}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  };\n});\nutils.freezeMethods(AxiosHeaders);\nexport default AxiosHeaders;","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n  headers.normalize();\n  return data;\n}","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\nexport default CanceledError;","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError('Request failed with status code ' + response.status, [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4], response.config, response.request, response));\n  }\n}","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n  min = min !== undefined ? min : 1000;\n  return function push(chunkLength) {\n    const now = Date.now();\n    const startedAt = timestamps[tail];\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n    let i = tail;\n    let bytesCount = 0;\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n    head = (head + 1) % samplesCount;\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n    if (now - firstSampleTS < min) {\n      return;\n    }\n    const passed = startedAt && now - startedAt;\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\nexport default speedometer;","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  };\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if (passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs);\n        }, threshold - passed);\n      }\n    }\n  };\n  const flush = () => lastArgs && invoke(lastArgs);\n  return [throttled, flush];\n}\nexport default throttle;","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n    bytesNotified = loaded;\n    const data = {\n      loaded,\n      total,\n      progress: total ? loaded / total : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n    listener(data);\n  }, freq);\n};\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n  return [loaded => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n};\nexport const asyncDecorator = fn => (...args) => utils.asap(() => fn(...args));","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\nexport default platform.hasStandardBrowserEnv ?\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\nfunction standardBrowserEnv() {\n  const msie = platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent);\n  const urlParsingNode = document.createElement('a');\n  let originURL;\n\n  /**\n  * Parse a URL to discover its components\n  *\n  * @param {String} url The URL to be parsed\n  * @returns {Object}\n  */\n  function resolveURL(url) {\n    let href = url;\n    if (msie) {\n      // IE needs attribute set twice to normalize properties\n      urlParsingNode.setAttribute('href', href);\n      href = urlParsingNode.href;\n    }\n    urlParsingNode.setAttribute('href', href);\n\n    // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n    return {\n      href: urlParsingNode.href,\n      protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n      host: urlParsingNode.host,\n      search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n      hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n      hostname: urlParsingNode.hostname,\n      port: urlParsingNode.port,\n      pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname\n    };\n  }\n  originURL = resolveURL(window.location.href);\n\n  /**\n  * Determine if a URL shares the same origin as the current location\n  *\n  * @param {String} requestURL The URL to test\n  * @returns {boolean} True if URL shares the same origin, otherwise false\n  */\n  return function isURLSameOrigin(requestURL) {\n    const parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;\n    return parsed.protocol === originURL.protocol && parsed.host === originURL.host;\n  };\n}() :\n// Non standard browser envs (web workers, react-native) lack needed support.\nfunction nonStandardBrowserEnv() {\n  return function isURLSameOrigin() {\n    return true;\n  };\n}();","import utils from './../utils.js';\nimport platform from '../platform/index.js';\nexport default platform.hasStandardBrowserEnv ?\n// Standard browser envs support document.cookie\n{\n  write(name, value, expires, path, domain, secure) {\n    const cookie = [name + '=' + encodeURIComponent(value)];\n    utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n    utils.isString(path) && cookie.push('path=' + path);\n    utils.isString(domain) && cookie.push('domain=' + domain);\n    secure === true && cookie.push('secure');\n    document.cookie = cookie.join('; ');\n  },\n  read(name) {\n    const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n    return match ? decodeURIComponent(match[3]) : null;\n  },\n  remove(name) {\n    this.write(name, '', Date.now() - 86400000);\n  }\n} :\n// Non-standard browser env (web workers, react-native) lack needed support.\n{\n  write() {},\n  read() {\n    return null;\n  },\n  remove() {}\n};","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '') : baseURL;\n}","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\nconst headersToObject = thing => thing instanceof AxiosHeaders ? {\n  ...thing\n} : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({\n        caseless\n      }, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    utils.isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);\n  });\n  return config;\n}","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\nexport default (config => {\n  const newConfig = mergeConfig({}, config);\n  let {\n    data,\n    withXSRFToken,\n    xsrfHeaderName,\n    xsrfCookieName,\n    headers,\n    auth\n  } = newConfig;\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' + btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : '')));\n  }\n  let contentType;\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n    if (withXSRFToken || withXSRFToken !== false && isURLSameOrigin(newConfig.url)) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n  return newConfig;\n});","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport { progressEventReducer } from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {\n      responseType,\n      onUploadProgress,\n      onDownloadProgress\n    } = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n    let request = new XMLHttpRequest();\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from('getAllResponseHeaders' in request && request.getAllResponseHeaders());\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ? request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(timeoutErrorMessage, transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      [downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true);\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      [uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress);\n      request.upload.addEventListener('progress', uploadThrottled);\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n    const protocol = parseProtocol(_config.url);\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n    // Send the request\n    request.send(requestData || null);\n  });\n};","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\nconst composeSignals = (signals, timeout) => {\n  const {\n    length\n  } = signals = signals ? signals.filter(Boolean) : [];\n  if (timeout || length) {\n    let controller = new AbortController();\n    let aborted;\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    };\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT));\n    }, timeout);\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    };\n    signals.forEach(signal => signal.addEventListener('abort', onabort));\n    const {\n      signal\n    } = controller;\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n    return signal;\n  }\n};\nexport default composeSignals;","export const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n  let pos = 0;\n  let end;\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n};\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n};\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {\n        done,\n        value\n      } = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n};\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n  let bytes = 0;\n  let done;\n  let _onFinish = e => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  };\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {\n          done,\n          value\n        } = await iterator.next();\n        if (done) {\n          _onFinish();\n          controller.close();\n          return;\n        }\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  });\n};","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport { trackStream } from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport { progressEventReducer, progressEventDecorator, asyncDecorator } from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ? (encoder => str => encoder.encode(str))(new TextEncoder()) : async str => new Uint8Array(await new Response(str).arrayBuffer()));\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false;\n  }\n};\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    }\n  }).headers.has('Content-Type');\n  return duplexAccessed && !hasContentType;\n});\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\nconst supportsResponseStream = isReadableStreamSupported && test(() => utils.isReadableStream(new Response('').body));\nconst resolvers = {\n  stream: supportsResponseStream && (res => res.body)\n};\nisFetchSupported && (res => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? res => res[type]() : (_, config) => {\n      throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n    });\n  });\n})(new Response());\nconst getBodyLength = async body => {\n  if (body == null) {\n    return 0;\n  }\n  if (utils.isBlob(body)) {\n    return body.size;\n  }\n  if (utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n  if (utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n  if (utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n  if (utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n};\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n  return length == null ? getBodyLength(body) : length;\n};\nexport default isFetchSupported && (async config => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n  let request;\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n    composedSignal.unsubscribe();\n  });\n  let requestContentLength;\n  try {\n    if (onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' && (requestContentLength = await resolveBodyLength(headers, data)) !== 0) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n      let contentTypeHeader;\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader);\n      }\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(requestContentLength, progressEventReducer(asyncDecorator(onUploadProgress)));\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n    let response = await fetch(request);\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n    if (supportsResponseStream && (onDownloadProgress || isStreamResponse && unsubscribe)) {\n      const options = {};\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(responseContentLength, progressEventReducer(asyncDecorator(onDownloadProgress), true)) || [];\n      response = new Response(trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n        flush && flush();\n        unsubscribe && unsubscribe();\n      }), options);\n    }\n    responseType = responseType || 'text';\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n    !isStreamResponse && unsubscribe && unsubscribe();\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      });\n    });\n  } catch (err) {\n    unsubscribe && unsubscribe();\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request), {\n        cause: err.cause || err\n      });\n    }\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n};\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {\n        value\n      });\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {\n      value\n    });\n  }\n});\nconst renderReason = reason => `- ${reason}`;\nconst isResolvedHandle = adapter => utils.isFunction(adapter) || adapter === null || adapter === false;\nexport default {\n  getAdapter: adapters => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n    const {\n      length\n    } = adapters;\n    let nameOrAdapter;\n    let adapter;\n    const rejectedReasons = {};\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n      adapter = nameOrAdapter;\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n      if (adapter) {\n        break;\n      }\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n    if (!adapter) {\n      const reasons = Object.entries(rejectedReasons).map(([id, state]) => `adapter ${id} ` + (state === false ? 'is not supported by the environment' : 'is not available in the build'));\n      let s = length ? reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0]) : 'as no adapter specified';\n      throw new AxiosError(`There is no suitable adapter to dispatch the request ` + s, 'ERR_NOT_SUPPORT');\n    }\n    return adapter;\n  },\n  adapters: knownAdapters\n};","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(config, config.transformRequest);\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(config, config.transformResponse, response);\n    response.headers = AxiosHeaders.from(response.headers);\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(config, config.transformResponse, reason.response);\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n    return Promise.reject(reason);\n  });\n}","export const VERSION = \"1.7.7\";","'use strict';\n\nimport { VERSION } from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')), AxiosError.ERR_DEPRECATED);\n    }\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(formatMessage(opt, ' has been deprecated since v' + version + ' and will be removed in the near future'));\n    }\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\nexport default {\n  assertOptions,\n  validators\n};","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : dummy = new Error();\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack;\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n      throw err;\n    }\n  }\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n    config = mergeConfig(this.defaults, config);\n    const {\n      transitional,\n      paramsSerializer,\n      headers\n    } = config;\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        };\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(headers.common, headers[config.method]);\n    headers && utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], method => {\n      delete headers[method];\n    });\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n    let promise;\n    let i = 0;\n    let len;\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n      promise = Promise.resolve(config);\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n      return promise;\n    }\n    len = requestInterceptorChain.length;\n    let newConfig = config;\n    i = 0;\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    i = 0;\n    len = responseInterceptorChain.length;\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n    return promise;\n  }\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function (url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n  Axios.prototype[method] = generateHTTPMethod();\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\nexport default Axios;","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n    let resolvePromise;\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n      let i = token._listeners.length;\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n      return promise;\n    };\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n  toAbortSignal() {\n    const controller = new AbortController();\n    const abort = err => {\n      controller.abort(err);\n    };\n    this.subscribe(abort);\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\nexport default CancelToken;","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && payload.isAxiosError === true;\n}","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511\n};\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\nexport default HttpStatusCode;","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport { VERSION } from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {\n    allOwnKeys: true\n  });\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {\n    allOwnKeys: true\n  });\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\naxios.AxiosHeaders = AxiosHeaders;\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\naxios.getAdapter = adapters.getAdapter;\naxios.HttpStatusCode = HttpStatusCode;\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios;","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = axios;\nexport { axios as default, Axios, AxiosError, CanceledError, isCancel, CancelToken, VERSION, all, Cancel, isAxiosError, spread, toFormData, AxiosHeaders, HttpStatusCode, formToJSON, getAdapter, mergeConfig };","const nls = {\n  okay: \"Okay\",\n  cancel: \"Cancel\",\n  save: 'Save',\n  delete: \"Delete\",\n  areYouSure: \"Are you sure?\",\n  addField: \"New To-Do Field\",\n  AddField: \"New To-Do\",\n  fieldName: \"Field Name\",\n  fieldType: \"Field Type\",\n  FieldNameInvlaid: \"Only Alphabets are allowed. Trailing spaces are not allowed\",\n  addNewField: \"Add Field\",\n  resolveError: \"Please enable Files & Media permission from device settings.\",\n  createBackupError: \"Failed to create backup\",\n  createBackupSuccess: \"Backup created successfully.\",\n  saveBackupError: \"Failed to save backup\",\n  backupFileName: \"flextrack.bak\",\n  backupMyData: \"Backup my Data\",\n  importMyData: \"Restore from Backup\",\n  import: \"Import\",\n  backupFile: \"Select Backup File\",\n  backupFileIsRequired: \"Please upload the backup file.\",\n  readBackupFileError: \"Cannot read backup file.\",\n  restoreFromBackupSuccessful: \"Restored from backup successfully\",\n  parseBackupFileError: \"Backup file is invalid.\",\n  navbar: {\n    logging: \"Noting\",\n    brand: \"FlexTrack\",\n    home: \"Dashboard\",\n    reports: \"Reports\",\n    tasks: \"Tasks\",\n    schedule: \"Schedules\",\n    account: \"Account\",\n  },\n  exitApp: \"Exit FlexTrack\",\n  exitAppMessage: \"You want to exit.\"\n}\nexport default nls;","import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  var uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}","var randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;","import { inject, Injectable } from '@angular/core';\nimport { MessagesService } from './messages.service';\nimport nls from '../framework/resources/nls/generic';\n\ndeclare var cordova: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CordovaService {\n  private _message: MessagesService = inject(MessagesService);\n\n  constructor() { }\n\n  resolveFS(fileName: string, data: any) {\n    this.checkAndRequestPermissions(() => this.createBackupDirectory(fileName, data))\n\n  }\n  createBackupDirectory(fileName: string, data: any) {\n    // console.log(\"Performing backup\");\n    (window as any).resolveLocalFileSystemURL(cordova.file.externalRootDirectory, (entry: any) => {\n      const dirEntry = entry as any;\n      this.createFile(dirEntry, fileName, data);\n      // console.log(dirEntry);\n\n    }, (error: any) => {\n      this._message.error(nls.resolveError)\n    });\n  }\n  private createFile(dirEntry: any, fileName: string, dataObj: Blob): void {\n    // console.log(dirEntry);\n    dirEntry.getDirectory('Download/', { create: true, exclusive: false }, (dirEntry: any) => {\n      dirEntry.getFile(fileName, { create: true, exclusive: false }, (fileEntry: any) => {\n        this.writeFile(fileEntry, dataObj);\n        // console.log(fileEntry)\n      }, (error: any) => {\n        this._message.error(nls.createBackupError)\n      });\n    })\n  }\n  private writeFile(fileEntry: any, dataObj: Blob): void {\n    fileEntry.createWriter((fileWriter: any) => {\n      fileWriter.onwriteend = () => {\n        // console.log('saved suceess')\n        this._message.success(nls.createBackupSuccess)\n      };\n\n      fileWriter.onerror = (error: any) => {\n        this._message.error(nls.saveBackupError)\n      };\n\n      fileWriter.write(dataObj);\n    });\n  }\n  checkAndRequestPermissions(storageOpration: any) {\n    const permissions = cordova.plugins.permissions;\n\n    // Check if we have write permission\n    permissions.checkPermission(permissions.WRITE_EXTERNAL_STORAGE, (status: any) => {\n      if (!status.hasPermission) {\n        // Request permission\n        permissions.requestPermission(permissions.WRITE_EXTERNAL_STORAGE, (status: any) => {\n          if (!status.hasPermission) {\n            // Permission denied, direct user to settings\n            this.showPermissionDeniedAlert();\n          } else {\n            storageOpration();\n          }\n        });\n      } else {\n        // console.log(\"I have permission\")\n        storageOpration();\n      }\n    });\n  }\n\n  // Show a message to the user to manually enable permission\n  showPermissionDeniedAlert() {\n    if (confirm(\"Storage permission is required to create a backup. Please enable it from settings and try again.\")) {\n      this.openAppSettings();\n    }\n  }\n\n  // Open app settings to enable permission manually\n  openAppSettings() {\n    cordova.plugins.diagnostic.switchToSettings();\n  }\n}\n","import { inject, Injectable } from '@angular/core';\nimport { LoaderService } from './loader.service';\nimport axios from 'axios';\nimport { MessagesService } from './messages.service';\nimport nls from '../framework/resources/nls/generic';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CordovaService } from './cordova.service';\n\nexport const delay = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\ndeclare var cordova: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private _base_url = 'https://api.websiterahouse.com/';\n  private _storage: Storage = localStorage;\n  private _loader: LoaderService = inject(LoaderService);\n  private _message: MessagesService = inject(MessagesService);\n  private _cordovaService: CordovaService = inject(CordovaService);\n\n  getSavingKey(key: string) {\n    let userString = this._storage.getItem('user');\n    if (userString) {\n      let user = JSON.parse(userString);\n      return `${user.email}/${key}`;\n    }\n\n    throw new Error(\"User not logged in!\");\n  }\n  // Create or Update\n  async hit(endpoint: string, method: string = 'get', data: any = null): Promise<any> {\n    this._loader.changeLoaderState('start');\n    let result: any;\n    let config = {\n      headers: {\n        'Authorization': `Bearer ${await this.local_get('access')}`\n      }\n    }\n    try {\n      let response: any;\n      switch (method) {\n        case 'get':\n          response = await axios.get(this._base_url + endpoint, config);\n          break;\n        case 'post':\n          response = await axios.post(this._base_url + endpoint, data, config);\n          break;\n        case 'put':\n          response = await axios.put(this._base_url + endpoint, data, config);\n          break;\n        case 'delete':\n          response = await axios.get(this._base_url + endpoint, config);\n          break;\n      }\n      result = response.data;\n      result.success = true;\n    } catch (error) {\n      result = (error as any).response.data;\n      result.success = false;\n    } finally {\n      this._loader.changeLoaderState('stop');\n      return result;\n    }\n  }\n\n  async local_post(key: string, value: any): Promise<any> {\n    switch (key) {\n      case 'logging':\n      case 'tasks':\n      case 'schedules':\n      case 'widgets':\n        try {\n          let newData = [];\n          let prevData = this._storage.getItem(this.getSavingKey(key));\n          if (prevData) {\n            newData = JSON.parse(prevData);\n          }\n          value.order = newData.length + 1;\n          value.id = uuidv4();\n          value.createdAt = Date.now();\n          value.updatedAt = Date.now();\n          newData.push(value);\n          this._storage.setItem(this.getSavingKey(key), JSON.stringify(newData));\n          return { message: \"Added successfully in storage.\", success: true };\n        } catch (error: any) {\n          return { message: error.message, success: false };\n        }\n      case 'access':\n      case 'user':\n        this._storage.setItem(key, JSON.stringify(value));\n        return { message: \"Added successfully in storage.\", success: true };\n\n      default:\n      // console.log(\"No default action configured.\")\n    }\n\n  }\n  async local_get(key: string): Promise<any> {\n    switch (key) {\n      case 'schedules':\n      case 'tasks': {\n        let item = this._storage.getItem(this.getSavingKey(key));\n        let parsedItem = item ? JSON.parse(item) : [];\n        parsedItem.sort((a: any, b: any) => {\n          return b.updatedAt - a.updatedAt;\n        })\n        return parsedItem;\n      }\n      case 'widgets': {\n        let item = this._storage.getItem(this.getSavingKey(key));\n        let parsedItem = item ? JSON.parse(item) : [];\n        parsedItem.sort((a: any, b: any) => {\n          return a.order - b.order;\n        })\n        return parsedItem;\n      }\n      case 'access':\n      case 'user': {\n        let item = this._storage.getItem(key);\n        return item ? JSON.parse(item) : null;\n      }\n    }\n  }\n  async local_get_by_id(key: string, filter: any): Promise<any> {\n    switch (key) {\n      case 'logging': {\n        let item = this._storage.getItem(this.getSavingKey(key));\n        let parsedItem = item ? JSON.parse(item) : [];\n        let result = parsedItem.filter((log: any) => {\n          let matched = true;\n          let keys = Object.keys(filter);\n          for (let key of keys) {\n            if (filter[key] !== log[key]) {\n              matched = false;\n              break;\n            }\n          }\n          return matched\n        })\n        return result;\n      }\n    }\n  }\n\n  // Update (can be combined with save)\n  async local_put(key: string, value: any): Promise<any> {\n    switch (key) {\n      case 'schedules':\n      case 'logging':\n      case 'tasks':\n      case 'widgets': {\n        let data;\n        if (Array.isArray(value)) {\n          let newData = value.map((item: any, index: number) => {\n            item.order = index + 1;\n            return item;\n          });\n          data = newData;\n        } else {\n          let oldData: any = this._storage.getItem(this.getSavingKey(key));\n          oldData = oldData ? JSON.parse(oldData) : [];\n          let updatedData = oldData?.map((item: any) => {\n            if (item.id === value.id) {\n              item = value;\n              item.updatedAt = Date.now();\n            }\n            return item;\n          });\n          data = updatedData;\n        }\n        this._storage.setItem(this.getSavingKey(key), JSON.stringify(data));\n        return { message: \"Updated successfully in storage.\", success: true };\n      }\n    }\n  }\n\n  // Delete\n  async local_delete(key: string, data: any = null): Promise<any> {\n    switch (key) {\n      case 'tasks':\n      case 'widgets': {\n        let oldData: any = this._storage.getItem(this.getSavingKey(key));\n        oldData = oldData ? JSON.parse(oldData) : [];\n        let newdata = oldData.filter((item: any) => {\n          return item.id !== data;\n        });\n        this._storage.setItem(this.getSavingKey(key), JSON.stringify(newdata));\n        return { message: \"Deleted item from the storage.\", success: true };\n      }\n      case 'user':\n      case 'access': {\n        this._storage.removeItem(key);\n      }\n    }\n\n  }\n\n  // List all keys\n  listKeys(): string[] {\n    return Object.keys(this._storage);\n  }\n\n  // Clear all\n  async local_clear(): Promise<void> {\n    for (let i = 0; i < this._storage.length; i++) {\n      const key = this._storage.key(i);\n      const user = await this.local_get('user');\n      if (key?.startsWith(`${user.email}/`)) {\n        this._storage.removeItem(key);\n        i--;\n      }\n    }\n  }\n\n  async backupData(): Promise<void> {\n    let backup = {};\n    let backupFile = nls.backupFileName;\n\n    for (let i = 0; i < this._storage.length; i++) {\n      const key = this._storage.key(i);\n      const user = await this.local_get('user');\n      if (key?.startsWith(`${user.email}/`)) {\n        let data = this._storage.getItem(key);\n        if (data) {\n          let parsedData = JSON.parse(data);\n          backup = { ...backup, [(key as string).split(`${user.email}/`)[1]]: parsedData };\n        }\n      }\n    }\n    const jsonStr = JSON.stringify(backup, null, 2);\n    const blob = new Blob([jsonStr], { type: 'application/octet-stream' });\n\n    if (typeof cordova !== 'undefined') {\n      this._cordovaService.resolveFS(backupFile, blob)\n    } else {\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.download = backupFile;\n      link.href = url;\n      link.click();\n      URL.revokeObjectURL(url);\n      this._message.success(nls.createBackupSuccess)\n    }\n  }\n  async restoreBackupData(file: File) {\n    const reader = new FileReader();\n\n    reader.onload = (e: any) => {\n      const fileContent = e.target.result;\n      // console.log('File content:', fileContent);\n\n      if (fileContent) {\n        try {\n          let parsedRestoreData = JSON.parse(fileContent);\n\n          Object.keys(parsedRestoreData).forEach(async (key: string) => {\n            let oldData = await this.local_get(key);\n            let mergedData = this.mergeUnique(oldData, parsedRestoreData[key]);\n            this._storage.setItem(this.getSavingKey(key), JSON.stringify(mergedData));\n          });\n          this._message.success(nls.restoreFromBackupSuccessful)\n\n        } catch (error) {\n          this._message.error(nls.parseBackupFileError)\n        }\n      }\n    };\n\n    reader.onerror = (error) => {\n      // console.error('Error reading file:', error);\n      this._message.error(nls.readBackupFileError)\n    };\n\n    reader.readAsText(file);\n  }\n  private mergeUnique(oldData: any, restoredData: any) {\n    const mergedMap = new Map();\n\n    oldData.forEach((item: any) => mergedMap.set(item.id, item));\n\n    restoredData.forEach((item: any) => {\n      if (mergedMap.has(item.id)) {\n      } else {\n        mergedMap.set(item.id, item);\n      }\n    });\n\n    return Array.from(mergedMap.values());\n  }\n}\n","import { Injectable, WritableSignal, inject, signal } from '@angular/core';\nimport nls from '../framework/resources/nls/authentication';\nimport { Router } from '@angular/router';\nimport { MessagesService } from './messages.service';\nimport { ApiService } from './api.service';\nimport { BehaviorSubject } from 'rxjs';\n\ndeclare var Fingerprint: any;\ndeclare var window: any;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  isAuthenticated: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  isModalOpen: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  private _router: Router = inject(Router);\n  private _api: ApiService = inject(ApiService);\n  private messageService: MessagesService = inject(MessagesService);\n  currentUser: WritableSignal<any> = signal(null);\n\n  constructor() {\n    this.getCurrentUser();\n    this.isAuthenticated.subscribe((value) => {\n      if (value) {\n        this._router.navigate([''])\n      } else {\n        this._router.navigate(['/auth']);\n      }\n    });\n  }\n  async launchBiometric() {\n    try {\n      let isBiometricEnabled = window.localStorage.getItem('isBiometricEnabled');\n      if (isBiometricEnabled === 'enabled') {\n        const isAvailable = await this.isBiometricAvailable();\n        if (typeof isAvailable === 'string') {\n          try {\n            let userPreferences = window.localStorage.getItem('userPreferences');\n            userPreferences = userPreferences ? JSON.parse(userPreferences) : null;\n            if (userPreferences) {\n              await this.authenticate();\n              this.loginWithUserPass(userPreferences);\n            } else {\n              this.messageService.error(nls.CannotUseBiometric);\n\n            }\n          } catch (error) {\n            this.messageService.error(nls.BiometricLoginError);\n          }\n        } else {\n          this.messageService.error(nls.BiometricLoginError);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n\n  async signupWithUserPass(data: AuthUserCred): Promise<void> {\n    data.email = data.email.toLowerCase();\n    let result: any = await this._api.hit('users/signup', 'post', data);\n    // console.log(result);\n    if (result.success) {\n      this._router.navigate(['/auth'])\n      this.messageService.success(result.message);\n    } else {\n      this.messageService.error(result.message);\n    }\n  }\n  userCreds: any = null;\n  async loginWithUserPass(data: AuthUserCred): Promise<void> {\n    data.email = data.email.toLowerCase();\n    this.userCreds = data;\n    let result: any = await this._api.hit('users/signin', 'post', data);\n\n    if (result.success) {\n      this.messageService.success(result.message);\n      await this._api.local_post('access', result.accessToken);\n      await this._api.local_post('user', result.user);\n      this.currentUser.set(result.user);\n\n      try {\n\n        let isBiometricEnabled = window.localStorage.getItem('isBiometricEnabled');\n        //if app is not enabled for biometric auth\n        if (isBiometricEnabled !== 'enabled') {\n          //check if biometric enrolled on device\n          const isAvailable = await this.isBiometricAvailable();\n          if (typeof isAvailable === 'string') {\n            this.toggleModal(true)\n          } else {\n            this.isAuthenticated.next(true);\n          }\n        } else {\n          this.isAuthenticated.next(true);\n        }\n      } catch (error) {\n        console.log(error);\n        this.toggleModal(false);\n      }\n    } else {\n      this.messageService.error(result.message);\n    }\n  }\n  async getCurrentUser(): Promise<void> {\n    let currentUser = await this._api.hit('users/current', 'get');\n    if (currentUser.isAuthenticated) {\n      await this._api.local_post('user', currentUser.user);\n      this.currentUser.set(currentUser.user);\n      this.isAuthenticated.next(true);\n    } else {\n      await this._api.local_delete('user');\n      await this._api.local_delete('access');\n      this.currentUser.set(null);\n      this.isAuthenticated.next(false);\n      this.messageService.success(nls.UserSessionExpired);\n    }\n\n  }\n  async logout() {\n    await this._api.local_delete('user');\n    await this._api.local_delete('access');\n    this.isAuthenticated.next(false);\n    this.currentUser.set(null);\n    this.messageService.success(nls.logoutSuccess);\n  }\n  toggleModal(state: any) {\n    this.isModalOpen.next(state);\n    if (!state) {\n      this.isAuthenticated.next(true);\n    }\n  }\n  async submitModal(data: any) {\n    try {\n      await this.authenticate();\n      window.localStorage.setItem('isBiometricEnabled', 'enabled');\n      window.localStorage.setItem('userPreferences', JSON.stringify(this.userCreds));\n    } catch (error: any) {\n      this.messageService.error(error.message);\n    } finally {\n      this.toggleModal(false);\n    }\n  }\n  isBiometricAvailable(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      Fingerprint.isAvailable((result: any) => {\n        resolve(result);\n      }, (error: any) => {\n        reject(error);\n      })\n    })\n  }\n  authenticate(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      Fingerprint.show({\n        title: 'Fiteness Tracker Biometric Auth',\n        subtitle: \"Fiteness Tracker Biometric Auth\",\n        clientId: \"FlexTrack\",\n        clientSecret: 'password', // necessary for Android\n        disableBackup: true,      // disable PIN/backup authentication\n        localizedFallbackTitle: \"Use Pin\", // Optional, fallback title\n        localizedReason: \"Authenticate to access the app\", // Optional reason\n        biometricOnly: true,\n        confirmationRequired: false\n      }, (success: any) => {\n        resolve(success); // Authentication success\n      }, (error: any) => {\n        reject(error); // Authentication error\n      });\n    });\n  }\n\n}\n\nexport interface AuthUserCred {\n  [key: string]: any;\n  email: string;\n  password: string;\n  confirmpassword: string;\n  first_name: string;\n  last_name: string;\n  photo?: string;\n  phone: string;\n}\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n} from '@angular/animations';\n\nexport const fadeZoomInOut = trigger('fadeZoomInOut', [\n  state('void', style({ opacity: 0, transform: 'scale(0.7) translate(-70%, -70%)' })),\n  state('*', style({ opacity: 1, transform: 'scale(1) translate(-50%, -50%)' })),\n  transition('void => *', [animate('0.3s ease-out')]),\n  transition('* => void', [animate('0.3s ease-in')]),\n]);\n\nexport const slideInOut = trigger('slideInOut', [\n  state('void', style({ opacity: 0, right: '-500px' })),\n  state('*', style({ opacity: 1, right: '0px' })),\n  transition('void => *', [animate('0.3s ease-out')]),\n  transition('* => void', [animate('0.3s ease-in')]),\n]);\n","import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n  hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n} catch {\n  hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nlet Platform = /*#__PURE__*/(() => {\n  class Platform {\n    constructor(_platformId) {\n      this._platformId = _platformId;\n      // We want to use the Angular platform check because if the Document is shimmed\n      // without the navigator, the following checks will fail. This is preferred because\n      // sometimes the Document may be shimmed without the user's knowledge or intention\n      /** Whether the Angular application is being rendered in the browser. */\n      this.isBrowser = this._platformId ? isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n      /** Whether the current browser is Microsoft Edge. */\n      this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n      /** Whether the current rendering engine is Microsoft Trident. */\n      this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n      // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n      /** Whether the current rendering engine is Blink. */\n      this.BLINK = this.isBrowser && !!(window.chrome || hasV8BreakIterator) && typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT;\n      // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n      // ensure that Webkit runs standalone and is not used as another engine's base.\n      /** Whether the current rendering engine is WebKit. */\n      this.WEBKIT = this.isBrowser && /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n      /** Whether the current platform is Apple iOS. */\n      this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n      // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n      // them self as Gecko-like browsers and modify the userAgent's according to that.\n      // Since we only cover one explicit Firefox case, we can simply check for Firefox\n      // instead of having an unstable check for Gecko.\n      /** Whether the current browser is Firefox. */\n      this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n      /** Whether the current platform is Android. */\n      // Trident on mobile adds the android platform to the userAgent to trick detections.\n      this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n      // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n      // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n      // Safari browser should also use Webkit as its layout engine.\n      /** Whether the current browser is Safari. */\n      this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n    static {\n      this.ɵfac = function Platform_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || Platform)(i0.ɵɵinject(PLATFORM_ID));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: Platform,\n        factory: Platform.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return Platform;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PlatformModule = /*#__PURE__*/(() => {\n  class PlatformModule {\n    static {\n      this.ɵfac = function PlatformModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || PlatformModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: PlatformModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return PlatformModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n// `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n// first changing it to something else:\n// The specified value \"\" does not conform to the required format.\n// The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n'color', 'button', 'checkbox', 'date', 'datetime-local', 'email', 'file', 'hidden', 'image', 'month', 'number', 'password', 'radio', 'range', 'reset', 'search', 'submit', 'tel', 'text', 'time', 'url', 'week'];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n  // Result is cached.\n  if (supportedInputTypes) {\n    return supportedInputTypes;\n  }\n  // We can't check if an input type is not supported until we're on the browser, so say that\n  // everything is supported when not on the browser. We don't use `Platform` here since it's\n  // just a helper function and can't inject it.\n  if (typeof document !== 'object' || !document) {\n    supportedInputTypes = new Set(candidateInputTypes);\n    return supportedInputTypes;\n  }\n  let featureTestInput = document.createElement('input');\n  supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n    featureTestInput.setAttribute('type', value);\n    return featureTestInput.type === value;\n  }));\n  return supportedInputTypes;\n}\n\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n  if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n    try {\n      window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n        get: () => supportsPassiveEvents = true\n      }));\n    } finally {\n      supportsPassiveEvents = supportsPassiveEvents || false;\n    }\n  }\n  return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n  return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/** The possible ways the browser may handle the horizontal scroll axis in RTL languages. */\nvar RtlScrollAxisType = /*#__PURE__*/function (RtlScrollAxisType) {\n  /**\n   * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n   * all the way right.\n   */\n  RtlScrollAxisType[RtlScrollAxisType[\"NORMAL\"] = 0] = \"NORMAL\";\n  /**\n   * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n   * all the way right.\n   */\n  RtlScrollAxisType[RtlScrollAxisType[\"NEGATED\"] = 1] = \"NEGATED\";\n  /**\n   * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n   * all the way right.\n   */\n  RtlScrollAxisType[RtlScrollAxisType[\"INVERTED\"] = 2] = \"INVERTED\";\n  return RtlScrollAxisType;\n}(RtlScrollAxisType || {});\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n  if (scrollBehaviorSupported == null) {\n    // If we're not in the browser, it can't be supported. Also check for `Element`, because\n    // some projects stub out the global `document` during SSR which can throw us off.\n    if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n      scrollBehaviorSupported = false;\n      return scrollBehaviorSupported;\n    }\n    // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n    if ('scrollBehavior' in document.documentElement.style) {\n      scrollBehaviorSupported = true;\n    } else {\n      // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n      // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n      const scrollToFunction = Element.prototype.scrollTo;\n      if (scrollToFunction) {\n        // We can detect if the function has been polyfilled by calling `toString` on it. Native\n        // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n        // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n        // polyfilled functions as supporting scroll behavior.\n        scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n      } else {\n        scrollBehaviorSupported = false;\n      }\n    }\n  }\n  return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n  // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n  if (typeof document !== 'object' || !document) {\n    return RtlScrollAxisType.NORMAL;\n  }\n  if (rtlScrollAxisType == null) {\n    // Create a 1px wide scrolling container and a 2px wide content element.\n    const scrollContainer = document.createElement('div');\n    const containerStyle = scrollContainer.style;\n    scrollContainer.dir = 'rtl';\n    containerStyle.width = '1px';\n    containerStyle.overflow = 'auto';\n    containerStyle.visibility = 'hidden';\n    containerStyle.pointerEvents = 'none';\n    containerStyle.position = 'absolute';\n    const content = document.createElement('div');\n    const contentStyle = content.style;\n    contentStyle.width = '2px';\n    contentStyle.height = '1px';\n    scrollContainer.appendChild(content);\n    document.body.appendChild(scrollContainer);\n    rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n    // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n    // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n    // dealing with one of the other two types of browsers.\n    if (scrollContainer.scrollLeft === 0) {\n      // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n      // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n      // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n      // return 0 when we read it again.\n      scrollContainer.scrollLeft = 1;\n      rtlScrollAxisType = scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n    }\n    scrollContainer.remove();\n  }\n  return rtlScrollAxisType;\n}\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n  if (shadowDomIsSupported == null) {\n    const head = typeof document !== 'undefined' ? document.head : null;\n    shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n  }\n  return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n  if (_supportsShadowDom()) {\n    const rootNode = element.getRootNode ? element.getRootNode() : null;\n    // Note that this should be caught by `_supportsShadowDom`, but some\n    // teams have been able to hit this code path on unsupported browsers.\n    if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n      return rootNode;\n    }\n  }\n  return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n  let activeElement = typeof document !== 'undefined' && document ? document.activeElement : null;\n  while (activeElement && activeElement.shadowRoot) {\n    const newActiveElement = activeElement.shadowRoot.activeElement;\n    if (newActiveElement === activeElement) {\n      break;\n    } else {\n      activeElement = newActiveElement;\n    }\n  }\n  return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n  // If an event is bound outside the Shadow DOM, the `event.target` will\n  // point to the shadow root so we have to use `composedPath` instead.\n  return event.composedPath ? event.composedPath()[0] : event.target;\n}\n\n/** Gets whether the code is currently running in a test environment. */\nfunction _isTestEnvironment() {\n  // We can't use `declare const` because it causes conflicts inside Google with the real typings\n  // for these symbols and we can't read them off the global object, because they don't appear to\n  // be attached there for some runners like Jest.\n  // (see: https://github.com/angular/components/issues/23365#issuecomment-938146643)\n  return (\n    // @ts-ignore\n    typeof __karma__ !== 'undefined' && !!__karma__ ||\n    // @ts-ignore\n    typeof jasmine !== 'undefined' && !!jasmine ||\n    // @ts-ignore\n    typeof jest !== 'undefined' && !!jest ||\n    // @ts-ignore\n    typeof Mocha !== 'undefined' && !!Mocha\n  );\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, RtlScrollAxisType, _getEventTarget, _getFocusedElementPierceShadowDom, _getShadowRoot, _isTestEnvironment, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n","const MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst PERIOD = 190;\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\n\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nfunction hasModifierKey(event, ...modifiers) {\n  if (modifiers.length) {\n    return modifiers.some(modifier => event[modifier]);\n  }\n  return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PERIOD, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n","import { ElementRef } from '@angular/core';\n\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n  return value != null && `${value}` !== 'false';\n}\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n  if (_isNumberValue(value)) {\n    return Number(value);\n  }\n  return arguments.length === 2 ? fallbackValue : 0;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n  // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n  // and other non-number values as NaN, where Number just uses 0) but it considers the string\n  // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n  return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\nfunction coerceArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n  if (value == null) {\n    return '';\n  }\n  return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n  return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * Coerces a value to an array of trimmed non-empty strings.\n * Any input that is not an array, `null` or `undefined` will be turned into a string\n * via `toString()` and subsequently split with the given separator.\n * `null` and `undefined` will result in an empty array.\n * This results in the following outcomes:\n * - `null` -&gt; `[]`\n * - `[null]` -&gt; `[\"null\"]`\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\n *\n * Useful for defining CSS classes or table columns.\n * @param value the value to coerce into an array of strings\n * @param separator split-separator if value isn't an array\n */\nfunction coerceStringArray(value, separator = /\\s+/) {\n  const result = [];\n  if (value != null) {\n    const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\n    for (const sourceValue of sourceValues) {\n      const trimmedString = `${sourceValue}`.trim();\n      if (trimmedString) {\n        result.push(trimmedString);\n      }\n    }\n  }\n  return result;\n}\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\n","import { coerceElement, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, NgZone, EventEmitter, booleanAttribute, Directive, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { map, filter, debounceTime } from 'rxjs/operators';\n\n// Angular may add, remove, or edit comment nodes during change detection. We don't care about\n// these changes because they don't affect the user-preceived content, and worse it can cause\n// infinite change detection cycles where the change detection updates a comment, triggering the\n// MutationObserver, triggering another change detection and kicking the cycle off again.\nfunction shouldIgnoreRecord(record) {\n  // Ignore changes to comment text.\n  if (record.type === 'characterData' && record.target instanceof Comment) {\n    return true;\n  }\n  // Ignore addition / removal of comments.\n  if (record.type === 'childList') {\n    for (let i = 0; i < record.addedNodes.length; i++) {\n      if (!(record.addedNodes[i] instanceof Comment)) {\n        return false;\n      }\n    }\n    for (let i = 0; i < record.removedNodes.length; i++) {\n      if (!(record.removedNodes[i] instanceof Comment)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // Observe everything else.\n  return false;\n}\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nlet MutationObserverFactory = /*#__PURE__*/(() => {\n  class MutationObserverFactory {\n    create(callback) {\n      return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n    static {\n      this.ɵfac = function MutationObserverFactory_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MutationObserverFactory)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MutationObserverFactory,\n        factory: MutationObserverFactory.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return MutationObserverFactory;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** An injectable service that allows watching elements for changes to their content. */\nlet ContentObserver = /*#__PURE__*/(() => {\n  class ContentObserver {\n    constructor(_mutationObserverFactory) {\n      this._mutationObserverFactory = _mutationObserverFactory;\n      /** Keeps track of the existing MutationObservers so they can be reused. */\n      this._observedElements = new Map();\n      this._ngZone = inject(NgZone);\n    }\n    ngOnDestroy() {\n      this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n      const element = coerceElement(elementOrRef);\n      return new Observable(observer => {\n        const stream = this._observeElement(element);\n        const subscription = stream.pipe(map(records => records.filter(record => !shouldIgnoreRecord(record))), filter(records => !!records.length)).subscribe(records => {\n          this._ngZone.run(() => {\n            observer.next(records);\n          });\n        });\n        return () => {\n          subscription.unsubscribe();\n          this._unobserveElement(element);\n        };\n      });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n      return this._ngZone.runOutsideAngular(() => {\n        if (!this._observedElements.has(element)) {\n          const stream = new Subject();\n          const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n          if (observer) {\n            observer.observe(element, {\n              characterData: true,\n              childList: true,\n              subtree: true\n            });\n          }\n          this._observedElements.set(element, {\n            observer,\n            stream,\n            count: 1\n          });\n        } else {\n          this._observedElements.get(element).count++;\n        }\n        return this._observedElements.get(element).stream;\n      });\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n      if (this._observedElements.has(element)) {\n        this._observedElements.get(element).count--;\n        if (!this._observedElements.get(element).count) {\n          this._cleanupObserver(element);\n        }\n      }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n      if (this._observedElements.has(element)) {\n        const {\n          observer,\n          stream\n        } = this._observedElements.get(element);\n        if (observer) {\n          observer.disconnect();\n        }\n        stream.complete();\n        this._observedElements.delete(element);\n      }\n    }\n    static {\n      this.ɵfac = function ContentObserver_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ContentObserver)(i0.ɵɵinject(MutationObserverFactory));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ContentObserver,\n        factory: ContentObserver.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ContentObserver;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nlet CdkObserveContent = /*#__PURE__*/(() => {\n  class CdkObserveContent {\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n      this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /** Debounce interval for emitting the changes. */\n    get debounce() {\n      return this._debounce;\n    }\n    set debounce(value) {\n      this._debounce = coerceNumberProperty(value);\n      this._subscribe();\n    }\n    constructor(_contentObserver, _elementRef) {\n      this._contentObserver = _contentObserver;\n      this._elementRef = _elementRef;\n      /** Event emitted for each change in the element's content. */\n      this.event = new EventEmitter();\n      this._disabled = false;\n      this._currentSubscription = null;\n    }\n    ngAfterContentInit() {\n      if (!this._currentSubscription && !this.disabled) {\n        this._subscribe();\n      }\n    }\n    ngOnDestroy() {\n      this._unsubscribe();\n    }\n    _subscribe() {\n      this._unsubscribe();\n      const stream = this._contentObserver.observe(this._elementRef);\n      this._currentSubscription = (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n    }\n    _unsubscribe() {\n      this._currentSubscription?.unsubscribe();\n    }\n    static {\n      this.ɵfac = function CdkObserveContent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkObserveContent)(i0.ɵɵdirectiveInject(ContentObserver), i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkObserveContent,\n        selectors: [[\"\", \"cdkObserveContent\", \"\"]],\n        inputs: {\n          disabled: [2, \"cdkObserveContentDisabled\", \"disabled\", booleanAttribute],\n          debounce: \"debounce\"\n        },\n        outputs: {\n          event: \"cdkObserveContent\"\n        },\n        exportAs: [\"cdkObserveContent\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return CdkObserveContent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ObserversModule = /*#__PURE__*/(() => {\n  class ObserversModule {\n    static {\n      this.ɵfac = function ObserversModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ObserversModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: ObserversModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [MutationObserverFactory]\n      });\n    }\n  }\n  return ObserversModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n","import * as i0 from '@angular/core';\nimport { NgModule, CSP_NONCE, Injectable, Optional, Inject } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nlet LayoutModule = /*#__PURE__*/(() => {\n  class LayoutModule {\n    static {\n      this.ɵfac = function LayoutModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LayoutModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: LayoutModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return LayoutModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = /*#__PURE__*/new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nlet MediaMatcher = /*#__PURE__*/(() => {\n  class MediaMatcher {\n    constructor(_platform, _nonce) {\n      this._platform = _platform;\n      this._nonce = _nonce;\n      this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n      // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n      // call it from a different scope.\n      window.matchMedia.bind(window) : noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n      if (this._platform.WEBKIT || this._platform.BLINK) {\n        createEmptyStyleRule(query, this._nonce);\n      }\n      return this._matchMedia(query);\n    }\n    static {\n      this.ɵfac = function MediaMatcher_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MediaMatcher)(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(CSP_NONCE, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MediaMatcher,\n        factory: MediaMatcher.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return MediaMatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\nfunction createEmptyStyleRule(query, nonce) {\n  if (mediaQueriesForWebkitCompatibility.has(query)) {\n    return;\n  }\n  try {\n    if (!mediaQueryStyleNode) {\n      mediaQueryStyleNode = document.createElement('style');\n      if (nonce) {\n        mediaQueryStyleNode.setAttribute('nonce', nonce);\n      }\n      mediaQueryStyleNode.setAttribute('type', 'text/css');\n      document.head.appendChild(mediaQueryStyleNode);\n    }\n    if (mediaQueryStyleNode.sheet) {\n      mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n      mediaQueriesForWebkitCompatibility.add(query);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n  // Use `as any` here to avoid adding additional necessary properties for\n  // the noop matcher.\n  return {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {},\n    removeListener: () => {}\n  };\n}\n\n/** Utility for checking the matching state of @media queries. */\nlet BreakpointObserver = /*#__PURE__*/(() => {\n  class BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n      this._mediaMatcher = _mediaMatcher;\n      this._zone = _zone;\n      /**  A map of all media queries currently being listened for. */\n      this._queries = new Map();\n      /** A subject for all other observables to takeUntil based on. */\n      this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n      this._destroySubject.next();\n      this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n      const queries = splitQueries(coerceArray(value));\n      return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n      const queries = splitQueries(coerceArray(value));\n      const observables = queries.map(query => this._registerQuery(query).observable);\n      let stateObservable = combineLatest(observables);\n      // Emit the first state immediately, and then debounce the subsequent emissions.\n      stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n      return stateObservable.pipe(map(breakpointStates => {\n        const response = {\n          matches: false,\n          breakpoints: {}\n        };\n        breakpointStates.forEach(({\n          matches,\n          query\n        }) => {\n          response.matches = response.matches || matches;\n          response.breakpoints[query] = matches;\n        });\n        return response;\n      }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n      // Only set up a new MediaQueryList if it is not already being listened for.\n      if (this._queries.has(query)) {\n        return this._queries.get(query);\n      }\n      const mql = this._mediaMatcher.matchMedia(query);\n      // Create callback for match changes and add it is as a listener.\n      const queryObservable = new Observable(observer => {\n        // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n        // back into the zone because matchMedia is only included in Zone.js by loading the\n        // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n        // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n        // patches it.\n        const handler = e => this._zone.run(() => observer.next(e));\n        mql.addListener(handler);\n        return () => {\n          mql.removeListener(handler);\n        };\n      }).pipe(startWith(mql), map(({\n        matches\n      }) => ({\n        query,\n        matches\n      })), takeUntil(this._destroySubject));\n      // Add the MediaQueryList to the set of queries.\n      const output = {\n        observable: queryObservable,\n        mql\n      };\n      this._queries.set(query, output);\n      return output;\n    }\n    static {\n      this.ɵfac = function BreakpointObserver_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || BreakpointObserver)(i0.ɵɵinject(MediaMatcher), i0.ɵɵinject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: BreakpointObserver,\n        factory: BreakpointObserver.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return BreakpointObserver;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n  return queries.map(query => query.split(',')).reduce((a1, a2) => a1.concat(a2)).map(query => query.trim());\n}\n\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n  XSmall: '(max-width: 599.98px)',\n  Small: '(min-width: 600px) and (max-width: 959.98px)',\n  Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n  Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n  XLarge: '(min-width: 1920px)',\n  Handset: '(max-width: 599.98px) and (orientation: portrait), ' + '(max-width: 959.98px) and (orientation: landscape)',\n  Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' + '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n  Web: '(min-width: 840px) and (orientation: portrait), ' + '(min-width: 1280px) and (orientation: landscape)',\n  HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n  TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n  WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n  HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n  TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n  WebLandscape: '(min-width: 1280px) and (orientation: landscape)'\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable, Inject, QueryList, isSignal, effect, InjectionToken, afterNextRender, Injector, booleanAttribute, Directive, Input, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { Platform, _getFocusedElementPierceShadowDom, normalizePassiveListenerOptions, _getEventTarget, _getShadowRoot } from '@angular/cdk/platform';\nimport { Subject, Subscription, isObservable, of, BehaviorSubject } from 'rxjs';\nimport { A, Z, ZERO, NINE, hasModifierKey, PAGE_DOWN, PAGE_UP, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB, ALT, CONTROL, MAC_META, META, SHIFT } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceObservable } from '@angular/cdk/coercion/private';\nimport * as i1$1 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n  const ids = getAriaReferenceIds(el, attr);\n  id = id.trim();\n  if (ids.some(existingId => existingId.trim() === id)) {\n    return;\n  }\n  ids.push(id);\n  el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n  const ids = getAriaReferenceIds(el, attr);\n  id = id.trim();\n  const filteredIds = ids.filter(val => val !== id);\n  if (filteredIds.length) {\n    el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n  } else {\n    el.removeAttribute(attr);\n  }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n  // Get string array of all individual ids (whitespace delimited) in the attribute value\n  const attrValue = el.getAttribute(attr);\n  return attrValue?.match(/\\S+/g) ?? [];\n}\n\n/**\n * ID used for the body container where all messages are appended.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 14.0.0\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nlet AriaDescriber = /*#__PURE__*/(() => {\n  class AriaDescriber {\n    constructor(_document,\n    /**\n     * @deprecated To be turned into a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n      this._platform = _platform;\n      /** Map of all registered message elements that have been placed into the document. */\n      this._messageRegistry = new Map();\n      /** Container for all registered messages. */\n      this._messagesContainer = null;\n      /** Unique ID for the service. */\n      this._id = `${nextId++}`;\n      this._document = _document;\n      this._id = inject(APP_ID) + '-' + nextId++;\n    }\n    describe(hostElement, message, role) {\n      if (!this._canBeDescribed(hostElement, message)) {\n        return;\n      }\n      const key = getKey(message, role);\n      if (typeof message !== 'string') {\n        // We need to ensure that the element has an ID.\n        setMessageId(message, this._id);\n        this._messageRegistry.set(key, {\n          messageElement: message,\n          referenceCount: 0\n        });\n      } else if (!this._messageRegistry.has(key)) {\n        this._createMessageElement(message, role);\n      }\n      if (!this._isElementDescribedByMessage(hostElement, key)) {\n        this._addMessageReference(hostElement, key);\n      }\n    }\n    removeDescription(hostElement, message, role) {\n      if (!message || !this._isElementNode(hostElement)) {\n        return;\n      }\n      const key = getKey(message, role);\n      if (this._isElementDescribedByMessage(hostElement, key)) {\n        this._removeMessageReference(hostElement, key);\n      }\n      // If the message is a string, it means that it's one that we created for the\n      // consumer so we can remove it safely, otherwise we should leave it in place.\n      if (typeof message === 'string') {\n        const registeredMessage = this._messageRegistry.get(key);\n        if (registeredMessage && registeredMessage.referenceCount === 0) {\n          this._deleteMessageElement(key);\n        }\n      }\n      if (this._messagesContainer?.childNodes.length === 0) {\n        this._messagesContainer.remove();\n        this._messagesContainer = null;\n      }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n      const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}=\"${this._id}\"]`);\n      for (let i = 0; i < describedElements.length; i++) {\n        this._removeCdkDescribedByReferenceIds(describedElements[i]);\n        describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n      }\n      this._messagesContainer?.remove();\n      this._messagesContainer = null;\n      this._messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n      const messageElement = this._document.createElement('div');\n      setMessageId(messageElement, this._id);\n      messageElement.textContent = message;\n      if (role) {\n        messageElement.setAttribute('role', role);\n      }\n      this._createMessagesContainer();\n      this._messagesContainer.appendChild(messageElement);\n      this._messageRegistry.set(getKey(message, role), {\n        messageElement,\n        referenceCount: 0\n      });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n      this._messageRegistry.get(key)?.messageElement?.remove();\n      this._messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n      if (this._messagesContainer) {\n        return;\n      }\n      const containerClassName = 'cdk-describedby-message-container';\n      const serverContainers = this._document.querySelectorAll(`.${containerClassName}[platform=\"server\"]`);\n      for (let i = 0; i < serverContainers.length; i++) {\n        // When going from the server to the client, we may end up in a situation where there's\n        // already a container on the page, but we don't have a reference to it. Clear the\n        // old container so we don't get duplicates. Doing this, instead of emptying the previous\n        // container, should be slightly faster.\n        serverContainers[i].remove();\n      }\n      const messagesContainer = this._document.createElement('div');\n      // We add `visibility: hidden` in order to prevent text in this container from\n      // being searchable by the browser's Ctrl + F functionality.\n      // Screen-readers will still read the description for elements with aria-describedby even\n      // when the description element is not visible.\n      messagesContainer.style.visibility = 'hidden';\n      // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n      // the description element doesn't impact page layout.\n      messagesContainer.classList.add(containerClassName);\n      messagesContainer.classList.add('cdk-visually-hidden');\n      // @breaking-change 14.0.0 Remove null check for `_platform`.\n      if (this._platform && !this._platform.isBrowser) {\n        messagesContainer.setAttribute('platform', 'server');\n      }\n      this._document.body.appendChild(messagesContainer);\n      this._messagesContainer = messagesContainer;\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n      // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n      const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n      element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n      const registeredMessage = this._messageRegistry.get(key);\n      // Add the aria-describedby reference and set the\n      // describedby_host attribute to mark the element.\n      addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n      element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, this._id);\n      registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n      const registeredMessage = this._messageRegistry.get(key);\n      registeredMessage.referenceCount--;\n      removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n      element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n      const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n      const registeredMessage = this._messageRegistry.get(key);\n      const messageId = registeredMessage && registeredMessage.messageElement.id;\n      return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n      if (!this._isElementNode(element)) {\n        return false;\n      }\n      if (message && typeof message === 'object') {\n        // We'd have to make some assumptions about the description element's text, if the consumer\n        // passed in an element. Assume that if an element is passed in, the consumer has verified\n        // that it can be used as a description.\n        return true;\n      }\n      const trimmedMessage = message == null ? '' : `${message}`.trim();\n      const ariaLabel = element.getAttribute('aria-label');\n      // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n      // element, because screen readers will end up reading out the same text twice in a row.\n      return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n      return element.nodeType === this._document.ELEMENT_NODE;\n    }\n    static {\n      this.ɵfac = function AriaDescriber_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AriaDescriber)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1.Platform));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: AriaDescriber,\n        factory: AriaDescriber.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AriaDescriber;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n  return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element, serviceId) {\n  if (!element.id) {\n    element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${serviceId}-${nextId++}`;\n  }\n}\nconst DEFAULT_TYPEAHEAD_DEBOUNCE_INTERVAL_MS = 200;\n/**\n * Selects items based on keyboard inputs. Implements the typeahead functionality of\n * `role=\"listbox\"` or `role=\"tree\"` and other related roles.\n */\nclass Typeahead {\n  constructor(initialItems, config) {\n    this._letterKeyStream = new Subject();\n    this._items = [];\n    this._selectedItemIndex = -1;\n    /** Buffer for the letters that the user has pressed */\n    this._pressedLetters = [];\n    this._selectedItem = new Subject();\n    this.selectedItem = this._selectedItem;\n    const typeAheadInterval = typeof config?.debounceInterval === 'number' ? config.debounceInterval : DEFAULT_TYPEAHEAD_DEBOUNCE_INTERVAL_MS;\n    if (config?.skipPredicate) {\n      this._skipPredicateFn = config.skipPredicate;\n    }\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initialItems.length && initialItems.some(item => typeof item.getLabel !== 'function')) {\n      throw new Error('KeyManager items in typeahead mode must implement the `getLabel` method.');\n    }\n    this.setItems(initialItems);\n    this._setupKeyHandler(typeAheadInterval);\n  }\n  destroy() {\n    this._pressedLetters = [];\n    this._letterKeyStream.complete();\n    this._selectedItem.complete();\n  }\n  setCurrentSelectedItemIndex(index) {\n    this._selectedItemIndex = index;\n  }\n  setItems(items) {\n    this._items = items;\n  }\n  handleKey(event) {\n    const keyCode = event.keyCode;\n    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n    if (event.key && event.key.length === 1) {\n      this._letterKeyStream.next(event.key.toLocaleUpperCase());\n    } else if (keyCode >= A && keyCode <= Z || keyCode >= ZERO && keyCode <= NINE) {\n      this._letterKeyStream.next(String.fromCharCode(keyCode));\n    }\n  }\n  /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n  isTyping() {\n    return this._pressedLetters.length > 0;\n  }\n  /** Resets the currently stored sequence of typed letters. */\n  reset() {\n    this._pressedLetters = [];\n  }\n  _setupKeyHandler(typeAheadInterval) {\n    // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n    // and convert those letters back into a string. Afterwards find the first item that starts\n    // with that string and select it.\n    this._letterKeyStream.pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(typeAheadInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join('').toLocaleUpperCase())).subscribe(inputString => {\n      // Start at 1 because we want to start searching at the item immediately\n      // following the current active item.\n      for (let i = 1; i < this._items.length + 1; i++) {\n        const index = (this._selectedItemIndex + i) % this._items.length;\n        const item = this._items[index];\n        if (!this._skipPredicateFn?.(item) && item.getLabel?.().toLocaleUpperCase().trim().indexOf(inputString) === 0) {\n          this._selectedItem.next(item);\n          break;\n        }\n      }\n      this._pressedLetters = [];\n    });\n  }\n}\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n  constructor(_items, injector) {\n    this._items = _items;\n    this._activeItemIndex = -1;\n    this._activeItem = null;\n    this._wrap = false;\n    this._typeaheadSubscription = Subscription.EMPTY;\n    this._vertical = true;\n    this._allowedModifierKeys = [];\n    this._homeAndEnd = false;\n    this._pageUpAndDown = {\n      enabled: false,\n      delta: 10\n    };\n    /**\n     * Predicate function that can be used to check whether an item should be skipped\n     * by the key manager. By default, disabled items are skipped.\n     */\n    this._skipPredicateFn = item => item.disabled;\n    /**\n     * Stream that emits any time the TAB key is pressed, so components can react\n     * when focus is shifted off of the list.\n     */\n    this.tabOut = new Subject();\n    /** Stream that emits whenever the active item of the list manager changes. */\n    this.change = new Subject();\n    // We allow for the items to be an array because, in some cases, the consumer may\n    // not have access to a QueryList of the items they want to manage (e.g. when the\n    // items aren't being collected via `ViewChildren` or `ContentChildren`).\n    if (_items instanceof QueryList) {\n      this._itemChangesSubscription = _items.changes.subscribe(newItems => this._itemsChanged(newItems.toArray()));\n    } else if (isSignal(_items)) {\n      if (!injector && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new Error('ListKeyManager constructed with a signal must receive an injector');\n      }\n      this._effectRef = effect(() => this._itemsChanged(_items()), {\n        injector\n      });\n    }\n  }\n  /**\n   * Sets the predicate function that determines which items should be skipped by the\n   * list key manager.\n   * @param predicate Function that determines whether the given item should be skipped.\n   */\n  skipPredicate(predicate) {\n    this._skipPredicateFn = predicate;\n    return this;\n  }\n  /**\n   * Configures wrapping mode, which determines whether the active item will wrap to\n   * the other end of list when there are no more items in the given direction.\n   * @param shouldWrap Whether the list should wrap when reaching the end.\n   */\n  withWrap(shouldWrap = true) {\n    this._wrap = shouldWrap;\n    return this;\n  }\n  /**\n   * Configures whether the key manager should be able to move the selection vertically.\n   * @param enabled Whether vertical selection should be enabled.\n   */\n  withVerticalOrientation(enabled = true) {\n    this._vertical = enabled;\n    return this;\n  }\n  /**\n   * Configures the key manager to move the selection horizontally.\n   * Passing in `null` will disable horizontal movement.\n   * @param direction Direction in which the selection can be moved.\n   */\n  withHorizontalOrientation(direction) {\n    this._horizontal = direction;\n    return this;\n  }\n  /**\n   * Modifier keys which are allowed to be held down and whose default actions will be prevented\n   * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n   */\n  withAllowedModifierKeys(keys) {\n    this._allowedModifierKeys = keys;\n    return this;\n  }\n  /**\n   * Turns on typeahead mode which allows users to set the active item by typing.\n   * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n   */\n  withTypeAhead(debounceInterval = 200) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      const items = this._getItemsArray();\n      if (items.length > 0 && items.some(item => typeof item.getLabel !== 'function')) {\n        throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n      }\n    }\n    this._typeaheadSubscription.unsubscribe();\n    const items = this._getItemsArray();\n    this._typeahead = new Typeahead(items, {\n      debounceInterval: typeof debounceInterval === 'number' ? debounceInterval : undefined,\n      skipPredicate: item => this._skipPredicateFn(item)\n    });\n    this._typeaheadSubscription = this._typeahead.selectedItem.subscribe(item => {\n      this.setActiveItem(item);\n    });\n    return this;\n  }\n  /** Cancels the current typeahead sequence. */\n  cancelTypeahead() {\n    this._typeahead?.reset();\n    return this;\n  }\n  /**\n   * Configures the key manager to activate the first and last items\n   * respectively when the Home or End key is pressed.\n   * @param enabled Whether pressing the Home or End key activates the first/last item.\n   */\n  withHomeAndEnd(enabled = true) {\n    this._homeAndEnd = enabled;\n    return this;\n  }\n  /**\n   * Configures the key manager to activate every 10th, configured or first/last element in up/down direction\n   * respectively when the Page-Up or Page-Down key is pressed.\n   * @param enabled Whether pressing the Page-Up or Page-Down key activates the first/last item.\n   * @param delta Whether pressing the Home or End key activates the first/last item.\n   */\n  withPageUpDown(enabled = true, delta = 10) {\n    this._pageUpAndDown = {\n      enabled,\n      delta\n    };\n    return this;\n  }\n  setActiveItem(item) {\n    const previousActiveItem = this._activeItem;\n    this.updateActiveItem(item);\n    if (this._activeItem !== previousActiveItem) {\n      this.change.next(this._activeItemIndex);\n    }\n  }\n  /**\n   * Sets the active item depending on the key event passed in.\n   * @param event Keyboard event to be used for determining which element should be active.\n   */\n  onKeydown(event) {\n    const keyCode = event.keyCode;\n    const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n    const isModifierAllowed = modifiers.every(modifier => {\n      return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n    });\n    switch (keyCode) {\n      case TAB:\n        this.tabOut.next();\n        return;\n      case DOWN_ARROW:\n        if (this._vertical && isModifierAllowed) {\n          this.setNextItemActive();\n          break;\n        } else {\n          return;\n        }\n      case UP_ARROW:\n        if (this._vertical && isModifierAllowed) {\n          this.setPreviousItemActive();\n          break;\n        } else {\n          return;\n        }\n      case RIGHT_ARROW:\n        if (this._horizontal && isModifierAllowed) {\n          this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n          break;\n        } else {\n          return;\n        }\n      case LEFT_ARROW:\n        if (this._horizontal && isModifierAllowed) {\n          this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n          break;\n        } else {\n          return;\n        }\n      case HOME:\n        if (this._homeAndEnd && isModifierAllowed) {\n          this.setFirstItemActive();\n          break;\n        } else {\n          return;\n        }\n      case END:\n        if (this._homeAndEnd && isModifierAllowed) {\n          this.setLastItemActive();\n          break;\n        } else {\n          return;\n        }\n      case PAGE_UP:\n        if (this._pageUpAndDown.enabled && isModifierAllowed) {\n          const targetIndex = this._activeItemIndex - this._pageUpAndDown.delta;\n          this._setActiveItemByIndex(targetIndex > 0 ? targetIndex : 0, 1);\n          break;\n        } else {\n          return;\n        }\n      case PAGE_DOWN:\n        if (this._pageUpAndDown.enabled && isModifierAllowed) {\n          const targetIndex = this._activeItemIndex + this._pageUpAndDown.delta;\n          const itemsLength = this._getItemsArray().length;\n          this._setActiveItemByIndex(targetIndex < itemsLength ? targetIndex : itemsLength - 1, -1);\n          break;\n        } else {\n          return;\n        }\n      default:\n        if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n          this._typeahead?.handleKey(event);\n        }\n        // Note that we return here, in order to avoid preventing\n        // the default action of non-navigational keys.\n        return;\n    }\n    this._typeahead?.reset();\n    event.preventDefault();\n  }\n  /** Index of the currently active item. */\n  get activeItemIndex() {\n    return this._activeItemIndex;\n  }\n  /** The active item. */\n  get activeItem() {\n    return this._activeItem;\n  }\n  /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n  isTyping() {\n    return !!this._typeahead && this._typeahead.isTyping();\n  }\n  /** Sets the active item to the first enabled item in the list. */\n  setFirstItemActive() {\n    this._setActiveItemByIndex(0, 1);\n  }\n  /** Sets the active item to the last enabled item in the list. */\n  setLastItemActive() {\n    this._setActiveItemByIndex(this._getItemsArray().length - 1, -1);\n  }\n  /** Sets the active item to the next enabled item in the list. */\n  setNextItemActive() {\n    this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n  }\n  /** Sets the active item to a previous enabled item in the list. */\n  setPreviousItemActive() {\n    this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive() : this._setActiveItemByDelta(-1);\n  }\n  updateActiveItem(item) {\n    const itemArray = this._getItemsArray();\n    const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n    const activeItem = itemArray[index];\n    // Explicitly check for `null` and `undefined` because other falsy values are valid.\n    this._activeItem = activeItem == null ? null : activeItem;\n    this._activeItemIndex = index;\n    this._typeahead?.setCurrentSelectedItemIndex(index);\n  }\n  /** Cleans up the key manager. */\n  destroy() {\n    this._typeaheadSubscription.unsubscribe();\n    this._itemChangesSubscription?.unsubscribe();\n    this._effectRef?.destroy();\n    this._typeahead?.destroy();\n    this.tabOut.complete();\n    this.change.complete();\n  }\n  /**\n   * This method sets the active item, given a list of items and the delta between the\n   * currently active item and the new active item. It will calculate differently\n   * depending on whether wrap mode is turned on.\n   */\n  _setActiveItemByDelta(delta) {\n    this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n  }\n  /**\n   * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n   * down the list until it finds an item that is not disabled, and it will wrap if it\n   * encounters either end of the list.\n   */\n  _setActiveInWrapMode(delta) {\n    const items = this._getItemsArray();\n    for (let i = 1; i <= items.length; i++) {\n      const index = (this._activeItemIndex + delta * i + items.length) % items.length;\n      const item = items[index];\n      if (!this._skipPredicateFn(item)) {\n        this.setActiveItem(index);\n        return;\n      }\n    }\n  }\n  /**\n   * Sets the active item properly given the default mode. In other words, it will\n   * continue to move down the list until it finds an item that is not disabled. If\n   * it encounters either end of the list, it will stop and not wrap.\n   */\n  _setActiveInDefaultMode(delta) {\n    this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n  }\n  /**\n   * Sets the active item to the first enabled item starting at the index specified. If the\n   * item is disabled, it will move in the fallbackDelta direction until it either\n   * finds an enabled item or encounters the end of the list.\n   */\n  _setActiveItemByIndex(index, fallbackDelta) {\n    const items = this._getItemsArray();\n    if (!items[index]) {\n      return;\n    }\n    while (this._skipPredicateFn(items[index])) {\n      index += fallbackDelta;\n      if (!items[index]) {\n        return;\n      }\n    }\n    this.setActiveItem(index);\n  }\n  /** Returns the items as an array. */\n  _getItemsArray() {\n    if (isSignal(this._items)) {\n      return this._items();\n    }\n    return this._items instanceof QueryList ? this._items.toArray() : this._items;\n  }\n  /** Callback for when the items have changed. */\n  _itemsChanged(newItems) {\n    this._typeahead?.setItems(newItems);\n    if (this._activeItem) {\n      const newIndex = newItems.indexOf(this._activeItem);\n      if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n        this._activeItemIndex = newIndex;\n        this._typeahead?.setCurrentSelectedItemIndex(newIndex);\n      }\n    }\n  }\n}\nclass ActiveDescendantKeyManager extends ListKeyManager {\n  setActiveItem(index) {\n    if (this.activeItem) {\n      this.activeItem.setInactiveStyles();\n    }\n    super.setActiveItem(index);\n    if (this.activeItem) {\n      this.activeItem.setActiveStyles();\n    }\n  }\n}\nclass FocusKeyManager extends ListKeyManager {\n  constructor() {\n    super(...arguments);\n    this._origin = 'program';\n  }\n  /**\n   * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n   * @param origin Focus origin to be used when focusing items.\n   */\n  setFocusOrigin(origin) {\n    this._origin = origin;\n    return this;\n  }\n  setActiveItem(item) {\n    super.setActiveItem(item);\n    if (this.activeItem) {\n      this.activeItem.focus(this._origin);\n    }\n  }\n}\n\n/**\n * This class manages keyboard events for trees. If you pass it a QueryList or other list of tree\n * items, it will set the active item, focus, handle expansion and typeahead correctly when\n * keyboard events occur.\n */\nclass TreeKeyManager {\n  _initializeFocus() {\n    if (this._hasInitialFocused || this._items.length === 0) {\n      return;\n    }\n    let activeIndex = 0;\n    for (let i = 0; i < this._items.length; i++) {\n      if (!this._skipPredicateFn(this._items[i]) && !this._isItemDisabled(this._items[i])) {\n        activeIndex = i;\n        break;\n      }\n    }\n    const activeItem = this._items[activeIndex];\n    // Use `makeFocusable` here, because we want the item to just be focusable, not actually\n    // capture the focus since the user isn't interacting with it. See #29628.\n    if (activeItem.makeFocusable) {\n      this._activeItem?.unfocus();\n      this._activeItemIndex = activeIndex;\n      this._activeItem = activeItem;\n      this._typeahead?.setCurrentSelectedItemIndex(activeIndex);\n      activeItem.makeFocusable();\n    } else {\n      // Backwards compatibility for items that don't implement `makeFocusable`.\n      this.focusItem(activeIndex);\n    }\n    this._hasInitialFocused = true;\n  }\n  /**\n   *\n   * @param items List of TreeKeyManager options. Can be synchronous or asynchronous.\n   * @param config Optional configuration options. By default, use 'ltr' horizontal orientation. By\n   * default, do not skip any nodes. By default, key manager only calls `focus` method when items\n   * are focused and does not call `activate`. If `typeaheadDefaultInterval` is `true`, use a\n   * default interval of 200ms.\n   */\n  constructor(items, config) {\n    /** The index of the currently active (focused) item. */\n    this._activeItemIndex = -1;\n    /** The currently active (focused) item. */\n    this._activeItem = null;\n    /** Whether or not we activate the item when it's focused. */\n    this._shouldActivationFollowFocus = false;\n    /**\n     * The orientation that the tree is laid out in. In `rtl` mode, the behavior of Left and\n     * Right arrow are switched.\n     */\n    this._horizontalOrientation = 'ltr';\n    /**\n     * Predicate function that can be used to check whether an item should be skipped\n     * by the key manager.\n     *\n     * The default value for this doesn't skip any elements in order to keep tree items focusable\n     * when disabled. This aligns with ARIA guidelines:\n     * https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#focusabilityofdisabledcontrols.\n     */\n    this._skipPredicateFn = _item => false;\n    /** Function to determine equivalent items. */\n    this._trackByFn = item => item;\n    /** Synchronous cache of the items to manage. */\n    this._items = [];\n    this._typeaheadSubscription = Subscription.EMPTY;\n    this._hasInitialFocused = false;\n    /** Stream that emits any time the focused item changes. */\n    this.change = new Subject();\n    // We allow for the items to be an array or Observable because, in some cases, the consumer may\n    // not have access to a QueryList of the items they want to manage (e.g. when the\n    // items aren't being collected via `ViewChildren` or `ContentChildren`).\n    if (items instanceof QueryList) {\n      this._items = items.toArray();\n      items.changes.subscribe(newItems => {\n        this._items = newItems.toArray();\n        this._typeahead?.setItems(this._items);\n        this._updateActiveItemIndex(this._items);\n        this._initializeFocus();\n      });\n    } else if (isObservable(items)) {\n      items.subscribe(newItems => {\n        this._items = newItems;\n        this._typeahead?.setItems(newItems);\n        this._updateActiveItemIndex(newItems);\n        this._initializeFocus();\n      });\n    } else {\n      this._items = items;\n      this._initializeFocus();\n    }\n    if (typeof config.shouldActivationFollowFocus === 'boolean') {\n      this._shouldActivationFollowFocus = config.shouldActivationFollowFocus;\n    }\n    if (config.horizontalOrientation) {\n      this._horizontalOrientation = config.horizontalOrientation;\n    }\n    if (config.skipPredicate) {\n      this._skipPredicateFn = config.skipPredicate;\n    }\n    if (config.trackBy) {\n      this._trackByFn = config.trackBy;\n    }\n    if (typeof config.typeAheadDebounceInterval !== 'undefined') {\n      this._setTypeAhead(config.typeAheadDebounceInterval);\n    }\n  }\n  /** Cleans up the key manager. */\n  destroy() {\n    this._typeaheadSubscription.unsubscribe();\n    this._typeahead?.destroy();\n    this.change.complete();\n  }\n  /**\n   * Handles a keyboard event on the tree.\n   * @param event Keyboard event that represents the user interaction with the tree.\n   */\n  onKeydown(event) {\n    const key = event.key;\n    switch (key) {\n      case 'Tab':\n        // Return early here, in order to allow Tab to actually tab out of the tree\n        return;\n      case 'ArrowDown':\n        this._focusNextItem();\n        break;\n      case 'ArrowUp':\n        this._focusPreviousItem();\n        break;\n      case 'ArrowRight':\n        this._horizontalOrientation === 'rtl' ? this._collapseCurrentItem() : this._expandCurrentItem();\n        break;\n      case 'ArrowLeft':\n        this._horizontalOrientation === 'rtl' ? this._expandCurrentItem() : this._collapseCurrentItem();\n        break;\n      case 'Home':\n        this._focusFirstItem();\n        break;\n      case 'End':\n        this._focusLastItem();\n        break;\n      case 'Enter':\n      case ' ':\n        this._activateCurrentItem();\n        break;\n      default:\n        if (event.key === '*') {\n          this._expandAllItemsAtCurrentItemLevel();\n          break;\n        }\n        this._typeahead?.handleKey(event);\n        // Return here, in order to avoid preventing the default action of non-navigational\n        // keys or resetting the buffer of pressed letters.\n        return;\n    }\n    // Reset the typeahead since the user has used a navigational key.\n    this._typeahead?.reset();\n    event.preventDefault();\n  }\n  /** Index of the currently active item. */\n  getActiveItemIndex() {\n    return this._activeItemIndex;\n  }\n  /** The currently active item. */\n  getActiveItem() {\n    return this._activeItem;\n  }\n  /** Focus the first available item. */\n  _focusFirstItem() {\n    this.focusItem(this._findNextAvailableItemIndex(-1));\n  }\n  /** Focus the last available item. */\n  _focusLastItem() {\n    this.focusItem(this._findPreviousAvailableItemIndex(this._items.length));\n  }\n  /** Focus the next available item. */\n  _focusNextItem() {\n    this.focusItem(this._findNextAvailableItemIndex(this._activeItemIndex));\n  }\n  /** Focus the previous available item. */\n  _focusPreviousItem() {\n    this.focusItem(this._findPreviousAvailableItemIndex(this._activeItemIndex));\n  }\n  focusItem(itemOrIndex, options = {}) {\n    // Set default options\n    options.emitChangeEvent ??= true;\n    let index = typeof itemOrIndex === 'number' ? itemOrIndex : this._items.findIndex(item => this._trackByFn(item) === this._trackByFn(itemOrIndex));\n    if (index < 0 || index >= this._items.length) {\n      return;\n    }\n    const activeItem = this._items[index];\n    // If we're just setting the same item, don't re-call activate or focus\n    if (this._activeItem !== null && this._trackByFn(activeItem) === this._trackByFn(this._activeItem)) {\n      return;\n    }\n    const previousActiveItem = this._activeItem;\n    this._activeItem = activeItem ?? null;\n    this._activeItemIndex = index;\n    this._typeahead?.setCurrentSelectedItemIndex(index);\n    this._activeItem?.focus();\n    previousActiveItem?.unfocus();\n    if (options.emitChangeEvent) {\n      this.change.next(this._activeItem);\n    }\n    if (this._shouldActivationFollowFocus) {\n      this._activateCurrentItem();\n    }\n  }\n  _updateActiveItemIndex(newItems) {\n    const activeItem = this._activeItem;\n    if (!activeItem) {\n      return;\n    }\n    const newIndex = newItems.findIndex(item => this._trackByFn(item) === this._trackByFn(activeItem));\n    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n      this._activeItemIndex = newIndex;\n      this._typeahead?.setCurrentSelectedItemIndex(newIndex);\n    }\n  }\n  _setTypeAhead(debounceInterval) {\n    this._typeahead = new Typeahead(this._items, {\n      debounceInterval: typeof debounceInterval === 'number' ? debounceInterval : undefined,\n      skipPredicate: item => this._skipPredicateFn(item)\n    });\n    this._typeaheadSubscription = this._typeahead.selectedItem.subscribe(item => {\n      this.focusItem(item);\n    });\n  }\n  _findNextAvailableItemIndex(startingIndex) {\n    for (let i = startingIndex + 1; i < this._items.length; i++) {\n      if (!this._skipPredicateFn(this._items[i])) {\n        return i;\n      }\n    }\n    return startingIndex;\n  }\n  _findPreviousAvailableItemIndex(startingIndex) {\n    for (let i = startingIndex - 1; i >= 0; i--) {\n      if (!this._skipPredicateFn(this._items[i])) {\n        return i;\n      }\n    }\n    return startingIndex;\n  }\n  /**\n   * If the item is already expanded, we collapse the item. Otherwise, we will focus the parent.\n   */\n  _collapseCurrentItem() {\n    if (!this._activeItem) {\n      return;\n    }\n    if (this._isCurrentItemExpanded()) {\n      this._activeItem.collapse();\n    } else {\n      const parent = this._activeItem.getParent();\n      if (!parent || this._skipPredicateFn(parent)) {\n        return;\n      }\n      this.focusItem(parent);\n    }\n  }\n  /**\n   * If the item is already collapsed, we expand the item. Otherwise, we will focus the first child.\n   */\n  _expandCurrentItem() {\n    if (!this._activeItem) {\n      return;\n    }\n    if (!this._isCurrentItemExpanded()) {\n      this._activeItem.expand();\n    } else {\n      coerceObservable(this._activeItem.getChildren()).pipe(take(1)).subscribe(children => {\n        const firstChild = children.find(child => !this._skipPredicateFn(child));\n        if (!firstChild) {\n          return;\n        }\n        this.focusItem(firstChild);\n      });\n    }\n  }\n  _isCurrentItemExpanded() {\n    if (!this._activeItem) {\n      return false;\n    }\n    return typeof this._activeItem.isExpanded === 'boolean' ? this._activeItem.isExpanded : this._activeItem.isExpanded();\n  }\n  _isItemDisabled(item) {\n    return typeof item.isDisabled === 'boolean' ? item.isDisabled : item.isDisabled?.();\n  }\n  /** For all items that are the same level as the current item, we expand those items. */\n  _expandAllItemsAtCurrentItemLevel() {\n    if (!this._activeItem) {\n      return;\n    }\n    const parent = this._activeItem.getParent();\n    let itemsToExpand;\n    if (!parent) {\n      itemsToExpand = of(this._items.filter(item => item.getParent() === null));\n    } else {\n      itemsToExpand = coerceObservable(parent.getChildren());\n    }\n    itemsToExpand.pipe(take(1)).subscribe(items => {\n      for (const item of items) {\n        item.expand();\n      }\n    });\n  }\n  _activateCurrentItem() {\n    this._activeItem?.activate();\n  }\n}\n/** @docs-private */\nfunction TREE_KEY_MANAGER_FACTORY() {\n  return (items, options) => new TreeKeyManager(items, options);\n}\n/** Injection token that determines the key manager to use. */\nconst TREE_KEY_MANAGER = /*#__PURE__*/new InjectionToken('tree-key-manager', {\n  providedIn: 'root',\n  factory: TREE_KEY_MANAGER_FACTORY\n});\n/** @docs-private */\nconst TREE_KEY_MANAGER_FACTORY_PROVIDER = {\n  provide: TREE_KEY_MANAGER,\n  useFactory: TREE_KEY_MANAGER_FACTORY\n};\n\n// NoopTreeKeyManager is a \"noop\" implementation of TreeKeyMangerStrategy. Methods are noops. Does\n// not emit to streams.\n//\n// Used for applications built before TreeKeyManager to opt-out of TreeKeyManager and revert to\n// legacy behavior.\n/**\n * @docs-private\n *\n * Opt-out of Tree of key manager behavior.\n *\n * When provided, Tree has same focus management behavior as before TreeKeyManager was introduced.\n *  - Tree does not respond to keyboard interaction\n *  - Tree node allows tabindex to be set by Input binding\n *  - Tree node allows tabindex to be set by attribute binding\n *\n * @deprecated NoopTreeKeyManager deprecated. Use TreeKeyManager or inject a\n * TreeKeyManagerStrategy instead. To be removed in a future version.\n *\n * @breaking-change 21.0.0\n */\nclass NoopTreeKeyManager {\n  constructor() {\n    this._isNoopTreeKeyManager = true;\n    // Provide change as required by TreeKeyManagerStrategy. NoopTreeKeyManager is a \"noop\"\n    // implementation that does not emit to streams.\n    this.change = new Subject();\n  }\n  destroy() {\n    this.change.complete();\n  }\n  onKeydown() {\n    // noop\n  }\n  getActiveItemIndex() {\n    // Always return null. NoopTreeKeyManager is a \"noop\" implementation that does not maintain\n    // the active item.\n    return null;\n  }\n  getActiveItem() {\n    // Always return null. NoopTreeKeyManager is a \"noop\" implementation that does not maintain\n    // the active item.\n    return null;\n  }\n  focusItem() {\n    // noop\n  }\n}\n/**\n * @docs-private\n *\n * Opt-out of Tree of key manager behavior.\n *\n * When provided, Tree has same focus management behavior as before TreeKeyManager was introduced.\n *  - Tree does not respond to keyboard interaction\n *  - Tree node allows tabindex to be set by Input binding\n *  - Tree node allows tabindex to be set by attribute binding\n *\n * @deprecated NoopTreeKeyManager deprecated. Use TreeKeyManager or inject a\n * TreeKeyManagerStrategy instead. To be removed in a future version.\n *\n * @breaking-change 21.0.0\n */\nfunction NOOP_TREE_KEY_MANAGER_FACTORY() {\n  return () => new NoopTreeKeyManager();\n}\n/**\n * @docs-private\n *\n * Opt-out of Tree of key manager behavior.\n *\n * When provided, Tree has same focus management behavior as before TreeKeyManager was introduced.\n *  - Tree does not respond to keyboard interaction\n *  - Tree node allows tabindex to be set by Input binding\n *  - Tree node allows tabindex to be set by attribute binding\n *\n * @deprecated NoopTreeKeyManager deprecated. Use TreeKeyManager or inject a\n * TreeKeyManagerStrategy instead. To be removed in a future version.\n *\n * @breaking-change 21.0.0\n */\nconst NOOP_TREE_KEY_MANAGER_FACTORY_PROVIDER = {\n  provide: TREE_KEY_MANAGER,\n  useFactory: NOOP_TREE_KEY_MANAGER_FACTORY\n};\n\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n  constructor() {\n    /**\n     * Whether to count an element as focusable even if it is not currently visible.\n     */\n    this.ignoreVisibility = false;\n  }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether it is focusable or\n * tabbable.\n */\nlet InteractivityChecker = /*#__PURE__*/(() => {\n  class InteractivityChecker {\n    constructor(_platform) {\n      this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n      // This does not capture some cases, such as a non-form control with a disabled attribute or\n      // a form control inside of a disabled form, but should capture the most common cases.\n      return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n      return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n      // Nothing is tabbable on the server 😎\n      if (!this._platform.isBrowser) {\n        return false;\n      }\n      const frameElement = getFrameElement(getWindow(element));\n      if (frameElement) {\n        // Frame elements inherit their tabindex onto all child elements.\n        if (getTabIndexValue(frameElement) === -1) {\n          return false;\n        }\n        // Browsers disable tabbing to an element inside of an invisible frame.\n        if (!this.isVisible(frameElement)) {\n          return false;\n        }\n      }\n      let nodeName = element.nodeName.toLowerCase();\n      let tabIndexValue = getTabIndexValue(element);\n      if (element.hasAttribute('contenteditable')) {\n        return tabIndexValue !== -1;\n      }\n      if (nodeName === 'iframe' || nodeName === 'object') {\n        // The frame or object's content may be tabbable depending on the content, but it's\n        // not possibly to reliably detect the content of the frames. We always consider such\n        // elements as non-tabbable.\n        return false;\n      }\n      // In iOS, the browser only considers some specific elements as tabbable.\n      if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n        return false;\n      }\n      if (nodeName === 'audio') {\n        // Audio elements without controls enabled are never tabbable, regardless\n        // of the tabindex attribute explicitly being set.\n        if (!element.hasAttribute('controls')) {\n          return false;\n        }\n        // Audio elements with controls are by default tabbable unless the\n        // tabindex attribute is set to `-1` explicitly.\n        return tabIndexValue !== -1;\n      }\n      if (nodeName === 'video') {\n        // For all video elements, if the tabindex attribute is set to `-1`, the video\n        // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n        // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n        // tabindex attribute is the source of truth here.\n        if (tabIndexValue === -1) {\n          return false;\n        }\n        // If the tabindex is explicitly set, and not `-1` (as per check before), the\n        // video element is always tabbable (regardless of whether it has controls or not).\n        if (tabIndexValue !== null) {\n          return true;\n        }\n        // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n        // has controls enabled. Firefox is special as videos are always tabbable regardless\n        // of whether there are controls or not.\n        return this._platform.FIREFOX || element.hasAttribute('controls');\n      }\n      return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n      // Perform checks in order of left to most expensive.\n      // Again, naive approach that does not capture many edge cases and browser quirks.\n      return isPotentiallyFocusable(element) && !this.isDisabled(element) && (config?.ignoreVisibility || this.isVisible(element));\n    }\n    static {\n      this.ɵfac = function InteractivityChecker_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || InteractivityChecker)(i0.ɵɵinject(i1.Platform));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: InteractivityChecker,\n        factory: InteractivityChecker.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return InteractivityChecker;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n  try {\n    return window.frameElement;\n  } catch {\n    return null;\n  }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n  // Use logic from jQuery to check for an invisible element.\n  // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n  return !!(element.offsetWidth || element.offsetHeight || typeof element.getClientRects === 'function' && element.getClientRects().length);\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n  let nodeName = element.nodeName.toLowerCase();\n  return nodeName === 'input' || nodeName === 'select' || nodeName === 'button' || nodeName === 'textarea';\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n  return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n  return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n  return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n  return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n  if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n    return false;\n  }\n  let tabIndex = element.getAttribute('tabindex');\n  return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n  if (!hasValidTabIndex(element)) {\n    return null;\n  }\n  // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n  const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n  return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n  let nodeName = element.nodeName.toLowerCase();\n  let inputType = nodeName === 'input' && element.type;\n  return inputType === 'text' || inputType === 'password' || nodeName === 'select' || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n  // Inputs are potentially focusable *unless* they're type=\"hidden\".\n  if (isHiddenInput(element)) {\n    return false;\n  }\n  return isNativeFormElement(element) || isAnchorWithHref(element) || element.hasAttribute('contenteditable') || hasValidTabIndex(element);\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n  // ownerDocument is null if `node` itself *is* a document.\n  return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n */\nclass FocusTrap {\n  /** Whether the focus trap is active. */\n  get enabled() {\n    return this._enabled;\n  }\n  set enabled(value) {\n    this._enabled = value;\n    if (this._startAnchor && this._endAnchor) {\n      this._toggleAnchorTabIndex(value, this._startAnchor);\n      this._toggleAnchorTabIndex(value, this._endAnchor);\n    }\n  }\n  constructor(_element, _checker, _ngZone, _document, deferAnchors = false, /** @breaking-change 20.0.0 param to become required */\n  _injector) {\n    this._element = _element;\n    this._checker = _checker;\n    this._ngZone = _ngZone;\n    this._document = _document;\n    this._injector = _injector;\n    this._hasAttached = false;\n    // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n    this.startAnchorListener = () => this.focusLastTabbableElement();\n    this.endAnchorListener = () => this.focusFirstTabbableElement();\n    this._enabled = true;\n    if (!deferAnchors) {\n      this.attachAnchors();\n    }\n  }\n  /** Destroys the focus trap by cleaning up the anchors. */\n  destroy() {\n    const startAnchor = this._startAnchor;\n    const endAnchor = this._endAnchor;\n    if (startAnchor) {\n      startAnchor.removeEventListener('focus', this.startAnchorListener);\n      startAnchor.remove();\n    }\n    if (endAnchor) {\n      endAnchor.removeEventListener('focus', this.endAnchorListener);\n      endAnchor.remove();\n    }\n    this._startAnchor = this._endAnchor = null;\n    this._hasAttached = false;\n  }\n  /**\n   * Inserts the anchors into the DOM. This is usually done automatically\n   * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n   * @returns Whether the focus trap managed to attach successfully. This may not be the case\n   * if the target element isn't currently in the DOM.\n   */\n  attachAnchors() {\n    // If we're not on the browser, there can be no focus to trap.\n    if (this._hasAttached) {\n      return true;\n    }\n    this._ngZone.runOutsideAngular(() => {\n      if (!this._startAnchor) {\n        this._startAnchor = this._createAnchor();\n        this._startAnchor.addEventListener('focus', this.startAnchorListener);\n      }\n      if (!this._endAnchor) {\n        this._endAnchor = this._createAnchor();\n        this._endAnchor.addEventListener('focus', this.endAnchorListener);\n      }\n    });\n    if (this._element.parentNode) {\n      this._element.parentNode.insertBefore(this._startAnchor, this._element);\n      this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n      this._hasAttached = true;\n    }\n    return this._hasAttached;\n  }\n  /**\n   * Waits for the zone to stabilize, then focuses the first tabbable element.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfully.\n   */\n  focusInitialElementWhenReady(options) {\n    return new Promise(resolve => {\n      this._executeOnStable(() => resolve(this.focusInitialElement(options)));\n    });\n  }\n  /**\n   * Waits for the zone to stabilize, then focuses\n   * the first tabbable element within the focus trap region.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfully.\n   */\n  focusFirstTabbableElementWhenReady(options) {\n    return new Promise(resolve => {\n      this._executeOnStable(() => resolve(this.focusFirstTabbableElement(options)));\n    });\n  }\n  /**\n   * Waits for the zone to stabilize, then focuses\n   * the last tabbable element within the focus trap region.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfully.\n   */\n  focusLastTabbableElementWhenReady(options) {\n    return new Promise(resolve => {\n      this._executeOnStable(() => resolve(this.focusLastTabbableElement(options)));\n    });\n  }\n  /**\n   * Get the specified boundary element of the trapped region.\n   * @param bound The boundary to get (start or end of trapped region).\n   * @returns The boundary element.\n   */\n  _getRegionBoundary(bound) {\n    // Contains the deprecated version of selector, for temporary backwards comparability.\n    const markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      for (let i = 0; i < markers.length; i++) {\n        // @breaking-change 8.0.0\n        if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n          console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` + `use 'cdkFocusRegion${bound}' instead. The deprecated ` + `attribute will be removed in 8.0.0.`, markers[i]);\n        } else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n          console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` + `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` + `will be removed in 8.0.0.`, markers[i]);\n        }\n      }\n    }\n    if (bound == 'start') {\n      return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n    }\n    return markers.length ? markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n  }\n  /**\n   * Focuses the element that should be focused when the focus trap is initialized.\n   * @returns Whether focus was moved successfully.\n   */\n  focusInitialElement(options) {\n    // Contains the deprecated version of selector, for temporary backwards comparability.\n    const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);\n    if (redirectToElement) {\n      // @breaking-change 8.0.0\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n        console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` + `use 'cdkFocusInitial' instead. The deprecated attribute ` + `will be removed in 8.0.0`, redirectToElement);\n      }\n      // Warn the consumer if the element they've pointed to\n      // isn't focusable, when not in production mode.\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._checker.isFocusable(redirectToElement)) {\n        console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n      }\n      if (!this._checker.isFocusable(redirectToElement)) {\n        const focusableChild = this._getFirstTabbableElement(redirectToElement);\n        focusableChild?.focus(options);\n        return !!focusableChild;\n      }\n      redirectToElement.focus(options);\n      return true;\n    }\n    return this.focusFirstTabbableElement(options);\n  }\n  /**\n   * Focuses the first tabbable element within the focus trap region.\n   * @returns Whether focus was moved successfully.\n   */\n  focusFirstTabbableElement(options) {\n    const redirectToElement = this._getRegionBoundary('start');\n    if (redirectToElement) {\n      redirectToElement.focus(options);\n    }\n    return !!redirectToElement;\n  }\n  /**\n   * Focuses the last tabbable element within the focus trap region.\n   * @returns Whether focus was moved successfully.\n   */\n  focusLastTabbableElement(options) {\n    const redirectToElement = this._getRegionBoundary('end');\n    if (redirectToElement) {\n      redirectToElement.focus(options);\n    }\n    return !!redirectToElement;\n  }\n  /**\n   * Checks whether the focus trap has successfully been attached.\n   */\n  hasAttached() {\n    return this._hasAttached;\n  }\n  /** Get the first tabbable element from a DOM subtree (inclusive). */\n  _getFirstTabbableElement(root) {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n    const children = root.children;\n    for (let i = 0; i < children.length; i++) {\n      const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ? this._getFirstTabbableElement(children[i]) : null;\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n    return null;\n  }\n  /** Get the last tabbable element from a DOM subtree (inclusive). */\n  _getLastTabbableElement(root) {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n    // Iterate in reverse DOM order.\n    const children = root.children;\n    for (let i = children.length - 1; i >= 0; i--) {\n      const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ? this._getLastTabbableElement(children[i]) : null;\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n    return null;\n  }\n  /** Creates an anchor element. */\n  _createAnchor() {\n    const anchor = this._document.createElement('div');\n    this._toggleAnchorTabIndex(this._enabled, anchor);\n    anchor.classList.add('cdk-visually-hidden');\n    anchor.classList.add('cdk-focus-trap-anchor');\n    anchor.setAttribute('aria-hidden', 'true');\n    return anchor;\n  }\n  /**\n   * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n   * @param isEnabled Whether the focus trap is enabled.\n   * @param anchor Anchor on which to toggle the tabindex.\n   */\n  _toggleAnchorTabIndex(isEnabled, anchor) {\n    // Remove the tabindex completely, rather than setting it to -1, because if the\n    // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n    isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n  }\n  /**\n   * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n   * @param enabled: Whether the anchors should trap Tab.\n   */\n  toggleAnchors(enabled) {\n    if (this._startAnchor && this._endAnchor) {\n      this._toggleAnchorTabIndex(enabled, this._startAnchor);\n      this._toggleAnchorTabIndex(enabled, this._endAnchor);\n    }\n  }\n  /** Executes a function when the zone is stable. */\n  _executeOnStable(fn) {\n    // TODO: remove this conditional when injector is required in the constructor.\n    if (this._injector) {\n      afterNextRender(fn, {\n        injector: this._injector\n      });\n    } else {\n      setTimeout(fn);\n    }\n  }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n */\nlet FocusTrapFactory = /*#__PURE__*/(() => {\n  class FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n      this._checker = _checker;\n      this._ngZone = _ngZone;\n      this._injector = inject(Injector);\n      this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n      return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements, this._injector);\n    }\n    static {\n      this.ɵfac = function FocusTrapFactory_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || FocusTrapFactory)(i0.ɵɵinject(InteractivityChecker), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: FocusTrapFactory,\n        factory: FocusTrapFactory.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return FocusTrapFactory;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Directive for trapping focus within a region. */\nlet CdkTrapFocus = /*#__PURE__*/(() => {\n  class CdkTrapFocus {\n    /** Whether the focus trap is active. */\n    get enabled() {\n      return this.focusTrap?.enabled || false;\n    }\n    set enabled(value) {\n      if (this.focusTrap) {\n        this.focusTrap.enabled = value;\n      }\n    }\n    constructor(_elementRef, _focusTrapFactory,\n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n      this._elementRef = _elementRef;\n      this._focusTrapFactory = _focusTrapFactory;\n      /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n      this._previouslyFocusedElement = null;\n      const platform = inject(Platform);\n      if (platform.isBrowser) {\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n      }\n    }\n    ngOnDestroy() {\n      this.focusTrap?.destroy();\n      // If we stored a previously focused element when using autoCapture, return focus to that\n      // element now that the trapped region is being destroyed.\n      if (this._previouslyFocusedElement) {\n        this._previouslyFocusedElement.focus();\n        this._previouslyFocusedElement = null;\n      }\n    }\n    ngAfterContentInit() {\n      this.focusTrap?.attachAnchors();\n      if (this.autoCapture) {\n        this._captureFocus();\n      }\n    }\n    ngDoCheck() {\n      if (this.focusTrap && !this.focusTrap.hasAttached()) {\n        this.focusTrap.attachAnchors();\n      }\n    }\n    ngOnChanges(changes) {\n      const autoCaptureChange = changes['autoCapture'];\n      if (autoCaptureChange && !autoCaptureChange.firstChange && this.autoCapture && this.focusTrap?.hasAttached()) {\n        this._captureFocus();\n      }\n    }\n    _captureFocus() {\n      this._previouslyFocusedElement = _getFocusedElementPierceShadowDom();\n      this.focusTrap?.focusInitialElementWhenReady();\n    }\n    static {\n      this.ɵfac = function CdkTrapFocus_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkTrapFocus)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(FocusTrapFactory), i0.ɵɵdirectiveInject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkTrapFocus,\n        selectors: [[\"\", \"cdkTrapFocus\", \"\"]],\n        inputs: {\n          enabled: [2, \"cdkTrapFocus\", \"enabled\", booleanAttribute],\n          autoCapture: [2, \"cdkTrapFocusAutoCapture\", \"autoCapture\", booleanAttribute]\n        },\n        exportAs: [\"cdkTrapFocus\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return CdkTrapFocus;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n  /** Whether the FocusTrap is enabled. */\n  get enabled() {\n    return this._enabled;\n  }\n  set enabled(value) {\n    this._enabled = value;\n    if (this._enabled) {\n      this._focusTrapManager.register(this);\n    } else {\n      this._focusTrapManager.deregister(this);\n    }\n  }\n  constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config, injector) {\n    super(_element, _checker, _ngZone, _document, config.defer, injector);\n    this._focusTrapManager = _focusTrapManager;\n    this._inertStrategy = _inertStrategy;\n    this._focusTrapManager.register(this);\n  }\n  /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n  destroy() {\n    this._focusTrapManager.deregister(this);\n    super.destroy();\n  }\n  /** @docs-private Implemented as part of ManagedFocusTrap. */\n  _enable() {\n    this._inertStrategy.preventFocus(this);\n    this.toggleAnchors(true);\n  }\n  /** @docs-private Implemented as part of ManagedFocusTrap. */\n  _disable() {\n    this._inertStrategy.allowFocus(this);\n    this.toggleAnchors(false);\n  }\n}\n\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n  constructor() {\n    /** Focus event handler. */\n    this._listener = null;\n  }\n  /** Adds a document event listener that keeps focus inside the FocusTrap. */\n  preventFocus(focusTrap) {\n    // Ensure there's only one listener per document\n    if (this._listener) {\n      focusTrap._document.removeEventListener('focus', this._listener, true);\n    }\n    this._listener = e => this._trapFocus(focusTrap, e);\n    focusTrap._ngZone.runOutsideAngular(() => {\n      focusTrap._document.addEventListener('focus', this._listener, true);\n    });\n  }\n  /** Removes the event listener added in preventFocus. */\n  allowFocus(focusTrap) {\n    if (!this._listener) {\n      return;\n    }\n    focusTrap._document.removeEventListener('focus', this._listener, true);\n    this._listener = null;\n  }\n  /**\n   * Refocuses the first element in the FocusTrap if the focus event target was outside\n   * the FocusTrap.\n   *\n   * This is an event listener callback. The event listener is added in runOutsideAngular,\n   * so all this code runs outside Angular as well.\n   */\n  _trapFocus(focusTrap, event) {\n    const target = event.target;\n    const focusTrapRoot = focusTrap._element;\n    // Don't refocus if target was in an overlay, because the overlay might be associated\n    // with an element inside the FocusTrap, ex. mat-select.\n    if (target && !focusTrapRoot.contains(target) && !target.closest?.('div.cdk-overlay-pane')) {\n      // Some legacy FocusTrap usages have logic that focuses some element on the page\n      // just before FocusTrap is destroyed. For backwards compatibility, wait\n      // to be sure FocusTrap is still enabled before refocusing.\n      setTimeout(() => {\n        // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n        if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n          focusTrap.focusFirstTabbableElement();\n        }\n      });\n    }\n  }\n}\n\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = /*#__PURE__*/new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nlet FocusTrapManager = /*#__PURE__*/(() => {\n  class FocusTrapManager {\n    constructor() {\n      // A stack of the FocusTraps on the page. Only the FocusTrap at the\n      // top of the stack is active.\n      this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n      // Dedupe focusTraps that register multiple times.\n      this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n      let stack = this._focusTrapStack;\n      if (stack.length) {\n        stack[stack.length - 1]._disable();\n      }\n      stack.push(focusTrap);\n      focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n      focusTrap._disable();\n      const stack = this._focusTrapStack;\n      const i = stack.indexOf(focusTrap);\n      if (i !== -1) {\n        stack.splice(i, 1);\n        if (stack.length) {\n          stack[stack.length - 1]._enable();\n        }\n      }\n    }\n    static {\n      this.ɵfac = function FocusTrapManager_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || FocusTrapManager)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: FocusTrapManager,\n        factory: FocusTrapManager.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return FocusTrapManager;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Factory that allows easy instantiation of configurable focus traps. */\nlet ConfigurableFocusTrapFactory = /*#__PURE__*/(() => {\n  class ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n      this._checker = _checker;\n      this._ngZone = _ngZone;\n      this._focusTrapManager = _focusTrapManager;\n      this._injector = inject(Injector);\n      this._document = _document;\n      // TODO split up the strategies into different modules, similar to DateAdapter.\n      this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = {\n      defer: false\n    }) {\n      let configObject;\n      if (typeof config === 'boolean') {\n        configObject = {\n          defer: config\n        };\n      } else {\n        configObject = config;\n      }\n      return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject, this._injector);\n    }\n    static {\n      this.ɵfac = function ConfigurableFocusTrapFactory_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ConfigurableFocusTrapFactory)(i0.ɵɵinject(InteractivityChecker), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(FocusTrapManager), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ConfigurableFocusTrapFactory,\n        factory: ConfigurableFocusTrapFactory.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ConfigurableFocusTrapFactory;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n  // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n  // a clickable element. We can distinguish these events when `event.buttons` is zero, or\n  // `event.detail` is zero depending on the browser:\n  // - `event.buttons` works on Firefox, but fails on Chrome.\n  // - `detail` works on Chrome, but fails on Firefox.\n  return event.buttons === 0 || event.detail === 0;\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n  const touch = event.touches && event.touches[0] || event.changedTouches && event.changedTouches[0];\n  // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n  // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n  // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n  // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n  return !!touch && touch.identifier === -1 && (touch.radiusX == null || touch.radiusX === 1) && (touch.radiusY == null || touch.radiusY === 1);\n}\n\n/**\n * Injectable options for the InputModalityDetector. These are shallowly merged with the default\n * options.\n */\nconst INPUT_MODALITY_DETECTOR_OPTIONS = /*#__PURE__*/new InjectionToken('cdk-input-modality-detector-options');\n/**\n * Default options for the InputModalityDetector.\n *\n * Modifier keys are ignored by default (i.e. when pressed won't cause the service to detect\n * keyboard input modality) for two reasons:\n *\n * 1. Modifier keys are commonly used with mouse to perform actions such as 'right click' or 'open\n *    in new tab', and are thus less representative of actual keyboard interaction.\n * 2. VoiceOver triggers some keyboard events when linearly navigating with Control + Option (but\n *    confusingly not with Caps Lock). Thus, to have parity with other screen readers, we ignore\n *    these keys so as to not update the input modality.\n *\n * Note that we do not by default ignore the right Meta key on Safari because it has the same key\n * code as the ContextMenu key on other browsers. When we switch to using event.key, we can\n * distinguish between the two.\n */\nconst INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS = {\n  ignoreKeys: [ALT, CONTROL, MAC_META, META, SHIFT]\n};\n/**\n * The amount of time needed to pass after a touchstart event in order for a subsequent mousedown\n * event to be attributed as mouse and not touch.\n *\n * This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n * that a value of around 650ms seems appropriate.\n */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also mark the listener as passive if the browser\n * supports it.\n */\nconst modalityEventListenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/**\n * Service that detects the user's input modality.\n *\n * This service does not update the input modality when a user navigates with a screen reader\n * (e.g. linear navigation with VoiceOver, object navigation / browse mode with NVDA, virtual PC\n * cursor mode with JAWS). This is in part due to technical limitations (i.e. keyboard events do not\n * fire as expected in these modes) but is also arguably the correct behavior. Navigating with a\n * screen reader is akin to visually scanning a page, and should not be interpreted as actual user\n * input interaction.\n *\n * When a user is not navigating but *interacting* with a screen reader, this service attempts to\n * update the input modality to keyboard, but in general this service's behavior is largely\n * undefined.\n */\nlet InputModalityDetector = /*#__PURE__*/(() => {\n  class InputModalityDetector {\n    /** The most recently detected input modality. */\n    get mostRecentModality() {\n      return this._modality.value;\n    }\n    constructor(_platform, ngZone, document, options) {\n      this._platform = _platform;\n      /**\n       * The most recently detected input modality event target. Is null if no input modality has been\n       * detected or if the associated event target is null for some unknown reason.\n       */\n      this._mostRecentTarget = null;\n      /** The underlying BehaviorSubject that emits whenever an input modality is detected. */\n      this._modality = new BehaviorSubject(null);\n      /**\n       * The timestamp of the last touch input modality. Used to determine whether mousedown events\n       * should be attributed to mouse or touch.\n       */\n      this._lastTouchMs = 0;\n      /**\n       * Handles keydown events. Must be an arrow function in order to preserve the context when it gets\n       * bound.\n       */\n      this._onKeydown = event => {\n        // If this is one of the keys we should ignore, then ignore it and don't update the input\n        // modality to keyboard.\n        if (this._options?.ignoreKeys?.some(keyCode => keyCode === event.keyCode)) {\n          return;\n        }\n        this._modality.next('keyboard');\n        this._mostRecentTarget = _getEventTarget(event);\n      };\n      /**\n       * Handles mousedown events. Must be an arrow function in order to preserve the context when it\n       * gets bound.\n       */\n      this._onMousedown = event => {\n        // Touches trigger both touch and mouse events, so we need to distinguish between mouse events\n        // that were triggered via mouse vs touch. To do so, check if the mouse event occurs closely\n        // after the previous touch event.\n        if (Date.now() - this._lastTouchMs < TOUCH_BUFFER_MS) {\n          return;\n        }\n        // Fake mousedown events are fired by some screen readers when controls are activated by the\n        // screen reader. Attribute them to keyboard input modality.\n        this._modality.next(isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse');\n        this._mostRecentTarget = _getEventTarget(event);\n      };\n      /**\n       * Handles touchstart events. Must be an arrow function in order to preserve the context when it\n       * gets bound.\n       */\n      this._onTouchstart = event => {\n        // Same scenario as mentioned in _onMousedown, but on touch screen devices, fake touchstart\n        // events are fired. Again, attribute to keyboard input modality.\n        if (isFakeTouchstartFromScreenReader(event)) {\n          this._modality.next('keyboard');\n          return;\n        }\n        // Store the timestamp of this touch event, as it's used to distinguish between mouse events\n        // triggered via mouse vs touch.\n        this._lastTouchMs = Date.now();\n        this._modality.next('touch');\n        this._mostRecentTarget = _getEventTarget(event);\n      };\n      this._options = {\n        ...INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS,\n        ...options\n      };\n      // Skip the first emission as it's null.\n      this.modalityDetected = this._modality.pipe(skip(1));\n      this.modalityChanged = this.modalityDetected.pipe(distinctUntilChanged());\n      // If we're not in a browser, this service should do nothing, as there's no relevant input\n      // modality to detect.\n      if (_platform.isBrowser) {\n        ngZone.runOutsideAngular(() => {\n          document.addEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n          document.addEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n          document.addEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n        });\n      }\n    }\n    ngOnDestroy() {\n      this._modality.complete();\n      if (this._platform.isBrowser) {\n        document.removeEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n        document.removeEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n        document.removeEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n      }\n    }\n    static {\n      this.ɵfac = function InputModalityDetector_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || InputModalityDetector)(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(INPUT_MODALITY_DETECTOR_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: InputModalityDetector,\n        factory: InputModalityDetector.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return InputModalityDetector;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = /*#__PURE__*/new InjectionToken('liveAnnouncerElement', {\n  providedIn: 'root',\n  factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n  return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\nlet uniqueIds = 0;\nlet LiveAnnouncer = /*#__PURE__*/(() => {\n  class LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n      this._ngZone = _ngZone;\n      this._defaultOptions = _defaultOptions;\n      // We inject the live element and document as `any` because the constructor signature cannot\n      // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n      // a class decorator causes TypeScript to preserve the constructor signature types.\n      this._document = _document;\n      this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n      const defaultOptions = this._defaultOptions;\n      let politeness;\n      let duration;\n      if (args.length === 1 && typeof args[0] === 'number') {\n        duration = args[0];\n      } else {\n        [politeness, duration] = args;\n      }\n      this.clear();\n      clearTimeout(this._previousTimeout);\n      if (!politeness) {\n        politeness = defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';\n      }\n      if (duration == null && defaultOptions) {\n        duration = defaultOptions.duration;\n      }\n      // TODO: ensure changing the politeness works on all environments we support.\n      this._liveElement.setAttribute('aria-live', politeness);\n      if (this._liveElement.id) {\n        this._exposeAnnouncerToModals(this._liveElement.id);\n      }\n      // This 100ms timeout is necessary for some browser + screen-reader combinations:\n      // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n      // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n      //   second time without clearing and then using a non-zero delay.\n      // (using JAWS 17 at time of this writing).\n      return this._ngZone.runOutsideAngular(() => {\n        if (!this._currentPromise) {\n          this._currentPromise = new Promise(resolve => this._currentResolve = resolve);\n        }\n        clearTimeout(this._previousTimeout);\n        this._previousTimeout = setTimeout(() => {\n          this._liveElement.textContent = message;\n          if (typeof duration === 'number') {\n            this._previousTimeout = setTimeout(() => this.clear(), duration);\n          }\n          // For some reason in tests this can be undefined\n          // Probably related to ZoneJS and every other thing that patches browser APIs in tests\n          this._currentResolve?.();\n          this._currentPromise = this._currentResolve = undefined;\n        }, 100);\n        return this._currentPromise;\n      });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n      if (this._liveElement) {\n        this._liveElement.textContent = '';\n      }\n    }\n    ngOnDestroy() {\n      clearTimeout(this._previousTimeout);\n      this._liveElement?.remove();\n      this._liveElement = null;\n      this._currentResolve?.();\n      this._currentPromise = this._currentResolve = undefined;\n    }\n    _createLiveElement() {\n      const elementClass = 'cdk-live-announcer-element';\n      const previousElements = this._document.getElementsByClassName(elementClass);\n      const liveEl = this._document.createElement('div');\n      // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n      for (let i = 0; i < previousElements.length; i++) {\n        previousElements[i].remove();\n      }\n      liveEl.classList.add(elementClass);\n      liveEl.classList.add('cdk-visually-hidden');\n      liveEl.setAttribute('aria-atomic', 'true');\n      liveEl.setAttribute('aria-live', 'polite');\n      liveEl.id = `cdk-live-announcer-${uniqueIds++}`;\n      this._document.body.appendChild(liveEl);\n      return liveEl;\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live announcer element if there is an\n     * `aria-modal` and the live announcer is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live announcer element.\n     */\n    _exposeAnnouncerToModals(id) {\n      // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n      // the `SnakBarContainer` and other usages.\n      //\n      // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n      // section of the DOM we need to look through. This should cover all the cases we support, but\n      // the selector can be expanded if it turns out to be too narrow.\n      const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n      for (let i = 0; i < modals.length; i++) {\n        const modal = modals[i];\n        const ariaOwns = modal.getAttribute('aria-owns');\n        if (!ariaOwns) {\n          modal.setAttribute('aria-owns', id);\n        } else if (ariaOwns.indexOf(id) === -1) {\n          modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n        }\n      }\n    }\n    static {\n      this.ɵfac = function LiveAnnouncer_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LiveAnnouncer)(i0.ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: LiveAnnouncer,\n        factory: LiveAnnouncer.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return LiveAnnouncer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nlet CdkAriaLive = /*#__PURE__*/(() => {\n  class CdkAriaLive {\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() {\n      return this._politeness;\n    }\n    set politeness(value) {\n      this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n      if (this._politeness === 'off') {\n        if (this._subscription) {\n          this._subscription.unsubscribe();\n          this._subscription = null;\n        }\n      } else if (!this._subscription) {\n        this._subscription = this._ngZone.runOutsideAngular(() => {\n          return this._contentObserver.observe(this._elementRef).subscribe(() => {\n            // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n            const elementText = this._elementRef.nativeElement.textContent;\n            // The `MutationObserver` fires also for attribute\n            // changes which we don't want to announce.\n            if (elementText !== this._previousAnnouncedText) {\n              this._liveAnnouncer.announce(elementText, this._politeness, this.duration);\n              this._previousAnnouncedText = elementText;\n            }\n          });\n        });\n      }\n    }\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n      this._elementRef = _elementRef;\n      this._liveAnnouncer = _liveAnnouncer;\n      this._contentObserver = _contentObserver;\n      this._ngZone = _ngZone;\n      this._politeness = 'polite';\n    }\n    ngOnDestroy() {\n      if (this._subscription) {\n        this._subscription.unsubscribe();\n      }\n    }\n    static {\n      this.ɵfac = function CdkAriaLive_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkAriaLive)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(LiveAnnouncer), i0.ɵɵdirectiveInject(i1$1.ContentObserver), i0.ɵɵdirectiveInject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkAriaLive,\n        selectors: [[\"\", \"cdkAriaLive\", \"\"]],\n        inputs: {\n          politeness: [0, \"cdkAriaLive\", \"politeness\"],\n          duration: [0, \"cdkAriaLiveDuration\", \"duration\"]\n        },\n        exportAs: [\"cdkAriaLive\"],\n        standalone: true\n      });\n    }\n  }\n  return CdkAriaLive;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Detection mode used for attributing the origin of a focus event. */\nvar FocusMonitorDetectionMode = /*#__PURE__*/function (FocusMonitorDetectionMode) {\n  /**\n   * Any mousedown, keydown, or touchstart event that happened in the previous\n   * tick or the current tick will be used to assign a focus event's origin (to\n   * either mouse, keyboard, or touch). This is the default option.\n   */\n  FocusMonitorDetectionMode[FocusMonitorDetectionMode[\"IMMEDIATE\"] = 0] = \"IMMEDIATE\";\n  /**\n   * A focus event's origin is always attributed to the last corresponding\n   * mousedown, keydown, or touchstart event, no matter how long ago it occurred.\n   */\n  FocusMonitorDetectionMode[FocusMonitorDetectionMode[\"EVENTUAL\"] = 1] = \"EVENTUAL\";\n  return FocusMonitorDetectionMode;\n}(FocusMonitorDetectionMode || {});\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nlet FocusMonitor = /*#__PURE__*/(() => {\n  class FocusMonitor {\n    constructor(_ngZone, _platform, _inputModalityDetector, /** @breaking-change 11.0.0 make document required */\n    document, options) {\n      this._ngZone = _ngZone;\n      this._platform = _platform;\n      this._inputModalityDetector = _inputModalityDetector;\n      /** The focus origin that the next focus event is a result of. */\n      this._origin = null;\n      /** Whether the window has just been focused. */\n      this._windowFocused = false;\n      /**\n       * Whether the origin was determined via a touch interaction. Necessary as properly attributing\n       * focus events to touch interactions requires special logic.\n       */\n      this._originFromTouchInteraction = false;\n      /** Map of elements being monitored to their info. */\n      this._elementInfo = new Map();\n      /** The number of elements currently being monitored. */\n      this._monitoredElementCount = 0;\n      /**\n       * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n       * as well as the number of monitored elements that they contain. We have to treat focus/blur\n       * handlers differently from the rest of the events, because the browser won't emit events\n       * to the document when focus moves inside of a shadow root.\n       */\n      this._rootNodeFocusListenerCount = new Map();\n      /**\n       * Event listener for `focus` events on the window.\n       * Needs to be an arrow function in order to preserve the context when it gets bound.\n       */\n      this._windowFocusListener = () => {\n        // Make a note of when the window regains focus, so we can\n        // restore the origin info for the focused element.\n        this._windowFocused = true;\n        this._windowFocusTimeoutId = window.setTimeout(() => this._windowFocused = false);\n      };\n      /** Subject for stopping our InputModalityDetector subscription. */\n      this._stopInputModalityDetector = new Subject();\n      /**\n       * Event listener for `focus` and 'blur' events on the document.\n       * Needs to be an arrow function in order to preserve the context when it gets bound.\n       */\n      this._rootNodeFocusAndBlurListener = event => {\n        const target = _getEventTarget(event);\n        // We need to walk up the ancestor chain in order to support `checkChildren`.\n        for (let element = target; element; element = element.parentElement) {\n          if (event.type === 'focus') {\n            this._onFocus(event, element);\n          } else {\n            this._onBlur(event, element);\n          }\n        }\n      };\n      this._document = document;\n      this._detectionMode = options?.detectionMode || FocusMonitorDetectionMode.IMMEDIATE;\n    }\n    monitor(element, checkChildren = false) {\n      const nativeElement = coerceElement(element);\n      // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n      if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n        // Note: we don't want the observable to emit at all so we don't pass any parameters.\n        return of();\n      }\n      // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n      // the shadow root, rather than the `document`, because the browser won't emit focus events\n      // to the `document`, if focus is moving within the same shadow root.\n      const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n      const cachedInfo = this._elementInfo.get(nativeElement);\n      // Check if we're already monitoring this element.\n      if (cachedInfo) {\n        if (checkChildren) {\n          // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n          // observers into ones that behave as if `checkChildren` was turned on. We need a more\n          // robust solution.\n          cachedInfo.checkChildren = true;\n        }\n        return cachedInfo.subject;\n      }\n      // Create monitored element info.\n      const info = {\n        checkChildren: checkChildren,\n        subject: new Subject(),\n        rootNode\n      };\n      this._elementInfo.set(nativeElement, info);\n      this._registerGlobalListeners(info);\n      return info.subject;\n    }\n    stopMonitoring(element) {\n      const nativeElement = coerceElement(element);\n      const elementInfo = this._elementInfo.get(nativeElement);\n      if (elementInfo) {\n        elementInfo.subject.complete();\n        this._setClasses(nativeElement);\n        this._elementInfo.delete(nativeElement);\n        this._removeGlobalListeners(elementInfo);\n      }\n    }\n    focusVia(element, origin, options) {\n      const nativeElement = coerceElement(element);\n      const focusedElement = this._getDocument().activeElement;\n      // If the element is focused already, calling `focus` again won't trigger the event listener\n      // which means that the focus classes won't be updated. If that's the case, update the classes\n      // directly without waiting for an event.\n      if (nativeElement === focusedElement) {\n        this._getClosestElementsInfo(nativeElement).forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n      } else {\n        this._setOrigin(origin);\n        // `focus` isn't available on the server\n        if (typeof nativeElement.focus === 'function') {\n          nativeElement.focus(options);\n        }\n      }\n    }\n    ngOnDestroy() {\n      this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n      return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n      const doc = this._getDocument();\n      return doc.defaultView || window;\n    }\n    _getFocusOrigin(focusEventTarget) {\n      if (this._origin) {\n        // If the origin was realized via a touch interaction, we need to perform additional checks\n        // to determine whether the focus origin should be attributed to touch or program.\n        if (this._originFromTouchInteraction) {\n          return this._shouldBeAttributedToTouch(focusEventTarget) ? 'touch' : 'program';\n        } else {\n          return this._origin;\n        }\n      }\n      // If the window has just regained focus, we can restore the most recent origin from before the\n      // window blurred. Otherwise, we've reached the point where we can't identify the source of the\n      // focus. This typically means one of two things happened:\n      //\n      // 1) The element was programmatically focused, or\n      // 2) The element was focused via screen reader navigation (which generally doesn't fire\n      //    events).\n      //\n      // Because we can't distinguish between these two cases, we default to setting `program`.\n      if (this._windowFocused && this._lastFocusOrigin) {\n        return this._lastFocusOrigin;\n      }\n      // If the interaction is coming from an input label, we consider it a mouse interactions.\n      // This is a special case where focus moves on `click`, rather than `mousedown` which breaks\n      // our detection, because all our assumptions are for `mousedown`. We need to handle this\n      // special case, because it's very common for checkboxes and radio buttons.\n      if (focusEventTarget && this._isLastInteractionFromInputLabel(focusEventTarget)) {\n        return 'mouse';\n      }\n      return 'program';\n    }\n    /**\n     * Returns whether the focus event should be attributed to touch. Recall that in IMMEDIATE mode, a\n     * touch origin isn't immediately reset at the next tick (see _setOrigin). This means that when we\n     * handle a focus event following a touch interaction, we need to determine whether (1) the focus\n     * event was directly caused by the touch interaction or (2) the focus event was caused by a\n     * subsequent programmatic focus call triggered by the touch interaction.\n     * @param focusEventTarget The target of the focus event under examination.\n     */\n    _shouldBeAttributedToTouch(focusEventTarget) {\n      // Please note that this check is not perfect. Consider the following edge case:\n      //\n      // <div #parent tabindex=\"0\">\n      //   <div #child tabindex=\"0\" (click)=\"#parent.focus()\"></div>\n      // </div>\n      //\n      // Suppose there is a FocusMonitor in IMMEDIATE mode attached to #parent. When the user touches\n      // #child, #parent is programmatically focused. This code will attribute the focus to touch\n      // instead of program. This is a relatively minor edge-case that can be worked around by using\n      // focusVia(parent, 'program') to focus #parent.\n      return this._detectionMode === FocusMonitorDetectionMode.EVENTUAL || !!focusEventTarget?.contains(this._inputModalityDetector._mostRecentTarget);\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n      element.classList.toggle('cdk-focused', !!origin);\n      element.classList.toggle('cdk-touch-focused', origin === 'touch');\n      element.classList.toggle('cdk-keyboard-focused', origin === 'keyboard');\n      element.classList.toggle('cdk-mouse-focused', origin === 'mouse');\n      element.classList.toggle('cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Updates the focus origin. If we're using immediate detection mode, we schedule an async\n     * function to clear the origin at the end of a timeout. The duration of the timeout depends on\n     * the origin being set.\n     * @param origin The origin to set.\n     * @param isFromInteraction Whether we are setting the origin from an interaction event.\n     */\n    _setOrigin(origin, isFromInteraction = false) {\n      this._ngZone.runOutsideAngular(() => {\n        this._origin = origin;\n        this._originFromTouchInteraction = origin === 'touch' && isFromInteraction;\n        // If we're in IMMEDIATE mode, reset the origin at the next tick (or in `TOUCH_BUFFER_MS` ms\n        // for a touch event). We reset the origin at the next tick because Firefox focuses one tick\n        // after the interaction event. We wait `TOUCH_BUFFER_MS` ms before resetting the origin for\n        // a touch event because when a touch event is fired, the associated focus event isn't yet in\n        // the event queue. Before doing so, clear any pending timeouts.\n        if (this._detectionMode === FocusMonitorDetectionMode.IMMEDIATE) {\n          clearTimeout(this._originTimeoutId);\n          const ms = this._originFromTouchInteraction ? TOUCH_BUFFER_MS : 1;\n          this._originTimeoutId = setTimeout(() => this._origin = null, ms);\n        }\n      });\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n      // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n      // focus event affecting the monitored element. If we want to use the origin of the first event\n      // instead we should check for the cdk-focused class here and return if the element already has\n      // it. (This only matters for elements that have includesChildren = true).\n      // If we are not counting child-element-focus as focused, make sure that the event target is the\n      // monitored element itself.\n      const elementInfo = this._elementInfo.get(element);\n      const focusEventTarget = _getEventTarget(event);\n      if (!elementInfo || !elementInfo.checkChildren && element !== focusEventTarget) {\n        return;\n      }\n      this._originChanged(element, this._getFocusOrigin(focusEventTarget), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n      // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n      // order to focus another child of the monitored element.\n      const elementInfo = this._elementInfo.get(element);\n      if (!elementInfo || elementInfo.checkChildren && event.relatedTarget instanceof Node && element.contains(event.relatedTarget)) {\n        return;\n      }\n      this._setClasses(element);\n      this._emitOrigin(elementInfo, null);\n    }\n    _emitOrigin(info, origin) {\n      if (info.subject.observers.length) {\n        this._ngZone.run(() => info.subject.next(origin));\n      }\n    }\n    _registerGlobalListeners(elementInfo) {\n      if (!this._platform.isBrowser) {\n        return;\n      }\n      const rootNode = elementInfo.rootNode;\n      const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n      if (!rootNodeFocusListeners) {\n        this._ngZone.runOutsideAngular(() => {\n          rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n          rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n        });\n      }\n      this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n      // Register global listeners when first element is monitored.\n      if (++this._monitoredElementCount === 1) {\n        // Note: we listen to events in the capture phase so we\n        // can detect them even if the user stops propagation.\n        this._ngZone.runOutsideAngular(() => {\n          const window = this._getWindow();\n          window.addEventListener('focus', this._windowFocusListener);\n        });\n        // The InputModalityDetector is also just a collection of global listeners.\n        this._inputModalityDetector.modalityDetected.pipe(takeUntil(this._stopInputModalityDetector)).subscribe(modality => {\n          this._setOrigin(modality, true /* isFromInteraction */);\n        });\n      }\n    }\n    _removeGlobalListeners(elementInfo) {\n      const rootNode = elementInfo.rootNode;\n      if (this._rootNodeFocusListenerCount.has(rootNode)) {\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n        if (rootNodeFocusListeners > 1) {\n          this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n        } else {\n          rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n          rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n          this._rootNodeFocusListenerCount.delete(rootNode);\n        }\n      }\n      // Unregister global listeners when last element is unmonitored.\n      if (! --this._monitoredElementCount) {\n        const window = this._getWindow();\n        window.removeEventListener('focus', this._windowFocusListener);\n        // Equivalently, stop our InputModalityDetector subscription.\n        this._stopInputModalityDetector.next();\n        // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n        clearTimeout(this._windowFocusTimeoutId);\n        clearTimeout(this._originTimeoutId);\n      }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n      this._setClasses(element, origin);\n      this._emitOrigin(elementInfo, origin);\n      this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n      const results = [];\n      this._elementInfo.forEach((info, currentElement) => {\n        if (currentElement === element || info.checkChildren && currentElement.contains(element)) {\n          results.push([currentElement, info]);\n        }\n      });\n      return results;\n    }\n    /**\n     * Returns whether an interaction is likely to have come from the user clicking the `label` of\n     * an `input` or `textarea` in order to focus it.\n     * @param focusEventTarget Target currently receiving focus.\n     */\n    _isLastInteractionFromInputLabel(focusEventTarget) {\n      const {\n        _mostRecentTarget: mostRecentTarget,\n        mostRecentModality\n      } = this._inputModalityDetector;\n      // If the last interaction used the mouse on an element contained by one of the labels\n      // of an `input`/`textarea` that is currently focused, it is very likely that the\n      // user redirected focus using the label.\n      if (mostRecentModality !== 'mouse' || !mostRecentTarget || mostRecentTarget === focusEventTarget || focusEventTarget.nodeName !== 'INPUT' && focusEventTarget.nodeName !== 'TEXTAREA' || focusEventTarget.disabled) {\n        return false;\n      }\n      const labels = focusEventTarget.labels;\n      if (labels) {\n        for (let i = 0; i < labels.length; i++) {\n          if (labels[i].contains(mostRecentTarget)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n    static {\n      this.ɵfac = function FocusMonitor_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || FocusMonitor)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.Platform), i0.ɵɵinject(InputModalityDetector), i0.ɵɵinject(DOCUMENT, 8), i0.ɵɵinject(FOCUS_MONITOR_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: FocusMonitor,\n        factory: FocusMonitor.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return FocusMonitor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nlet CdkMonitorFocus = /*#__PURE__*/(() => {\n  class CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n      this._elementRef = _elementRef;\n      this._focusMonitor = _focusMonitor;\n      this._focusOrigin = null;\n      this.cdkFocusChange = new EventEmitter();\n    }\n    get focusOrigin() {\n      return this._focusOrigin;\n    }\n    ngAfterViewInit() {\n      const element = this._elementRef.nativeElement;\n      this._monitorSubscription = this._focusMonitor.monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus')).subscribe(origin => {\n        this._focusOrigin = origin;\n        this.cdkFocusChange.emit(origin);\n      });\n    }\n    ngOnDestroy() {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n      if (this._monitorSubscription) {\n        this._monitorSubscription.unsubscribe();\n      }\n    }\n    static {\n      this.ɵfac = function CdkMonitorFocus_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkMonitorFocus)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(FocusMonitor));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkMonitorFocus,\n        selectors: [[\"\", \"cdkMonitorElementFocus\", \"\"], [\"\", \"cdkMonitorSubtreeFocus\", \"\"]],\n        outputs: {\n          cdkFocusChange: \"cdkFocusChange\"\n        },\n        exportAs: [\"cdkMonitorFocus\"],\n        standalone: true\n      });\n    }\n  }\n  return CdkMonitorFocus;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Set of possible high-contrast mode backgrounds. */\nvar HighContrastMode = /*#__PURE__*/function (HighContrastMode) {\n  HighContrastMode[HighContrastMode[\"NONE\"] = 0] = \"NONE\";\n  HighContrastMode[HighContrastMode[\"BLACK_ON_WHITE\"] = 1] = \"BLACK_ON_WHITE\";\n  HighContrastMode[HighContrastMode[\"WHITE_ON_BLACK\"] = 2] = \"WHITE_ON_BLACK\";\n  return HighContrastMode;\n}(HighContrastMode || {});\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nlet HighContrastModeDetector = /*#__PURE__*/(() => {\n  class HighContrastModeDetector {\n    constructor(_platform, document) {\n      this._platform = _platform;\n      this._document = document;\n      this._breakpointSubscription = inject(BreakpointObserver).observe('(forced-colors: active)').subscribe(() => {\n        if (this._hasCheckedHighContrastMode) {\n          this._hasCheckedHighContrastMode = false;\n          this._applyBodyHighContrastModeCssClasses();\n        }\n      });\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n      if (!this._platform.isBrowser) {\n        return HighContrastMode.NONE;\n      }\n      // Create a test element with an arbitrary background-color that is neither black nor\n      // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n      // appending the test element to the DOM does not affect layout by absolutely positioning it\n      const testElement = this._document.createElement('div');\n      testElement.style.backgroundColor = 'rgb(1,2,3)';\n      testElement.style.position = 'absolute';\n      this._document.body.appendChild(testElement);\n      // Get the computed style for the background color, collapsing spaces to normalize between\n      // browsers. Once we get this color, we no longer need the test element. Access the `window`\n      // via the document so we can fake it in tests. Note that we have extra null checks, because\n      // this logic will likely run during app bootstrap and throwing can break the entire app.\n      const documentWindow = this._document.defaultView || window;\n      const computedStyle = documentWindow && documentWindow.getComputedStyle ? documentWindow.getComputedStyle(testElement) : null;\n      const computedColor = (computedStyle && computedStyle.backgroundColor || '').replace(/ /g, '');\n      testElement.remove();\n      switch (computedColor) {\n        // Pre Windows 11 dark theme.\n        case 'rgb(0,0,0)':\n        // Windows 11 dark themes.\n        case 'rgb(45,50,54)':\n        case 'rgb(32,32,32)':\n          return HighContrastMode.WHITE_ON_BLACK;\n        // Pre Windows 11 light theme.\n        case 'rgb(255,255,255)':\n        // Windows 11 light theme.\n        case 'rgb(255,250,239)':\n          return HighContrastMode.BLACK_ON_WHITE;\n      }\n      return HighContrastMode.NONE;\n    }\n    ngOnDestroy() {\n      this._breakpointSubscription.unsubscribe();\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n      if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {\n        const bodyClasses = this._document.body.classList;\n        bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n        this._hasCheckedHighContrastMode = true;\n        const mode = this.getHighContrastMode();\n        if (mode === HighContrastMode.BLACK_ON_WHITE) {\n          bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS);\n        } else if (mode === HighContrastMode.WHITE_ON_BLACK) {\n          bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n        }\n      }\n    }\n    static {\n      this.ɵfac = function HighContrastModeDetector_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || HighContrastModeDetector)(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: HighContrastModeDetector,\n        factory: HighContrastModeDetector.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return HighContrastModeDetector;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet A11yModule = /*#__PURE__*/(() => {\n  class A11yModule {\n    constructor(highContrastModeDetector) {\n      highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n    static {\n      this.ɵfac = function A11yModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || A11yModule)(i0.ɵɵinject(HighContrastModeDetector));\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: A11yModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ObserversModule]\n      });\n    }\n  }\n  return A11yModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusMonitorDetectionMode, FocusTrap, FocusTrapFactory, HighContrastMode, HighContrastModeDetector, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, INPUT_MODALITY_DETECTOR_OPTIONS, InputModalityDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, NOOP_TREE_KEY_MANAGER_FACTORY, NOOP_TREE_KEY_MANAGER_FACTORY_PROVIDER, NoopTreeKeyManager, TREE_KEY_MANAGER, TREE_KEY_MANAGER_FACTORY, TREE_KEY_MANAGER_FACTORY_PROVIDER, TreeKeyManager, addAriaReferencedId, getAriaReferenceIds, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader, removeAriaReferencedId };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = /*#__PURE__*/new InjectionToken('cdk-dir-doc', {\n  providedIn: 'root',\n  factory: DIR_DOCUMENT_FACTORY\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n  return inject(DOCUMENT);\n}\n\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n  const value = rawValue?.toLowerCase() || '';\n  if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n    return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n  }\n  return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nlet Directionality = /*#__PURE__*/(() => {\n  class Directionality {\n    constructor(_document) {\n      /** The current 'ltr' or 'rtl' value. */\n      this.value = 'ltr';\n      /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n      this.change = new EventEmitter();\n      if (_document) {\n        const bodyDir = _document.body ? _document.body.dir : null;\n        const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n        this.value = _resolveDirectionality(bodyDir || htmlDir || 'ltr');\n      }\n    }\n    ngOnDestroy() {\n      this.change.complete();\n    }\n    static {\n      this.ɵfac = function Directionality_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || Directionality)(i0.ɵɵinject(DIR_DOCUMENT, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: Directionality,\n        factory: Directionality.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return Directionality;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nlet Dir = /*#__PURE__*/(() => {\n  class Dir {\n    constructor() {\n      /** Normalized direction that accounts for invalid/unsupported values. */\n      this._dir = 'ltr';\n      /** Whether the `value` has been set to its initial value. */\n      this._isInitialized = false;\n      /** Event emitted when the direction changes. */\n      this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() {\n      return this._dir;\n    }\n    set dir(value) {\n      const previousValue = this._dir;\n      // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n      // whereas the browser does it based on the content of the element. Since doing so based\n      // on the content can be expensive, for now we're doing the simpler matching.\n      this._dir = _resolveDirectionality(value);\n      this._rawDir = value;\n      if (previousValue !== this._dir && this._isInitialized) {\n        this.change.emit(this._dir);\n      }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n      return this.dir;\n    }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n      this._isInitialized = true;\n    }\n    ngOnDestroy() {\n      this.change.complete();\n    }\n    static {\n      this.ɵfac = function Dir_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || Dir)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: Dir,\n        selectors: [[\"\", \"dir\", \"\"]],\n        hostVars: 1,\n        hostBindings: function Dir_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"dir\", ctx._rawDir);\n          }\n        },\n        inputs: {\n          dir: \"dir\"\n        },\n        outputs: {\n          change: \"dirChange\"\n        },\n        exportAs: [\"dir\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: Directionality,\n          useExisting: Dir\n        }])]\n      });\n    }\n  }\n  return Dir;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BidiModule = /*#__PURE__*/(() => {\n  class BidiModule {\n    static {\n      this.ɵfac = function BidiModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || BidiModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: BidiModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return BidiModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality };\n","import * as i0 from '@angular/core';\nimport { Version, InjectionToken, inject, NgModule, Optional, Inject, LOCALE_ID, Injectable, Directive, ANIMATION_MODULE_TYPE, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, booleanAttribute, EventEmitter, Output, ViewChild, NgZone, ElementRef } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$1 } from '@angular/cdk';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { Platform, _isTestEnvironment, normalizePassiveListenerOptions, _getEventTarget } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Observable, Subject } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/** Current version of Angular Material. */\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nconst _c2 = [\"text\"];\nconst _c3 = [[[\"mat-icon\"]], \"*\"];\nconst _c4 = [\"mat-icon\", \"*\"];\nfunction MatOption_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disabled)(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\");\n  }\n}\nfunction MatOption_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disabled);\n  }\n}\nfunction MatOption_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"(\", ctx_r0.group.label, \")\");\n  }\n}\nconst _c5 = [\"mat-internal-form-field\", \"\"];\nconst _c6 = [\"*\"];\nconst VERSION = /*#__PURE__*/new Version('18.2.5');\n\n/** @docs-private */\nlet AnimationCurves = /*#__PURE__*/(() => {\n  class AnimationCurves {\n    static {\n      this.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n    }\n    static {\n      this.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n    }\n    static {\n      this.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n    }\n    static {\n      this.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n    }\n  }\n  return AnimationCurves;\n})();\n/** @docs-private */\nlet AnimationDurations = /*#__PURE__*/(() => {\n  class AnimationDurations {\n    static {\n      this.COMPLEX = '375ms';\n    }\n    static {\n      this.ENTERING = '225ms';\n    }\n    static {\n      this.EXITING = '195ms';\n    }\n  }\n  return AnimationDurations;\n})();\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n  return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = /*#__PURE__*/new InjectionToken('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nlet MatCommonModule = /*#__PURE__*/(() => {\n  class MatCommonModule {\n    constructor(highContrastModeDetector, _sanityChecks, _document) {\n      this._sanityChecks = _sanityChecks;\n      this._document = _document;\n      /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n      this._hasDoneGlobalChecks = false;\n      // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n      // in MatCommonModule.\n      highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n      if (!this._hasDoneGlobalChecks) {\n        this._hasDoneGlobalChecks = true;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          // Inject in here so the reference to `Platform` can be removed in production mode.\n          const platform = inject(Platform, {\n            optional: true\n          });\n          if (this._checkIsEnabled('doctype')) {\n            _checkDoctypeIsDefined(this._document);\n          }\n          if (this._checkIsEnabled('theme')) {\n            _checkThemeIsPresent(this._document, !!platform?.isBrowser);\n          }\n          if (this._checkIsEnabled('version')) {\n            _checkCdkVersionMatch();\n          }\n        }\n      }\n    }\n    /** Gets whether a specific sanity check is enabled. */\n    _checkIsEnabled(name) {\n      if (_isTestEnvironment()) {\n        return false;\n      }\n      if (typeof this._sanityChecks === 'boolean') {\n        return this._sanityChecks;\n      }\n      return !!this._sanityChecks[name];\n    }\n    static {\n      this.ɵfac = function MatCommonModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatCommonModule)(i0.ɵɵinject(i1.HighContrastModeDetector), i0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatCommonModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [BidiModule, BidiModule]\n      });\n    }\n  }\n  return MatCommonModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Checks that the page has a doctype. */\nfunction _checkDoctypeIsDefined(doc) {\n  if (!doc.doctype) {\n    console.warn('Current document does not have a doctype. This may cause ' + 'some Angular Material components not to behave as expected.');\n  }\n}\n/** Checks that a theme has been included. */\nfunction _checkThemeIsPresent(doc, isBrowser) {\n  // We need to assert that the `body` is defined, because these checks run very early\n  // and the `body` won't be defined if the consumer put their scripts in the `head`.\n  if (!doc.body || !isBrowser) {\n    return;\n  }\n  const testElement = doc.createElement('div');\n  testElement.classList.add('mat-theme-loaded-marker');\n  doc.body.appendChild(testElement);\n  const computedStyle = getComputedStyle(testElement);\n  // In some situations the computed style of the test element can be null. For example in\n  // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  if (computedStyle && computedStyle.display !== 'none') {\n    console.warn('Could not find Angular Material core theme. Most Material ' + 'components may not work as expected. For more info refer ' + 'to the theming guide: https://material.angular.io/guide/theming');\n  }\n  testElement.remove();\n}\n/** Checks whether the Material version matches the CDK version. */\nfunction _checkCdkVersionMatch() {\n  if (VERSION.full !== VERSION$1.full) {\n    console.warn('The Angular Material version (' + VERSION.full + ') does not match ' + 'the Angular CDK version (' + VERSION$1.full + ').\\n' + 'Please ensure the versions of these two packages exactly match.');\n  }\n}\nfunction mixinDisabled(base) {\n  return class extends base {\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n    constructor(...args) {\n      super(...args);\n      this._disabled = false;\n    }\n  };\n}\nfunction mixinColor(base, defaultColor) {\n  return class extends base {\n    get color() {\n      return this._color;\n    }\n    set color(value) {\n      const colorPalette = value || this.defaultColor;\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n        this._color = colorPalette;\n      }\n    }\n    constructor(...args) {\n      super(...args);\n      this.defaultColor = defaultColor;\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\nfunction mixinDisableRipple(base) {\n  return class extends base {\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n      return this._disableRipple;\n    }\n    set disableRipple(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n    constructor(...args) {\n      super(...args);\n      this._disableRipple = false;\n    }\n  };\n}\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n  return class extends base {\n    get tabIndex() {\n      return this.disabled ? -1 : this._tabIndex;\n    }\n    set tabIndex(value) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n    }\n    constructor(...args) {\n      super(...args);\n      this._tabIndex = defaultTabIndex;\n      this.defaultTabIndex = defaultTabIndex;\n    }\n  };\n}\n\n/**\n * Class that tracks the error state of a component.\n * @docs-private\n */\nclass _ErrorStateTracker {\n  constructor(_defaultMatcher, ngControl, _parentFormGroup, _parentForm, _stateChanges) {\n    this._defaultMatcher = _defaultMatcher;\n    this.ngControl = ngControl;\n    this._parentFormGroup = _parentFormGroup;\n    this._parentForm = _parentForm;\n    this._stateChanges = _stateChanges;\n    /** Whether the tracker is currently in an error state. */\n    this.errorState = false;\n  }\n  /** Updates the error state based on the provided error state matcher. */\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this._parentFormGroup || this._parentForm;\n    const matcher = this.matcher || this._defaultMatcher;\n    const control = this.ngControl ? this.ngControl.control : null;\n    const newState = matcher?.isErrorState(control, parent) ?? false;\n    if (newState !== oldState) {\n      this.errorState = newState;\n      this._stateChanges.next();\n    }\n  }\n}\nfunction mixinErrorState(base) {\n  return class extends base {\n    /** Whether the component is in an error state. */\n    get errorState() {\n      return this._getTracker().errorState;\n    }\n    set errorState(value) {\n      this._getTracker().errorState = value;\n    }\n    /** An object used to control the error state of the component. */\n    get errorStateMatcher() {\n      return this._getTracker().matcher;\n    }\n    set errorStateMatcher(value) {\n      this._getTracker().matcher = value;\n    }\n    /** Updates the error state based on the provided error state matcher. */\n    updateErrorState() {\n      this._getTracker().updateErrorState();\n    }\n    _getTracker() {\n      if (!this._tracker) {\n        this._tracker = new _ErrorStateTracker(this._defaultErrorStateMatcher, this.ngControl, this._parentFormGroup, this._parentForm, this.stateChanges);\n      }\n      return this._tracker;\n    }\n    constructor(...args) {\n      super(...args);\n    }\n  };\n}\n\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @deprecated Track the initialized state manually.\n * @breaking-change 19.0.0\n */\nfunction mixinInitialized(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      /** Whether this directive has been marked as initialized. */\n      this._isInitialized = false;\n      /**\n       * List of subscribers that subscribed before the directive was initialized. Should be notified\n       * during _markInitialized. Set to null after pending subscribers are notified, and should\n       * not expect to be populated after.\n       */\n      this._pendingSubscribers = [];\n      /**\n       * Observable stream that emits when the directive initializes. If already initialized, the\n       * subscriber is stored to be notified once _markInitialized is called.\n       */\n      this.initialized = new Observable(subscriber => {\n        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n        // when _markInitialized is called.\n        if (this._isInitialized) {\n          this._notifySubscriber(subscriber);\n        } else {\n          this._pendingSubscribers.push(subscriber);\n        }\n      });\n    }\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * @docs-private\n     */\n    _markInitialized() {\n      if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('This directive has already been marked as initialized and ' + 'should not be called twice.');\n      }\n      this._isInitialized = true;\n      this._pendingSubscribers.forEach(this._notifySubscriber);\n      this._pendingSubscribers = null;\n    }\n    /** Emits and completes the subscriber stream (should only emit once). */\n    _notifySubscriber(subscriber) {\n      subscriber.next();\n      subscriber.complete();\n    }\n  };\n}\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = /*#__PURE__*/new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n  constructor() {\n    this._localeChanges = new Subject();\n    /** A stream that emits when the locale changes. */\n    this.localeChanges = this._localeChanges;\n  }\n  /**\n   * Given a potential date object, returns that same date object if it is\n   * a valid date, or `null` if it's not a valid date.\n   * @param obj The object to check.\n   * @returns A date or `null`.\n   */\n  getValidDateOrNull(obj) {\n    return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n  }\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value) {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first, second) {\n    return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);\n  }\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first, second) {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date, min, max) {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\nconst MAT_DATE_FORMATS = /*#__PURE__*/new InjectionToken('mat-date-formats');\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings with an out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nlet NativeDateAdapter = /*#__PURE__*/(() => {\n  class NativeDateAdapter extends DateAdapter {\n    constructor(\n    /**\n     * @deprecated Now injected via inject(), param to be removed.\n     * @breaking-change 18.0.0\n     */\n    matDateLocale) {\n      super();\n      /**\n       * @deprecated No longer being used. To be removed.\n       * @breaking-change 14.0.0\n       */\n      this.useUtcForDisplay = false;\n      /** The injected locale. */\n      this._matDateLocale = inject(MAT_DATE_LOCALE, {\n        optional: true\n      });\n      if (matDateLocale !== undefined) {\n        this._matDateLocale = matDateLocale;\n      }\n      super.setLocale(this._matDateLocale);\n    }\n    getYear(date) {\n      return date.getFullYear();\n    }\n    getMonth(date) {\n      return date.getMonth();\n    }\n    getDate(date) {\n      return date.getDate();\n    }\n    getDayOfWeek(date) {\n      return date.getDay();\n    }\n    getMonthNames(style) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        month: style,\n        timeZone: 'utc'\n      });\n      return range(12, i => this._format(dtf, new Date(2017, i, 1)));\n    }\n    getDateNames() {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        day: 'numeric',\n        timeZone: 'utc'\n      });\n      return range(31, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getDayOfWeekNames(style) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        weekday: style,\n        timeZone: 'utc'\n      });\n      return range(7, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getYearName(date) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        year: 'numeric',\n        timeZone: 'utc'\n      });\n      return this._format(dtf, date);\n    }\n    getFirstDayOfWeek() {\n      // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n      return 0;\n    }\n    getNumDaysInMonth(date) {\n      return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    clone(date) {\n      return new Date(date.getTime());\n    }\n    createDate(year, month, date) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n          throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n          throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n      }\n      let result = this._createDateWithOverflow(year, month, date);\n      // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n      if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n      }\n      return result;\n    }\n    today() {\n      return new Date();\n    }\n    parse(value, parseFormat) {\n      // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n      // parameters.\n      if (typeof value == 'number') {\n        return new Date(value);\n      }\n      return value ? new Date(Date.parse(value)) : null;\n    }\n    format(date, displayFormat) {\n      if (!this.isValid(date)) {\n        throw Error('NativeDateAdapter: Cannot format invalid date.');\n      }\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        ...displayFormat,\n        timeZone: 'utc'\n      });\n      return this._format(dtf, date);\n    }\n    addCalendarYears(date, years) {\n      return this.addCalendarMonths(date, years * 12);\n    }\n    addCalendarMonths(date, months) {\n      let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n      // It's possible to wind up in the wrong month if the original month has more days than the new\n      // month. In this case we want to go to the last day of the desired month.\n      // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n      // guarantee this.\n      if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n        newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n      }\n      return newDate;\n    }\n    addCalendarDays(date, days) {\n      return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    toIso8601(date) {\n      return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value) {\n      if (typeof value === 'string') {\n        if (!value) {\n          return null;\n        }\n        // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n        // string is the right format first.\n        if (ISO_8601_REGEX.test(value)) {\n          let date = new Date(value);\n          if (this.isValid(date)) {\n            return date;\n          }\n        }\n      }\n      return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n      return obj instanceof Date;\n    }\n    isValid(date) {\n      return !isNaN(date.getTime());\n    }\n    invalid() {\n      return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n    _createDateWithOverflow(year, month, date) {\n      // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n      // To work around this we use `setFullYear` and `setHours` instead.\n      const d = new Date();\n      d.setFullYear(year, month, date);\n      d.setHours(0, 0, 0, 0);\n      return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n    _2digit(n) {\n      return ('00' + n).slice(-2);\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containing the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n      // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n      // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n      const d = new Date();\n      d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n      d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n      return dtf.format(d);\n    }\n    static {\n      this.ɵfac = function NativeDateAdapter_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NativeDateAdapter)(i0.ɵɵinject(MAT_DATE_LOCALE, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: NativeDateAdapter,\n        factory: NativeDateAdapter.ɵfac\n      });\n    }\n  }\n  return NativeDateAdapter;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst MAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    },\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    }\n  }\n};\nlet NativeDateModule = /*#__PURE__*/(() => {\n  class NativeDateModule {\n    static {\n      this.ɵfac = function NativeDateModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NativeDateModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: NativeDateModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [{\n          provide: DateAdapter,\n          useClass: NativeDateAdapter\n        }]\n      });\n    }\n  }\n  return NativeDateModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatNativeDateModule = /*#__PURE__*/(() => {\n  class MatNativeDateModule {\n    static {\n      this.ɵfac = function MatNativeDateModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatNativeDateModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatNativeDateModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [provideNativeDateAdapter()]\n      });\n    }\n  }\n  return MatNativeDateModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction provideNativeDateAdapter(formats = MAT_NATIVE_DATE_FORMATS) {\n  return [{\n    provide: DateAdapter,\n    useClass: NativeDateAdapter\n  }, {\n    provide: MAT_DATE_FORMATS,\n    useValue: formats\n  }];\n}\n\n/** Error state matcher that matches when a control is invalid and dirty. */\nlet ShowOnDirtyErrorStateMatcher = /*#__PURE__*/(() => {\n  class ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n      return !!(control && control.invalid && (control.dirty || form && form.submitted));\n    }\n    static {\n      this.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ShowOnDirtyErrorStateMatcher)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ShowOnDirtyErrorStateMatcher,\n        factory: ShowOnDirtyErrorStateMatcher.ɵfac\n      });\n    }\n  }\n  return ShowOnDirtyErrorStateMatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nlet ErrorStateMatcher = /*#__PURE__*/(() => {\n  class ErrorStateMatcher {\n    isErrorState(control, form) {\n      return !!(control && control.invalid && (control.touched || form && form.submitted));\n    }\n    static {\n      this.ɵfac = function ErrorStateMatcher_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ErrorStateMatcher)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ErrorStateMatcher,\n        factory: ErrorStateMatcher.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ErrorStateMatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nlet MatLine = /*#__PURE__*/(() => {\n  class MatLine {\n    static {\n      this.ɵfac = function MatLine_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatLine)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatLine,\n        selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]],\n        hostAttrs: [1, \"mat-line\"],\n        standalone: true\n      });\n    }\n  }\n  return MatLine;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(({\n    length\n  }) => {\n    setClass(element, `${prefix}-2-line`, false);\n    setClass(element, `${prefix}-3-line`, false);\n    setClass(element, `${prefix}-multi-line`, false);\n    if (length === 2 || length === 3) {\n      setClass(element, `${prefix}-${length}-line`, true);\n    } else if (length > 3) {\n      setClass(element, `${prefix}-multi-line`, true);\n    }\n  });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n  element.nativeElement.classList.toggle(className, isAdd);\n}\nlet MatLineModule = /*#__PURE__*/(() => {\n  class MatLineModule {\n    static {\n      this.ɵfac = function MatLineModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatLineModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatLineModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatLineModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Possible states for a ripple element. */\nvar RippleState = /*#__PURE__*/function (RippleState) {\n  RippleState[RippleState[\"FADING_IN\"] = 0] = \"FADING_IN\";\n  RippleState[RippleState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n  RippleState[RippleState[\"FADING_OUT\"] = 2] = \"FADING_OUT\";\n  RippleState[RippleState[\"HIDDEN\"] = 3] = \"HIDDEN\";\n  return RippleState;\n}(RippleState || {});\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n  constructor(_renderer, /** Reference to the ripple HTML element. */\n  element, /** Ripple configuration used for the ripple. */\n  config, /* Whether animations are forcibly disabled for ripples through CSS. */\n  _animationForciblyDisabledThroughCss = false) {\n    this._renderer = _renderer;\n    this.element = element;\n    this.config = config;\n    this._animationForciblyDisabledThroughCss = _animationForciblyDisabledThroughCss;\n    /** Current state of the ripple. */\n    this.state = RippleState.HIDDEN;\n  }\n  /** Fades out the ripple element. */\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions$1 = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/** Manages events through delegation so that as few event handlers as possible are bound. */\nclass RippleEventManager {\n  constructor() {\n    this._events = new Map();\n    /** Event handler that is bound and which dispatches the events to the different targets. */\n    this._delegateEventHandler = event => {\n      const target = _getEventTarget(event);\n      if (target) {\n        this._events.get(event.type)?.forEach((handlers, element) => {\n          if (element === target || element.contains(target)) {\n            handlers.forEach(handler => handler.handleEvent(event));\n          }\n        });\n      }\n    };\n  }\n  /** Adds an event handler. */\n  addHandler(ngZone, name, element, handler) {\n    const handlersForEvent = this._events.get(name);\n    if (handlersForEvent) {\n      const handlersForElement = handlersForEvent.get(element);\n      if (handlersForElement) {\n        handlersForElement.add(handler);\n      } else {\n        handlersForEvent.set(element, new Set([handler]));\n      }\n    } else {\n      this._events.set(name, new Map([[element, new Set([handler])]]));\n      ngZone.runOutsideAngular(() => {\n        document.addEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n      });\n    }\n  }\n  /** Removes an event handler. */\n  removeHandler(name, element, handler) {\n    const handlersForEvent = this._events.get(name);\n    if (!handlersForEvent) {\n      return;\n    }\n    const handlersForElement = handlersForEvent.get(element);\n    if (!handlersForElement) {\n      return;\n    }\n    handlersForElement.delete(handler);\n    if (handlersForElement.size === 0) {\n      handlersForEvent.delete(element);\n    }\n    if (handlersForEvent.size === 0) {\n      this._events.delete(name);\n      document.removeEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n    }\n  }\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n  enterDuration: 225,\n  exitDuration: 150\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n  static {\n    this._eventManager = /*#__PURE__*/new RippleEventManager();\n  }\n  constructor(_target, _ngZone, elementOrElementRef, _platform) {\n    this._target = _target;\n    this._ngZone = _ngZone;\n    this._platform = _platform;\n    /** Whether the pointer is currently down or not. */\n    this._isPointerDown = false;\n    /**\n     * Map of currently active ripple references.\n     * The ripple reference is mapped to its element event listeners.\n     * The reason why `| null` is used is that event listeners are added only\n     * when the condition is truthy (see the `_startFadeOutTransition` method).\n     */\n    this._activeRipples = new Map();\n    /** Whether pointer-up event listeners have been registered. */\n    this._pointerUpEventsRegistered = false;\n    // Only do anything if we're on the browser.\n    if (_platform.isBrowser) {\n      this._containerElement = coerceElement(elementOrElementRef);\n    }\n  }\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n  fadeInRipple(x, y, config = {}) {\n    const containerRect = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect();\n    const animationConfig = {\n      ...defaultRippleAnimationConfig,\n      ...config.animation\n    };\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    const offsetX = x - containerRect.left;\n    const offsetY = y - containerRect.top;\n    const enterDuration = animationConfig.enterDuration;\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n    // If a custom color has been specified, set it as inline style. If no color is\n    // set, the default color will be applied through the ripple theme styles.\n    if (config.color != null) {\n      ripple.style.backgroundColor = config.color;\n    }\n    ripple.style.transitionDuration = `${enterDuration}ms`;\n    this._containerElement.appendChild(ripple);\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical to ensure that the `scale` animates properly.\n    // We enforce a style recalculation by calling `getComputedStyle` and *accessing* a property.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    const computedStyles = window.getComputedStyle(ripple);\n    const userTransitionProperty = computedStyles.transitionProperty;\n    const userTransitionDuration = computedStyles.transitionDuration;\n    // Note: We detect whether animation is forcibly disabled through CSS (e.g. through\n    // `transition: none` or `display: none`). This is technically unexpected since animations are\n    // controlled through the animation config, but this exists for backwards compatibility. This\n    // logic does not need to be super accurate since it covers some edge cases which can be easily\n    // avoided by users.\n    const animationForciblyDisabledThroughCss = userTransitionProperty === 'none' ||\n    // Note: The canonical unit for serialized CSS `<time>` properties is seconds. Additionally\n    // some browsers expand the duration for every property (in our case `opacity` and `transform`).\n    userTransitionDuration === '0s' || userTransitionDuration === '0s, 0s' ||\n    // If the container is 0x0, it's likely `display: none`.\n    containerRect.width === 0 && containerRect.height === 0;\n    // Exposed reference to the ripple that will be returned.\n    const rippleRef = new RippleRef(this, ripple, config, animationForciblyDisabledThroughCss);\n    // Start the enter animation by setting the transform/scale to 100%. The animation will\n    // execute as part of this statement because we forced a style recalculation before.\n    // Note: We use a 3d transform here in order to avoid an issue in Safari where\n    // the ripples aren't clipped when inside the shadow DOM (see #24028).\n    ripple.style.transform = 'scale3d(1, 1, 1)';\n    rippleRef.state = RippleState.FADING_IN;\n    if (!config.persistent) {\n      this._mostRecentTransientRipple = rippleRef;\n    }\n    let eventListeners = null;\n    // Do not register the `transition` event listener if fade-in and fade-out duration\n    // are set to zero. The events won't fire anyway and we can save resources here.\n    if (!animationForciblyDisabledThroughCss && (enterDuration || animationConfig.exitDuration)) {\n      this._ngZone.runOutsideAngular(() => {\n        const onTransitionEnd = () => {\n          // Clear the fallback timer since the transition fired correctly.\n          if (eventListeners) {\n            eventListeners.fallbackTimer = null;\n          }\n          clearTimeout(fallbackTimer);\n          this._finishRippleTransition(rippleRef);\n        };\n        const onTransitionCancel = () => this._destroyRipple(rippleRef);\n        // In some cases where there's a higher load on the browser, it can choose not to dispatch\n        // neither `transitionend` nor `transitioncancel` (see b/227356674). This timer serves as a\n        // fallback for such cases so that the ripple doesn't become stuck. We add a 100ms buffer\n        // because timers aren't precise. Note that another approach can be to transition the ripple\n        // to the `VISIBLE` state immediately above and to `FADING_IN` afterwards inside\n        // `transitionstart`. We go with the timer because it's one less event listener and\n        // it's less likely to break existing tests.\n        const fallbackTimer = setTimeout(onTransitionCancel, enterDuration + 100);\n        ripple.addEventListener('transitionend', onTransitionEnd);\n        // If the transition is cancelled (e.g. due to DOM removal), we destroy the ripple\n        // directly as otherwise we would keep it part of the ripple container forever.\n        // https://www.w3.org/TR/css-transitions-1/#:~:text=no%20longer%20in%20the%20document.\n        ripple.addEventListener('transitioncancel', onTransitionCancel);\n        eventListeners = {\n          onTransitionEnd,\n          onTransitionCancel,\n          fallbackTimer\n        };\n      });\n    }\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.set(rippleRef, eventListeners);\n    // In case there is no fade-in transition duration, we need to manually call the transition\n    // end listener because `transitionend` doesn't fire if there is no transition.\n    if (animationForciblyDisabledThroughCss || !enterDuration) {\n      this._finishRippleTransition(rippleRef);\n    }\n    return rippleRef;\n  }\n  /** Fades out a ripple reference. */\n  fadeOutRipple(rippleRef) {\n    // For ripples already fading out or hidden, this should be a noop.\n    if (rippleRef.state === RippleState.FADING_OUT || rippleRef.state === RippleState.HIDDEN) {\n      return;\n    }\n    const rippleEl = rippleRef.element;\n    const animationConfig = {\n      ...defaultRippleAnimationConfig,\n      ...rippleRef.config.animation\n    };\n    // This starts the fade-out transition and will fire the transition end listener that\n    // removes the ripple element from the DOM.\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = RippleState.FADING_OUT;\n    // In case there is no fade-out transition duration, we need to manually call the\n    // transition end listener because `transitionend` doesn't fire if there is no transition.\n    if (rippleRef._animationForciblyDisabledThroughCss || !animationConfig.exitDuration) {\n      this._finishRippleTransition(rippleRef);\n    }\n  }\n  /** Fades out all currently active ripples. */\n  fadeOutAll() {\n    this._getActiveRipples().forEach(ripple => ripple.fadeOut());\n  }\n  /** Fades out all currently active non-persistent ripples. */\n  fadeOutAllNonPersistent() {\n    this._getActiveRipples().forEach(ripple => {\n      if (!ripple.config.persistent) {\n        ripple.fadeOut();\n      }\n    });\n  }\n  /** Sets up the trigger event listeners */\n  setupTriggerEvents(elementOrElementRef) {\n    const element = coerceElement(elementOrElementRef);\n    if (!this._platform.isBrowser || !element || element === this._triggerElement) {\n      return;\n    }\n    // Remove all previously registered event listeners from the trigger element.\n    this._removeTriggerEvents();\n    this._triggerElement = element;\n    // Use event delegation for the trigger events since they're\n    // set up during creation and are performance-sensitive.\n    pointerDownEvents.forEach(type => {\n      RippleRenderer._eventManager.addHandler(this._ngZone, type, element, this);\n    });\n  }\n  /**\n   * Handles all registered events.\n   * @docs-private\n   */\n  handleEvent(event) {\n    if (event.type === 'mousedown') {\n      this._onMousedown(event);\n    } else if (event.type === 'touchstart') {\n      this._onTouchStart(event);\n    } else {\n      this._onPointerUp();\n    }\n    // If pointer-up events haven't been registered yet, do so now.\n    // We do this on-demand in order to reduce the total number of event listeners\n    // registered by the ripples, which speeds up the rendering time for large UIs.\n    if (!this._pointerUpEventsRegistered) {\n      // The events for hiding the ripple are bound directly on the trigger, because:\n      // 1. Some of them occur frequently (e.g. `mouseleave`) and any advantage we get from\n      // delegation will be diminished by having to look through all the data structures often.\n      // 2. They aren't as performance-sensitive, because they're bound only after the user\n      // has interacted with an element.\n      this._ngZone.runOutsideAngular(() => {\n        pointerUpEvents.forEach(type => {\n          this._triggerElement.addEventListener(type, this, passiveCapturingEventOptions);\n        });\n      });\n      this._pointerUpEventsRegistered = true;\n    }\n  }\n  /** Method that will be called if the fade-in or fade-in transition completed. */\n  _finishRippleTransition(rippleRef) {\n    if (rippleRef.state === RippleState.FADING_IN) {\n      this._startFadeOutTransition(rippleRef);\n    } else if (rippleRef.state === RippleState.FADING_OUT) {\n      this._destroyRipple(rippleRef);\n    }\n  }\n  /**\n   * Starts the fade-out transition of the given ripple if it's not persistent and the pointer\n   * is not held down anymore.\n   */\n  _startFadeOutTransition(rippleRef) {\n    const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n    const {\n      persistent\n    } = rippleRef.config;\n    rippleRef.state = RippleState.VISIBLE;\n    // When the timer runs out while the user has kept their pointer down, we want to\n    // keep only the persistent ripples and the latest transient ripple. We do this,\n    // because we don't want stacked transient ripples to appear after their enter\n    // animation has finished.\n    if (!persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n      rippleRef.fadeOut();\n    }\n  }\n  /** Destroys the given ripple by removing it from the DOM and updating its state. */\n  _destroyRipple(rippleRef) {\n    const eventListeners = this._activeRipples.get(rippleRef) ?? null;\n    this._activeRipples.delete(rippleRef);\n    // Clear out the cached bounding rect if we have no more ripples.\n    if (!this._activeRipples.size) {\n      this._containerRect = null;\n    }\n    // If the current ref is the most recent transient ripple, unset it\n    // avoid memory leaks.\n    if (rippleRef === this._mostRecentTransientRipple) {\n      this._mostRecentTransientRipple = null;\n    }\n    rippleRef.state = RippleState.HIDDEN;\n    if (eventListeners !== null) {\n      rippleRef.element.removeEventListener('transitionend', eventListeners.onTransitionEnd);\n      rippleRef.element.removeEventListener('transitioncancel', eventListeners.onTransitionCancel);\n      if (eventListeners.fallbackTimer !== null) {\n        clearTimeout(eventListeners.fallbackTimer);\n      }\n    }\n    rippleRef.element.remove();\n  }\n  /** Function being called whenever the trigger is being pressed using mouse. */\n  _onMousedown(event) {\n    // Screen readers will fire fake mouse events for space/enter. Skip launching a\n    // ripple in this case for consistency with the non-screen-reader experience.\n    const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n    const isSyntheticEvent = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n    if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n      this._isPointerDown = true;\n      this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n    }\n  }\n  /** Function being called whenever the trigger is being pressed using touch. */\n  _onTouchStart(event) {\n    if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n      // events will launch a second ripple if we don't ignore mouse events for a specific\n      // time after a touchstart event.\n      this._lastTouchStartEvent = Date.now();\n      this._isPointerDown = true;\n      // Use `changedTouches` so we skip any touches where the user put\n      // their finger down, but used another finger to tap the element again.\n      const touches = event.changedTouches;\n      // According to the typings the touches should always be defined, but in some cases\n      // the browser appears to not assign them in tests which leads to flakes.\n      if (touches) {\n        for (let i = 0; i < touches.length; i++) {\n          this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n        }\n      }\n    }\n  }\n  /** Function being called whenever the trigger is being released. */\n  _onPointerUp() {\n    if (!this._isPointerDown) {\n      return;\n    }\n    this._isPointerDown = false;\n    // Fade-out all ripples that are visible and not persistent.\n    this._getActiveRipples().forEach(ripple => {\n      // By default, only ripples that are completely visible will fade out on pointer release.\n      // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n      const isVisible = ripple.state === RippleState.VISIBLE || ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n      if (!ripple.config.persistent && isVisible) {\n        ripple.fadeOut();\n      }\n    });\n  }\n  _getActiveRipples() {\n    return Array.from(this._activeRipples.keys());\n  }\n  /** Removes previously registered event listeners from the trigger element. */\n  _removeTriggerEvents() {\n    const trigger = this._triggerElement;\n    if (trigger) {\n      pointerDownEvents.forEach(type => RippleRenderer._eventManager.removeHandler(type, trigger, this));\n      if (this._pointerUpEventsRegistered) {\n        pointerUpEvents.forEach(type => trigger.removeEventListener(type, this, passiveCapturingEventOptions));\n        this._pointerUpEventsRegistered = false;\n      }\n    }\n  }\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = /*#__PURE__*/new InjectionToken('mat-ripple-global-options');\nlet MatRipple = /*#__PURE__*/(() => {\n  class MatRipple {\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      if (value) {\n        this.fadeOutAllNonPersistent();\n      }\n      this._disabled = value;\n      this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() {\n      return this._trigger || this._elementRef.nativeElement;\n    }\n    set trigger(trigger) {\n      this._trigger = trigger;\n      this._setupTriggerEventsIfEnabled();\n    }\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n      this._elementRef = _elementRef;\n      this._animationMode = _animationMode;\n      /**\n       * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n       * will be the distance from the center of the ripple to the furthest corner of the host element's\n       * bounding rectangle.\n       */\n      this.radius = 0;\n      this._disabled = false;\n      /** @docs-private Whether ripple directive is initialized and the input bindings are set. */\n      this._isInitialized = false;\n      this._globalOptions = globalOptions || {};\n      this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    ngOnInit() {\n      this._isInitialized = true;\n      this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n      this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n      this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n      this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n      return {\n        centered: this.centered,\n        radius: this.radius,\n        color: this.color,\n        animation: {\n          ...this._globalOptions.animation,\n          ...(this._animationMode === 'NoopAnimations' ? {\n            enterDuration: 0,\n            exitDuration: 0\n          } : {}),\n          ...this.animation\n        },\n        terminateOnPointerUp: this._globalOptions.terminateOnPointerUp\n      };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n      return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n      if (!this.disabled && this._isInitialized) {\n        this._rippleRenderer.setupTriggerEvents(this.trigger);\n      }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n      if (typeof configOrX === 'number') {\n        return this._rippleRenderer.fadeInRipple(configOrX, y, {\n          ...this.rippleConfig,\n          ...config\n        });\n      } else {\n        return this._rippleRenderer.fadeInRipple(0, 0, {\n          ...this.rippleConfig,\n          ...configOrX\n        });\n      }\n    }\n    static {\n      this.ɵfac = function MatRipple_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatRipple)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$1.Platform), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatRipple,\n        selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]],\n        hostAttrs: [1, \"mat-ripple\"],\n        hostVars: 2,\n        hostBindings: function MatRipple_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n          }\n        },\n        inputs: {\n          color: [0, \"matRippleColor\", \"color\"],\n          unbounded: [0, \"matRippleUnbounded\", \"unbounded\"],\n          centered: [0, \"matRippleCentered\", \"centered\"],\n          radius: [0, \"matRippleRadius\", \"radius\"],\n          animation: [0, \"matRippleAnimation\", \"animation\"],\n          disabled: [0, \"matRippleDisabled\", \"disabled\"],\n          trigger: [0, \"matRippleTrigger\", \"trigger\"]\n        },\n        exportAs: [\"matRipple\"],\n        standalone: true\n      });\n    }\n  }\n  return MatRipple;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatRippleModule = /*#__PURE__*/(() => {\n  class MatRippleModule {\n    static {\n      this.ɵfac = function MatRippleModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatRippleModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatRippleModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatRippleModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nlet MatPseudoCheckbox = /*#__PURE__*/(() => {\n  class MatPseudoCheckbox {\n    constructor(_animationMode) {\n      this._animationMode = _animationMode;\n      /** Display state of the checkbox. */\n      this.state = 'unchecked';\n      /** Whether the checkbox is disabled. */\n      this.disabled = false;\n      /**\n       * Appearance of the pseudo checkbox. Default appearance of 'full' renders a checkmark/mixedmark\n       * indicator inside a square box. 'minimal' appearance only renders the checkmark/mixedmark.\n       */\n      this.appearance = 'full';\n    }\n    static {\n      this.ɵfac = function MatPseudoCheckbox_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatPseudoCheckbox)(i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatPseudoCheckbox,\n        selectors: [[\"mat-pseudo-checkbox\"]],\n        hostAttrs: [1, \"mat-pseudo-checkbox\"],\n        hostVars: 12,\n        hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"mat-pseudo-checkbox-minimal\", ctx.appearance === \"minimal\")(\"mat-pseudo-checkbox-full\", ctx.appearance === \"full\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n          }\n        },\n        inputs: {\n          state: \"state\",\n          disabled: \"disabled\",\n          appearance: \"appearance\"\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 0,\n        vars: 0,\n        template: function MatPseudoCheckbox_Template(rf, ctx) {},\n        styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-minimal-pseudo-checkbox-selected-checkmark-color, var(--mat-app-primary))}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color)}.mat-pseudo-checkbox-full{border-color:var(--mat-full-pseudo-checkbox-unselected-icon-color, var(--mat-app-on-surface-variant));border-width:2px;border-style:solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled{border-color:var(--mat-full-pseudo-checkbox-disabled-unselected-icon-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{background-color:var(--mat-full-pseudo-checkbox-selected-icon-color, var(--mat-app-primary));border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-full-pseudo-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background-color:var(--mat-full-pseudo-checkbox-disabled-selected-icon-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-full-pseudo-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatPseudoCheckbox;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatPseudoCheckboxModule = /*#__PURE__*/(() => {\n  class MatPseudoCheckboxModule {\n    static {\n      this.ɵfac = function MatPseudoCheckboxModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatPseudoCheckboxModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatPseudoCheckboxModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule]\n      });\n    }\n  }\n  return MatPseudoCheckboxModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = /*#__PURE__*/new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = /*#__PURE__*/new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nlet MatOptgroup = /*#__PURE__*/(() => {\n  class MatOptgroup {\n    constructor(parent) {\n      /** whether the option group is disabled. */\n      this.disabled = false;\n      /** Unique id for the underlying label. */\n      this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n      this._inert = parent?.inertGroups ?? false;\n    }\n    static {\n      this.ɵfac = function MatOptgroup_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatOptgroup)(i0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatOptgroup,\n        selectors: [[\"mat-optgroup\"]],\n        hostAttrs: [1, \"mat-mdc-optgroup\"],\n        hostVars: 3,\n        hostBindings: function MatOptgroup_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"role\", ctx._inert ? null : \"group\")(\"aria-disabled\", ctx._inert ? null : ctx.disabled.toString())(\"aria-labelledby\", ctx._inert ? null : ctx._labelId);\n          }\n        },\n        inputs: {\n          label: \"label\",\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n        },\n        exportAs: [\"matOptgroup\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_OPTGROUP,\n          useExisting: MatOptgroup\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c1,\n        decls: 5,\n        vars: 4,\n        consts: [[\"role\", \"presentation\", 1, \"mat-mdc-optgroup-label\", 3, \"id\"], [1, \"mdc-list-item__primary-text\"]],\n        template: function MatOptgroup_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c0);\n            i0.ɵɵelementStart(0, \"span\", 0)(1, \"span\", 1);\n            i0.ɵɵtext(2);\n            i0.ɵɵprojection(3);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵprojection(4, 1);\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-list-item--disabled\", ctx.disabled);\n            i0.ɵɵproperty(\"id\", ctx._labelId);\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n          }\n        },\n        styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color, var(--mat-app-on-surface-variant));font-family:var(--mat-optgroup-label-text-font, var(--mat-app-title-small-font));line-height:var(--mat-optgroup-label-text-line-height, var(--mat-app-title-small-line-height));font-size:var(--mat-optgroup-label-text-size, var(--mat-app-title-small-size));letter-spacing:var(--mat-optgroup-label-text-tracking, var(--mat-app-title-small-tracking));font-weight:var(--mat-optgroup-label-text-weight, var(--mat-app-title-small-weight))}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;outline:none}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatOptgroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n  constructor( /** Reference to the option that emitted the event. */\n  source, /** Whether the change in the option's value was a result of a user action. */\n  isUserInput = false) {\n    this.source = source;\n    this.isUserInput = isUserInput;\n  }\n}\n/**\n * Single option inside of a `<mat-select>` element.\n */\nlet MatOption = /*#__PURE__*/(() => {\n  class MatOption {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n      return this._parent && this._parent.multiple;\n    }\n    /** Whether or not the option is currently selected. */\n    get selected() {\n      return this._selected;\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n      return this.group && this.group.disabled || this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n    }\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n      return !!(this._parent && this._parent.disableRipple);\n    }\n    /** Whether to display checkmark for single-selection. */\n    get hideSingleSelectionIndicator() {\n      return !!(this._parent && this._parent.hideSingleSelectionIndicator);\n    }\n    constructor(_element, _changeDetectorRef, _parent, group) {\n      this._element = _element;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._parent = _parent;\n      this.group = group;\n      this._selected = false;\n      this._active = false;\n      this._disabled = false;\n      this._mostRecentViewValue = '';\n      /** The unique ID of the option. */\n      this.id = `mat-option-${_uniqueIdCounter++}`;\n      /** Event emitted when the option is selected or deselected. */\n      // tslint:disable-next-line:no-output-on-prefix\n      this.onSelectionChange = new EventEmitter();\n      /** Emits when the state of the option changes and any parents have to be notified. */\n      this._stateChanges = new Subject();\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n      return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n      // TODO(kara): Add input property alternative for node envs.\n      return (this._text?.nativeElement.textContent || '').trim();\n    }\n    /** Selects the option. */\n    select(emitEvent = true) {\n      if (!this._selected) {\n        this._selected = true;\n        this._changeDetectorRef.markForCheck();\n        if (emitEvent) {\n          this._emitSelectionChangeEvent();\n        }\n      }\n    }\n    /** Deselects the option. */\n    deselect(emitEvent = true) {\n      if (this._selected) {\n        this._selected = false;\n        this._changeDetectorRef.markForCheck();\n        if (emitEvent) {\n          this._emitSelectionChangeEvent();\n        }\n      }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n      // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n      // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n      const element = this._getHostElement();\n      if (typeof element.focus === 'function') {\n        element.focus(options);\n      }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n      if (!this._active) {\n        this._active = true;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n      if (this._active) {\n        this._active = false;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n      return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n      if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n        this._selectViaInteraction();\n        // Prevent the page from scrolling down and form submits.\n        event.preventDefault();\n      }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n      if (!this.disabled) {\n        this._selected = this.multiple ? !this._selected : true;\n        this._changeDetectorRef.markForCheck();\n        this._emitSelectionChangeEvent(true);\n      }\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    // This method is only used by `MatLegacyOption`. Keeping it here to avoid breaking the types.\n    // That's because `MatLegacyOption` use `MatOption` type in a few places such as\n    // `MatOptionSelectionChange`. It is safe to delete this when `MatLegacyOption` is deleted.\n    _getTabIndex() {\n      return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n      return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n      // Since parent components could be using the option's label to display the selected values\n      // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n      // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n      // relatively cheap, however we still limit them only to selected options in order to avoid\n      // hitting the DOM too often.\n      if (this._selected) {\n        const viewValue = this.viewValue;\n        if (viewValue !== this._mostRecentViewValue) {\n          if (this._mostRecentViewValue) {\n            this._stateChanges.next();\n          }\n          this._mostRecentViewValue = viewValue;\n        }\n      }\n    }\n    ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n      this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n    static {\n      this.ɵfac = function MatOption_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), i0.ɵɵdirectiveInject(MAT_OPTGROUP, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatOption,\n        selectors: [[\"mat-option\"]],\n        viewQuery: function MatOption_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c2, 7);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._text = _t.first);\n          }\n        },\n        hostAttrs: [\"role\", \"option\", 1, \"mat-mdc-option\", \"mdc-list-item\"],\n        hostVars: 11,\n        hostBindings: function MatOption_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() {\n              return ctx._selectViaInteraction();\n            })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) {\n              return ctx._handleKeydown($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"id\", ctx.id);\n            i0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled.toString());\n            i0.ɵɵclassProp(\"mdc-list-item--selected\", ctx.selected)(\"mat-mdc-option-multiple\", ctx.multiple)(\"mat-mdc-option-active\", ctx.active)(\"mdc-list-item--disabled\", ctx.disabled);\n          }\n        },\n        inputs: {\n          value: \"value\",\n          id: \"id\",\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n        },\n        outputs: {\n          onSelectionChange: \"onSelectionChange\"\n        },\n        exportAs: [\"matOption\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c4,\n        decls: 8,\n        vars: 5,\n        consts: [[\"text\", \"\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-option-pseudo-checkbox\", 3, \"disabled\", \"state\"], [1, \"mdc-list-item__primary-text\"], [\"state\", \"checked\", \"aria-hidden\", \"true\", \"appearance\", \"minimal\", 1, \"mat-mdc-option-pseudo-checkbox\", 3, \"disabled\"], [1, \"cdk-visually-hidden\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-mdc-option-ripple\", \"mat-mdc-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\"]],\n        template: function MatOption_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c3);\n            i0.ɵɵtemplate(0, MatOption_Conditional_0_Template, 1, 2, \"mat-pseudo-checkbox\", 1);\n            i0.ɵɵprojection(1);\n            i0.ɵɵelementStart(2, \"span\", 2, 0);\n            i0.ɵɵprojection(4, 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(5, MatOption_Conditional_5_Template, 1, 1, \"mat-pseudo-checkbox\", 3)(6, MatOption_Conditional_6_Template, 2, 1, \"span\", 4);\n            i0.ɵɵelement(7, \"div\", 5);\n          }\n          if (rf & 2) {\n            i0.ɵɵconditional(ctx.multiple ? 0 : -1);\n            i0.ɵɵadvance(5);\n            i0.ɵɵconditional(!ctx.multiple && ctx.selected && !ctx.hideSingleSelectionIndicator ? 5 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.group && ctx.group._inert ? 6 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n          }\n        },\n        dependencies: [MatPseudoCheckbox, MatRipple],\n        styles: [\".mat-mdc-option{-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color, var(--mat-app-on-surface));font-family:var(--mat-option-label-text-font, var(--mat-app-label-large-font));line-height:var(--mat-option-label-text-line-height, var(--mat-app-label-large-line-height));font-size:var(--mat-option-label-text-size, var(--mat-app-body-large-size));letter-spacing:var(--mat-option-label-text-tracking, var(--mat-app-label-large-tracking));font-weight:var(--mat-option-label-text-weight, var(--mat-app-body-large-weight))}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color)}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color);outline:0}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color, var(--mat-app-on-secondary-container))}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color, var(--mat-app-secondary-container))}.mat-mdc-option .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-selected-checkmark-color: var(--mat-option-selected-state-label-text-color, var(--mat-app-on-secondary-container))}.mat-mdc-option.mdc-list-item{align-items:center;background:rgba(0,0,0,0)}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-multiple{--mdc-list-list-item-selected-container-color:var(--mdc-list-list-item-container-color, transparent)}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatOption;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    let optionsArray = options.toArray();\n    let groups = optionGroups.toArray();\n    let groupCounter = 0;\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n    return groupCounter;\n  }\n  return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n  return currentScrollPosition;\n}\nlet MatOptionModule = /*#__PURE__*/(() => {\n  class MatOptionModule {\n    static {\n      this.ɵfac = function MatOptionModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatOptionModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatOptionModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatRippleModule, MatCommonModule, MatPseudoCheckboxModule]\n      });\n    }\n  }\n  return MatOptionModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** The options for the MatRippleLoader's event listeners. */\nconst eventListenerOptions = {\n  capture: true\n};\n/**\n * The events that should trigger the initialization of the ripple.\n * Note that we use `mousedown`, rather than `click`, for mouse devices because\n * we can't rely on `mouseenter` in the shadow DOM and `click` happens too late.\n */\nconst rippleInteractionEvents = ['focus', 'mousedown', 'mouseenter', 'touchstart'];\n/** The attribute attached to a component whose ripple has not yet been initialized. */\nconst matRippleUninitialized = 'mat-ripple-loader-uninitialized';\n/** Additional classes that should be added to the ripple when it is rendered. */\nconst matRippleClassName = 'mat-ripple-loader-class-name';\n/** Whether the ripple should be centered. */\nconst matRippleCentered = 'mat-ripple-loader-centered';\n/** Whether the ripple should be disabled. */\nconst matRippleDisabled = 'mat-ripple-loader-disabled';\n/**\n * Handles attaching ripples on demand.\n *\n * This service allows us to avoid eagerly creating & attaching MatRipples.\n * It works by creating & attaching a ripple only when a component is first interacted with.\n *\n * @docs-private\n */\nlet MatRippleLoader = /*#__PURE__*/(() => {\n  class MatRippleLoader {\n    constructor() {\n      this._document = inject(DOCUMENT, {\n        optional: true\n      });\n      this._animationMode = inject(ANIMATION_MODULE_TYPE, {\n        optional: true\n      });\n      this._globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n        optional: true\n      });\n      this._platform = inject(Platform);\n      this._ngZone = inject(NgZone);\n      this._hosts = new Map();\n      /**\n       * Handles creating and attaching component internals\n       * when a component is initially interacted with.\n       */\n      this._onInteraction = event => {\n        const eventTarget = _getEventTarget(event);\n        if (eventTarget instanceof HTMLElement) {\n          // TODO(wagnermaciel): Consider batching these events to improve runtime performance.\n          const element = eventTarget.closest(`[${matRippleUninitialized}=\"${this._globalRippleOptions?.namespace ?? ''}\"]`);\n          if (element) {\n            this._createRipple(element);\n          }\n        }\n      };\n      this._ngZone.runOutsideAngular(() => {\n        for (const event of rippleInteractionEvents) {\n          this._document?.addEventListener(event, this._onInteraction, eventListenerOptions);\n        }\n      });\n    }\n    ngOnDestroy() {\n      const hosts = this._hosts.keys();\n      for (const host of hosts) {\n        this.destroyRipple(host);\n      }\n      for (const event of rippleInteractionEvents) {\n        this._document?.removeEventListener(event, this._onInteraction, eventListenerOptions);\n      }\n    }\n    /**\n     * Configures the ripple that will be rendered by the ripple loader.\n     *\n     * Stores the given information about how the ripple should be configured on the host\n     * element so that it can later be retrived & used when the ripple is actually created.\n     */\n    configureRipple(host, config) {\n      // Indicates that the ripple has not yet been rendered for this component.\n      host.setAttribute(matRippleUninitialized, this._globalRippleOptions?.namespace ?? '');\n      // Store the additional class name(s) that should be added to the ripple element.\n      if (config.className || !host.hasAttribute(matRippleClassName)) {\n        host.setAttribute(matRippleClassName, config.className || '');\n      }\n      // Store whether the ripple should be centered.\n      if (config.centered) {\n        host.setAttribute(matRippleCentered, '');\n      }\n      if (config.disabled) {\n        host.setAttribute(matRippleDisabled, '');\n      }\n    }\n    /** Returns the ripple instance for the given host element. */\n    getRipple(host) {\n      const ripple = this._hosts.get(host);\n      return ripple || this._createRipple(host);\n    }\n    /** Sets the disabled state on the ripple instance corresponding to the given host element. */\n    setDisabled(host, disabled) {\n      const ripple = this._hosts.get(host);\n      // If the ripple has already been instantiated, just disable it.\n      if (ripple) {\n        ripple.disabled = disabled;\n        return;\n      }\n      // Otherwise, set an attribute so we know what the\n      // disabled state should be when the ripple is initialized.\n      if (disabled) {\n        host.setAttribute(matRippleDisabled, '');\n      } else {\n        host.removeAttribute(matRippleDisabled);\n      }\n    }\n    /** Creates a MatRipple and appends it to the given element. */\n    _createRipple(host) {\n      if (!this._document) {\n        return;\n      }\n      const existingRipple = this._hosts.get(host);\n      if (existingRipple) {\n        return existingRipple;\n      }\n      // Create the ripple element.\n      host.querySelector('.mat-ripple')?.remove();\n      const rippleEl = this._document.createElement('span');\n      rippleEl.classList.add('mat-ripple', host.getAttribute(matRippleClassName));\n      host.append(rippleEl);\n      // Create the MatRipple.\n      const ripple = new MatRipple(new ElementRef(rippleEl), this._ngZone, this._platform, this._globalRippleOptions ? this._globalRippleOptions : undefined, this._animationMode ? this._animationMode : undefined);\n      ripple._isInitialized = true;\n      ripple.trigger = host;\n      ripple.centered = host.hasAttribute(matRippleCentered);\n      ripple.disabled = host.hasAttribute(matRippleDisabled);\n      this.attachRipple(host, ripple);\n      return ripple;\n    }\n    attachRipple(host, ripple) {\n      host.removeAttribute(matRippleUninitialized);\n      this._hosts.set(host, ripple);\n    }\n    destroyRipple(host) {\n      const ripple = this._hosts.get(host);\n      if (ripple) {\n        // Since this directive is created manually, it needs to be destroyed manually too.\n        // tslint:disable-next-line:no-lifecycle-invocation\n        ripple.ngOnDestroy();\n        this._hosts.delete(host);\n      }\n    }\n    static {\n      this.ɵfac = function MatRippleLoader_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatRippleLoader)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MatRippleLoader,\n        factory: MatRippleLoader.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return MatRippleLoader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Internal shared component used as a container in form field controls.\n * Not to be confused with `mat-form-field` which MDC calls a \"text field\".\n * @docs-private\n */\nlet _MatInternalFormField = /*#__PURE__*/(() => {\n  class _MatInternalFormField {\n    static {\n      this.ɵfac = function _MatInternalFormField_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || _MatInternalFormField)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: _MatInternalFormField,\n        selectors: [[\"div\", \"mat-internal-form-field\", \"\"]],\n        hostAttrs: [1, \"mdc-form-field\", \"mat-internal-form-field\"],\n        hostVars: 2,\n        hostBindings: function _MatInternalFormField_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-form-field--align-end\", ctx.labelPosition === \"before\");\n          }\n        },\n        inputs: {\n          labelPosition: \"labelPosition\"\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        attrs: _c5,\n        ngContentSelectors: _c6,\n        decls: 1,\n        vars: 0,\n        template: function _MatInternalFormField_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n          }\n        },\n        styles: [\".mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-flex;align-items:center;vertical-align:middle}.mat-internal-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mat-internal-form-field>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end .mdc-form-field--align-end label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return _MatInternalFormField;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleLoader, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, RippleState, ShowOnDirtyErrorStateMatcher, VERSION, _ErrorStateTracker, _MatInternalFormField, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, provideNativeDateAdapter, setLines };\n","import * as i0 from '@angular/core';\nimport { SecurityContext, Injectable, Optional, Inject, SkipSelf, ErrorHandler, InjectionToken, inject, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport * as i2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * The Trusted Types policy, or null if Trusted Types are not\n * enabled/supported, or undefined if the policy has not been created yet.\n */\nconst _c0 = [\"*\"];\nlet policy;\n/**\n * Returns the Trusted Types policy, or null if Trusted Types are not\n * enabled/supported. The first call to this function will create the policy.\n */\nfunction getPolicy() {\n  if (policy === undefined) {\n    policy = null;\n    if (typeof window !== 'undefined') {\n      const ttWindow = window;\n      if (ttWindow.trustedTypes !== undefined) {\n        policy = ttWindow.trustedTypes.createPolicy('angular#components', {\n          createHTML: s => s\n        });\n      }\n    }\n  }\n  return policy;\n}\n/**\n * Unsafely promote a string to a TrustedHTML, falling back to strings when\n * Trusted Types are not available.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that the\n * provided string will never cause an XSS vulnerability if used in a context\n * that will be interpreted as HTML by a browser, e.g. when assigning to\n * element.innerHTML.\n */\nfunction trustedHTMLFromString(html) {\n  return getPolicy()?.createHTML(html) || html;\n}\n\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nfunction getMatIconNameNotFoundError(iconName) {\n  return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n  return Error('Could not find HttpClient for use with Angular Material icons. ' + 'Please add provideHttpClient() to your providers.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n  return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` + `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n  return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` + `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n  constructor(url, svgText, options) {\n    this.url = url;\n    this.svgText = svgText;\n    this.options = options;\n  }\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nlet MatIconRegistry = /*#__PURE__*/(() => {\n  class MatIconRegistry {\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n      this._httpClient = _httpClient;\n      this._sanitizer = _sanitizer;\n      this._errorHandler = _errorHandler;\n      /**\n       * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n       */\n      this._svgIconConfigs = new Map();\n      /**\n       * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n       * Multiple icon sets can be registered under the same namespace.\n       */\n      this._iconSetConfigs = new Map();\n      /** Cache for icons loaded by direct URLs. */\n      this._cachedIconsByUrl = new Map();\n      /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n      this._inProgressUrlFetches = new Map();\n      /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n      this._fontCssClassesByAlias = new Map();\n      /** Registered icon resolver functions. */\n      this._resolvers = [];\n      /**\n       * The CSS classes to apply when an `<mat-icon>` component has no icon name, url, or font\n       * specified. The default 'material-icons' value assumes that the material icon font has been\n       * loaded as described at https://google.github.io/material-design-icons/#icon-font-for-the-web\n       */\n      this._defaultFontSetClass = ['material-icons', 'mat-ligature-font'];\n      this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIcon(iconName, url, options) {\n      return this.addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n      return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n      return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon resolver function with the registry. The function will be invoked with the\n     * name and namespace of an icon when the registry tries to resolve the URL from which to fetch\n     * the icon. The resolver is expected to return a `SafeResourceUrl` that points to the icon,\n     * an object with the icon URL and icon options, or `null` if the icon is not supported. Resolvers\n     * will be invoked in the order in which they have been registered.\n     * @param resolver Resolver function to be registered.\n     */\n    addSvgIconResolver(resolver) {\n      this._resolvers.push(resolver);\n      return this;\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n      const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n      // TODO: add an ngDevMode check\n      if (!cleanLiteral) {\n        throw getMatIconFailedToSanitizeLiteralError(literal);\n      }\n      // Security: The literal is passed in as SafeHtml, and is thus trusted.\n      const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n      return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    addSvgIconSet(url, options) {\n      return this.addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteral(literal, options) {\n      return this.addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n      return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n      const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n      if (!cleanLiteral) {\n        throw getMatIconFailedToSanitizeLiteralError(literal);\n      }\n      // Security: The literal is passed in as SafeHtml, and is thus trusted.\n      const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n      return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Defines an alias for CSS class names to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * If the registered font is a ligature font, then don't forget to also include the special\n     * class `mat-ligature-font` to allow the usage via attribute. So register like this:\n     *\n     * ```ts\n     * iconRegistry.registerFontClassAlias('f1', 'font1 mat-ligature-font');\n     * ```\n     *\n     * And use like this:\n     *\n     * ```html\n     * <mat-icon fontSet=\"f1\" fontIcon=\"home\"></mat-icon>\n     * ```\n     *\n     * @param alias Alias for the font.\n     * @param classNames Class names override to be used instead of the alias.\n     */\n    registerFontClassAlias(alias, classNames = alias) {\n      this._fontCssClassesByAlias.set(alias, classNames);\n      return this;\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    classNameForFontAlias(alias) {\n      return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS classes to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    setDefaultFontSetClass(...classNames) {\n      this._defaultFontSetClass = classNames;\n      return this;\n    }\n    /**\n     * Returns the CSS classes to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    getDefaultFontSetClass() {\n      return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    getSvgIconFromUrl(safeUrl) {\n      const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n      if (!url) {\n        throw getMatIconFailedToSanitizeUrlError(safeUrl);\n      }\n      const cachedIcon = this._cachedIconsByUrl.get(url);\n      if (cachedIcon) {\n        return of(cloneSvg(cachedIcon));\n      }\n      return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(tap(svg => this._cachedIconsByUrl.set(url, svg)), map(svg => cloneSvg(svg)));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    getNamedSvgIcon(name, namespace = '') {\n      const key = iconKey(namespace, name);\n      let config = this._svgIconConfigs.get(key);\n      // Return (copy of) cached icon if possible.\n      if (config) {\n        return this._getSvgFromConfig(config);\n      }\n      // Otherwise try to resolve the config from one of the resolver functions.\n      config = this._getIconConfigFromResolvers(namespace, name);\n      if (config) {\n        this._svgIconConfigs.set(key, config);\n        return this._getSvgFromConfig(config);\n      }\n      // See if we have any icon sets registered for the namespace.\n      const iconSetConfigs = this._iconSetConfigs.get(namespace);\n      if (iconSetConfigs) {\n        return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n      }\n      return throwError(getMatIconNameNotFoundError(key));\n    }\n    ngOnDestroy() {\n      this._resolvers = [];\n      this._svgIconConfigs.clear();\n      this._iconSetConfigs.clear();\n      this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    _getSvgFromConfig(config) {\n      if (config.svgText) {\n        // We already have the SVG element for this icon, return a copy.\n        return of(cloneSvg(this._svgElementFromConfig(config)));\n      } else {\n        // Fetch the icon from the config's URL, cache it, and return a copy.\n        return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n      }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n      // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n      // requested name.\n      const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n      if (namedIcon) {\n        // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n        // time anyway, there's probably not much advantage compared to just always extracting\n        // it from the icon set.\n        return of(namedIcon);\n      }\n      // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n      // fetched, fetch them now and look for iconName in the results.\n      const iconSetFetchRequests = iconSetConfigs.filter(iconSetConfig => !iconSetConfig.svgText).map(iconSetConfig => {\n        return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError(err => {\n          const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n          // Swallow errors fetching individual URLs so the\n          // combined Observable won't necessarily fail.\n          const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n          this._errorHandler.handleError(new Error(errorMessage));\n          return of(null);\n        }));\n      });\n      // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n      // cached SVG element (unless the request failed), and we can check again for the icon.\n      return forkJoin(iconSetFetchRequests).pipe(map(() => {\n        const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        // TODO: add an ngDevMode check\n        if (!foundIcon) {\n          throw getMatIconNameNotFoundError(name);\n        }\n        return foundIcon;\n      }));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n      // Iterate backwards, so icon sets added later have precedence.\n      for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n        const config = iconSetConfigs[i];\n        // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n        // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n        // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n        // some of the parsing.\n        if (config.svgText && config.svgText.toString().indexOf(iconName) > -1) {\n          const svg = this._svgElementFromConfig(config);\n          const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n          if (foundIcon) {\n            return foundIcon;\n          }\n        }\n      }\n      return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    _loadSvgIconFromConfig(config) {\n      return this._fetchIcon(config).pipe(tap(svgText => config.svgText = svgText), map(() => this._svgElementFromConfig(config)));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the\n     * SvgIconConfig and attaches it to the config.\n     */\n    _loadSvgIconSetFromConfig(config) {\n      if (config.svgText) {\n        return of(null);\n      }\n      return this._fetchIcon(config).pipe(tap(svgText => config.svgText = svgText));\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n      // Use the `id=\"iconName\"` syntax in order to escape special\n      // characters in the ID (versus using the #iconName syntax).\n      const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n      if (!iconSource) {\n        return null;\n      }\n      // Clone the element and remove the ID to prevent multiple elements from being added\n      // to the page with the same ID.\n      const iconElement = iconSource.cloneNode(true);\n      iconElement.removeAttribute('id');\n      // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n      // the content of a new <svg> node.\n      if (iconElement.nodeName.toLowerCase() === 'svg') {\n        return this._setSvgAttributes(iconElement, options);\n      }\n      // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n      // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n      // tag is problematic on Firefox, because it needs to include the current page path.\n      if (iconElement.nodeName.toLowerCase() === 'symbol') {\n        return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n      }\n      // createElement('SVG') doesn't work as expected; the DOM ends up with\n      // the correct nodes, but the SVG content doesn't render. Instead we\n      // have to create an empty SVG node using innerHTML and append its content.\n      // Elements created using DOMParser.parseFromString have the same problem.\n      // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n      const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n      // Clone the node so we don't remove it from the parent icon set element.\n      svg.appendChild(iconElement);\n      return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    _svgElementFromString(str) {\n      const div = this._document.createElement('DIV');\n      div.innerHTML = str;\n      const svg = div.querySelector('svg');\n      // TODO: add an ngDevMode check\n      if (!svg) {\n        throw Error('<svg> tag not found');\n      }\n      return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     */\n    _toSvgElement(element) {\n      const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n      const attributes = element.attributes;\n      // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n      for (let i = 0; i < attributes.length; i++) {\n        const {\n          name,\n          value\n        } = attributes[i];\n        if (name !== 'id') {\n          svg.setAttribute(name, value);\n        }\n      }\n      for (let i = 0; i < element.childNodes.length; i++) {\n        if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n          svg.appendChild(element.childNodes[i].cloneNode(true));\n        }\n      }\n      return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    _setSvgAttributes(svg, options) {\n      svg.setAttribute('fit', '');\n      svg.setAttribute('height', '100%');\n      svg.setAttribute('width', '100%');\n      svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n      svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n      if (options && options.viewBox) {\n        svg.setAttribute('viewBox', options.viewBox);\n      }\n      return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given icon. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    _fetchIcon(iconConfig) {\n      const {\n        url: safeUrl,\n        options\n      } = iconConfig;\n      const withCredentials = options?.withCredentials ?? false;\n      if (!this._httpClient) {\n        throw getMatIconNoHttpProviderError();\n      }\n      // TODO: add an ngDevMode check\n      if (safeUrl == null) {\n        throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n      }\n      const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n      // TODO: add an ngDevMode check\n      if (!url) {\n        throw getMatIconFailedToSanitizeUrlError(safeUrl);\n      }\n      // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n      // already a request in progress for that URL. It's necessary to call share() on the\n      // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n      const inProgressFetch = this._inProgressUrlFetches.get(url);\n      if (inProgressFetch) {\n        return inProgressFetch;\n      }\n      const req = this._httpClient.get(url, {\n        responseType: 'text',\n        withCredentials\n      }).pipe(map(svg => {\n        // Security: This SVG is fetched from a SafeResourceUrl, and is thus\n        // trusted HTML.\n        return trustedHTMLFromString(svg);\n      }), finalize(() => this._inProgressUrlFetches.delete(url)), share());\n      this._inProgressUrlFetches.set(url, req);\n      return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param iconName Name under which to register the config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n      this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n      return this;\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconSetConfig(namespace, config) {\n      const configNamespace = this._iconSetConfigs.get(namespace);\n      if (configNamespace) {\n        configNamespace.push(config);\n      } else {\n        this._iconSetConfigs.set(namespace, [config]);\n      }\n      return this;\n    }\n    /** Parses a config's text into an SVG element. */\n    _svgElementFromConfig(config) {\n      if (!config.svgElement) {\n        const svg = this._svgElementFromString(config.svgText);\n        this._setSvgAttributes(svg, config.options);\n        config.svgElement = svg;\n      }\n      return config.svgElement;\n    }\n    /** Tries to create an icon config through the registered resolver functions. */\n    _getIconConfigFromResolvers(namespace, name) {\n      for (let i = 0; i < this._resolvers.length; i++) {\n        const result = this._resolvers[i](name, namespace);\n        if (result) {\n          return isSafeUrlWithOptions(result) ? new SvgIconConfig(result.url, null, result.options) : new SvgIconConfig(result, null);\n        }\n      }\n      return undefined;\n    }\n    static {\n      this.ɵfac = function MatIconRegistry_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatIconRegistry)(i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(i2.DomSanitizer), i0.ɵɵinject(DOCUMENT, 8), i0.ɵɵinject(i0.ErrorHandler));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MatIconRegistry,\n        factory: MatIconRegistry.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return MatIconRegistry;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** @docs-private */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n  return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/** @docs-private */\nconst ICON_REGISTRY_PROVIDER = {\n  // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n  provide: MatIconRegistry,\n  deps: [[/*#__PURE__*/new Optional(), /*#__PURE__*/new SkipSelf(), MatIconRegistry], [/*#__PURE__*/new Optional(), HttpClient], DomSanitizer, ErrorHandler, [/*#__PURE__*/new Optional(), DOCUMENT]],\n  useFactory: ICON_REGISTRY_PROVIDER_FACTORY\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n  return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n  return namespace + ':' + name;\n}\nfunction isSafeUrlWithOptions(value) {\n  return !!(value.url && value.options);\n}\n\n/** Injection token to be used to override the default options for `mat-icon`. */\nconst MAT_ICON_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('MAT_ICON_DEFAULT_OPTIONS');\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = /*#__PURE__*/new InjectionToken('mat-icon-location', {\n  providedIn: 'root',\n  factory: MAT_ICON_LOCATION_FACTORY\n});\n/** @docs-private */\nfunction MAT_ICON_LOCATION_FACTORY() {\n  const _document = inject(DOCUMENT);\n  const _location = _document ? _document.location : null;\n  return {\n    // Note that this needs to be a function, rather than a property, because Angular\n    // will only resolve it once, but we want the current path on each call.\n    getPathname: () => _location ? _location.pathname + _location.search : ''\n  };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = ['clip-path', 'color-profile', 'src', 'cursor', 'fill', 'filter', 'marker', 'marker-start', 'marker-mid', 'marker-end', 'mask', 'stroke'];\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = /*#__PURE__*/ /*#__PURE__*/funcIriAttributes.map(attr => `[${attr}]`).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the `fontIcon` attribute or the\n *   content of the `<mat-icon>` component. If you register a custom font class, don't forget to also\n *   include the special class `mat-ligature-font`. It is recommended to use the attribute alternative\n *   to prevent the ligature text to be selectable and to appear in search engine results.\n *   By default, the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon fontIcon=\"home\"></mat-icon>\n *     <mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\" fontIcon=\"sun\"></mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nlet MatIcon = /*#__PURE__*/(() => {\n  class MatIcon {\n    /**\n     * Theme color of the icon. This API is supported in M2 themes only, it\n     * has no effect in M3 themes.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/theming#using-component-color-variants.\n     */\n    get color() {\n      return this._color || this._defaultColor;\n    }\n    set color(value) {\n      this._color = value;\n    }\n    /** Name of the icon in the SVG icon set. */\n    get svgIcon() {\n      return this._svgIcon;\n    }\n    set svgIcon(value) {\n      if (value !== this._svgIcon) {\n        if (value) {\n          this._updateSvgIcon(value);\n        } else if (this._svgIcon) {\n          this._clearSvgElement();\n        }\n        this._svgIcon = value;\n      }\n    }\n    /** Font set that the icon is a part of. */\n    get fontSet() {\n      return this._fontSet;\n    }\n    set fontSet(value) {\n      const newValue = this._cleanupFontValue(value);\n      if (newValue !== this._fontSet) {\n        this._fontSet = newValue;\n        this._updateFontIconClasses();\n      }\n    }\n    /** Name of an icon within a font set. */\n    get fontIcon() {\n      return this._fontIcon;\n    }\n    set fontIcon(value) {\n      const newValue = this._cleanupFontValue(value);\n      if (newValue !== this._fontIcon) {\n        this._fontIcon = newValue;\n        this._updateFontIconClasses();\n      }\n    }\n    constructor(_elementRef, _iconRegistry, ariaHidden, _location, _errorHandler, defaults) {\n      this._elementRef = _elementRef;\n      this._iconRegistry = _iconRegistry;\n      this._location = _location;\n      this._errorHandler = _errorHandler;\n      /**\n       * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n       * the element the icon is contained in.\n       */\n      this.inline = false;\n      this._previousFontSetClass = [];\n      /** Subscription to the current in-progress SVG icon request. */\n      this._currentIconFetch = Subscription.EMPTY;\n      if (defaults) {\n        if (defaults.color) {\n          this.color = this._defaultColor = defaults.color;\n        }\n        if (defaults.fontSet) {\n          this.fontSet = defaults.fontSet;\n        }\n      }\n      // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n      // the right thing to do for the majority of icon use-cases.\n      if (!ariaHidden) {\n        _elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n      }\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     */\n    _splitIconName(iconName) {\n      if (!iconName) {\n        return ['', ''];\n      }\n      const parts = iconName.split(':');\n      switch (parts.length) {\n        case 1:\n          return ['', parts[0]];\n        // Use default namespace.\n        case 2:\n          return parts;\n        default:\n          throw Error(`Invalid icon name: \"${iconName}\"`);\n        // TODO: add an ngDevMode check\n      }\n    }\n    ngOnInit() {\n      // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n      // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n      this._updateFontIconClasses();\n    }\n    ngAfterViewChecked() {\n      const cachedElements = this._elementsWithExternalReferences;\n      if (cachedElements && cachedElements.size) {\n        const newPath = this._location.getPathname();\n        // We need to check whether the URL has changed on each change detection since\n        // the browser doesn't have an API that will let us react on link clicks and\n        // we can't depend on the Angular router. The references need to be updated,\n        // because while most browsers don't care whether the URL is correct after\n        // the first render, Safari will break if the user navigates to a different\n        // page and the SVG isn't re-rendered.\n        if (newPath !== this._previousPath) {\n          this._previousPath = newPath;\n          this._prependPathToReferences(newPath);\n        }\n      }\n    }\n    ngOnDestroy() {\n      this._currentIconFetch.unsubscribe();\n      if (this._elementsWithExternalReferences) {\n        this._elementsWithExternalReferences.clear();\n      }\n    }\n    _usingFontIcon() {\n      return !this.svgIcon;\n    }\n    _setSvgElement(svg) {\n      this._clearSvgElement();\n      // Note: we do this fix here, rather than the icon registry, because the\n      // references have to point to the URL at the time that the icon was created.\n      const path = this._location.getPathname();\n      this._previousPath = path;\n      this._cacheChildrenWithExternalReferences(svg);\n      this._prependPathToReferences(path);\n      this._elementRef.nativeElement.appendChild(svg);\n    }\n    _clearSvgElement() {\n      const layoutElement = this._elementRef.nativeElement;\n      let childCount = layoutElement.childNodes.length;\n      if (this._elementsWithExternalReferences) {\n        this._elementsWithExternalReferences.clear();\n      }\n      // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n      // we can't use innerHTML, because IE will throw if the element has a data binding.\n      while (childCount--) {\n        const child = layoutElement.childNodes[childCount];\n        // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n        // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n        if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n          child.remove();\n        }\n      }\n    }\n    _updateFontIconClasses() {\n      if (!this._usingFontIcon()) {\n        return;\n      }\n      const elem = this._elementRef.nativeElement;\n      const fontSetClasses = (this.fontSet ? this._iconRegistry.classNameForFontAlias(this.fontSet).split(/ +/) : this._iconRegistry.getDefaultFontSetClass()).filter(className => className.length > 0);\n      this._previousFontSetClass.forEach(className => elem.classList.remove(className));\n      fontSetClasses.forEach(className => elem.classList.add(className));\n      this._previousFontSetClass = fontSetClasses;\n      if (this.fontIcon !== this._previousFontIconClass && !fontSetClasses.includes('mat-ligature-font')) {\n        if (this._previousFontIconClass) {\n          elem.classList.remove(this._previousFontIconClass);\n        }\n        if (this.fontIcon) {\n          elem.classList.add(this.fontIcon);\n        }\n        this._previousFontIconClass = this.fontIcon;\n      }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     */\n    _cleanupFontValue(value) {\n      return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     */\n    _prependPathToReferences(path) {\n      const elements = this._elementsWithExternalReferences;\n      if (elements) {\n        elements.forEach((attrs, element) => {\n          attrs.forEach(attr => {\n            element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n          });\n        });\n      }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     */\n    _cacheChildrenWithExternalReferences(element) {\n      const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n      const elements = this._elementsWithExternalReferences = this._elementsWithExternalReferences || new Map();\n      for (let i = 0; i < elementsWithFuncIri.length; i++) {\n        funcIriAttributes.forEach(attr => {\n          const elementWithReference = elementsWithFuncIri[i];\n          const value = elementWithReference.getAttribute(attr);\n          const match = value ? value.match(funcIriPattern) : null;\n          if (match) {\n            let attributes = elements.get(elementWithReference);\n            if (!attributes) {\n              attributes = [];\n              elements.set(elementWithReference, attributes);\n            }\n            attributes.push({\n              name: attr,\n              value: match[1]\n            });\n          }\n        });\n      }\n    }\n    /** Sets a new SVG icon with a particular name. */\n    _updateSvgIcon(rawName) {\n      this._svgNamespace = null;\n      this._svgName = null;\n      this._currentIconFetch.unsubscribe();\n      if (rawName) {\n        const [namespace, iconName] = this._splitIconName(rawName);\n        if (namespace) {\n          this._svgNamespace = namespace;\n        }\n        if (iconName) {\n          this._svgName = iconName;\n        }\n        this._currentIconFetch = this._iconRegistry.getNamedSvgIcon(iconName, namespace).pipe(take(1)).subscribe(svg => this._setSvgElement(svg), err => {\n          const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n          this._errorHandler.handleError(new Error(errorMessage));\n        });\n      }\n    }\n    static {\n      this.ɵfac = function MatIcon_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatIcon)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MatIconRegistry), i0.ɵɵinjectAttribute('aria-hidden'), i0.ɵɵdirectiveInject(MAT_ICON_LOCATION), i0.ɵɵdirectiveInject(i0.ErrorHandler), i0.ɵɵdirectiveInject(MAT_ICON_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatIcon,\n        selectors: [[\"mat-icon\"]],\n        hostAttrs: [\"role\", \"img\", 1, \"mat-icon\", \"notranslate\"],\n        hostVars: 10,\n        hostBindings: function MatIcon_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"data-mat-icon-type\", ctx._usingFontIcon() ? \"font\" : \"svg\")(\"data-mat-icon-name\", ctx._svgName || ctx.fontIcon)(\"data-mat-icon-namespace\", ctx._svgNamespace || ctx.fontSet)(\"fontIcon\", ctx._usingFontIcon() ? ctx.fontIcon : null);\n            i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n            i0.ɵɵclassProp(\"mat-icon-inline\", ctx.inline)(\"mat-icon-no-color\", ctx.color !== \"primary\" && ctx.color !== \"accent\" && ctx.color !== \"warn\");\n          }\n        },\n        inputs: {\n          color: \"color\",\n          inline: [2, \"inline\", \"inline\", booleanAttribute],\n          svgIcon: \"svgIcon\",\n          fontSet: \"fontSet\",\n          fontIcon: \"fontIcon\"\n        },\n        exportAs: [\"matIcon\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 1,\n        vars: 0,\n        template: function MatIcon_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n          }\n        },\n        styles: [\"mat-icon,mat-icon.mat-primary,mat-icon.mat-accent,mat-icon.mat-warn{color:var(--mat-icon-color)}.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatIcon;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatIconModule = /*#__PURE__*/(() => {\n  class MatIconModule {\n    static {\n      this.ɵfac = function MatIconModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatIconModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatIconModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatIconModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_DEFAULT_OPTIONS, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\nlet MatDivider = /*#__PURE__*/(() => {\n  class MatDivider {\n    constructor() {\n      this._vertical = false;\n      this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n    get vertical() {\n      return this._vertical;\n    }\n    set vertical(value) {\n      this._vertical = coerceBooleanProperty(value);\n    }\n    /** Whether the divider is an inset divider. */\n    get inset() {\n      return this._inset;\n    }\n    set inset(value) {\n      this._inset = coerceBooleanProperty(value);\n    }\n    static {\n      this.ɵfac = function MatDivider_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatDivider)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatDivider,\n        selectors: [[\"mat-divider\"]],\n        hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"],\n        hostVars: 7,\n        hostBindings: function MatDivider_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n            i0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n          }\n        },\n        inputs: {\n          vertical: \"vertical\",\n          inset: \"inset\"\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 0,\n        vars: 0,\n        template: function MatDivider_Template(rf, ctx) {},\n        styles: [\".mat-divider{display:block;margin:0;border-top-style:solid;border-top-color:var(--mat-divider-color, var(--mat-app-outline));border-top-width:var(--mat-divider-width)}.mat-divider.mat-divider-vertical{border-top:0;border-right-style:solid;border-right-color:var(--mat-divider-color, var(--mat-app-outline));border-right-width:var(--mat-divider-width)}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatDivider;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatDividerModule = /*#__PURE__*/(() => {\n  class MatDividerModule {\n    static {\n      this.ɵfac = function MatDividerModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatDividerModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatDividerModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatDividerModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n","import * as i1 from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, booleanAttribute, Directive, Input, numberAttribute, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { MatRippleLoader, MatCommonModule, MatRippleModule } from '@angular/material/core';\n\n/** Injection token that can be used to provide the default options the button component. */\nconst _c0 = [\"mat-button\", \"\"];\nconst _c1 = [[[\"\", 8, \"material-icons\", 3, \"iconPositionEnd\", \"\"], [\"mat-icon\", 3, \"iconPositionEnd\", \"\"], [\"\", \"matButtonIcon\", \"\", 3, \"iconPositionEnd\", \"\"]], \"*\", [[\"\", \"iconPositionEnd\", \"\", 8, \"material-icons\"], [\"mat-icon\", \"iconPositionEnd\", \"\"], [\"\", \"matButtonIcon\", \"\", \"iconPositionEnd\", \"\"]]];\nconst _c2 = [\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\", \"*\", \".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\"];\nconst _c3 = \".mat-mdc-button-base{text-decoration:none}.mdc-button{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0);padding:0 8px}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__label{position:relative}.mat-mdc-button{padding:0 var(--mat-text-button-horizontal-padding, 8px);height:var(--mdc-text-button-container-height);font-family:var(--mdc-text-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-text-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-text-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-text-button-label-text-transform);font-weight:var(--mdc-text-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-button:has(.material-icons,mat-icon,[matButtonIcon]){padding:0 var(--mat-text-button-with-icon-horizontal-padding, 8px)}.mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}[dir=rtl] .mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}.mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}.mat-mdc-button .mat-ripple-element{background-color:var(--mat-text-button-ripple-color)}.mat-mdc-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-text-button-touch-target-display)}.mat-mdc-button,.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color, var(--mat-app-primary))}.mat-mdc-button[disabled],.mat-mdc-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-text-button-disabled-label-text-color)}.mat-mdc-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-unelevated-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-filled-button-horizontal-padding, 16px);height:var(--mdc-filled-button-container-height);font-family:var(--mdc-filled-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-filled-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-filled-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-filled-button-label-text-transform);font-weight:var(--mdc-filled-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}.mat-mdc-unelevated-button .mat-ripple-element{background-color:var(--mat-filled-button-ripple-color)}.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-state-layer-color, var(--mat-app-on-primary))}.mat-mdc-unelevated-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-unelevated-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-filled-button-touch-target-display)}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color, var(--mat-app-on-primary));background-color:var(--mdc-filled-button-container-color, var(--mat-app-primary))}.mat-mdc-unelevated-button,.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-unelevated-button[disabled],.mat-mdc-unelevated-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-filled-button-disabled-label-text-color);background-color:var(--mdc-filled-button-disabled-container-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-raised-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-protected-button-horizontal-padding, 16px);box-shadow:var(--mdc-protected-button-container-elevation-shadow, var(--mat-app-level1));height:var(--mdc-protected-button-container-height);font-family:var(--mdc-protected-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-protected-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-protected-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-protected-button-label-text-transform);font-weight:var(--mdc-protected-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}.mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}.mat-mdc-raised-button .mat-ripple-element{background-color:var(--mat-protected-button-ripple-color)}.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-raised-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-raised-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-protected-button-touch-target-display)}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color, var(--mat-app-primary));background-color:var(--mdc-protected-button-container-color, var(--mat-app-surface))}.mat-mdc-raised-button,.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation-shadow, var(--mat-app-level2))}.mat-mdc-raised-button:focus{box-shadow:var(--mdc-protected-button-focus-container-elevation-shadow, var(--mat-app-level1))}.mat-mdc-raised-button:active,.mat-mdc-raised-button:focus:active{box-shadow:var(--mdc-protected-button-pressed-container-elevation-shadow, var(--mat-app-level1))}.mat-mdc-raised-button[disabled],.mat-mdc-raised-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-protected-button-disabled-label-text-color);background-color:var(--mdc-protected-button-disabled-container-color)}.mat-mdc-raised-button[disabled].mat-mdc-button-disabled,.mat-mdc-raised-button.mat-mdc-button-disabled.mat-mdc-button-disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation-shadow, var(--mat-app-level0))}.mat-mdc-raised-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-outlined-button-horizontal-padding, 15px);height:var(--mdc-outlined-button-container-height);font-family:var(--mdc-outlined-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-outlined-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-outlined-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-outlined-button-label-text-transform);font-weight:var(--mdc-outlined-button-label-text-weight, var(--mat-app-label-large-weight));border-radius:var(--mdc-outlined-button-container-shape, var(--mat-app-corner-full));border-width:var(--mdc-outlined-button-outline-width)}.mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-outlined-button-ripple-color)}.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-outlined-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-outlined-button-touch-target-display)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color, var(--mat-app-primary));border-color:var(--mdc-outlined-button-outline-color, var(--mat-app-outline))}.mat-mdc-outlined-button[disabled],.mat-mdc-outlined-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-outlined-button-disabled-label-text-color);border-color:var(--mdc-outlined-button-disabled-outline-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button .mdc-button__ripple{border-width:var(--mdc-outlined-button-outline-width);border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-button .mdc-button__label,.mat-mdc-button .mat-icon,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-unelevated-button .mat-icon,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-raised-button .mat-icon,.mat-mdc-outlined-button .mdc-button__label,.mat-mdc-outlined-button .mat-icon{z-index:1;position:relative}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px)*-1)}\";\nconst _c4 = \".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}\";\nconst _c5 = [\"mat-fab\", \"\"];\nconst _c6 = [\"mat-mini-fab\", \"\"];\nconst _c7 = \".mat-mdc-fab-base{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);flex-shrink:0}.mat-mdc-fab-base .mat-mdc-button-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab-base .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab-base .mdc-button__label,.mat-mdc-fab-base .mat-icon{z-index:1;position:relative}.mat-mdc-fab-base .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab-base:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab-base._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab-base::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-fab-base[hidden]{display:none}.mat-mdc-fab-base::-moz-focus-inner{padding:0;border:0}.mat-mdc-fab-base:active,.mat-mdc-fab-base:focus{outline:none}.mat-mdc-fab-base:hover{cursor:pointer}.mat-mdc-fab-base>svg{width:100%}.mat-mdc-fab-base .mat-icon,.mat-mdc-fab-base .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab-base .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base[disabled]:focus,.mat-mdc-fab-base.mat-mdc-button-disabled,.mat-mdc-fab-base.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab-base.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{background-color:var(--mdc-fab-container-color, var(--mat-app-primary-container));border-radius:var(--mdc-fab-container-shape, var(--mat-app-corner-large));color:var(--mat-fab-foreground-color, var(--mat-app-on-primary-container, inherit));box-shadow:var(--mdc-fab-container-elevation-shadow, var(--mat-app-level3))}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-touch-target-display)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color)}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color, var(--mat-app-on-primary-container))}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-fab:hover{box-shadow:var(--mdc-fab-hover-container-elevation-shadow, var(--mat-app-level4))}.mat-mdc-fab:focus{box-shadow:var(--mdc-fab-focus-container-elevation-shadow, var(--mat-app-level3))}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mdc-fab-pressed-container-elevation-shadow, var(--mat-app-level3))}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color);background-color:var(--mat-fab-disabled-state-container-color)}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab{width:40px;height:40px;background-color:var(--mdc-fab-small-container-color, var(--mat-app-primary-container));border-radius:var(--mdc-fab-small-container-shape, var(--mat-app-corner-medium));color:var(--mat-fab-small-foreground-color, var(--mat-app-on-primary-container, inherit));box-shadow:var(--mdc-fab-small-container-elevation-shadow, var(--mat-app-level3))}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-small-touch-target-display)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color)}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color, var(--mat-app-on-primary-container))}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-mini-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-mini-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-mini-fab:hover{box-shadow:var(--mdc-fab-small-hover-container-elevation-shadow, var(--mat-app-level4))}.mat-mdc-mini-fab:focus{box-shadow:var(--mdc-fab-small-focus-container-elevation-shadow, var(--mat-app-level3))}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mdc-fab-small-pressed-container-elevation-shadow, var(--mat-app-level3))}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color);background-color:var(--mat-fab-small-disabled-state-container-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;line-height:normal;box-shadow:var(--mdc-extended-fab-container-elevation-shadow, var(--mat-app-level3));height:var(--mdc-extended-fab-container-height);border-radius:var(--mdc-extended-fab-container-shape, var(--mat-app-corner-large));font-family:var(--mdc-extended-fab-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-extended-fab-label-text-size, var(--mat-app-label-large-size));font-weight:var(--mdc-extended-fab-label-text-weight, var(--mat-app-label-large-weight));letter-spacing:var(--mdc-extended-fab-label-text-tracking, var(--mat-app-label-large-tracking))}.mat-mdc-extended-fab:hover{box-shadow:var(--mdc-extended-fab-hover-container-elevation-shadow, var(--mat-app-level4))}.mat-mdc-extended-fab:focus{box-shadow:var(--mdc-extended-fab-focus-container-elevation-shadow, var(--mat-app-level3))}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mdc-extended-fab-pressed-container-elevation-shadow, var(--mat-app-level3))}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:-8px;margin-right:12px}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons,[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons{margin-left:12px;margin-right:-8px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}\";\nconst _c8 = [\"mat-icon-button\", \"\"];\nconst _c9 = [\"*\"];\nconst _c10 = \".mat-mdc-icon-button{-webkit-user-select:none;user-select:none;display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;z-index:0;overflow:visible;border-radius:50%;flex-shrink:0;text-align:center;width:var(--mdc-icon-button-state-layer-size, 48px);height:var(--mdc-icon-button-state-layer-size, 48px);padding:calc(calc(var(--mdc-icon-button-state-layer-size, 48px) - var(--mdc-icon-button-icon-size, 24px)) / 2);font-size:var(--mdc-icon-button-icon-size);color:var(--mdc-icon-button-icon-color, var(--mat-app-on-surface-variant));-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button img,.mat-mdc-icon-button svg{width:var(--mdc-icon-button-icon-size);height:var(--mdc-icon-button-icon-size);vertical-align:baseline}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-icon-button .mdc-button__label,.mat-mdc-icon-button .mat-icon{z-index:1;position:relative}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color)}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-icon-button-touch-target-display)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button[hidden]{display:none}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}\";\nconst MAT_BUTTON_CONFIG = /*#__PURE__*/new InjectionToken('MAT_BUTTON_CONFIG');\n/** Shared host configuration for all buttons */\nconst MAT_BUTTON_HOST = {\n  '[attr.disabled]': '_getDisabledAttribute()',\n  '[attr.aria-disabled]': '_getAriaDisabled()',\n  '[class.mat-mdc-button-disabled]': 'disabled',\n  '[class.mat-mdc-button-disabled-interactive]': 'disabledInteractive',\n  '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  // MDC automatically applies the primary theme color to the button, but we want to support\n  // an unthemed version. If color is undefined, apply a CSS class that makes it easy to\n  // select and style this \"theme\".\n  '[class.mat-unthemed]': '!color',\n  // Add a class that applies to all buttons. This makes it easier to target if somebody\n  // wants to target all Material buttons.\n  '[class.mat-mdc-button-base]': 'true',\n  '[class]': 'color ? \"mat-\" + color : \"\"'\n};\n/** List of classes to add to buttons instances based on host attribute selector. */\nconst HOST_SELECTOR_MDC_CLASS_PAIR = [{\n  attribute: 'mat-button',\n  mdcClasses: ['mdc-button', 'mat-mdc-button']\n}, {\n  attribute: 'mat-flat-button',\n  mdcClasses: ['mdc-button', 'mdc-button--unelevated', 'mat-mdc-unelevated-button']\n}, {\n  attribute: 'mat-raised-button',\n  mdcClasses: ['mdc-button', 'mdc-button--raised', 'mat-mdc-raised-button']\n}, {\n  attribute: 'mat-stroked-button',\n  mdcClasses: ['mdc-button', 'mdc-button--outlined', 'mat-mdc-outlined-button']\n}, {\n  attribute: 'mat-fab',\n  mdcClasses: ['mdc-fab', 'mat-mdc-fab-base', 'mat-mdc-fab']\n}, {\n  attribute: 'mat-mini-fab',\n  mdcClasses: ['mdc-fab', 'mat-mdc-fab-base', 'mdc-fab--mini', 'mat-mdc-mini-fab']\n}, {\n  attribute: 'mat-icon-button',\n  mdcClasses: ['mdc-icon-button', 'mat-mdc-icon-button']\n}];\n/** Base class for all buttons.  */\nlet MatButtonBase = /*#__PURE__*/(() => {\n  class MatButtonBase {\n    /**\n     * Reference to the MatRipple instance of the button.\n     * @deprecated Considered an implementation detail. To be removed.\n     * @breaking-change 17.0.0\n     */\n    get ripple() {\n      return this._rippleLoader?.getRipple(this._elementRef.nativeElement);\n    }\n    set ripple(v) {\n      this._rippleLoader?.attachRipple(this._elementRef.nativeElement, v);\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n      return this._disableRipple;\n    }\n    set disableRipple(value) {\n      this._disableRipple = value;\n      this._updateRippleDisabled();\n    }\n    /** Whether the button is disabled. */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n      this._updateRippleDisabled();\n    }\n    constructor(_elementRef, _platform, _ngZone, _animationMode) {\n      this._elementRef = _elementRef;\n      this._platform = _platform;\n      this._ngZone = _ngZone;\n      this._animationMode = _animationMode;\n      this._focusMonitor = inject(FocusMonitor);\n      /**\n       * Handles the lazy creation of the MatButton ripple.\n       * Used to improve initial load time of large applications.\n       */\n      this._rippleLoader = inject(MatRippleLoader);\n      /** Whether this button is a FAB. Used to apply the correct class on the ripple. */\n      this._isFab = false;\n      this._disableRipple = false;\n      this._disabled = false;\n      const config = inject(MAT_BUTTON_CONFIG, {\n        optional: true\n      });\n      const element = _elementRef.nativeElement;\n      const classList = element.classList;\n      this.disabledInteractive = config?.disabledInteractive ?? false;\n      this.color = config?.color ?? null;\n      this._rippleLoader?.configureRipple(element, {\n        className: 'mat-mdc-button-ripple'\n      });\n      // For each of the variant selectors that is present in the button's host\n      // attributes, add the correct corresponding MDC classes.\n      for (const {\n        attribute,\n        mdcClasses\n      } of HOST_SELECTOR_MDC_CLASS_PAIR) {\n        if (element.hasAttribute(attribute)) {\n          classList.add(...mdcClasses);\n        }\n      }\n    }\n    ngAfterViewInit() {\n      this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n      this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);\n    }\n    /** Focuses the button. */\n    focus(origin = 'program', options) {\n      if (origin) {\n        this._focusMonitor.focusVia(this._elementRef.nativeElement, origin, options);\n      } else {\n        this._elementRef.nativeElement.focus(options);\n      }\n    }\n    _getAriaDisabled() {\n      if (this.ariaDisabled != null) {\n        return this.ariaDisabled;\n      }\n      return this.disabled && this.disabledInteractive ? true : null;\n    }\n    _getDisabledAttribute() {\n      return this.disabledInteractive || !this.disabled ? null : true;\n    }\n    _updateRippleDisabled() {\n      this._rippleLoader?.setDisabled(this._elementRef.nativeElement, this.disableRipple || this.disabled);\n    }\n    static {\n      this.ɵfac = function MatButtonBase_Factory(__ngFactoryType__) {\n        i0.ɵɵinvalidFactory();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatButtonBase,\n        inputs: {\n          color: \"color\",\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          ariaDisabled: [2, \"aria-disabled\", \"ariaDisabled\", booleanAttribute],\n          disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute]\n        },\n        features: [i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return MatButtonBase;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Shared host configuration for buttons using the `<a>` tag. */\nconst MAT_ANCHOR_HOST = {\n  '[attr.disabled]': '_getDisabledAttribute()',\n  '[class.mat-mdc-button-disabled]': 'disabled',\n  '[class.mat-mdc-button-disabled-interactive]': 'disabledInteractive',\n  '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  // Note that we ignore the user-specified tabindex when it's disabled for\n  // consistency with the `mat-button` applied on native buttons where even\n  // though they have an index, they're not tabbable.\n  '[attr.tabindex]': 'disabled && !disabledInteractive ? -1 : tabIndex',\n  '[attr.aria-disabled]': '_getDisabledAttribute()',\n  // MDC automatically applies the primary theme color to the button, but we want to support\n  // an unthemed version. If color is undefined, apply a CSS class that makes it easy to\n  // select and style this \"theme\".\n  '[class.mat-unthemed]': '!color',\n  // Add a class that applies to all buttons. This makes it easier to target if somebody\n  // wants to target all Material buttons.\n  '[class.mat-mdc-button-base]': 'true',\n  '[class]': 'color ? \"mat-\" + color : \"\"'\n};\n/**\n * Anchor button base.\n */\nlet MatAnchorBase = /*#__PURE__*/(() => {\n  class MatAnchorBase extends MatButtonBase {\n    constructor(elementRef, platform, ngZone, animationMode) {\n      super(elementRef, platform, ngZone, animationMode);\n      this._haltDisabledEvents = event => {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n          event.preventDefault();\n          event.stopImmediatePropagation();\n        }\n      };\n    }\n    ngOnInit() {\n      this._ngZone.runOutsideAngular(() => {\n        this._elementRef.nativeElement.addEventListener('click', this._haltDisabledEvents);\n      });\n    }\n    ngOnDestroy() {\n      super.ngOnDestroy();\n      this._elementRef.nativeElement.removeEventListener('click', this._haltDisabledEvents);\n    }\n    _getAriaDisabled() {\n      return this.ariaDisabled == null ? this.disabled : this.ariaDisabled;\n    }\n    static {\n      this.ɵfac = function MatAnchorBase_Factory(__ngFactoryType__) {\n        i0.ɵɵinvalidFactory();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatAnchorBase,\n        inputs: {\n          tabIndex: [2, \"tabIndex\", \"tabIndex\", value => {\n            return value == null ? undefined : numberAttribute(value);\n          }]\n        },\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatAnchorBase;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Material Design button component. Users interact with a button to perform an action.\n * See https://material.io/components/buttons\n *\n * The `MatButton` class applies to native button elements and captures the appearances for\n * \"text button\", \"outlined button\", and \"contained button\" per the Material Design\n * specification. `MatButton` additionally captures an additional \"flat\" appearance, which matches\n * \"contained\" but without elevation.\n */\nlet MatButton = /*#__PURE__*/(() => {\n  class MatButton extends MatButtonBase {\n    constructor(elementRef, platform, ngZone, animationMode) {\n      super(elementRef, platform, ngZone, animationMode);\n    }\n    static {\n      this.ɵfac = function MatButton_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatButton)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatButton,\n        selectors: [[\"button\", \"mat-button\", \"\"], [\"button\", \"mat-raised-button\", \"\"], [\"button\", \"mat-flat-button\", \"\"], [\"button\", \"mat-stroked-button\", \"\"]],\n        hostVars: 14,\n        hostBindings: function MatButton_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"disabled\", ctx._getDisabledAttribute())(\"aria-disabled\", ctx._getAriaDisabled());\n            i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n            i0.ɵɵclassProp(\"mat-mdc-button-disabled\", ctx.disabled)(\"mat-mdc-button-disabled-interactive\", ctx.disabledInteractive)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-unthemed\", !ctx.color)(\"mat-mdc-button-base\", true);\n          }\n        },\n        exportAs: [\"matButton\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        attrs: _c0,\n        ngContentSelectors: _c2,\n        decls: 7,\n        vars: 4,\n        consts: [[1, \"mat-mdc-button-persistent-ripple\"], [1, \"mdc-button__label\"], [1, \"mat-mdc-focus-indicator\"], [1, \"mat-mdc-button-touch-target\"]],\n        template: function MatButton_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c1);\n            i0.ɵɵelement(0, \"span\", 0);\n            i0.ɵɵprojection(1);\n            i0.ɵɵelementStart(2, \"span\", 1);\n            i0.ɵɵprojection(3, 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵprojection(4, 2);\n            i0.ɵɵelement(5, \"span\", 2)(6, \"span\", 3);\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-button__ripple\", !ctx._isFab)(\"mdc-fab__ripple\", ctx._isFab);\n          }\n        },\n        styles: [\".mat-mdc-button-base{text-decoration:none}.mdc-button{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0);padding:0 8px}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__label{position:relative}.mat-mdc-button{padding:0 var(--mat-text-button-horizontal-padding, 8px);height:var(--mdc-text-button-container-height);font-family:var(--mdc-text-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-text-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-text-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-text-button-label-text-transform);font-weight:var(--mdc-text-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-button:has(.material-icons,mat-icon,[matButtonIcon]){padding:0 var(--mat-text-button-with-icon-horizontal-padding, 8px)}.mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}[dir=rtl] .mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}.mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}.mat-mdc-button .mat-ripple-element{background-color:var(--mat-text-button-ripple-color)}.mat-mdc-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-text-button-touch-target-display)}.mat-mdc-button,.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color, var(--mat-app-primary))}.mat-mdc-button[disabled],.mat-mdc-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-text-button-disabled-label-text-color)}.mat-mdc-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-unelevated-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-filled-button-horizontal-padding, 16px);height:var(--mdc-filled-button-container-height);font-family:var(--mdc-filled-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-filled-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-filled-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-filled-button-label-text-transform);font-weight:var(--mdc-filled-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}.mat-mdc-unelevated-button .mat-ripple-element{background-color:var(--mat-filled-button-ripple-color)}.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-state-layer-color, var(--mat-app-on-primary))}.mat-mdc-unelevated-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-unelevated-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-filled-button-touch-target-display)}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color, var(--mat-app-on-primary));background-color:var(--mdc-filled-button-container-color, var(--mat-app-primary))}.mat-mdc-unelevated-button,.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-unelevated-button[disabled],.mat-mdc-unelevated-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-filled-button-disabled-label-text-color);background-color:var(--mdc-filled-button-disabled-container-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-raised-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-protected-button-horizontal-padding, 16px);box-shadow:var(--mdc-protected-button-container-elevation-shadow, var(--mat-app-level1));height:var(--mdc-protected-button-container-height);font-family:var(--mdc-protected-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-protected-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-protected-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-protected-button-label-text-transform);font-weight:var(--mdc-protected-button-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}.mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}.mat-mdc-raised-button .mat-ripple-element{background-color:var(--mat-protected-button-ripple-color)}.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-raised-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-raised-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-protected-button-touch-target-display)}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color, var(--mat-app-primary));background-color:var(--mdc-protected-button-container-color, var(--mat-app-surface))}.mat-mdc-raised-button,.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape, var(--mat-app-corner-full))}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation-shadow, var(--mat-app-level2))}.mat-mdc-raised-button:focus{box-shadow:var(--mdc-protected-button-focus-container-elevation-shadow, var(--mat-app-level1))}.mat-mdc-raised-button:active,.mat-mdc-raised-button:focus:active{box-shadow:var(--mdc-protected-button-pressed-container-elevation-shadow, var(--mat-app-level1))}.mat-mdc-raised-button[disabled],.mat-mdc-raised-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-protected-button-disabled-label-text-color);background-color:var(--mdc-protected-button-disabled-container-color)}.mat-mdc-raised-button[disabled].mat-mdc-button-disabled,.mat-mdc-raised-button.mat-mdc-button-disabled.mat-mdc-button-disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation-shadow, var(--mat-app-level0))}.mat-mdc-raised-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-outlined-button-horizontal-padding, 15px);height:var(--mdc-outlined-button-container-height);font-family:var(--mdc-outlined-button-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-outlined-button-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mdc-outlined-button-label-text-tracking, var(--mat-app-label-large-tracking));text-transform:var(--mdc-outlined-button-label-text-transform);font-weight:var(--mdc-outlined-button-label-text-weight, var(--mat-app-label-large-weight));border-radius:var(--mdc-outlined-button-container-shape, var(--mat-app-corner-full));border-width:var(--mdc-outlined-button-outline-width)}.mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-outlined-button-ripple-color)}.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-state-layer-color, var(--mat-app-primary))}.mat-mdc-outlined-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-outlined-button-touch-target-display)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color, var(--mat-app-primary));border-color:var(--mdc-outlined-button-outline-color, var(--mat-app-outline))}.mat-mdc-outlined-button[disabled],.mat-mdc-outlined-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-outlined-button-disabled-label-text-color);border-color:var(--mdc-outlined-button-disabled-outline-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button .mdc-button__ripple{border-width:var(--mdc-outlined-button-outline-width);border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-button .mdc-button__label,.mat-mdc-button .mat-icon,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-unelevated-button .mat-icon,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-raised-button .mat-icon,.mat-mdc-outlined-button .mdc-button__label,.mat-mdc-outlined-button .mat-icon{z-index:1;position:relative}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px)*-1)}\", \".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatButton;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Material Design button component for anchor elements. Anchor elements are used to provide\n * links for the user to navigate across different routes or pages.\n * See https://material.io/components/buttons\n *\n * The `MatAnchor` class applies to native anchor elements and captures the appearances for\n * \"text button\", \"outlined button\", and \"contained button\" per the Material Design\n * specification. `MatAnchor` additionally captures an additional \"flat\" appearance, which matches\n * \"contained\" but without elevation.\n */\nlet MatAnchor = /*#__PURE__*/(() => {\n  class MatAnchor extends MatAnchorBase {\n    constructor(elementRef, platform, ngZone, animationMode) {\n      super(elementRef, platform, ngZone, animationMode);\n    }\n    static {\n      this.ɵfac = function MatAnchor_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatAnchor)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatAnchor,\n        selectors: [[\"a\", \"mat-button\", \"\"], [\"a\", \"mat-raised-button\", \"\"], [\"a\", \"mat-flat-button\", \"\"], [\"a\", \"mat-stroked-button\", \"\"]],\n        hostVars: 15,\n        hostBindings: function MatAnchor_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"disabled\", ctx._getDisabledAttribute())(\"tabindex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex)(\"aria-disabled\", ctx._getDisabledAttribute());\n            i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n            i0.ɵɵclassProp(\"mat-mdc-button-disabled\", ctx.disabled)(\"mat-mdc-button-disabled-interactive\", ctx.disabledInteractive)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-unthemed\", !ctx.color)(\"mat-mdc-button-base\", true);\n          }\n        },\n        exportAs: [\"matButton\", \"matAnchor\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        attrs: _c0,\n        ngContentSelectors: _c2,\n        decls: 7,\n        vars: 4,\n        consts: [[1, \"mat-mdc-button-persistent-ripple\"], [1, \"mdc-button__label\"], [1, \"mat-mdc-focus-indicator\"], [1, \"mat-mdc-button-touch-target\"]],\n        template: function MatAnchor_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c1);\n            i0.ɵɵelement(0, \"span\", 0);\n            i0.ɵɵprojection(1);\n            i0.ɵɵelementStart(2, \"span\", 1);\n            i0.ɵɵprojection(3, 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵprojection(4, 2);\n            i0.ɵɵelement(5, \"span\", 2)(6, \"span\", 3);\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-button__ripple\", !ctx._isFab)(\"mdc-fab__ripple\", ctx._isFab);\n          }\n        },\n        styles: [_c3, _c4],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatAnchor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Injection token to be used to override the default options for FAB. */\nconst MAT_FAB_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('mat-mdc-fab-default-options', {\n  providedIn: 'root',\n  factory: MAT_FAB_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_FAB_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    // The FAB by default has its color set to accent.\n    color: 'accent'\n  };\n}\n// Default FAB configuration.\nconst defaults = /*#__PURE__*/MAT_FAB_DEFAULT_OPTIONS_FACTORY();\n/**\n * Material Design floating action button (FAB) component. These buttons represent the primary\n * or most common action for users to interact with.\n * See https://material.io/components/buttons-floating-action-button/\n *\n * The `MatFabButton` class has two appearances: normal and extended.\n */\nlet MatFabButton = /*#__PURE__*/(() => {\n  class MatFabButton extends MatButtonBase {\n    constructor(elementRef, platform, ngZone, animationMode, _options) {\n      super(elementRef, platform, ngZone, animationMode);\n      this._options = _options;\n      this._isFab = true;\n      this._options = this._options || defaults;\n      this.color = this._options.color || defaults.color;\n    }\n    static {\n      this.ɵfac = function MatFabButton_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatFabButton)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_FAB_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatFabButton,\n        selectors: [[\"button\", \"mat-fab\", \"\"]],\n        hostVars: 18,\n        hostBindings: function MatFabButton_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"disabled\", ctx._getDisabledAttribute())(\"aria-disabled\", ctx._getAriaDisabled());\n            i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n            i0.ɵɵclassProp(\"mat-mdc-button-disabled\", ctx.disabled)(\"mat-mdc-button-disabled-interactive\", ctx.disabledInteractive)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-unthemed\", !ctx.color)(\"mat-mdc-button-base\", true)(\"mdc-fab--extended\", ctx.extended)(\"mat-mdc-extended-fab\", ctx.extended);\n          }\n        },\n        inputs: {\n          extended: [2, \"extended\", \"extended\", booleanAttribute]\n        },\n        exportAs: [\"matButton\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        attrs: _c5,\n        ngContentSelectors: _c2,\n        decls: 7,\n        vars: 4,\n        consts: [[1, \"mat-mdc-button-persistent-ripple\"], [1, \"mdc-button__label\"], [1, \"mat-mdc-focus-indicator\"], [1, \"mat-mdc-button-touch-target\"]],\n        template: function MatFabButton_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c1);\n            i0.ɵɵelement(0, \"span\", 0);\n            i0.ɵɵprojection(1);\n            i0.ɵɵelementStart(2, \"span\", 1);\n            i0.ɵɵprojection(3, 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵprojection(4, 2);\n            i0.ɵɵelement(5, \"span\", 2)(6, \"span\", 3);\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-button__ripple\", !ctx._isFab)(\"mdc-fab__ripple\", ctx._isFab);\n          }\n        },\n        styles: [\".mat-mdc-fab-base{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);flex-shrink:0}.mat-mdc-fab-base .mat-mdc-button-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab-base .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab-base .mdc-button__label,.mat-mdc-fab-base .mat-icon{z-index:1;position:relative}.mat-mdc-fab-base .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab-base:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab-base._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab-base::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-fab-base[hidden]{display:none}.mat-mdc-fab-base::-moz-focus-inner{padding:0;border:0}.mat-mdc-fab-base:active,.mat-mdc-fab-base:focus{outline:none}.mat-mdc-fab-base:hover{cursor:pointer}.mat-mdc-fab-base>svg{width:100%}.mat-mdc-fab-base .mat-icon,.mat-mdc-fab-base .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab-base .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base[disabled]:focus,.mat-mdc-fab-base.mat-mdc-button-disabled,.mat-mdc-fab-base.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab-base.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{background-color:var(--mdc-fab-container-color, var(--mat-app-primary-container));border-radius:var(--mdc-fab-container-shape, var(--mat-app-corner-large));color:var(--mat-fab-foreground-color, var(--mat-app-on-primary-container, inherit));box-shadow:var(--mdc-fab-container-elevation-shadow, var(--mat-app-level3))}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-touch-target-display)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color)}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color, var(--mat-app-on-primary-container))}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-fab:hover{box-shadow:var(--mdc-fab-hover-container-elevation-shadow, var(--mat-app-level4))}.mat-mdc-fab:focus{box-shadow:var(--mdc-fab-focus-container-elevation-shadow, var(--mat-app-level3))}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mdc-fab-pressed-container-elevation-shadow, var(--mat-app-level3))}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color);background-color:var(--mat-fab-disabled-state-container-color)}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab{width:40px;height:40px;background-color:var(--mdc-fab-small-container-color, var(--mat-app-primary-container));border-radius:var(--mdc-fab-small-container-shape, var(--mat-app-corner-medium));color:var(--mat-fab-small-foreground-color, var(--mat-app-on-primary-container, inherit));box-shadow:var(--mdc-fab-small-container-elevation-shadow, var(--mat-app-level3))}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-small-touch-target-display)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color)}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color, var(--mat-app-on-primary-container))}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-mini-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-mini-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-mini-fab:hover{box-shadow:var(--mdc-fab-small-hover-container-elevation-shadow, var(--mat-app-level4))}.mat-mdc-mini-fab:focus{box-shadow:var(--mdc-fab-small-focus-container-elevation-shadow, var(--mat-app-level3))}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mdc-fab-small-pressed-container-elevation-shadow, var(--mat-app-level3))}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color);background-color:var(--mat-fab-small-disabled-state-container-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;line-height:normal;box-shadow:var(--mdc-extended-fab-container-elevation-shadow, var(--mat-app-level3));height:var(--mdc-extended-fab-container-height);border-radius:var(--mdc-extended-fab-container-shape, var(--mat-app-corner-large));font-family:var(--mdc-extended-fab-label-text-font, var(--mat-app-label-large-font));font-size:var(--mdc-extended-fab-label-text-size, var(--mat-app-label-large-size));font-weight:var(--mdc-extended-fab-label-text-weight, var(--mat-app-label-large-weight));letter-spacing:var(--mdc-extended-fab-label-text-tracking, var(--mat-app-label-large-tracking))}.mat-mdc-extended-fab:hover{box-shadow:var(--mdc-extended-fab-hover-container-elevation-shadow, var(--mat-app-level4))}.mat-mdc-extended-fab:focus{box-shadow:var(--mdc-extended-fab-focus-container-elevation-shadow, var(--mat-app-level3))}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mdc-extended-fab-pressed-container-elevation-shadow, var(--mat-app-level3))}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:-8px;margin-right:12px}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons,[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons{margin-left:12px;margin-right:-8px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatFabButton;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Material Design mini floating action button (FAB) component. These buttons represent the primary\n * or most common action for users to interact with.\n * See https://material.io/components/buttons-floating-action-button/\n */\nlet MatMiniFabButton = /*#__PURE__*/(() => {\n  class MatMiniFabButton extends MatButtonBase {\n    constructor(elementRef, platform, ngZone, animationMode, _options) {\n      super(elementRef, platform, ngZone, animationMode);\n      this._options = _options;\n      this._isFab = true;\n      this._options = this._options || defaults;\n      this.color = this._options.color || defaults.color;\n    }\n    static {\n      this.ɵfac = function MatMiniFabButton_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatMiniFabButton)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_FAB_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatMiniFabButton,\n        selectors: [[\"button\", \"mat-mini-fab\", \"\"]],\n        hostVars: 14,\n        hostBindings: function MatMiniFabButton_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"disabled\", ctx._getDisabledAttribute())(\"aria-disabled\", ctx._getAriaDisabled());\n            i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n            i0.ɵɵclassProp(\"mat-mdc-button-disabled\", ctx.disabled)(\"mat-mdc-button-disabled-interactive\", ctx.disabledInteractive)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-unthemed\", !ctx.color)(\"mat-mdc-button-base\", true);\n          }\n        },\n        exportAs: [\"matButton\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        attrs: _c6,\n        ngContentSelectors: _c2,\n        decls: 7,\n        vars: 4,\n        consts: [[1, \"mat-mdc-button-persistent-ripple\"], [1, \"mdc-button__label\"], [1, \"mat-mdc-focus-indicator\"], [1, \"mat-mdc-button-touch-target\"]],\n        template: function MatMiniFabButton_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c1);\n            i0.ɵɵelement(0, \"span\", 0);\n            i0.ɵɵprojection(1);\n            i0.ɵɵelementStart(2, \"span\", 1);\n            i0.ɵɵprojection(3, 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵprojection(4, 2);\n            i0.ɵɵelement(5, \"span\", 2)(6, \"span\", 3);\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-button__ripple\", !ctx._isFab)(\"mdc-fab__ripple\", ctx._isFab);\n          }\n        },\n        styles: [_c7],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatMiniFabButton;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Material Design floating action button (FAB) component for anchor elements. Anchor elements\n * are used to provide links for the user to navigate across different routes or pages.\n * See https://material.io/components/buttons-floating-action-button/\n *\n * The `MatFabAnchor` class has two appearances: normal and extended.\n */\nlet MatFabAnchor = /*#__PURE__*/(() => {\n  class MatFabAnchor extends MatAnchor {\n    constructor(elementRef, platform, ngZone, animationMode, _options) {\n      super(elementRef, platform, ngZone, animationMode);\n      this._options = _options;\n      this._isFab = true;\n      this._options = this._options || defaults;\n      this.color = this._options.color || defaults.color;\n    }\n    static {\n      this.ɵfac = function MatFabAnchor_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatFabAnchor)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_FAB_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatFabAnchor,\n        selectors: [[\"a\", \"mat-fab\", \"\"]],\n        hostVars: 19,\n        hostBindings: function MatFabAnchor_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"disabled\", ctx._getDisabledAttribute())(\"tabindex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex)(\"aria-disabled\", ctx._getDisabledAttribute());\n            i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n            i0.ɵɵclassProp(\"mat-mdc-button-disabled\", ctx.disabled)(\"mat-mdc-button-disabled-interactive\", ctx.disabledInteractive)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-unthemed\", !ctx.color)(\"mat-mdc-button-base\", true)(\"mdc-fab--extended\", ctx.extended)(\"mat-mdc-extended-fab\", ctx.extended);\n          }\n        },\n        inputs: {\n          extended: [2, \"extended\", \"extended\", booleanAttribute]\n        },\n        exportAs: [\"matButton\", \"matAnchor\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        attrs: _c5,\n        ngContentSelectors: _c2,\n        decls: 7,\n        vars: 4,\n        consts: [[1, \"mat-mdc-button-persistent-ripple\"], [1, \"mdc-button__label\"], [1, \"mat-mdc-focus-indicator\"], [1, \"mat-mdc-button-touch-target\"]],\n        template: function MatFabAnchor_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c1);\n            i0.ɵɵelement(0, \"span\", 0);\n            i0.ɵɵprojection(1);\n            i0.ɵɵelementStart(2, \"span\", 1);\n            i0.ɵɵprojection(3, 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵprojection(4, 2);\n            i0.ɵɵelement(5, \"span\", 2)(6, \"span\", 3);\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-button__ripple\", !ctx._isFab)(\"mdc-fab__ripple\", ctx._isFab);\n          }\n        },\n        styles: [_c7],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatFabAnchor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Material Design mini floating action button (FAB) component for anchor elements. Anchor elements\n * are used to provide links for the user to navigate across different routes or pages.\n * See https://material.io/components/buttons-floating-action-button/\n */\nlet MatMiniFabAnchor = /*#__PURE__*/(() => {\n  class MatMiniFabAnchor extends MatAnchor {\n    constructor(elementRef, platform, ngZone, animationMode, _options) {\n      super(elementRef, platform, ngZone, animationMode);\n      this._options = _options;\n      this._isFab = true;\n      this._options = this._options || defaults;\n      this.color = this._options.color || defaults.color;\n    }\n    static {\n      this.ɵfac = function MatMiniFabAnchor_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatMiniFabAnchor)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_FAB_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatMiniFabAnchor,\n        selectors: [[\"a\", \"mat-mini-fab\", \"\"]],\n        hostVars: 15,\n        hostBindings: function MatMiniFabAnchor_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"disabled\", ctx._getDisabledAttribute())(\"tabindex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex)(\"aria-disabled\", ctx._getDisabledAttribute());\n            i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n            i0.ɵɵclassProp(\"mat-mdc-button-disabled\", ctx.disabled)(\"mat-mdc-button-disabled-interactive\", ctx.disabledInteractive)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-unthemed\", !ctx.color)(\"mat-mdc-button-base\", true);\n          }\n        },\n        exportAs: [\"matButton\", \"matAnchor\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        attrs: _c6,\n        ngContentSelectors: _c2,\n        decls: 7,\n        vars: 4,\n        consts: [[1, \"mat-mdc-button-persistent-ripple\"], [1, \"mdc-button__label\"], [1, \"mat-mdc-focus-indicator\"], [1, \"mat-mdc-button-touch-target\"]],\n        template: function MatMiniFabAnchor_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c1);\n            i0.ɵɵelement(0, \"span\", 0);\n            i0.ɵɵprojection(1);\n            i0.ɵɵelementStart(2, \"span\", 1);\n            i0.ɵɵprojection(3, 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵprojection(4, 2);\n            i0.ɵɵelement(5, \"span\", 2)(6, \"span\", 3);\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-button__ripple\", !ctx._isFab)(\"mdc-fab__ripple\", ctx._isFab);\n          }\n        },\n        styles: [_c7],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatMiniFabAnchor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Material Design icon button component. This type of button displays a single interactive icon for\n * users to perform an action.\n * See https://material.io/develop/web/components/buttons/icon-buttons/\n */\nlet MatIconButton = /*#__PURE__*/(() => {\n  class MatIconButton extends MatButtonBase {\n    constructor(elementRef, platform, ngZone, animationMode) {\n      super(elementRef, platform, ngZone, animationMode);\n      this._rippleLoader.configureRipple(this._elementRef.nativeElement, {\n        centered: true\n      });\n    }\n    static {\n      this.ɵfac = function MatIconButton_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatIconButton)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatIconButton,\n        selectors: [[\"button\", \"mat-icon-button\", \"\"]],\n        hostVars: 14,\n        hostBindings: function MatIconButton_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"disabled\", ctx._getDisabledAttribute())(\"aria-disabled\", ctx._getAriaDisabled());\n            i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n            i0.ɵɵclassProp(\"mat-mdc-button-disabled\", ctx.disabled)(\"mat-mdc-button-disabled-interactive\", ctx.disabledInteractive)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-unthemed\", !ctx.color)(\"mat-mdc-button-base\", true);\n          }\n        },\n        exportAs: [\"matButton\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        attrs: _c8,\n        ngContentSelectors: _c9,\n        decls: 4,\n        vars: 0,\n        consts: [[1, \"mat-mdc-button-persistent-ripple\", \"mdc-icon-button__ripple\"], [1, \"mat-mdc-focus-indicator\"], [1, \"mat-mdc-button-touch-target\"]],\n        template: function MatIconButton_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelement(0, \"span\", 0);\n            i0.ɵɵprojection(1);\n            i0.ɵɵelement(2, \"span\", 1)(3, \"span\", 2);\n          }\n        },\n        styles: [\".mat-mdc-icon-button{-webkit-user-select:none;user-select:none;display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;z-index:0;overflow:visible;border-radius:50%;flex-shrink:0;text-align:center;width:var(--mdc-icon-button-state-layer-size, 48px);height:var(--mdc-icon-button-state-layer-size, 48px);padding:calc(calc(var(--mdc-icon-button-state-layer-size, 48px) - var(--mdc-icon-button-icon-size, 24px)) / 2);font-size:var(--mdc-icon-button-icon-size);color:var(--mdc-icon-button-icon-color, var(--mat-app-on-surface-variant));-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button img,.mat-mdc-icon-button svg{width:var(--mdc-icon-button-icon-size);height:var(--mdc-icon-button-icon-size);vertical-align:baseline}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-icon-button .mdc-button__label,.mat-mdc-icon-button .mat-icon{z-index:1;position:relative}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color)}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity))}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-icon-button-touch-target-display)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button[hidden]{display:none}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}\", _c4],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatIconButton;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Material Design icon button component for anchor elements. This button displays a single\n * interaction icon that allows users to navigate across different routes or pages.\n * See https://material.io/develop/web/components/buttons/icon-buttons/\n */\nlet MatIconAnchor = /*#__PURE__*/(() => {\n  class MatIconAnchor extends MatAnchorBase {\n    constructor(elementRef, platform, ngZone, animationMode) {\n      super(elementRef, platform, ngZone, animationMode);\n    }\n    static {\n      this.ɵfac = function MatIconAnchor_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatIconAnchor)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatIconAnchor,\n        selectors: [[\"a\", \"mat-icon-button\", \"\"]],\n        hostVars: 15,\n        hostBindings: function MatIconAnchor_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"disabled\", ctx._getDisabledAttribute())(\"tabindex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex)(\"aria-disabled\", ctx._getDisabledAttribute());\n            i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n            i0.ɵɵclassProp(\"mat-mdc-button-disabled\", ctx.disabled)(\"mat-mdc-button-disabled-interactive\", ctx.disabledInteractive)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-unthemed\", !ctx.color)(\"mat-mdc-button-base\", true);\n          }\n        },\n        exportAs: [\"matButton\", \"matAnchor\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        attrs: _c8,\n        ngContentSelectors: _c9,\n        decls: 4,\n        vars: 0,\n        consts: [[1, \"mat-mdc-button-persistent-ripple\", \"mdc-icon-button__ripple\"], [1, \"mat-mdc-focus-indicator\"], [1, \"mat-mdc-button-touch-target\"]],\n        template: function MatIconAnchor_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelement(0, \"span\", 0);\n            i0.ɵɵprojection(1);\n            i0.ɵɵelement(2, \"span\", 1)(3, \"span\", 2);\n          }\n        },\n        styles: [_c10, _c4],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatIconAnchor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatButtonModule = /*#__PURE__*/(() => {\n  class MatButtonModule {\n    static {\n      this.ɵfac = function MatButtonModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatButtonModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatButtonModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, MatRippleModule, MatCommonModule]\n      });\n    }\n  }\n  return MatButtonModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BUTTON_CONFIG, MAT_FAB_DEFAULT_OPTIONS, MAT_FAB_DEFAULT_OPTIONS_FACTORY, MatAnchor, MatButton, MatButtonModule, MatFabAnchor, MatFabButton, MatIconAnchor, MatIconButton, MatMiniFabAnchor, MatMiniFabButton };\n","import { Component, ContentChild, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\nimport { fadeZoomInOut } from '../../animations';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatButtonModule } from '@angular/material/button';\nimport nls from '../resources/nls/generic';\n\n@Component({\n  selector: 'app-modal-window',\n  standalone: true,\n  imports: [CommonModule, MatIconModule, MatDividerModule, MatButtonModule],\n  templateUrl: './modal-window.component.html',\n  styleUrl: './modal-window.component.scss',\n  animations: [fadeZoomInOut]\n})\nexport class ModalWindowComponent {\n  @Input() type: 'confirm' | 'info' | string = 'confirm';\n  @Input() isOpen = false;\n  @Input('message-title') messageTitle = nls.areYouSure;\n  @Input('modal-heading') heading: string = '';\n  @Input() showCloseButton: boolean = true;\n  @Input() showHeader: boolean = true;\n  @Output() onCancel = new EventEmitter<boolean>();\n  @Output() onSubmit = new EventEmitter<boolean>();\n\n  @ContentChild(TemplateRef) content!: TemplateRef<any>;\n\n  nls = nls;\n  cancelModal() {\n    this.isOpen = !this.isOpen;\n    this.onCancel.emit(this.isOpen);\n  }\n  submitModal() {\n    this.isOpen = !this.isOpen;\n    this.onSubmit.emit(this.isOpen);\n  }\n\n}\n","<div class=\"modal-backdrop\" *ngIf=\"isOpen\"></div>\n<div class=\"modal-window\" *ngIf=\"isOpen\" @fadeZoomInOut role=\"dialog\" [attr.aria-label]=\"heading\">\n  <div class=\"modal-window-heading\" *ngIf=\"showHeader\">\n    <div class=\"modal-window-heading-text\">\n      <span class=\"h5\" *ngIf=\"heading!==''\">{{heading}}</span>\n    </div>\n    <button mat-icon-button color=\"error\" [attr.aria-label]=\"heading\" *ngIf=\"showCloseButton\" (click)=\"cancelModal()\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <mat-divider></mat-divider>\n  <div class=\"modal-window-content\">\n    <div *ngIf=\"type==='info'\" class=\"text-center\">\n      <ng-template [ngTemplateOutlet]=\"content\"></ng-template>\n    </div>\n\n    <div *ngIf=\"type==='confirm'\">\n      <div class=\"text-center pt-1\">\n        <mat-icon class=\"material-symbols-outlined\">question_mark</mat-icon>\n        <p class=\"pt-1 m-0 h6\">{{messageTitle}}</p>\n        <ng-template [ngTemplateOutlet]=\"content\"></ng-template>\n      </div>\n      <div class=\"d-flex gap-2 pt-3\">\n        <button mat-raised-button class=\"w-100\" (click)=\"cancelModal()\">{{nls.cancel}}</button>\n        <button class=\"w-100\" mat-raised-button color=\"primary\" type=\"button\"\n          (click)=\"submitModal()\">{{nls.okay}}</button>\n      </div>\n    </div>\n  </div>\n</div>","import generic from './generic';\n\nconst nls = {\n  ...generic,\n  logout: \"Logout FlexTrack\",\n  logoutText: \"You want to logout.\",\n  ViewProfile: \"My Profile\",\n  EditProfile: \"Edit Profile\",\n  ChangePassword: \"Change Password\",\n  Logout: \"Logout\",\n  HelpSupport: \"Help & Support\",\n  About: \"About FlexTrack\",\n  MyPlan: \"My usage plan\",\n  fname: \"First Name\",\n  lname: \"Last Name\",\n  email: \"Email\",\n  phone: \"Phone\",\n  verified: \"Email Verfied\",\n  lastLogin: \"Last Login\",\n  memberSince: \"Member Since\",\n  done: \"Done\",\n  unverified: \"You may not be able to recover your account.\",\n  ChangePasswordRequired: \"Please enter your current password.\",\n  ChangePasswordRequiredNew: \"Please enter new password.\",\n  invalidPassword: \"Please enter valid password!\",\n  incorrectPassword: \"Enter correct password.\",\n  lnameRequired: \"Last Name is required\",\n  fnameRequired: \"First Name is required\",\n  emailRequired: \"Email is required\",\n  phoneRequired: \"Mobile Number is required\",\n  invlaidPhone: \"Invalid phone\",\n  aboutApp: \"About FlexTrack\",\n  aboutText1: \"Welcome to the FlexTrack app, your ultimate companion for tracking not just your fitness but your entire day-to-day routine. Whether you’re working on personal goals, managing daily tasks, or building a healthier lifestyle, our app empowers you to stay organized and motivated every step of the way.\",\n  aboutText2: \"This app is proudly developed and owned by\",\n  owner: \"Aalok Kumar.\",\n  aboutText3: \"Our team is dedicated to providing you with the best features and user experience to help you stay on top of your day-to-day routine.\",\n  appOwnership: \"Ownership\",\n  contactMessage: \"For any inquiries or support, feel free to contact us.\",\n  supportText1: \"We’re here to help you make the most of your FlexTrack experience. Whether you have questions, need assistance, or want to provide feedback, we’ve got you covered.\",\n  supportEmail: \"Mail us at:\",\n  supportEmailValue: \"aalokmamtasah@gmail.com\",\n  resetAccount: \"Reset Account\",\n  resetText: \"Your all data including activities, schedules, tasks, and logs will be cleared.\",\n  backupData: \"Backup & Restore Data\",\n  SwitchTheme: \"Switch Theme\",\n  BiometricSettings: \"Biometric Settings\"\n}\nexport default nls;","import { ConnectableObservable, isObservable, of, Subject } from 'rxjs';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable } from '@angular/core';\nclass DataSource {}\n/** Checks whether an object is a data source. */\nfunction isDataSource(value) {\n  // Check if the value is a DataSource by observing if it has a connect function. Cannot\n  // be checked as an `instanceof DataSource` since people could create their own sources\n  // that match the interface, but don't extend DataSource. We also can't use `isObservable`\n  // here, because of some internal apps.\n  return value && typeof value.connect === 'function' && !(value instanceof ConnectableObservable);\n}\n\n/** DataSource wrapper for a native array. */\nclass ArrayDataSource extends DataSource {\n  constructor(_data) {\n    super();\n    this._data = _data;\n  }\n  connect() {\n    return isObservable(this._data) ? this._data : of(this._data);\n  }\n  disconnect() {}\n}\n\n/** Indicates how a view was changed by a {@link _ViewRepeater}. */\nvar _ViewRepeaterOperation = /*#__PURE__*/function (_ViewRepeaterOperation) {\n  /** The content of an existing view was replaced with another item. */\n  _ViewRepeaterOperation[_ViewRepeaterOperation[\"REPLACED\"] = 0] = \"REPLACED\";\n  /** A new view was created with `createEmbeddedView`. */\n  _ViewRepeaterOperation[_ViewRepeaterOperation[\"INSERTED\"] = 1] = \"INSERTED\";\n  /** The position of a view changed, but the content remains the same. */\n  _ViewRepeaterOperation[_ViewRepeaterOperation[\"MOVED\"] = 2] = \"MOVED\";\n  /** A view was detached from the view container. */\n  _ViewRepeaterOperation[_ViewRepeaterOperation[\"REMOVED\"] = 3] = \"REMOVED\";\n  return _ViewRepeaterOperation;\n}(_ViewRepeaterOperation || {});\n/**\n * Injection token for {@link _ViewRepeater}. This token is for use by Angular Material only.\n * @docs-private\n */\nconst _VIEW_REPEATER_STRATEGY = /*#__PURE__*/new InjectionToken('_ViewRepeater');\n\n/**\n * A repeater that destroys views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will always construct a new embedded view for each item.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _DisposeViewRepeaterStrategy {\n  applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n    changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n      let view;\n      let operation;\n      if (record.previousIndex == null) {\n        const insertContext = itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n        view = viewContainerRef.createEmbeddedView(insertContext.templateRef, insertContext.context, insertContext.index);\n        operation = _ViewRepeaterOperation.INSERTED;\n      } else if (currentIndex == null) {\n        viewContainerRef.remove(adjustedPreviousIndex);\n        operation = _ViewRepeaterOperation.REMOVED;\n      } else {\n        view = viewContainerRef.get(adjustedPreviousIndex);\n        viewContainerRef.move(view, currentIndex);\n        operation = _ViewRepeaterOperation.MOVED;\n      }\n      if (itemViewChanged) {\n        itemViewChanged({\n          context: view?.context,\n          operation,\n          record\n        });\n      }\n    });\n  }\n  detach() {}\n}\n\n/**\n * A repeater that caches views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will reuse one of the cached views instead of creating a new\n * embedded view. Recycling cached views reduces the quantity of expensive DOM\n * inserts.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _RecycleViewRepeaterStrategy {\n  constructor() {\n    /**\n     * The size of the cache used to store unused views.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 views.\n     */\n    this.viewCacheSize = 20;\n    /**\n     * View cache that stores embedded view instances that have been previously stamped out,\n     * but don't are not currently rendered. The view repeater will reuse these views rather than\n     * creating brand new ones.\n     *\n     * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.\n     */\n    this._viewCache = [];\n  }\n  /** Apply changes to the DOM. */\n  applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n    // Rearrange the views to put them in the right location.\n    changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n      let view;\n      let operation;\n      if (record.previousIndex == null) {\n        // Item added.\n        const viewArgsFactory = () => itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n        view = this._insertView(viewArgsFactory, currentIndex, viewContainerRef, itemValueResolver(record));\n        operation = view ? _ViewRepeaterOperation.INSERTED : _ViewRepeaterOperation.REPLACED;\n      } else if (currentIndex == null) {\n        // Item removed.\n        this._detachAndCacheView(adjustedPreviousIndex, viewContainerRef);\n        operation = _ViewRepeaterOperation.REMOVED;\n      } else {\n        // Item moved.\n        view = this._moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, itemValueResolver(record));\n        operation = _ViewRepeaterOperation.MOVED;\n      }\n      if (itemViewChanged) {\n        itemViewChanged({\n          context: view?.context,\n          operation,\n          record\n        });\n      }\n    });\n  }\n  detach() {\n    for (const view of this._viewCache) {\n      view.destroy();\n    }\n    this._viewCache = [];\n  }\n  /**\n   * Inserts a view for a new item, either from the cache or by creating a new\n   * one. Returns `undefined` if the item was inserted into a cached view.\n   */\n  _insertView(viewArgsFactory, currentIndex, viewContainerRef, value) {\n    const cachedView = this._insertViewFromCache(currentIndex, viewContainerRef);\n    if (cachedView) {\n      cachedView.context.$implicit = value;\n      return undefined;\n    }\n    const viewArgs = viewArgsFactory();\n    return viewContainerRef.createEmbeddedView(viewArgs.templateRef, viewArgs.context, viewArgs.index);\n  }\n  /** Detaches the view at the given index and inserts into the view cache. */\n  _detachAndCacheView(index, viewContainerRef) {\n    const detachedView = viewContainerRef.detach(index);\n    this._maybeCacheView(detachedView, viewContainerRef);\n  }\n  /** Moves view at the previous index to the current index. */\n  _moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, value) {\n    const view = viewContainerRef.get(adjustedPreviousIndex);\n    viewContainerRef.move(view, currentIndex);\n    view.context.$implicit = value;\n    return view;\n  }\n  /**\n   * Cache the given detached view. If the cache is full, the view will be\n   * destroyed.\n   */\n  _maybeCacheView(view, viewContainerRef) {\n    if (this._viewCache.length < this.viewCacheSize) {\n      this._viewCache.push(view);\n    } else {\n      const index = viewContainerRef.indexOf(view);\n      // The host component could remove views from the container outside of\n      // the view repeater. It's unlikely this will occur, but just in case,\n      // destroy the view on its own, otherwise destroy it through the\n      // container to ensure that all the references are removed.\n      if (index === -1) {\n        view.destroy();\n      } else {\n        viewContainerRef.remove(index);\n      }\n    }\n  }\n  /** Inserts a recycled view from the cache at the given index. */\n  _insertViewFromCache(index, viewContainerRef) {\n    const cachedView = this._viewCache.pop();\n    if (cachedView) {\n      viewContainerRef.insert(cachedView, index);\n    }\n    return cachedView || null;\n  }\n}\n\n/**\n * Class to be used to power selecting one or more options from a list.\n */\nclass SelectionModel {\n  /** Selected values. */\n  get selected() {\n    if (!this._selected) {\n      this._selected = Array.from(this._selection.values());\n    }\n    return this._selected;\n  }\n  constructor(_multiple = false, initiallySelectedValues, _emitChanges = true, compareWith) {\n    this._multiple = _multiple;\n    this._emitChanges = _emitChanges;\n    this.compareWith = compareWith;\n    /** Currently-selected values. */\n    this._selection = new Set();\n    /** Keeps track of the deselected options that haven't been emitted by the change event. */\n    this._deselectedToEmit = [];\n    /** Keeps track of the selected options that haven't been emitted by the change event. */\n    this._selectedToEmit = [];\n    /** Event emitted when the value has changed. */\n    this.changed = new Subject();\n    if (initiallySelectedValues && initiallySelectedValues.length) {\n      if (_multiple) {\n        initiallySelectedValues.forEach(value => this._markSelected(value));\n      } else {\n        this._markSelected(initiallySelectedValues[0]);\n      }\n      // Clear the array in order to avoid firing the change event for preselected values.\n      this._selectedToEmit.length = 0;\n    }\n  }\n  /**\n   * Selects a value or an array of values.\n   * @param values The values to select\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  select(...values) {\n    this._verifyValueAssignment(values);\n    values.forEach(value => this._markSelected(value));\n    const changed = this._hasQueuedChanges();\n    this._emitChangeEvent();\n    return changed;\n  }\n  /**\n   * Deselects a value or an array of values.\n   * @param values The values to deselect\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  deselect(...values) {\n    this._verifyValueAssignment(values);\n    values.forEach(value => this._unmarkSelected(value));\n    const changed = this._hasQueuedChanges();\n    this._emitChangeEvent();\n    return changed;\n  }\n  /**\n   * Sets the selected values\n   * @param values The new selected values\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  setSelection(...values) {\n    this._verifyValueAssignment(values);\n    const oldValues = this.selected;\n    const newSelectedSet = new Set(values);\n    values.forEach(value => this._markSelected(value));\n    oldValues.filter(value => !newSelectedSet.has(this._getConcreteValue(value, newSelectedSet))).forEach(value => this._unmarkSelected(value));\n    const changed = this._hasQueuedChanges();\n    this._emitChangeEvent();\n    return changed;\n  }\n  /**\n   * Toggles a value between selected and deselected.\n   * @param value The value to toggle\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  toggle(value) {\n    return this.isSelected(value) ? this.deselect(value) : this.select(value);\n  }\n  /**\n   * Clears all of the selected values.\n   * @param flushEvent Whether to flush the changes in an event.\n   *   If false, the changes to the selection will be flushed along with the next event.\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  clear(flushEvent = true) {\n    this._unmarkAll();\n    const changed = this._hasQueuedChanges();\n    if (flushEvent) {\n      this._emitChangeEvent();\n    }\n    return changed;\n  }\n  /**\n   * Determines whether a value is selected.\n   */\n  isSelected(value) {\n    return this._selection.has(this._getConcreteValue(value));\n  }\n  /**\n   * Determines whether the model does not have a value.\n   */\n  isEmpty() {\n    return this._selection.size === 0;\n  }\n  /**\n   * Determines whether the model has a value.\n   */\n  hasValue() {\n    return !this.isEmpty();\n  }\n  /**\n   * Sorts the selected values based on a predicate function.\n   */\n  sort(predicate) {\n    if (this._multiple && this.selected) {\n      this._selected.sort(predicate);\n    }\n  }\n  /**\n   * Gets whether multiple values can be selected.\n   */\n  isMultipleSelection() {\n    return this._multiple;\n  }\n  /** Emits a change event and clears the records of selected and deselected values. */\n  _emitChangeEvent() {\n    // Clear the selected values so they can be re-cached.\n    this._selected = null;\n    if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n      this.changed.next({\n        source: this,\n        added: this._selectedToEmit,\n        removed: this._deselectedToEmit\n      });\n      this._deselectedToEmit = [];\n      this._selectedToEmit = [];\n    }\n  }\n  /** Selects a value. */\n  _markSelected(value) {\n    value = this._getConcreteValue(value);\n    if (!this.isSelected(value)) {\n      if (!this._multiple) {\n        this._unmarkAll();\n      }\n      if (!this.isSelected(value)) {\n        this._selection.add(value);\n      }\n      if (this._emitChanges) {\n        this._selectedToEmit.push(value);\n      }\n    }\n  }\n  /** Deselects a value. */\n  _unmarkSelected(value) {\n    value = this._getConcreteValue(value);\n    if (this.isSelected(value)) {\n      this._selection.delete(value);\n      if (this._emitChanges) {\n        this._deselectedToEmit.push(value);\n      }\n    }\n  }\n  /** Clears out the selected values. */\n  _unmarkAll() {\n    if (!this.isEmpty()) {\n      this._selection.forEach(value => this._unmarkSelected(value));\n    }\n  }\n  /**\n   * Verifies the value assignment and throws an error if the specified value array is\n   * including multiple values while the selection model is not supporting multiple values.\n   */\n  _verifyValueAssignment(values) {\n    if (values.length > 1 && !this._multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMultipleValuesInSingleSelectionError();\n    }\n  }\n  /** Whether there are queued up change to be emitted. */\n  _hasQueuedChanges() {\n    return !!(this._deselectedToEmit.length || this._selectedToEmit.length);\n  }\n  /** Returns a value that is comparable to inputValue by applying compareWith function, returns the same inputValue otherwise. */\n  _getConcreteValue(inputValue, selection) {\n    if (!this.compareWith) {\n      return inputValue;\n    } else {\n      selection = selection ?? this._selection;\n      for (let selectedValue of selection) {\n        if (this.compareWith(inputValue, selectedValue)) {\n          return selectedValue;\n        }\n      }\n      return inputValue;\n    }\n  }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * @docs-private\n */\nfunction getMultipleValuesInSingleSelectionError() {\n  return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nlet UniqueSelectionDispatcher = /*#__PURE__*/(() => {\n  class UniqueSelectionDispatcher {\n    constructor() {\n      this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param id ID of the item.\n     * @param name Name of the item.\n     */\n    notify(id, name) {\n      for (let listener of this._listeners) {\n        listener(id, name);\n      }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @return Function used to deregister listener\n     */\n    listen(listener) {\n      this._listeners.push(listener);\n      return () => {\n        this._listeners = this._listeners.filter(registered => {\n          return listener !== registered;\n        });\n      };\n    }\n    ngOnDestroy() {\n      this._listeners = [];\n    }\n    static {\n      this.ɵfac = function UniqueSelectionDispatcher_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || UniqueSelectionDispatcher)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: UniqueSelectionDispatcher,\n        factory: UniqueSelectionDispatcher.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return UniqueSelectionDispatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, _DisposeViewRepeaterStrategy, _RecycleViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY, _ViewRepeaterOperation, getMultipleValuesInSingleSelectionError, isDataSource };\n","/**\n * @license Angular v18.2.5\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, forwardRef, Optional, Inject, ɵisPromise, ɵisSubscribable, ɵRuntimeError, Self, computed, signal, untracked, EventEmitter, Input, Host, SkipSelf, booleanAttribute, ChangeDetectorRef, Output, Injectable, inject, NgModule, Version } from '@angular/core';\nimport { ɵgetDOM } from '@angular/common';\nimport { from, forkJoin, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Base class for all ControlValueAccessor classes defined in Forms package.\n * Contains common logic and utility functions.\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nlet BaseControlValueAccessor = /*#__PURE__*/(() => {\n  class BaseControlValueAccessor {\n    constructor(_renderer, _elementRef) {\n      this._renderer = _renderer;\n      this._elementRef = _elementRef;\n      /**\n       * The registered callback function called when a change or input event occurs on the input\n       * element.\n       * @nodoc\n       */\n      this.onChange = _ => {};\n      /**\n       * The registered callback function called when a blur event occurs on the input element.\n       * @nodoc\n       */\n      this.onTouched = () => {};\n    }\n    /**\n     * Helper method that sets a property on a target element using the current Renderer\n     * implementation.\n     * @nodoc\n     */\n    setProperty(key, value) {\n      this._renderer.setProperty(this._elementRef.nativeElement, key, value);\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the range input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n      this.setProperty('disabled', isDisabled);\n    }\n    static {\n      this.ɵfac = function BaseControlValueAccessor_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || BaseControlValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: BaseControlValueAccessor\n      });\n    }\n  }\n  return BaseControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Base class for all built-in ControlValueAccessor classes (except DefaultValueAccessor, which is\n * used in case no other CVAs can be found). We use this class to distinguish between default CVA,\n * built-in CVAs and custom CVAs, so that Forms logic can recognize built-in CVAs and treat custom\n * ones with higher priority (when both built-in and custom CVAs are present).\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nlet BuiltInControlValueAccessor = /*#__PURE__*/(() => {\n  class BuiltInControlValueAccessor extends BaseControlValueAccessor {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵBuiltInControlValueAccessor_BaseFactory;\n        return function BuiltInControlValueAccessor_Factory(__ngFactoryType__) {\n          return (ɵBuiltInControlValueAccessor_BaseFactory || (ɵBuiltInControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(BuiltInControlValueAccessor)))(__ngFactoryType__ || BuiltInControlValueAccessor);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: BuiltInControlValueAccessor,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return BuiltInControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nconst NG_VALUE_ACCESSOR = /*#__PURE__*/new InjectionToken(ngDevMode ? 'NgValueAccessor' : '');\nconst CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => CheckboxControlValueAccessor),\n  multi: true\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet CheckboxControlValueAccessor = /*#__PURE__*/(() => {\n  class CheckboxControlValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"checked\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.setProperty('checked', value);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵCheckboxControlValueAccessor_BaseFactory;\n        return function CheckboxControlValueAccessor_Factory(__ngFactoryType__) {\n          return (ɵCheckboxControlValueAccessor_BaseFactory || (ɵCheckboxControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(CheckboxControlValueAccessor)))(__ngFactoryType__ || CheckboxControlValueAccessor);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CheckboxControlValueAccessor,\n        selectors: [[\"input\", \"type\", \"checkbox\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"ngModel\", \"\"]],\n        hostBindings: function CheckboxControlValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"change\", function CheckboxControlValueAccessor_change_HostBindingHandler($event) {\n              return ctx.onChange($event.target.checked);\n            })(\"blur\", function CheckboxControlValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            });\n          }\n        },\n        features: [i0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return CheckboxControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst DEFAULT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => DefaultValueAccessor),\n  multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n  const userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n  return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = /*#__PURE__*/new InjectionToken(ngDevMode ? 'CompositionEventMode' : '');\n/**\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * This value accessor is used by default for `<input type=\"text\">` and `<textarea>` elements, but\n * you could also use it for custom components that have similar behavior and do not require special\n * processing. In order to attach the default value accessor to a custom element, add the\n * `ngDefaultControl` attribute as shown below.\n *\n * ```\n * <custom-input-component ngDefaultControl [(ngModel)]=\"value\"></custom-input-component>\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet DefaultValueAccessor = /*#__PURE__*/(() => {\n  class DefaultValueAccessor extends BaseControlValueAccessor {\n    constructor(renderer, elementRef, _compositionMode) {\n      super(renderer, elementRef);\n      this._compositionMode = _compositionMode;\n      /** Whether the user is creating a composition string (IME events). */\n      this._composing = false;\n      if (this._compositionMode == null) {\n        this._compositionMode = !_isAndroid();\n      }\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      const normalizedValue = value == null ? '' : value;\n      this.setProperty('value', normalizedValue);\n    }\n    /** @internal */\n    _handleInput(value) {\n      if (!this._compositionMode || this._compositionMode && !this._composing) {\n        this.onChange(value);\n      }\n    }\n    /** @internal */\n    _compositionStart() {\n      this._composing = true;\n    }\n    /** @internal */\n    _compositionEnd(value) {\n      this._composing = false;\n      this._compositionMode && this.onChange(value);\n    }\n    static {\n      this.ɵfac = function DefaultValueAccessor_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || DefaultValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(COMPOSITION_BUFFER_MODE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: DefaultValueAccessor,\n        selectors: [[\"input\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControlName\", \"\"], [\"input\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControl\", \"\"], [\"input\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"ngModel\", \"\"], [\"\", \"ngDefaultControl\", \"\"]],\n        hostBindings: function DefaultValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"input\", function DefaultValueAccessor_input_HostBindingHandler($event) {\n              return ctx._handleInput($event.target.value);\n            })(\"blur\", function DefaultValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            })(\"compositionstart\", function DefaultValueAccessor_compositionstart_HostBindingHandler() {\n              return ctx._compositionStart();\n            })(\"compositionend\", function DefaultValueAccessor_compositionend_HostBindingHandler($event) {\n              return ctx._compositionEnd($event.target.value);\n            });\n          }\n        },\n        features: [i0.ɵɵProvidersFeature([DEFAULT_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return DefaultValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction isEmptyInputValue(value) {\n  /**\n   * Check if the object is a string or array before evaluating the length attribute.\n   * This avoids falsely rejecting objects that contain a custom length attribute.\n   * For example, the object {id: 1, length: 0, width: 0} should not be returned as empty.\n   */\n  return value == null || (typeof value === 'string' || Array.isArray(value)) && value.length === 0;\n}\nfunction hasValidLength(value) {\n  // non-strict comparison is intentional, to check for both `null` and `undefined` values\n  return value != null && typeof value.length === 'number';\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_ASYNC_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'NgValidators' : '');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Provide a custom async validator directive\n *\n * The following example implements the `AsyncValidator` interface to create an\n * async validator directive with a custom error key.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customAsyncValidator]',\n *   providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: CustomAsyncValidatorDirective, multi:\n * true}]\n * })\n * class CustomAsyncValidatorDirective implements AsyncValidator {\n *   validate(control: AbstractControl): Promise<ValidationErrors|null> {\n *     return Promise.resolve({'custom': true});\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'NgAsyncValidators' : '');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n  /**\n   * @description\n   * Validator that requires the control's value to be greater than or equal to the provided number.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a minimum of 3\n   *\n   * ```typescript\n   * const control = new FormControl(2, Validators.min(3));\n   *\n   * console.log(control.errors); // {min: {min: 3, actual: 2}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `min` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static min(min) {\n    return minValidator(min);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value to be less than or equal to the provided number.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a maximum of 15\n   *\n   * ```typescript\n   * const control = new FormControl(16, Validators.max(15));\n   *\n   * console.log(control.errors); // {max: {max: 15, actual: 16}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `max` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static max(max) {\n    return maxValidator(max);\n  }\n  /**\n   * @description\n   * Validator that requires the control have a non-empty value.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field is non-empty\n   *\n   * ```typescript\n   * const control = new FormControl('', Validators.required);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map with the `required` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static required(control) {\n    return requiredValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value be true. This validator is commonly\n   * used for required checkboxes.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field value is true\n   *\n   * ```typescript\n   * const control = new FormControl('some value', Validators.requiredTrue);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map that contains the `required` property\n   * set to `true` if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static requiredTrue(control) {\n    return requiredTrueValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value pass an email validation test.\n   *\n   * Tests the value using a [regular\n   * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n   * pattern suitable for common use cases. The pattern is based on the definition of a valid email\n   * address in the [WHATWG HTML\n   * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n   * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n   * lengths of different parts of the address).\n   *\n   * The differences from the WHATWG version include:\n   * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n   * - Disallow `local-part` to be longer than 64 characters.\n   * - Disallow the whole address to be longer than 254 characters.\n   *\n   * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n   * validate the value against a different pattern.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field matches a valid email pattern\n   *\n   * ```typescript\n   * const control = new FormControl('bad@', Validators.email);\n   *\n   * console.log(control.errors); // {email: true}\n   * ```\n   *\n   * @returns An error map with the `email` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static email(control) {\n    return emailValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the length of the control's value to be greater than or equal\n   * to the provided minimum length. This validator is also provided by default if you use the\n   * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n   * only for types that have a numeric `length` property, such as strings or arrays. The\n   * `minLength` validator logic is also not invoked for values when their `length` property is 0\n   * (for example in case of an empty string or an empty array), to support optional controls. You\n   * can use the standard `required` validator if empty values should not be considered valid.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has a minimum of 3 characters\n   *\n   * ```typescript\n   * const control = new FormControl('ng', Validators.minLength(3));\n   *\n   * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n   * ```\n   *\n   * ```html\n   * <input minlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `minlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static minLength(minLength) {\n    return minLengthValidator(minLength);\n  }\n  /**\n   * @description\n   * Validator that requires the length of the control's value to be less than or equal\n   * to the provided maximum length. This validator is also provided by default if you use the\n   * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n   * only for types that have a numeric `length` property, such as strings or arrays.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has maximum of 5 characters\n   *\n   * ```typescript\n   * const control = new FormControl('Angular', Validators.maxLength(5));\n   *\n   * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n   * ```\n   *\n   * ```html\n   * <input maxlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `maxlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static maxLength(maxLength) {\n    return maxLengthValidator(maxLength);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value to match a regex pattern. This validator is also\n   * provided by default if you use the HTML5 `pattern` attribute.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field only contains letters or spaces\n   *\n   * ```typescript\n   * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n   *\n   * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n   * ```\n   *\n   * ```html\n   * <input pattern=\"[a-zA-Z ]*\">\n   * ```\n   *\n   * ### Pattern matching with the global or sticky flag\n   *\n   * `RegExp` objects created with the `g` or `y` flags that are passed into `Validators.pattern`\n   * can produce different results on the same input when validations are run consecutively. This is\n   * due to how the behavior of `RegExp.prototype.test` is\n   * specified in [ECMA-262](https://tc39.es/ecma262/#sec-regexpbuiltinexec)\n   * (`RegExp` preserves the index of the last match when the global or sticky flag is used).\n   * Due to this behavior, it is recommended that when using\n   * `Validators.pattern` you **do not** pass in a `RegExp` object with either the global or sticky\n   * flag enabled.\n   *\n   * ```typescript\n   * // Not recommended (since the `g` flag is used)\n   * const controlOne = new FormControl('1', Validators.pattern(/foo/g));\n   *\n   * // Good\n   * const controlTwo = new FormControl('1', Validators.pattern(/foo/));\n   * ```\n   *\n   * @param pattern A regular expression to be used as is to test the values, or a string.\n   * If a string is passed, the `^` character is prepended and the `$` character is\n   * appended to the provided string (if not already present), and the resulting regular\n   * expression is used to test the values.\n   *\n   * @returns A validator function that returns an error map with the\n   * `pattern` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static pattern(pattern) {\n    return patternValidator(pattern);\n  }\n  /**\n   * @description\n   * Validator that performs no operation.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static nullValidator(control) {\n    return nullValidator(control);\n  }\n  static compose(validators) {\n    return compose(validators);\n  }\n  /**\n   * @description\n   * Compose multiple async validators into a single function that returns the union\n   * of the individual error objects for the provided control.\n   *\n   * @returns A validator function that returns an error map with the\n   * merged error objects of the async validators if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static composeAsync(validators) {\n    return composeAsync(validators);\n  }\n}\n/**\n * Validator that requires the control's value to be greater than or equal to the provided number.\n * See `Validators.min` for additional information.\n */\nfunction minValidator(min) {\n  return control => {\n    if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = parseFloat(control.value);\n    // Controls with NaN values after parsing should be treated as not having a\n    // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n    return !isNaN(value) && value < min ? {\n      'min': {\n        'min': min,\n        'actual': control.value\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control's value to be less than or equal to the provided number.\n * See `Validators.max` for additional information.\n */\nfunction maxValidator(max) {\n  return control => {\n    if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = parseFloat(control.value);\n    // Controls with NaN values after parsing should be treated as not having a\n    // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n    return !isNaN(value) && value > max ? {\n      'max': {\n        'max': max,\n        'actual': control.value\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control have a non-empty value.\n * See `Validators.required` for additional information.\n */\nfunction requiredValidator(control) {\n  return isEmptyInputValue(control.value) ? {\n    'required': true\n  } : null;\n}\n/**\n * Validator that requires the control's value be true. This validator is commonly\n * used for required checkboxes.\n * See `Validators.requiredTrue` for additional information.\n */\nfunction requiredTrueValidator(control) {\n  return control.value === true ? null : {\n    'required': true\n  };\n}\n/**\n * Validator that requires the control's value pass an email validation test.\n * See `Validators.email` for additional information.\n */\nfunction emailValidator(control) {\n  if (isEmptyInputValue(control.value)) {\n    return null; // don't validate empty values to allow optional controls\n  }\n  return EMAIL_REGEXP.test(control.value) ? null : {\n    'email': true\n  };\n}\n/**\n * Validator that requires the length of the control's value to be greater than or equal\n * to the provided minimum length. See `Validators.minLength` for additional information.\n */\nfunction minLengthValidator(minLength) {\n  return control => {\n    if (isEmptyInputValue(control.value) || !hasValidLength(control.value)) {\n      // don't validate empty values to allow optional controls\n      // don't validate values without `length` property\n      return null;\n    }\n    return control.value.length < minLength ? {\n      'minlength': {\n        'requiredLength': minLength,\n        'actualLength': control.value.length\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the length of the control's value to be less than or equal\n * to the provided maximum length. See `Validators.maxLength` for additional information.\n */\nfunction maxLengthValidator(maxLength) {\n  return control => {\n    return hasValidLength(control.value) && control.value.length > maxLength ? {\n      'maxlength': {\n        'requiredLength': maxLength,\n        'actualLength': control.value.length\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control's value to match a regex pattern.\n * See `Validators.pattern` for additional information.\n */\nfunction patternValidator(pattern) {\n  if (!pattern) return nullValidator;\n  let regex;\n  let regexStr;\n  if (typeof pattern === 'string') {\n    regexStr = '';\n    if (pattern.charAt(0) !== '^') regexStr += '^';\n    regexStr += pattern;\n    if (pattern.charAt(pattern.length - 1) !== '$') regexStr += '$';\n    regex = new RegExp(regexStr);\n  } else {\n    regexStr = pattern.toString();\n    regex = pattern;\n  }\n  return control => {\n    if (isEmptyInputValue(control.value)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = control.value;\n    return regex.test(value) ? null : {\n      'pattern': {\n        'requiredPattern': regexStr,\n        'actualValue': value\n      }\n    };\n  };\n}\n/**\n * Function that has `ValidatorFn` shape, but performs no operation.\n */\nfunction nullValidator(control) {\n  return null;\n}\nfunction isPresent(o) {\n  return o != null;\n}\nfunction toObservable(value) {\n  const obs = ɵisPromise(value) ? from(value) : value;\n  if ((typeof ngDevMode === 'undefined' || ngDevMode) && !ɵisSubscribable(obs)) {\n    let errorMessage = `Expected async validator to return Promise or Observable.`;\n    // A synchronous validator will return object or null.\n    if (typeof value === 'object') {\n      errorMessage += ' Are you using a synchronous validator where an async validator is expected?';\n    }\n    throw new ɵRuntimeError(-1101 /* RuntimeErrorCode.WRONG_VALIDATOR_RETURN_TYPE */, errorMessage);\n  }\n  return obs;\n}\nfunction mergeErrors(arrayOfErrors) {\n  let res = {};\n  arrayOfErrors.forEach(errors => {\n    res = errors != null ? {\n      ...res,\n      ...errors\n    } : res;\n  });\n  return Object.keys(res).length === 0 ? null : res;\n}\nfunction executeValidators(control, validators) {\n  return validators.map(validator => validator(control));\n}\nfunction isValidatorFn(validator) {\n  return !validator.validate;\n}\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nfunction normalizeValidators(validators) {\n  return validators.map(validator => {\n    return isValidatorFn(validator) ? validator : c => validator.validate(c);\n  });\n}\n/**\n * Merges synchronous validators into a single validator function.\n * See `Validators.compose` for additional information.\n */\nfunction compose(validators) {\n  if (!validators) return null;\n  const presentValidators = validators.filter(isPresent);\n  if (presentValidators.length == 0) return null;\n  return function (control) {\n    return mergeErrors(executeValidators(control, presentValidators));\n  };\n}\n/**\n * Accepts a list of validators of different possible shapes (`Validator` and `ValidatorFn`),\n * normalizes the list (converts everything to `ValidatorFn`) and merges them into a single\n * validator function.\n */\nfunction composeValidators(validators) {\n  return validators != null ? compose(normalizeValidators(validators)) : null;\n}\n/**\n * Merges asynchronous validators into a single validator function.\n * See `Validators.composeAsync` for additional information.\n */\nfunction composeAsync(validators) {\n  if (!validators) return null;\n  const presentValidators = validators.filter(isPresent);\n  if (presentValidators.length == 0) return null;\n  return function (control) {\n    const observables = executeValidators(control, presentValidators).map(toObservable);\n    return forkJoin(observables).pipe(map(mergeErrors));\n  };\n}\n/**\n * Accepts a list of async validators of different possible shapes (`AsyncValidator` and\n * `AsyncValidatorFn`), normalizes the list (converts everything to `AsyncValidatorFn`) and merges\n * them into a single validator function.\n */\nfunction composeAsyncValidators(validators) {\n  return validators != null ? composeAsync(normalizeValidators(validators)) : null;\n}\n/**\n * Merges raw control validators with a given directive validator and returns the combined list of\n * validators as an array.\n */\nfunction mergeValidators(controlValidators, dirValidator) {\n  if (controlValidators === null) return [dirValidator];\n  return Array.isArray(controlValidators) ? [...controlValidators, dirValidator] : [controlValidators, dirValidator];\n}\n/**\n * Retrieves the list of raw synchronous validators attached to a given control.\n */\nfunction getControlValidators(control) {\n  return control._rawValidators;\n}\n/**\n * Retrieves the list of raw asynchronous validators attached to a given control.\n */\nfunction getControlAsyncValidators(control) {\n  return control._rawAsyncValidators;\n}\n/**\n * Accepts a singleton validator, an array, or null, and returns an array type with the provided\n * validators.\n *\n * @param validators A validator, validators, or null.\n * @returns A validators array.\n */\nfunction makeValidatorsArray(validators) {\n  if (!validators) return [];\n  return Array.isArray(validators) ? validators : [validators];\n}\n/**\n * Determines whether a validator or validators array has a given validator.\n *\n * @param validators The validator or validators to compare against.\n * @param validator The validator to check.\n * @returns Whether the validator is present.\n */\nfunction hasValidator(validators, validator) {\n  return Array.isArray(validators) ? validators.includes(validator) : validators === validator;\n}\n/**\n * Combines two arrays of validators into one. If duplicates are provided, only one will be added.\n *\n * @param validators The new validators.\n * @param currentValidators The base array of current validators.\n * @returns An array of validators.\n */\nfunction addValidators(validators, currentValidators) {\n  const current = makeValidatorsArray(currentValidators);\n  const validatorsToAdd = makeValidatorsArray(validators);\n  validatorsToAdd.forEach(v => {\n    // Note: if there are duplicate entries in the new validators array,\n    // only the first one would be added to the current list of validators.\n    // Duplicate ones would be ignored since `hasValidator` would detect\n    // the presence of a validator function and we update the current list in place.\n    if (!hasValidator(current, v)) {\n      current.push(v);\n    }\n  });\n  return current;\n}\nfunction removeValidators(validators, currentValidators) {\n  return makeValidatorsArray(currentValidators).filter(v => !hasValidator(validators, v));\n}\n\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n  constructor() {\n    /**\n     * Set of synchronous validators as they were provided while calling `setValidators` function.\n     * @internal\n     */\n    this._rawValidators = [];\n    /**\n     * Set of asynchronous validators as they were provided while calling `setAsyncValidators`\n     * function.\n     * @internal\n     */\n    this._rawAsyncValidators = [];\n    /*\n     * The set of callbacks to be invoked when directive instance is being destroyed.\n     */\n    this._onDestroyCallbacks = [];\n  }\n  /**\n   * @description\n   * Reports the value of the control if it is present, otherwise null.\n   */\n  get value() {\n    return this.control ? this.control.value : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is valid. A control is considered valid if no\n   * validation errors exist with the current value.\n   * If the control is not present, null is returned.\n   */\n  get valid() {\n    return this.control ? this.control.valid : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is invalid, meaning that an error exists in the input value.\n   * If the control is not present, null is returned.\n   */\n  get invalid() {\n    return this.control ? this.control.invalid : null;\n  }\n  /**\n   * @description\n   * Reports whether a control is pending, meaning that async validation is occurring and\n   * errors are not yet available for the input value. If the control is not present, null is\n   * returned.\n   */\n  get pending() {\n    return this.control ? this.control.pending : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is disabled, meaning that the control is disabled\n   * in the UI and is exempt from validation checks and excluded from aggregate\n   * values of ancestor controls. If the control is not present, null is returned.\n   */\n  get disabled() {\n    return this.control ? this.control.disabled : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is enabled, meaning that the control is included in ancestor\n   * calculations of validity or value. If the control is not present, null is returned.\n   */\n  get enabled() {\n    return this.control ? this.control.enabled : null;\n  }\n  /**\n   * @description\n   * Reports the control's validation errors. If the control is not present, null is returned.\n   */\n  get errors() {\n    return this.control ? this.control.errors : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is pristine, meaning that the user has not yet changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get pristine() {\n    return this.control ? this.control.pristine : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is dirty, meaning that the user has changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get dirty() {\n    return this.control ? this.control.dirty : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is touched, meaning that the user has triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get touched() {\n    return this.control ? this.control.touched : null;\n  }\n  /**\n   * @description\n   * Reports the validation status of the control. Possible values include:\n   * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n   * If the control is not present, null is returned.\n   */\n  get status() {\n    return this.control ? this.control.status : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is untouched, meaning that the user has not yet triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get untouched() {\n    return this.control ? this.control.untouched : null;\n  }\n  /**\n   * @description\n   * Returns a multicasting observable that emits a validation status whenever it is\n   * calculated for the control. If the control is not present, null is returned.\n   */\n  get statusChanges() {\n    return this.control ? this.control.statusChanges : null;\n  }\n  /**\n   * @description\n   * Returns a multicasting observable of value changes for the control that emits every time the\n   * value of the control changes in the UI or programmatically.\n   * If the control is not present, null is returned.\n   */\n  get valueChanges() {\n    return this.control ? this.control.valueChanges : null;\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return null;\n  }\n  /**\n   * Sets synchronous validators for this directive.\n   * @internal\n   */\n  _setValidators(validators) {\n    this._rawValidators = validators || [];\n    this._composedValidatorFn = composeValidators(this._rawValidators);\n  }\n  /**\n   * Sets asynchronous validators for this directive.\n   * @internal\n   */\n  _setAsyncValidators(validators) {\n    this._rawAsyncValidators = validators || [];\n    this._composedAsyncValidatorFn = composeAsyncValidators(this._rawAsyncValidators);\n  }\n  /**\n   * @description\n   * Synchronous validator function composed of all the synchronous validators registered with this\n   * directive.\n   */\n  get validator() {\n    return this._composedValidatorFn || null;\n  }\n  /**\n   * @description\n   * Asynchronous validator function composed of all the asynchronous validators registered with\n   * this directive.\n   */\n  get asyncValidator() {\n    return this._composedAsyncValidatorFn || null;\n  }\n  /**\n   * Internal function to register callbacks that should be invoked\n   * when directive instance is being destroyed.\n   * @internal\n   */\n  _registerOnDestroy(fn) {\n    this._onDestroyCallbacks.push(fn);\n  }\n  /**\n   * Internal function to invoke all registered \"on destroy\" callbacks.\n   * Note: calling this function also clears the list of callbacks.\n   * @internal\n   */\n  _invokeOnDestroyCallbacks() {\n    this._onDestroyCallbacks.forEach(fn => fn());\n    this._onDestroyCallbacks = [];\n  }\n  /**\n   * @description\n   * Resets the control with the provided value if the control is present.\n   */\n  reset(value = undefined) {\n    if (this.control) this.control.reset(value);\n  }\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode, path) {\n    return this.control ? this.control.hasError(errorCode, path) : false;\n  }\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode, path) {\n    return this.control ? this.control.getError(errorCode, path) : null;\n  }\n}\n\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n  /**\n   * @description\n   * The top-level form directive for the control.\n   */\n  get formDirective() {\n    return null;\n  }\n  /**\n   * @description\n   * The path to this group.\n   */\n  get path() {\n    return null;\n  }\n}\n\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n  constructor() {\n    super(...arguments);\n    /**\n     * @description\n     * The parent form for the control.\n     *\n     * @internal\n     */\n    this._parent = null;\n    /**\n     * @description\n     * The name for the control\n     */\n    this.name = null;\n    /**\n     * @description\n     * The value accessor for the control\n     */\n    this.valueAccessor = null;\n  }\n}\n\n// DO NOT REFACTOR!\n// Each status is represented by a separate function to make sure that\n// advanced Closure Compiler optimizations related to property renaming\n// can work correctly.\nclass AbstractControlStatus {\n  constructor(cd) {\n    this._cd = cd;\n  }\n  get isTouched() {\n    // track the touched signal\n    this._cd?.control?._touched?.();\n    return !!this._cd?.control?.touched;\n  }\n  get isUntouched() {\n    return !!this._cd?.control?.untouched;\n  }\n  get isPristine() {\n    // track the pristine signal\n    this._cd?.control?._pristine?.();\n    return !!this._cd?.control?.pristine;\n  }\n  get isDirty() {\n    // pristine signal already tracked above\n    return !!this._cd?.control?.dirty;\n  }\n  get isValid() {\n    // track the status signal\n    this._cd?.control?._status?.();\n    return !!this._cd?.control?.valid;\n  }\n  get isInvalid() {\n    // status signal already tracked above\n    return !!this._cd?.control?.invalid;\n  }\n  get isPending() {\n    // status signal already tracked above\n    return !!this._cd?.control?.pending;\n  }\n  get isSubmitted() {\n    // track the submitted signal\n    this._cd?._submitted?.();\n    // We check for the `submitted` field from `NgForm` and `FormGroupDirective` classes, but\n    // we avoid instanceof checks to prevent non-tree-shakable references to those types.\n    return !!this._cd?.submitted;\n  }\n}\nconst ngControlStatusHost = {\n  '[class.ng-untouched]': 'isUntouched',\n  '[class.ng-touched]': 'isTouched',\n  '[class.ng-pristine]': 'isPristine',\n  '[class.ng-dirty]': 'isDirty',\n  '[class.ng-valid]': 'isValid',\n  '[class.ng-invalid]': 'isInvalid',\n  '[class.ng-pending]': 'isPending'\n};\nconst ngGroupStatusHost = {\n  ...ngControlStatusHost,\n  '[class.ng-submitted]': 'isSubmitted'\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgControlStatus = /*#__PURE__*/(() => {\n  class NgControlStatus extends AbstractControlStatus {\n    constructor(cd) {\n      super(cd);\n    }\n    static {\n      this.ɵfac = function NgControlStatus_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NgControlStatus)(i0.ɵɵdirectiveInject(NgControl, 2));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NgControlStatus,\n        selectors: [[\"\", \"formControlName\", \"\"], [\"\", \"ngModel\", \"\"], [\"\", \"formControl\", \"\"]],\n        hostVars: 14,\n        hostBindings: function NgControlStatus_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"ng-untouched\", ctx.isUntouched)(\"ng-touched\", ctx.isTouched)(\"ng-pristine\", ctx.isPristine)(\"ng-dirty\", ctx.isDirty)(\"ng-valid\", ctx.isValid)(\"ng-invalid\", ctx.isInvalid)(\"ng-pending\", ctx.isPending);\n          }\n        },\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return NgControlStatus;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc). On groups, this includes the additional\n * class ng-submitted.\n *\n * @see {@link NgControlStatus}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgControlStatusGroup = /*#__PURE__*/(() => {\n  class NgControlStatusGroup extends AbstractControlStatus {\n    constructor(cd) {\n      super(cd);\n    }\n    static {\n      this.ɵfac = function NgControlStatusGroup_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NgControlStatusGroup)(i0.ɵɵdirectiveInject(ControlContainer, 10));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NgControlStatusGroup,\n        selectors: [[\"\", \"formGroupName\", \"\"], [\"\", \"formArrayName\", \"\"], [\"\", \"ngModelGroup\", \"\"], [\"\", \"formGroup\", \"\"], [\"form\", 3, \"ngNoForm\", \"\"], [\"\", \"ngForm\", \"\"]],\n        hostVars: 16,\n        hostBindings: function NgControlStatusGroup_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"ng-untouched\", ctx.isUntouched)(\"ng-touched\", ctx.isTouched)(\"ng-pristine\", ctx.isPristine)(\"ng-dirty\", ctx.isDirty)(\"ng-valid\", ctx.isValid)(\"ng-invalid\", ctx.isInvalid)(\"ng-pending\", ctx.isPending)(\"ng-submitted\", ctx.isSubmitted);\n          }\n        },\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return NgControlStatusGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formControlNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <input formControlName=\"firstName\">\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      firstName: new FormControl()\n  });`;\nconst formGroupNameExample = `\n  <div [formGroup]=\"myGroup\">\n      <div formGroupName=\"person\">\n        <input formControlName=\"firstName\">\n      </div>\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      person: new FormGroup({ firstName: new FormControl() })\n  });`;\nconst formArrayNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <div formArrayName=\"cities\">\n      <div *ngFor=\"let city of cityArray.controls; index as i\">\n        <input [formControlName]=\"i\">\n      </div>\n    </div>\n  </div>\n\n  In your class:\n\n  this.cityArray = new FormArray([new FormControl('SF')]);\n  this.myGroup = new FormGroup({\n    cities: this.cityArray\n  });`;\nconst ngModelGroupExample = `\n  <form>\n      <div ngModelGroup=\"person\">\n        <input [(ngModel)]=\"person.name\" name=\"firstName\">\n      </div>\n  </form>`;\nconst ngModelWithFormGroupExample = `\n  <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n      <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n  </div>\n`;\nfunction controlParentException(nameOrIndex) {\n  return new ɵRuntimeError(1050 /* RuntimeErrorCode.FORM_CONTROL_NAME_MISSING_PARENT */, `formControlName must be used with a parent formGroup directive. You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      ${describeFormControl(nameOrIndex)}\n\n    Example:\n\n    ${formControlNameExample}`);\n}\nfunction describeFormControl(nameOrIndex) {\n  if (nameOrIndex == null || nameOrIndex === '') {\n    return '';\n  }\n  const valueType = typeof nameOrIndex === 'string' ? 'name' : 'index';\n  return `Affected Form Control ${valueType}: \"${nameOrIndex}\"`;\n}\nfunction ngModelGroupException() {\n  return new ɵRuntimeError(1051 /* RuntimeErrorCode.FORM_CONTROL_NAME_INSIDE_MODEL_GROUP */, `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n      that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n      Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n      ${formGroupNameExample}\n\n      Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n      ${ngModelGroupExample}`);\n}\nfunction missingFormException() {\n  return new ɵRuntimeError(1052 /* RuntimeErrorCode.FORM_GROUP_MISSING_INSTANCE */, `formGroup expects a FormGroup instance. Please pass one in.\n\n      Example:\n\n      ${formControlNameExample}`);\n}\nfunction groupParentException() {\n  return new ɵRuntimeError(1053 /* RuntimeErrorCode.FORM_GROUP_NAME_MISSING_PARENT */, `formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n    directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formGroupNameExample}`);\n}\nfunction arrayParentException() {\n  return new ɵRuntimeError(1054 /* RuntimeErrorCode.FORM_ARRAY_NAME_MISSING_PARENT */, `formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${formArrayNameExample}`);\n}\nconst disabledAttrWarning = `\n  It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n  when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n  you. We recommend using this approach to avoid 'changed after checked' errors.\n\n  Example:\n  // Specify the \\`disabled\\` property at control creation time:\n  form = new FormGroup({\n    first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n    last: new FormControl('Drew', Validators.required)\n  });\n\n  // Controls can also be enabled/disabled after creation:\n  form.get('first')?.enable();\n  form.get('last')?.disable();\n`;\nconst asyncValidatorsDroppedWithOptsWarning = `\n  It looks like you're constructing using a FormControl with both an options argument and an\n  async validators argument. Mixing these arguments will cause your async validators to be dropped.\n  You should either put all your validators in the options object, or in separate validators\n  arguments. For example:\n\n  // Using validators arguments\n  fc = new FormControl(42, Validators.required, myAsyncValidator);\n\n  // Using AbstractControlOptions\n  fc = new FormControl(42, {validators: Validators.required, asyncValidators: myAV});\n\n  // Do NOT mix them: async validators will be dropped!\n  fc = new FormControl(42, {validators: Validators.required}, /* Oops! */ myAsyncValidator);\n`;\nfunction ngModelWarning(directiveName) {\n  return `\n  It looks like you're using ngModel on the same form field as ${directiveName}.\n  Support for using the ngModel input property and ngModelChange event with\n  reactive form directives has been deprecated in Angular v6 and will be removed\n  in a future version of Angular.\n\n  For more information on this, see our API docs here:\n  https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' : 'FormControlName'}#use-with-ngmodel\n  `;\n}\nfunction describeKey(isFormGroup, key) {\n  return isFormGroup ? `with name: '${key}'` : `at index: ${key}`;\n}\nfunction noControlsError(isFormGroup) {\n  return `\n    There are no form controls registered with this ${isFormGroup ? 'group' : 'array'} yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  `;\n}\nfunction missingControlError(isFormGroup, key) {\n  return `Cannot find form control ${describeKey(isFormGroup, key)}`;\n}\nfunction missingControlValueError(isFormGroup, key) {\n  return `Must supply a value for form control ${describeKey(isFormGroup, key)}`;\n}\n\n/**\n * Reports that a control is valid, meaning that no errors exist in the input value.\n *\n * @see {@link status}\n */\nconst VALID = 'VALID';\n/**\n * Reports that a control is invalid, meaning that an error exists in the input value.\n *\n * @see {@link status}\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a control is pending, meaning that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see {@link markAsPending}\n * @see {@link status}\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a control is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see {@link markAsDisabled}\n * @see {@link status}\n */\nconst DISABLED = 'DISABLED';\n/**\n * Base class for every event sent by `AbstractControl.events()`\n *\n * @publicApi\n */\nclass ControlEvent {}\n/**\n * Event fired when the value of a control changes.\n *\n * @publicApi\n */\nclass ValueChangeEvent extends ControlEvent {\n  constructor(value, source) {\n    super();\n    this.value = value;\n    this.source = source;\n  }\n}\n/**\n * Event fired when the control's pristine state changes (pristine <=> dirty).\n *\n * @publicApi */\nclass PristineChangeEvent extends ControlEvent {\n  constructor(pristine, source) {\n    super();\n    this.pristine = pristine;\n    this.source = source;\n  }\n}\n/**\n * Event fired when the control's touched status changes (touched <=> untouched).\n *\n * @publicApi\n */\nclass TouchedChangeEvent extends ControlEvent {\n  constructor(touched, source) {\n    super();\n    this.touched = touched;\n    this.source = source;\n  }\n}\n/**\n * Event fired when the control's status changes.\n *\n * @publicApi\n */\nclass StatusChangeEvent extends ControlEvent {\n  constructor(status, source) {\n    super();\n    this.status = status;\n    this.source = source;\n  }\n}\n/**\n * Event fired when a form is submitted\n *\n * @publicApi\n */\nclass FormSubmittedEvent extends ControlEvent {\n  constructor(source) {\n    super();\n    this.source = source;\n  }\n}\n/**\n * Event fired when a form is reset.\n *\n * @publicApi\n */\nclass FormResetEvent extends ControlEvent {\n  constructor(source) {\n    super();\n    this.source = source;\n  }\n}\n/**\n * Gets validators from either an options object or given validators.\n */\nfunction pickValidators(validatorOrOpts) {\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;\n}\n/**\n * Creates validator function by combining provided validators.\n */\nfunction coerceToValidator(validator) {\n  return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * Gets async validators from either an options object or given validators.\n */\nfunction pickAsyncValidators(asyncValidator, validatorOrOpts) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (isOptionsObj(validatorOrOpts) && asyncValidator) {\n      console.warn(asyncValidatorsDroppedWithOptsWarning);\n    }\n  }\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;\n}\n/**\n * Creates async validator function by combining provided async validators.\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n  return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n  return validatorOrOpts != null && !Array.isArray(validatorOrOpts) && typeof validatorOrOpts === 'object';\n}\nfunction assertControlPresent(parent, isGroup, key) {\n  const controls = parent.controls;\n  const collection = isGroup ? Object.keys(controls) : controls;\n  if (!collection.length) {\n    throw new ɵRuntimeError(1000 /* RuntimeErrorCode.NO_CONTROLS */, typeof ngDevMode === 'undefined' || ngDevMode ? noControlsError(isGroup) : '');\n  }\n  if (!controls[key]) {\n    throw new ɵRuntimeError(1001 /* RuntimeErrorCode.MISSING_CONTROL */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlError(isGroup, key) : '');\n  }\n}\nfunction assertAllValuesPresent(control, isGroup, value) {\n  control._forEachChild((_, key) => {\n    if (value[key] === undefined) {\n      throw new ɵRuntimeError(1002 /* RuntimeErrorCode.MISSING_CONTROL_VALUE */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlValueError(isGroup, key) : '');\n    }\n  });\n}\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * The first type parameter TValue represents the value type of the control (`control.value`).\n * The optional type parameter TRawValue  represents the raw value type (`control.getRawValue()`).\n *\n * @see [Forms Guide](guide/forms)\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see [Dynamic Forms Guide](guide/forms/dynamic-forms)\n *\n * @publicApi\n */\nclass AbstractControl {\n  /**\n   * Initialize the AbstractControl instance.\n   *\n   * @param validators The function or array of functions that is used to determine the validity of\n   *     this control synchronously.\n   * @param asyncValidators The function or array of functions that is used to determine validity of\n   *     this control asynchronously.\n   */\n  constructor(validators, asyncValidators) {\n    /** @internal */\n    this._pendingDirty = false;\n    /**\n     * Indicates that a control has its own pending asynchronous validation in progress.\n     * It also stores if the control should emit events when the validation status changes.\n     *\n     * @internal\n     */\n    this._hasOwnPendingAsyncValidator = null;\n    /** @internal */\n    this._pendingTouched = false;\n    /** @internal */\n    this._onCollectionChange = () => {};\n    this._parent = null;\n    /** @internal */\n    this._status = computed(() => this.statusReactive());\n    this.statusReactive = signal(undefined);\n    /** @internal */\n    this._pristine = computed(() => this.pristineReactive());\n    this.pristineReactive = signal(true);\n    /** @internal */\n    this._touched = computed(() => this.touchedReactive());\n    this.touchedReactive = signal(false);\n    /**\n     * Exposed as observable, see below.\n     *\n     * @internal\n     */\n    this._events = new Subject();\n    /**\n     * A multicasting observable that emits an event every time the state of the control changes.\n     * It emits for value, status, pristine or touched changes.\n     *\n     * **Note**: On value change, the emit happens right after a value of this control is updated. The\n     * value of a parent control (for example if this FormControl is a part of a FormGroup) is updated\n     * later, so accessing a value of a parent control (using the `value` property) from the callback\n     * of this event might result in getting a value that has not been updated yet. Subscribe to the\n     * `events` of the parent control instead.\n     * For other event types, the events are emitted after the parent control has been updated.\n     *\n     */\n    this.events = this._events.asObservable();\n    /** @internal */\n    this._onDisabledChange = [];\n    this._assignValidators(validators);\n    this._assignAsyncValidators(asyncValidators);\n  }\n  /**\n   * Returns the function that is used to determine the validity of this control synchronously.\n   * If multiple validators have been added, this will be a single composed function.\n   * See `Validators.compose()` for additional information.\n   */\n  get validator() {\n    return this._composedValidatorFn;\n  }\n  set validator(validatorFn) {\n    this._rawValidators = this._composedValidatorFn = validatorFn;\n  }\n  /**\n   * Returns the function that is used to determine the validity of this control asynchronously.\n   * If multiple validators have been added, this will be a single composed function.\n   * See `Validators.compose()` for additional information.\n   */\n  get asyncValidator() {\n    return this._composedAsyncValidatorFn;\n  }\n  set asyncValidator(asyncValidatorFn) {\n    this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;\n  }\n  /**\n   * The parent control.\n   */\n  get parent() {\n    return this._parent;\n  }\n  /**\n   * The validation status of the control.\n   *\n   * @see {@link FormControlStatus}\n   *\n   * These status values are mutually exclusive, so a control cannot be\n   * both valid AND invalid or invalid AND disabled.\n   */\n  get status() {\n    return untracked(this.statusReactive);\n  }\n  set status(v) {\n    untracked(() => this.statusReactive.set(v));\n  }\n  /**\n   * A control is `valid` when its `status` is `VALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control has passed all of its validation tests,\n   * false otherwise.\n   */\n  get valid() {\n    return this.status === VALID;\n  }\n  /**\n   * A control is `invalid` when its `status` is `INVALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control has failed one or more of its validation checks,\n   * false otherwise.\n   */\n  get invalid() {\n    return this.status === INVALID;\n  }\n  /**\n   * A control is `pending` when its `status` is `PENDING`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control is in the process of conducting a validation check,\n   * false otherwise.\n   */\n  get pending() {\n    return this.status == PENDING;\n  }\n  /**\n   * A control is `disabled` when its `status` is `DISABLED`.\n   *\n   * Disabled controls are exempt from validation checks and\n   * are not included in the aggregate value of their ancestor\n   * controls.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control is disabled, false otherwise.\n   */\n  get disabled() {\n    return this.status === DISABLED;\n  }\n  /**\n   * A control is `enabled` as long as its `status` is not `DISABLED`.\n   *\n   * @returns True if the control has any status other than 'DISABLED',\n   * false if the status is 'DISABLED'.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   */\n  get enabled() {\n    return this.status !== DISABLED;\n  }\n  /**\n   * A control is `pristine` if the user has not yet changed\n   * the value in the UI.\n   *\n   * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n   * Programmatic changes to a control's value do not mark it dirty.\n   */\n  get pristine() {\n    return untracked(this.pristineReactive);\n  }\n  set pristine(v) {\n    untracked(() => this.pristineReactive.set(v));\n  }\n  /**\n   * A control is `dirty` if the user has changed the value\n   * in the UI.\n   *\n   * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n   * Programmatic changes to a control's value do not mark it dirty.\n   */\n  get dirty() {\n    return !this.pristine;\n  }\n  /**\n   * True if the control is marked as `touched`.\n   *\n   * A control is marked `touched` once the user has triggered\n   * a `blur` event on it.\n   */\n  get touched() {\n    return untracked(this.touchedReactive);\n  }\n  set touched(v) {\n    untracked(() => this.touchedReactive.set(v));\n  }\n  /**\n   * True if the control has not been marked as touched\n   *\n   * A control is `untouched` if the user has not yet triggered\n   * a `blur` event on it.\n   */\n  get untouched() {\n    return !this.touched;\n  }\n  /**\n   * Reports the update strategy of the `AbstractControl` (meaning\n   * the event on which the control updates itself).\n   * Possible values: `'change'` | `'blur'` | `'submit'`\n   * Default value: `'change'`\n   */\n  get updateOn() {\n    return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : 'change';\n  }\n  /**\n   * Sets the synchronous validators that are active on this control.  Calling\n   * this overwrites any existing synchronous validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * If you want to add a new validator without affecting existing ones, consider\n   * using `addValidators()` method instead.\n   */\n  setValidators(validators) {\n    this._assignValidators(validators);\n  }\n  /**\n   * Sets the asynchronous validators that are active on this control. Calling this\n   * overwrites any existing asynchronous validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * If you want to add a new validator without affecting existing ones, consider\n   * using `addAsyncValidators()` method instead.\n   */\n  setAsyncValidators(validators) {\n    this._assignAsyncValidators(validators);\n  }\n  /**\n   * Add a synchronous validator or validators to this control, without affecting other validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * Adding a validator that already exists will have no effect. If duplicate validator functions\n   * are present in the `validators` array, only the first instance would be added to a form\n   * control.\n   *\n   * @param validators The new validator function or functions to add to this control.\n   */\n  addValidators(validators) {\n    this.setValidators(addValidators(validators, this._rawValidators));\n  }\n  /**\n   * Add an asynchronous validator or validators to this control, without affecting other\n   * validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * Adding a validator that already exists will have no effect.\n   *\n   * @param validators The new asynchronous validator function or functions to add to this control.\n   */\n  addAsyncValidators(validators) {\n    this.setAsyncValidators(addValidators(validators, this._rawAsyncValidators));\n  }\n  /**\n   * Remove a synchronous validator from this control, without affecting other validators.\n   * Validators are compared by function reference; you must pass a reference to the exact same\n   * validator function as the one that was originally set. If a provided validator is not found,\n   * it is ignored.\n   *\n   * @usageNotes\n   *\n   * ### Reference to a ValidatorFn\n   *\n   * ```\n   * // Reference to the RequiredValidator\n   * const ctrl = new FormControl<string | null>('', Validators.required);\n   * ctrl.removeValidators(Validators.required);\n   *\n   * // Reference to anonymous function inside MinValidator\n   * const minValidator = Validators.min(3);\n   * const ctrl = new FormControl<string | null>('', minValidator);\n   * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n   * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n   *\n   * ctrl.removeValidators(minValidator);\n   * ```\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * @param validators The validator or validators to remove.\n   */\n  removeValidators(validators) {\n    this.setValidators(removeValidators(validators, this._rawValidators));\n  }\n  /**\n   * Remove an asynchronous validator from this control, without affecting other validators.\n   * Validators are compared by function reference; you must pass a reference to the exact same\n   * validator function as the one that was originally set. If a provided validator is not found, it\n   * is ignored.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * @param validators The asynchronous validator or validators to remove.\n   */\n  removeAsyncValidators(validators) {\n    this.setAsyncValidators(removeValidators(validators, this._rawAsyncValidators));\n  }\n  /**\n   * Check whether a synchronous validator function is present on this control. The provided\n   * validator must be a reference to the exact same function that was provided.\n   *\n   * @usageNotes\n   *\n   * ### Reference to a ValidatorFn\n   *\n   * ```\n   * // Reference to the RequiredValidator\n   * const ctrl = new FormControl<number | null>(0, Validators.required);\n   * expect(ctrl.hasValidator(Validators.required)).toEqual(true)\n   *\n   * // Reference to anonymous function inside MinValidator\n   * const minValidator = Validators.min(3);\n   * const ctrl = new FormControl<number | null>(0, minValidator);\n   * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n   * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n   * ```\n   *\n   * @param validator The validator to check for presence. Compared by function reference.\n   * @returns Whether the provided validator was found on this control.\n   */\n  hasValidator(validator) {\n    return hasValidator(this._rawValidators, validator);\n  }\n  /**\n   * Check whether an asynchronous validator function is present on this control. The provided\n   * validator must be a reference to the exact same function that was provided.\n   *\n   * @param validator The asynchronous validator to check for presence. Compared by function\n   *     reference.\n   * @returns Whether the provided asynchronous validator was found on this control.\n   */\n  hasAsyncValidator(validator) {\n    return hasValidator(this._rawAsyncValidators, validator);\n  }\n  /**\n   * Empties out the synchronous validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearValidators() {\n    this.validator = null;\n  }\n  /**\n   * Empties out the async validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearAsyncValidators() {\n    this.asyncValidator = null;\n  }\n  markAsTouched(opts = {}) {\n    const changed = this.touched === false;\n    this.touched = true;\n    const sourceControl = opts.sourceControl ?? this;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsTouched({\n        ...opts,\n        sourceControl\n      });\n    }\n    if (changed && opts.emitEvent !== false) {\n      this._events.next(new TouchedChangeEvent(true, sourceControl));\n    }\n  }\n  /**\n   * Marks the control and all its descendant controls as `touched`.\n   * @see {@link markAsTouched()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after marking is applied.\n   * * `emitEvent`: When true or not supplied (the default), the `events`\n   * observable emits a `TouchedChangeEvent` with the `touched` property being `true`.\n   * When false, no events are emitted.\n   */\n  markAllAsTouched(opts = {}) {\n    this.markAsTouched({\n      onlySelf: true,\n      emitEvent: opts.emitEvent,\n      sourceControl: this\n    });\n    this._forEachChild(control => control.markAllAsTouched(opts));\n  }\n  markAsUntouched(opts = {}) {\n    const changed = this.touched === true;\n    this.touched = false;\n    this._pendingTouched = false;\n    const sourceControl = opts.sourceControl ?? this;\n    this._forEachChild(control => {\n      control.markAsUntouched({\n        onlySelf: true,\n        emitEvent: opts.emitEvent,\n        sourceControl\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts, sourceControl);\n    }\n    if (changed && opts.emitEvent !== false) {\n      this._events.next(new TouchedChangeEvent(false, sourceControl));\n    }\n  }\n  markAsDirty(opts = {}) {\n    const changed = this.pristine === true;\n    this.pristine = false;\n    const sourceControl = opts.sourceControl ?? this;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsDirty({\n        ...opts,\n        sourceControl\n      });\n    }\n    if (changed && opts.emitEvent !== false) {\n      this._events.next(new PristineChangeEvent(false, sourceControl));\n    }\n  }\n  markAsPristine(opts = {}) {\n    const changed = this.pristine === false;\n    this.pristine = true;\n    this._pendingDirty = false;\n    const sourceControl = opts.sourceControl ?? this;\n    this._forEachChild(control => {\n      /** We don't propagate the source control downwards */\n      control.markAsPristine({\n        onlySelf: true,\n        emitEvent: opts.emitEvent\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts, sourceControl);\n    }\n    if (changed && opts.emitEvent !== false) {\n      this._events.next(new PristineChangeEvent(true, sourceControl));\n    }\n  }\n  markAsPending(opts = {}) {\n    this.status = PENDING;\n    const sourceControl = opts.sourceControl ?? this;\n    if (opts.emitEvent !== false) {\n      this._events.next(new StatusChangeEvent(this.status, sourceControl));\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsPending({\n        ...opts,\n        sourceControl\n      });\n    }\n  }\n  disable(opts = {}) {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n    this.status = DISABLED;\n    this.errors = null;\n    this._forEachChild(control => {\n      /** We don't propagate the source control downwards */\n      control.disable({\n        ...opts,\n        onlySelf: true\n      });\n    });\n    this._updateValue();\n    const sourceControl = opts.sourceControl ?? this;\n    if (opts.emitEvent !== false) {\n      this._events.next(new ValueChangeEvent(this.value, sourceControl));\n      this._events.next(new StatusChangeEvent(this.status, sourceControl));\n      this.valueChanges.emit(this.value);\n      this.statusChanges.emit(this.status);\n    }\n    this._updateAncestors({\n      ...opts,\n      skipPristineCheck\n    }, this);\n    this._onDisabledChange.forEach(changeFn => changeFn(true));\n  }\n  /**\n   * Enables the control. This means the control is included in validation checks and\n   * the aggregate value of its parent. Its status recalculates based on its value and\n   * its validators.\n   *\n   * By default, if the control has children, all children are enabled.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configure options that control how the control propagates changes and\n   * emits events when marked as untouched\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), the `statusChanges`,\n   * `valueChanges` and `events`\n   * observables emit events with the latest status and value when the control is enabled.\n   * When false, no events are emitted.\n   */\n  enable(opts = {}) {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n    this.status = VALID;\n    this._forEachChild(control => {\n      control.enable({\n        ...opts,\n        onlySelf: true\n      });\n    });\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n    this._updateAncestors({\n      ...opts,\n      skipPristineCheck\n    }, this);\n    this._onDisabledChange.forEach(changeFn => changeFn(false));\n  }\n  _updateAncestors(opts, sourceControl) {\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity(opts);\n      if (!opts.skipPristineCheck) {\n        this._parent._updatePristine({}, sourceControl);\n      }\n      this._parent._updateTouched({}, sourceControl);\n    }\n  }\n  /**\n   * Sets the parent of the control\n   *\n   * @param parent The new parent.\n   */\n  setParent(parent) {\n    this._parent = parent;\n  }\n  /**\n   * The raw value of this control. For most control implementations, the raw value will include\n   * disabled children.\n   */\n  getRawValue() {\n    return this.value;\n  }\n  updateValueAndValidity(opts = {}) {\n    this._setInitialStatus();\n    this._updateValue();\n    if (this.enabled) {\n      const shouldHaveEmitted = this._cancelExistingSubscription();\n      this.errors = this._runValidator();\n      this.status = this._calculateStatus();\n      if (this.status === VALID || this.status === PENDING) {\n        // If the canceled subscription should have emitted\n        // we make sure the async validator emits the status change on completion\n        this._runAsyncValidator(shouldHaveEmitted, opts.emitEvent);\n      }\n    }\n    const sourceControl = opts.sourceControl ?? this;\n    if (opts.emitEvent !== false) {\n      this._events.next(new ValueChangeEvent(this.value, sourceControl));\n      this._events.next(new StatusChangeEvent(this.status, sourceControl));\n      this.valueChanges.emit(this.value);\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity({\n        ...opts,\n        sourceControl\n      });\n    }\n  }\n  /** @internal */\n  _updateTreeValidity(opts = {\n    emitEvent: true\n  }) {\n    this._forEachChild(ctrl => ctrl._updateTreeValidity(opts));\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n  }\n  _setInitialStatus() {\n    this.status = this._allControlsDisabled() ? DISABLED : VALID;\n  }\n  _runValidator() {\n    return this.validator ? this.validator(this) : null;\n  }\n  _runAsyncValidator(shouldHaveEmitted, emitEvent) {\n    if (this.asyncValidator) {\n      this.status = PENDING;\n      this._hasOwnPendingAsyncValidator = {\n        emitEvent: emitEvent !== false\n      };\n      const obs = toObservable(this.asyncValidator(this));\n      this._asyncValidationSubscription = obs.subscribe(errors => {\n        this._hasOwnPendingAsyncValidator = null;\n        // This will trigger the recalculation of the validation status, which depends on\n        // the state of the asynchronous validation (whether it is in progress or not). So, it is\n        // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.\n        this.setErrors(errors, {\n          emitEvent,\n          shouldHaveEmitted\n        });\n      });\n    }\n  }\n  _cancelExistingSubscription() {\n    if (this._asyncValidationSubscription) {\n      this._asyncValidationSubscription.unsubscribe();\n      // we're cancelling the validator subscribtion, we keep if it should have emitted\n      // because we want to emit eventually if it was required at least once.\n      const shouldHaveEmitted = this._hasOwnPendingAsyncValidator?.emitEvent ?? false;\n      this._hasOwnPendingAsyncValidator = null;\n      return shouldHaveEmitted;\n    }\n    return false;\n  }\n  setErrors(errors, opts = {}) {\n    this.errors = errors;\n    this._updateControlsErrors(opts.emitEvent !== false, this, opts.shouldHaveEmitted);\n  }\n  /**\n   * Retrieves a child control given the control's name or path.\n   *\n   * @param path A dot-delimited string or array of string/number values that define the path to the\n   * control. If a string is provided, passing it as a string literal will result in improved type\n   * information. Likewise, if an array is provided, passing it `as const` will cause improved type\n   * information to be available.\n   *\n   * @usageNotes\n   * ### Retrieve a nested control\n   *\n   * For example, to get a `name` control nested within a `person` sub-group:\n   *\n   * * `this.form.get('person.name');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['person', 'name'] as const);` // `as const` gives improved typings\n   *\n   * ### Retrieve a control in a FormArray\n   *\n   * When accessing an element inside a FormArray, you can use an element index.\n   * For example, to get a `price` control from the first element in an `items` array you can use:\n   *\n   * * `this.form.get('items.0.price');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['items', 0, 'price']);`\n   */\n  get(path) {\n    let currPath = path;\n    if (currPath == null) return null;\n    if (!Array.isArray(currPath)) currPath = currPath.split('.');\n    if (currPath.length === 0) return null;\n    return currPath.reduce((control, name) => control && control._find(name), this);\n  }\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode, path) {\n    const control = path ? this.get(path) : this;\n    return control && control.errors ? control.errors[errorCode] : null;\n  }\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode, path) {\n    return !!this.getError(errorCode, path);\n  }\n  /**\n   * Retrieves the top-level ancestor of this control.\n   */\n  get root() {\n    let x = this;\n    while (x._parent) {\n      x = x._parent;\n    }\n    return x;\n  }\n  /** @internal */\n  _updateControlsErrors(emitEvent, changedControl, shouldHaveEmitted) {\n    this.status = this._calculateStatus();\n    if (emitEvent) {\n      this.statusChanges.emit(this.status);\n    }\n    // The Events Observable expose a slight different bevahior than the statusChanges obs\n    // An async validator will still emit a StatusChangeEvent is a previously cancelled\n    // async validator has emitEvent set to true\n    if (emitEvent || shouldHaveEmitted) {\n      this._events.next(new StatusChangeEvent(this.status, changedControl));\n    }\n    if (this._parent) {\n      this._parent._updateControlsErrors(emitEvent, changedControl, shouldHaveEmitted);\n    }\n  }\n  /** @internal */\n  _initObservables() {\n    this.valueChanges = new EventEmitter();\n    this.statusChanges = new EventEmitter();\n  }\n  _calculateStatus() {\n    if (this._allControlsDisabled()) return DISABLED;\n    if (this.errors) return INVALID;\n    if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING)) return PENDING;\n    if (this._anyControlsHaveStatus(INVALID)) return INVALID;\n    return VALID;\n  }\n  /** @internal */\n  _anyControlsHaveStatus(status) {\n    return this._anyControls(control => control.status === status);\n  }\n  /** @internal */\n  _anyControlsDirty() {\n    return this._anyControls(control => control.dirty);\n  }\n  /** @internal */\n  _anyControlsTouched() {\n    return this._anyControls(control => control.touched);\n  }\n  /** @internal */\n  _updatePristine(opts, changedControl) {\n    const newPristine = !this._anyControlsDirty();\n    const changed = this.pristine !== newPristine;\n    this.pristine = newPristine;\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts, changedControl);\n    }\n    if (changed) {\n      this._events.next(new PristineChangeEvent(this.pristine, changedControl));\n    }\n  }\n  /** @internal */\n  _updateTouched(opts = {}, changedControl) {\n    this.touched = this._anyControlsTouched();\n    this._events.next(new TouchedChangeEvent(this.touched, changedControl));\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts, changedControl);\n    }\n  }\n  /** @internal */\n  _registerOnCollectionChange(fn) {\n    this._onCollectionChange = fn;\n  }\n  /** @internal */\n  _setUpdateStrategy(opts) {\n    if (isOptionsObj(opts) && opts.updateOn != null) {\n      this._updateOn = opts.updateOn;\n    }\n  }\n  /**\n   * Check to see if parent has been marked artificially dirty.\n   *\n   * @internal\n   */\n  _parentMarkedDirty(onlySelf) {\n    const parentDirty = this._parent && this._parent.dirty;\n    return !onlySelf && !!parentDirty && !this._parent._anyControlsDirty();\n  }\n  /** @internal */\n  _find(name) {\n    return null;\n  }\n  /**\n   * Internal implementation of the `setValidators` method. Needs to be separated out into a\n   * different method, because it is called in the constructor and it can break cases where\n   * a control is extended.\n   */\n  _assignValidators(validators) {\n    this._rawValidators = Array.isArray(validators) ? validators.slice() : validators;\n    this._composedValidatorFn = coerceToValidator(this._rawValidators);\n  }\n  /**\n   * Internal implementation of the `setAsyncValidators` method. Needs to be separated out into a\n   * different method, because it is called in the constructor and it can break cases where\n   * a control is extended.\n   */\n  _assignAsyncValidators(validators) {\n    this._rawAsyncValidators = Array.isArray(validators) ? validators.slice() : validators;\n    this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);\n  }\n}\n\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormArray`, and `FormRecord`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * `FormGroup` is intended for use cases where the keys are known ahead of time.\n * If you need to dynamically add and remove controls, use {@link FormRecord} instead.\n *\n * `FormGroup` accepts an optional type parameter `TControl`, which is an object type with inner\n * control types as values.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### The type argument, and optional controls\n *\n * `FormGroup` accepts one generic argument, which is an object containing its inner controls.\n * This type will usually be inferred automatically, but you can always specify it explicitly if you\n * wish.\n *\n * If you have controls that are optional (i.e. they can be removed, you can use the `?` in the\n * type):\n *\n * ```\n * const form = new FormGroup<{\n *   first: FormControl<string|null>,\n *   middle?: FormControl<string|null>, // Middle name is optional.\n *   last: FormControl<string|null>,\n * }>({\n *   first: new FormControl('Nancy'),\n *   last: new FormControl('Drew'),\n * });\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * ### Using a FormGroup with optional controls\n *\n * It is possible to have optional controls in a FormGroup. An optional control can be removed later\n * using `removeControl`, and can be omitted when calling `reset`. Optional controls must be\n * declared optional in the group's type.\n *\n * ```ts\n * const c = new FormGroup<{one?: FormControl<string>}>({\n *   one: new FormControl('')\n * });\n * ```\n *\n * Notice that `c.value.one` has type `string|null|undefined`. This is because calling `c.reset({})`\n * without providing the optional key `one` will cause it to become `null`.\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n  /**\n   * Creates a new `FormGroup` instance.\n   *\n   * @param controls A collection of child controls. The key for each child is the name\n   * under which it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    (typeof ngDevMode === 'undefined' || ngDevMode) && validateFormGroupControls(controls);\n    this.controls = controls;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`. The status should be broadcasted via the `statusChanges` observable,\n      // so we set `emitEvent` to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n  }\n  registerControl(name, control) {\n    if (this.controls[name]) return this.controls[name];\n    this.controls[name] = control;\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n    return control;\n  }\n  addControl(name, control, options = {}) {\n    this.registerControl(name, control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Remove a control from this group. In a strongly-typed group, required controls cannot be\n   * removed.\n   *\n   * This method also updates the value and validity of the control.\n   *\n   * @param name The control name to remove from the collection\n   * @param options Specifies whether this FormGroup instance should emit events after a\n   *     control is removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * removed. When false, no events are emitted.\n   */\n  removeControl(name, options = {}) {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  setControl(name, control, options = {}) {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    if (control) this.registerControl(name, control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  contains(controlName) {\n    return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n  }\n  /**\n   * Sets the value of the `FormGroup`. It accepts an object that matches\n   * the structure of the group, with control names as keys.\n   *\n   * @usageNotes\n   * ### Set the complete value for the form group\n   *\n   * ```\n   * const form = new FormGroup({\n   *   first: new FormControl(),\n   *   last: new FormControl()\n   * });\n   *\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.setValue({first: 'Nancy', last: 'Drew'});\n   * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n   * ```\n   *\n   * @throws When strict checks fail, such as setting the value of a control\n   * that doesn't exist or if you exclude a value of a control that does exist.\n   *\n   * @param value The new value for the control that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events after the value changes.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   */\n  setValue(value, options = {}) {\n    assertAllValuesPresent(this, true, value);\n    Object.keys(value).forEach(name => {\n      assertControlPresent(this, true, name);\n      this.controls[name].setValue(value[name], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of the `FormGroup`. It accepts an object with control\n   * names as keys, and does its best to match the values to the correct controls\n   * in the group.\n   *\n   * It accepts both super-sets and sub-sets of the group without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the value for a form group\n   *\n   * ```\n   * const form = new FormGroup({\n   *    first: new FormControl(),\n   *    last: new FormControl()\n   * });\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.patchValue({first: 'Nancy'});\n   * console.log(form.value);   // {first: 'Nancy', last: null}\n   * ```\n   *\n   * @param value The object that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes and\n   * emits events after the value is patched.\n   * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n   * true.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control value\n   * is updated. When false, no events are emitted. The configuration options are passed to\n   * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n   */\n  patchValue(value, options = {}) {\n    // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n    // `patchValue` can be called recursively and inner data structures might have these values, so\n    // we just ignore such cases when a field containing FormGroup instance receives `null` or\n    // `undefined` as a value.\n    if (value == null /* both `null` and `undefined` */) return;\n    Object.keys(value).forEach(name => {\n      // The compiler cannot see through the uninstantiated conditional type of `this.controls`, so\n      // `as any` is required.\n      const control = this.controls[name];\n      if (control) {\n        control.patchValue( /* Guaranteed to be present, due to the outer forEach. */value[name], {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormGroup`, marks all descendants `pristine` and `untouched` and sets\n   * the value of all descendants to their default values, or null if no defaults were provided.\n   *\n   * You reset to a specific form state by passing in a map of states\n   * that matches the structure of your form, with control names as keys. The state\n   * is a standalone value or a form state object with both a value and a disabled\n   * status.\n   *\n   * @param value Resets the control with an initial value,\n   * or an object that defines the initial value and disabled state.\n   *\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events when the group is reset.\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * @usageNotes\n   *\n   * ### Reset the form group values\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * console.log(form.value);  // {first: 'first name', last: 'last name'}\n   *\n   * form.reset({ first: 'name', last: 'last name' });\n   *\n   * console.log(form.value);  // {first: 'name', last: 'last name'}\n   * ```\n   *\n   * ### Reset the form group values and disabled status\n   *\n   * ```\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * form.reset({\n   *   first: {value: 'name', disabled: true},\n   *   last: 'last'\n   * });\n   *\n   * console.log(form.value);  // {last: 'last'}\n   * console.log(form.get('first').status);  // 'DISABLED'\n   * ```\n   */\n  reset(value = {}, options = {}) {\n    this._forEachChild((control, name) => {\n      control.reset(value ? value[name] : null, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this._updatePristine(options, this);\n    this._updateTouched(options, this);\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the `FormGroup`, including any disabled controls.\n   *\n   * Retrieves all values regardless of disabled status.\n   */\n  getRawValue() {\n    return this._reduceChildren({}, (acc, control, name) => {\n      acc[name] = control.getRawValue();\n      return acc;\n    });\n  }\n  /** @internal */\n  _syncPendingControls() {\n    let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    });\n    if (subtreeUpdated) this.updateValueAndValidity({\n      onlySelf: true\n    });\n    return subtreeUpdated;\n  }\n  /** @internal */\n  _forEachChild(cb) {\n    Object.keys(this.controls).forEach(key => {\n      // The list of controls can change (for ex. controls might be removed) while the loop\n      // is running (as a result of invoking Forms API in `valueChanges` subscription), so we\n      // have to null check before invoking the callback.\n      const control = this.controls[key];\n      control && cb(control, key);\n    });\n  }\n  /** @internal */\n  _setUpControls() {\n    this._forEachChild(control => {\n      control.setParent(this);\n      control._registerOnCollectionChange(this._onCollectionChange);\n    });\n  }\n  /** @internal */\n  _updateValue() {\n    this.value = this._reduceValue();\n  }\n  /** @internal */\n  _anyControls(condition) {\n    for (const [controlName, control] of Object.entries(this.controls)) {\n      if (this.contains(controlName) && condition(control)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /** @internal */\n  _reduceValue() {\n    let acc = {};\n    return this._reduceChildren(acc, (acc, control, name) => {\n      if (control.enabled || this.disabled) {\n        acc[name] = control.value;\n      }\n      return acc;\n    });\n  }\n  /** @internal */\n  _reduceChildren(initValue, fn) {\n    let res = initValue;\n    this._forEachChild((control, name) => {\n      res = fn(res, control, name);\n    });\n    return res;\n  }\n  /** @internal */\n  _allControlsDisabled() {\n    for (const controlName of Object.keys(this.controls)) {\n      if (this.controls[controlName].enabled) {\n        return false;\n      }\n    }\n    return Object.keys(this.controls).length > 0 || this.disabled;\n  }\n  /** @internal */\n  _find(name) {\n    return this.controls.hasOwnProperty(name) ? this.controls[name] : null;\n  }\n}\n/**\n * Will validate that none of the controls has a key with a dot\n * Throws other wise\n */\nfunction validateFormGroupControls(controls) {\n  const invalidKeys = Object.keys(controls).filter(key => key.includes('.'));\n  if (invalidKeys.length > 0) {\n    // TODO: make this an error once there are no more uses in G3\n    console.warn(`FormGroup keys cannot include \\`.\\`, please replace the keys for: ${invalidKeys.join(',')}.`);\n  }\n}\nconst UntypedFormGroup = FormGroup;\n/**\n * @description\n * Asserts that the given control is an instance of `FormGroup`\n *\n * @publicApi\n */\nconst isFormGroup = control => control instanceof FormGroup;\n/**\n * Tracks the value and validity state of a collection of `FormControl` instances, each of which has\n * the same value type.\n *\n * `FormRecord` is very similar to {@link FormGroup}, except it can be used with a dynamic keys,\n * with controls added and removed as needed.\n *\n * `FormRecord` accepts one generic argument, which describes the type of the controls it contains.\n *\n * @usageNotes\n *\n * ```\n * let numbers = new FormRecord({bill: new FormControl('415-123-456')});\n * numbers.addControl('bob', new FormControl('415-234-567'));\n * numbers.removeControl('bill');\n * ```\n *\n * @publicApi\n */\nclass FormRecord extends FormGroup {}\n/**\n * @description\n * Asserts that the given control is an instance of `FormRecord`\n *\n * @publicApi\n */\nconst isFormRecord = control => control instanceof FormRecord;\n\n/**\n * Token to provide to allow SetDisabledState to always be called when a CVA is added, regardless of\n * whether the control is disabled or enabled.\n *\n * @see {@link FormsModule#withconfig}\n */\nconst CALL_SET_DISABLED_STATE = /*#__PURE__*/new InjectionToken('CallSetDisabledState', {\n  providedIn: 'root',\n  factory: () => setDisabledStateDefault\n});\n/**\n * Whether to use the fixed setDisabledState behavior by default.\n */\nconst setDisabledStateDefault = 'always';\nfunction controlPath(name, parent) {\n  return [...parent.path, name];\n}\n/**\n * Links a Form control and a Form directive by setting up callbacks (such as `onChange`) on both\n * instances. This function is typically invoked when form directive is being initialized.\n *\n * @param control Form control instance that should be linked.\n * @param dir Directive that should be linked with a given control.\n */\nfunction setUpControl(control, dir, callSetDisabledState = setDisabledStateDefault) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (!control) _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor) _throwMissingValueAccessorError(dir);\n  }\n  setUpValidators(control, dir);\n  dir.valueAccessor.writeValue(control.value);\n  // The legacy behavior only calls the CVA's `setDisabledState` if the control is disabled.\n  // If the `callSetDisabledState` option is set to `always`, then this bug is fixed and\n  // the method is always called.\n  if (control.disabled || callSetDisabledState === 'always') {\n    dir.valueAccessor.setDisabledState?.(control.disabled);\n  }\n  setUpViewChangePipeline(control, dir);\n  setUpModelChangePipeline(control, dir);\n  setUpBlurPipeline(control, dir);\n  setUpDisabledChangeHandler(control, dir);\n}\n/**\n * Reverts configuration performed by the `setUpControl` control function.\n * Effectively disconnects form control with a given form directive.\n * This function is typically invoked when corresponding form directive is being destroyed.\n *\n * @param control Form control which should be cleaned up.\n * @param dir Directive that should be disconnected from a given control.\n * @param validateControlPresenceOnChange Flag that indicates whether onChange handler should\n *     contain asserts to verify that it's not called once directive is destroyed. We need this flag\n *     to avoid potentially breaking changes caused by better control cleanup introduced in #39235.\n */\nfunction cleanUpControl(control, dir, validateControlPresenceOnChange = true) {\n  const noop = () => {\n    if (validateControlPresenceOnChange && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      _noControlError(dir);\n    }\n  };\n  // The `valueAccessor` field is typically defined on FromControl and FormControlName directive\n  // instances and there is a logic in `selectValueAccessor` function that throws if it's not the\n  // case. We still check the presence of `valueAccessor` before invoking its methods to make sure\n  // that cleanup works correctly if app code or tests are setup to ignore the error thrown from\n  // `selectValueAccessor`. See https://github.com/angular/angular/issues/40521.\n  if (dir.valueAccessor) {\n    dir.valueAccessor.registerOnChange(noop);\n    dir.valueAccessor.registerOnTouched(noop);\n  }\n  cleanUpValidators(control, dir);\n  if (control) {\n    dir._invokeOnDestroyCallbacks();\n    control._registerOnCollectionChange(() => {});\n  }\n}\nfunction registerOnValidatorChange(validators, onChange) {\n  validators.forEach(validator => {\n    if (validator.registerOnValidatorChange) validator.registerOnValidatorChange(onChange);\n  });\n}\n/**\n * Sets up disabled change handler function on a given form control if ControlValueAccessor\n * associated with a given directive instance supports the `setDisabledState` call.\n *\n * @param control Form control where disabled change handler should be setup.\n * @param dir Corresponding directive instance associated with this control.\n */\nfunction setUpDisabledChangeHandler(control, dir) {\n  if (dir.valueAccessor.setDisabledState) {\n    const onDisabledChange = isDisabled => {\n      dir.valueAccessor.setDisabledState(isDisabled);\n    };\n    control.registerOnDisabledChange(onDisabledChange);\n    // Register a callback function to cleanup disabled change handler\n    // from a control instance when a directive is destroyed.\n    dir._registerOnDestroy(() => {\n      control._unregisterOnDisabledChange(onDisabledChange);\n    });\n  }\n}\n/**\n * Sets up sync and async directive validators on provided form control.\n * This function merges validators from the directive into the validators of the control.\n *\n * @param control Form control where directive validators should be setup.\n * @param dir Directive instance that contains validators to be setup.\n */\nfunction setUpValidators(control, dir) {\n  const validators = getControlValidators(control);\n  if (dir.validator !== null) {\n    control.setValidators(mergeValidators(validators, dir.validator));\n  } else if (typeof validators === 'function') {\n    // If sync validators are represented by a single validator function, we force the\n    // `Validators.compose` call to happen by executing the `setValidators` function with\n    // an array that contains that function. We need this to avoid possible discrepancies in\n    // validators behavior, so sync validators are always processed by the `Validators.compose`.\n    // Note: we should consider moving this logic inside the `setValidators` function itself, so we\n    // have consistent behavior on AbstractControl API level. The same applies to the async\n    // validators logic below.\n    control.setValidators([validators]);\n  }\n  const asyncValidators = getControlAsyncValidators(control);\n  if (dir.asyncValidator !== null) {\n    control.setAsyncValidators(mergeValidators(asyncValidators, dir.asyncValidator));\n  } else if (typeof asyncValidators === 'function') {\n    control.setAsyncValidators([asyncValidators]);\n  }\n  // Re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n  const onValidatorChange = () => control.updateValueAndValidity();\n  registerOnValidatorChange(dir._rawValidators, onValidatorChange);\n  registerOnValidatorChange(dir._rawAsyncValidators, onValidatorChange);\n}\n/**\n * Cleans up sync and async directive validators on provided form control.\n * This function reverts the setup performed by the `setUpValidators` function, i.e.\n * removes directive-specific validators from a given control instance.\n *\n * @param control Form control from where directive validators should be removed.\n * @param dir Directive instance that contains validators to be removed.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpValidators(control, dir) {\n  let isControlUpdated = false;\n  if (control !== null) {\n    if (dir.validator !== null) {\n      const validators = getControlValidators(control);\n      if (Array.isArray(validators) && validators.length > 0) {\n        // Filter out directive validator function.\n        const updatedValidators = validators.filter(validator => validator !== dir.validator);\n        if (updatedValidators.length !== validators.length) {\n          isControlUpdated = true;\n          control.setValidators(updatedValidators);\n        }\n      }\n    }\n    if (dir.asyncValidator !== null) {\n      const asyncValidators = getControlAsyncValidators(control);\n      if (Array.isArray(asyncValidators) && asyncValidators.length > 0) {\n        // Filter out directive async validator function.\n        const updatedAsyncValidators = asyncValidators.filter(asyncValidator => asyncValidator !== dir.asyncValidator);\n        if (updatedAsyncValidators.length !== asyncValidators.length) {\n          isControlUpdated = true;\n          control.setAsyncValidators(updatedAsyncValidators);\n        }\n      }\n    }\n  }\n  // Clear onValidatorChange callbacks by providing a noop function.\n  const noop = () => {};\n  registerOnValidatorChange(dir._rawValidators, noop);\n  registerOnValidatorChange(dir._rawAsyncValidators, noop);\n  return isControlUpdated;\n}\nfunction setUpViewChangePipeline(control, dir) {\n  dir.valueAccessor.registerOnChange(newValue => {\n    control._pendingValue = newValue;\n    control._pendingChange = true;\n    control._pendingDirty = true;\n    if (control.updateOn === 'change') updateControl(control, dir);\n  });\n}\nfunction setUpBlurPipeline(control, dir) {\n  dir.valueAccessor.registerOnTouched(() => {\n    control._pendingTouched = true;\n    if (control.updateOn === 'blur' && control._pendingChange) updateControl(control, dir);\n    if (control.updateOn !== 'submit') control.markAsTouched();\n  });\n}\nfunction updateControl(control, dir) {\n  if (control._pendingDirty) control.markAsDirty();\n  control.setValue(control._pendingValue, {\n    emitModelToViewChange: false\n  });\n  dir.viewToModelUpdate(control._pendingValue);\n  control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n  const onChange = (newValue, emitModelEvent) => {\n    // control -> view\n    dir.valueAccessor.writeValue(newValue);\n    // control -> ngModel\n    if (emitModelEvent) dir.viewToModelUpdate(newValue);\n  };\n  control.registerOnChange(onChange);\n  // Register a callback function to cleanup onChange handler\n  // from a control instance when a directive is destroyed.\n  dir._registerOnDestroy(() => {\n    control._unregisterOnChange(onChange);\n  });\n}\n/**\n * Links a FormGroup or FormArray instance and corresponding Form directive by setting up validators\n * present in the view.\n *\n * @param control FormGroup or FormArray instance that should be linked.\n * @param dir Directive that provides view validators.\n */\nfunction setUpFormContainer(control, dir) {\n  if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'Cannot find control with');\n  setUpValidators(control, dir);\n}\n/**\n * Reverts the setup performed by the `setUpFormContainer` function.\n *\n * @param control FormGroup or FormArray instance that should be cleaned up.\n * @param dir Directive that provided view validators.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpFormContainer(control, dir) {\n  return cleanUpValidators(control, dir);\n}\nfunction _noControlError(dir) {\n  return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n  const messageEnd = _describeControlLocation(dir);\n  throw new Error(`${message} ${messageEnd}`);\n}\nfunction _describeControlLocation(dir) {\n  const path = dir.path;\n  if (path && path.length > 1) return `path: '${path.join(' -> ')}'`;\n  if (path?.[0]) return `name: '${path}'`;\n  return 'unspecified name attribute';\n}\nfunction _throwMissingValueAccessorError(dir) {\n  const loc = _describeControlLocation(dir);\n  throw new ɵRuntimeError(-1203 /* RuntimeErrorCode.NG_MISSING_VALUE_ACCESSOR */, `No value accessor for form control ${loc}.`);\n}\nfunction _throwInvalidValueAccessorError(dir) {\n  const loc = _describeControlLocation(dir);\n  throw new ɵRuntimeError(1200 /* RuntimeErrorCode.NG_VALUE_ACCESSOR_NOT_PROVIDED */, `Value accessor was not provided as an array for form control with ${loc}. ` + `Check that the \\`NG_VALUE_ACCESSOR\\` token is configured as a \\`multi: true\\` provider.`);\n}\nfunction isPropertyUpdated(changes, viewModel) {\n  if (!changes.hasOwnProperty('model')) return false;\n  const change = changes['model'];\n  if (change.isFirstChange()) return true;\n  return !Object.is(viewModel, change.currentValue);\n}\nfunction isBuiltInAccessor(valueAccessor) {\n  // Check if a given value accessor is an instance of a class that directly extends\n  // `BuiltInControlValueAccessor` one.\n  return Object.getPrototypeOf(valueAccessor.constructor) === BuiltInControlValueAccessor;\n}\nfunction syncPendingControls(form, directives) {\n  form._syncPendingControls();\n  directives.forEach(dir => {\n    const control = dir.control;\n    if (control.updateOn === 'submit' && control._pendingChange) {\n      dir.viewToModelUpdate(control._pendingValue);\n      control._pendingChange = false;\n    }\n  });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n  if (!valueAccessors) return null;\n  if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwInvalidValueAccessorError(dir);\n  let defaultAccessor = undefined;\n  let builtinAccessor = undefined;\n  let customAccessor = undefined;\n  valueAccessors.forEach(v => {\n    if (v.constructor === DefaultValueAccessor) {\n      defaultAccessor = v;\n    } else if (isBuiltInAccessor(v)) {\n      if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one built-in value accessor matches form control with');\n      builtinAccessor = v;\n    } else {\n      if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one custom value accessor matches form control with');\n      customAccessor = v;\n    }\n  });\n  if (customAccessor) return customAccessor;\n  if (builtinAccessor) return builtinAccessor;\n  if (defaultAccessor) return defaultAccessor;\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    _throwError(dir, 'No valid value accessor for form control with');\n  }\n  return null;\n}\nfunction removeListItem$1(list, el) {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n  if (warningConfig === 'never') return;\n  if ((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce || warningConfig === 'always' && !instance._ngModelWarningSent) {\n    console.warn(ngModelWarning(name));\n    type._ngModelWarningSentOnce = true;\n    instance._ngModelWarningSent = true;\n  }\n}\nconst formDirectiveProvider$1 = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => NgForm)\n};\nconst resolvedPromise$1 = /*#__PURE__*/(() => Promise.resolve())();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgForm = /*#__PURE__*/(() => {\n  class NgForm extends ControlContainer {\n    /**\n     * @description\n     * Returns whether the form submission has been triggered.\n     */\n    get submitted() {\n      return untracked(this.submittedReactive);\n    }\n    constructor(validators, asyncValidators, callSetDisabledState) {\n      super();\n      this.callSetDisabledState = callSetDisabledState;\n      /** @internal */\n      this._submitted = computed(() => this.submittedReactive());\n      this.submittedReactive = signal(false);\n      this._directives = new Set();\n      /**\n       * @description\n       * Event emitter for the \"ngSubmit\" event\n       */\n      this.ngSubmit = new EventEmitter();\n      this.form = new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n    }\n    /** @nodoc */\n    ngAfterViewInit() {\n      this._setUpdateStrategy();\n    }\n    /**\n     * @description\n     * The directive instance.\n     */\n    get formDirective() {\n      return this;\n    }\n    /**\n     * @description\n     * The internal `FormGroup` instance.\n     */\n    get control() {\n      return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it is always an empty array.\n     */\n    get path() {\n      return [];\n    }\n    /**\n     * @description\n     * Returns a map of the controls in this group.\n     */\n    get controls() {\n      return this.form.controls;\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    addControl(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        dir.control = container.registerControl(dir.name, dir.control);\n        setUpControl(dir.control, dir, this.callSetDisabledState);\n        dir.control.updateValueAndValidity({\n          emitEvent: false\n        });\n        this._directives.add(dir);\n      });\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    getControl(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `NgModel` instance from the internal list of directives\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    removeControl(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        if (container) {\n          container.removeControl(dir.name);\n        }\n        this._directives.delete(dir);\n      });\n    }\n    /**\n     * @description\n     * Adds a new `NgModelGroup` directive instance to the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    addFormGroup(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        const group = new FormGroup({});\n        setUpFormContainer(group, dir);\n        container.registerControl(dir.name, group);\n        group.updateValueAndValidity({\n          emitEvent: false\n        });\n      });\n    }\n    /**\n     * @description\n     * Removes the `NgModelGroup` directive instance from the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    removeFormGroup(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        if (container) {\n          container.removeControl(dir.name);\n        }\n      });\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    getFormGroup(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `NgControl` directive.\n     *\n     * @param dir The `NgControl` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n      resolvedPromise$1.then(() => {\n        const ctrl = this.form.get(dir.path);\n        ctrl.setValue(value);\n      });\n    }\n    /**\n     * @description\n     * Sets the value for this `FormGroup`.\n     *\n     * @param value The new value\n     */\n    setValue(value) {\n      this.control.setValue(value);\n    }\n    /**\n     * @description\n     * Method called when the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n      this.submittedReactive.set(true);\n      syncPendingControls(this.form, this._directives);\n      this.ngSubmit.emit($event);\n      // Forms with `method=\"dialog\"` have some special behavior\n      // that won't reload the page and that shouldn't be prevented.\n      return $event?.target?.method === 'dialog';\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n      this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n      this.form.reset(value);\n      this.submittedReactive.set(false);\n    }\n    _setUpdateStrategy() {\n      if (this.options && this.options.updateOn != null) {\n        this.form._updateOn = this.options.updateOn;\n      }\n    }\n    _findContainer(path) {\n      path.pop();\n      return path.length ? this.form.get(path) : this.form;\n    }\n    static {\n      this.ɵfac = function NgForm_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NgForm)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NgForm,\n        selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"formGroup\", \"\"], [\"ng-form\"], [\"\", \"ngForm\", \"\"]],\n        hostBindings: function NgForm_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"submit\", function NgForm_submit_HostBindingHandler($event) {\n              return ctx.onSubmit($event);\n            })(\"reset\", function NgForm_reset_HostBindingHandler() {\n              return ctx.onReset();\n            });\n          }\n        },\n        inputs: {\n          options: [0, \"ngFormOptions\", \"options\"]\n        },\n        outputs: {\n          ngSubmit: \"ngSubmit\"\n        },\n        exportAs: [\"ngForm\"],\n        features: [i0.ɵɵProvidersFeature([formDirectiveProvider$1]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return NgForm;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction removeListItem(list, el) {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\nfunction isFormControlState(formState) {\n  return typeof formState === 'object' && formState !== null && Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n}\nconst FormControl = class FormControl extends AbstractControl {\n  constructor(\n  // formState and defaultValue will only be null if T is nullable\n  formState = null, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    /** @publicApi */\n    this.defaultValue = null;\n    /** @internal */\n    this._onChange = [];\n    /** @internal */\n    this._pendingChange = false;\n    this._applyFormState(formState);\n    this._setUpdateStrategy(validatorOrOpts);\n    this._initObservables();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`.\n      // The status should be broadcasted via the `statusChanges` observable, so we set\n      // `emitEvent` to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n    if (isOptionsObj(validatorOrOpts) && (validatorOrOpts.nonNullable || validatorOrOpts.initialValueIsDefault)) {\n      if (isFormControlState(formState)) {\n        this.defaultValue = formState.value;\n      } else {\n        this.defaultValue = formState;\n      }\n    }\n  }\n  setValue(value, options = {}) {\n    this.value = this._pendingValue = value;\n    if (this._onChange.length && options.emitModelToViewChange !== false) {\n      this._onChange.forEach(changeFn => changeFn(this.value, options.emitViewToModelChange !== false));\n    }\n    this.updateValueAndValidity(options);\n  }\n  patchValue(value, options = {}) {\n    this.setValue(value, options);\n  }\n  reset(formState = this.defaultValue, options = {}) {\n    this._applyFormState(formState);\n    this.markAsPristine(options);\n    this.markAsUntouched(options);\n    this.setValue(this.value, options);\n    this._pendingChange = false;\n  }\n  /**  @internal */\n  _updateValue() {}\n  /**  @internal */\n  _anyControls(condition) {\n    return false;\n  }\n  /**  @internal */\n  _allControlsDisabled() {\n    return this.disabled;\n  }\n  registerOnChange(fn) {\n    this._onChange.push(fn);\n  }\n  /** @internal */\n  _unregisterOnChange(fn) {\n    removeListItem(this._onChange, fn);\n  }\n  registerOnDisabledChange(fn) {\n    this._onDisabledChange.push(fn);\n  }\n  /** @internal */\n  _unregisterOnDisabledChange(fn) {\n    removeListItem(this._onDisabledChange, fn);\n  }\n  /** @internal */\n  _forEachChild(cb) {}\n  /** @internal */\n  _syncPendingControls() {\n    if (this.updateOn === 'submit') {\n      if (this._pendingDirty) this.markAsDirty();\n      if (this._pendingTouched) this.markAsTouched();\n      if (this._pendingChange) {\n        this.setValue(this._pendingValue, {\n          onlySelf: true,\n          emitModelToViewChange: false\n        });\n        return true;\n      }\n    }\n    return false;\n  }\n  _applyFormState(formState) {\n    if (isFormControlState(formState)) {\n      this.value = this._pendingValue = formState.value;\n      formState.disabled ? this.disable({\n        onlySelf: true,\n        emitEvent: false\n      }) : this.enable({\n        onlySelf: true,\n        emitEvent: false\n      });\n    } else {\n      this.value = this._pendingValue = formState;\n    }\n  }\n};\nconst UntypedFormControl = FormControl;\n/**\n * @description\n * Asserts that the given control is an instance of `FormControl`\n *\n * @publicApi\n */\nconst isFormControl = control => control instanceof FormControl;\n\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nlet AbstractFormGroupDirective = /*#__PURE__*/(() => {\n  class AbstractFormGroupDirective extends ControlContainer {\n    /** @nodoc */\n    ngOnInit() {\n      this._checkParentType();\n      // Register the group with its parent group.\n      this.formDirective.addFormGroup(this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.formDirective) {\n        // Remove the group from its parent group.\n        this.formDirective.removeFormGroup(this);\n      }\n    }\n    /**\n     * @description\n     * The `FormGroup` bound to this directive.\n     */\n    get control() {\n      return this.formDirective.getFormGroup(this);\n    }\n    /**\n     * @description\n     * The path to this group from the top-level directive.\n     */\n    get path() {\n      return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    /** @internal */\n    _checkParentType() {}\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵAbstractFormGroupDirective_BaseFactory;\n        return function AbstractFormGroupDirective_Factory(__ngFactoryType__) {\n          return (ɵAbstractFormGroupDirective_BaseFactory || (ɵAbstractFormGroupDirective_BaseFactory = i0.ɵɵgetInheritedFactory(AbstractFormGroupDirective)))(__ngFactoryType__ || AbstractFormGroupDirective);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: AbstractFormGroupDirective,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return AbstractFormGroupDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction modelParentException() {\n  return new ɵRuntimeError(1350 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP */, `\n    ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n    formGroup's partner directive \"formControlName\" instead.  Example:\n\n    ${formControlNameExample}\n\n    Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n    Example:\n\n    ${ngModelWithFormGroupExample}`);\n}\nfunction formGroupNameException() {\n  return new ɵRuntimeError(1351 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP_NAME */, `\n    ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n    Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nfunction missingNameException() {\n  return new ɵRuntimeError(1352 /* RuntimeErrorCode.NGMODEL_WITHOUT_NAME */, `If ngModel is used within a form tag, either the name attribute must be set or the form\n    control must be defined as 'standalone' in ngModelOptions.\n\n    Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n    Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n}\nfunction modelGroupParentException() {\n  return new ɵRuntimeError(1353 /* RuntimeErrorCode.NGMODELGROUP_IN_FORM_GROUP */, `\n    ngModelGroup cannot be used with a parent formGroup directive.\n\n    Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nconst modelGroupProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => NgModelGroup)\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgModelGroup = /*#__PURE__*/(() => {\n  class NgModelGroup extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n      super();\n      /**\n       * @description\n       * Tracks the name of the `NgModelGroup` bound to the directive. The name corresponds\n       * to a key in the parent `NgForm`.\n       */\n      this.name = '';\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n      if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw modelGroupParentException();\n      }\n    }\n    static {\n      this.ɵfac = function NgModelGroup_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NgModelGroup)(i0.ɵɵdirectiveInject(ControlContainer, 5), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NgModelGroup,\n        selectors: [[\"\", \"ngModelGroup\", \"\"]],\n        inputs: {\n          name: [0, \"ngModelGroup\", \"name\"]\n        },\n        exportAs: [\"ngModelGroup\"],\n        features: [i0.ɵɵProvidersFeature([modelGroupProvider]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return NgModelGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formControlBinding$1 = {\n  provide: NgControl,\n  useExisting: /*#__PURE__*/forwardRef(() => NgModel)\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have an old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel`s have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise = /*#__PURE__*/(() => Promise.resolve())();\n/**\n * @description\n * Creates a `FormControl` instance from a [domain\n * model](https://en.wikipedia.org/wiki/Domain_model) and binds it to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the domain model's value in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-in-a-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like the validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You can then access the control using the directive's `control` property.\n * However, the most commonly used properties (like `valid` and `dirty`) also exist on the control\n * for direct access. See a full list of properties directly available in\n * `AbstractControlDirective`.\n *\n * @see {@link RadioControlValueAccessor}\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel `name` attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. Here,\n * an attribute identified as name is used within a custom form control component. To still be able\n * to specify the NgModel's name, you must specify it using the `ngModelOptions` input instead.\n *\n * ```html\n * <form>\n *   <my-custom-form-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-custom-form-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgModel = /*#__PURE__*/(() => {\n  class NgModel extends NgControl {\n    constructor(parent, validators, asyncValidators, valueAccessors, _changeDetectorRef, callSetDisabledState) {\n      super();\n      this._changeDetectorRef = _changeDetectorRef;\n      this.callSetDisabledState = callSetDisabledState;\n      this.control = new FormControl();\n      /** @internal */\n      this._registered = false;\n      /**\n       * @description\n       * Tracks the name bound to the directive. If a parent form exists, it\n       * uses this name as a key to retrieve this control's value.\n       */\n      this.name = '';\n      /**\n       * @description\n       * Event emitter for producing the `ngModelChange` event after\n       * the view model updates.\n       */\n      this.update = new EventEmitter();\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n      this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      this._checkForErrors();\n      if (!this._registered || 'name' in changes) {\n        if (this._registered) {\n          this._checkName();\n          if (this.formDirective) {\n            // We can't call `formDirective.removeControl(this)`, because the `name` has already been\n            // changed. We also can't reset the name temporarily since the logic in `removeControl`\n            // is inside a promise and it won't run immediately. We work around it by giving it an\n            // object with the same shape instead.\n            const oldName = changes['name'].previousValue;\n            this.formDirective.removeControl({\n              name: oldName,\n              path: this._getPath(oldName)\n            });\n          }\n        }\n        this._setUpControl();\n      }\n      if ('isDisabled' in changes) {\n        this._updateDisabled(changes);\n      }\n      if (isPropertyUpdated(changes, this.viewModel)) {\n        this._updateValue(this.model);\n        this.viewModel = this.model;\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.formDirective && this.formDirective.removeControl(this);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return this._getPath(this.name);\n    }\n    /**\n     * @description\n     * The top-level directive for this control if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value emitted by `ngModelChange`.\n     */\n    viewToModelUpdate(newValue) {\n      this.viewModel = newValue;\n      this.update.emit(newValue);\n    }\n    _setUpControl() {\n      this._setUpdateStrategy();\n      this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n      this._registered = true;\n    }\n    _setUpdateStrategy() {\n      if (this.options && this.options.updateOn != null) {\n        this.control._updateOn = this.options.updateOn;\n      }\n    }\n    _isStandalone() {\n      return !this._parent || !!(this.options && this.options.standalone);\n    }\n    _setUpStandalone() {\n      setUpControl(this.control, this, this.callSetDisabledState);\n      this.control.updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    _checkForErrors() {\n      if (!this._isStandalone()) {\n        this._checkParentType();\n      }\n      this._checkName();\n    }\n    _checkParentType() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!(this._parent instanceof NgModelGroup) && this._parent instanceof AbstractFormGroupDirective) {\n          throw formGroupNameException();\n        } else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n          throw modelParentException();\n        }\n      }\n    }\n    _checkName() {\n      if (this.options && this.options.name) this.name = this.options.name;\n      if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw missingNameException();\n      }\n    }\n    _updateValue(value) {\n      resolvedPromise.then(() => {\n        this.control.setValue(value, {\n          emitViewToModelChange: false\n        });\n        this._changeDetectorRef?.markForCheck();\n      });\n    }\n    _updateDisabled(changes) {\n      const disabledValue = changes['isDisabled'].currentValue;\n      // checking for 0 to avoid breaking change\n      const isDisabled = disabledValue !== 0 && booleanAttribute(disabledValue);\n      resolvedPromise.then(() => {\n        if (isDisabled && !this.control.disabled) {\n          this.control.disable();\n        } else if (!isDisabled && this.control.disabled) {\n          this.control.enable();\n        }\n        this._changeDetectorRef?.markForCheck();\n      });\n    }\n    _getPath(controlName) {\n      return this._parent ? controlPath(controlName, this._parent) : [controlName];\n    }\n    static {\n      this.ɵfac = function NgModel_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NgModel)(i0.ɵɵdirectiveInject(ControlContainer, 9), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef, 8), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NgModel,\n        selectors: [[\"\", \"ngModel\", \"\", 3, \"formControlName\", \"\", 3, \"formControl\", \"\"]],\n        inputs: {\n          name: \"name\",\n          isDisabled: [0, \"disabled\", \"isDisabled\"],\n          model: [0, \"ngModel\", \"model\"],\n          options: [0, \"ngModelOptions\", \"options\"]\n        },\n        outputs: {\n          update: \"ngModelChange\"\n        },\n        exportAs: [\"ngModel\"],\n        features: [i0.ɵɵProvidersFeature([formControlBinding$1]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return NgModel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nlet ɵNgNoValidate = /*#__PURE__*/(() => {\n  class ɵNgNoValidate {\n    static {\n      this.ɵfac = function ɵNgNoValidate_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ɵNgNoValidate)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: ɵNgNoValidate,\n        selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"ngNativeValidate\", \"\"]],\n        hostAttrs: [\"novalidate\", \"\"]\n      });\n    }\n  }\n  return ɵNgNoValidate;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst NUMBER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => NumberValueAccessor),\n  multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NumberValueAccessor = /*#__PURE__*/(() => {\n  class NumberValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n      const normalizedValue = value == null ? '' : value;\n      this.setProperty('value', normalizedValue);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = value => {\n        fn(value == '' ? null : parseFloat(value));\n      };\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵNumberValueAccessor_BaseFactory;\n        return function NumberValueAccessor_Factory(__ngFactoryType__) {\n          return (ɵNumberValueAccessor_BaseFactory || (ɵNumberValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(NumberValueAccessor)))(__ngFactoryType__ || NumberValueAccessor);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NumberValueAccessor,\n        selectors: [[\"input\", \"type\", \"number\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"ngModel\", \"\"]],\n        hostBindings: function NumberValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"input\", function NumberValueAccessor_input_HostBindingHandler($event) {\n              return ctx.onChange($event.target.value);\n            })(\"blur\", function NumberValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            });\n          }\n        },\n        features: [i0.ɵɵProvidersFeature([NUMBER_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return NumberValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => RadioControlValueAccessor),\n  multi: true\n};\nfunction throwNameError() {\n  throw new ɵRuntimeError(1202 /* RuntimeErrorCode.NAME_AND_FORM_CONTROL_NAME_MUST_MATCH */, `\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n}\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nlet RadioControlRegistry = /*#__PURE__*/(() => {\n  class RadioControlRegistry {\n    constructor() {\n      this._accessors = [];\n    }\n    /**\n     * @description\n     * Adds a control to the internal registry. For internal use only.\n     */\n    add(control, accessor) {\n      this._accessors.push([control, accessor]);\n    }\n    /**\n     * @description\n     * Removes a control from the internal registry. For internal use only.\n     */\n    remove(accessor) {\n      for (let i = this._accessors.length - 1; i >= 0; --i) {\n        if (this._accessors[i][1] === accessor) {\n          this._accessors.splice(i, 1);\n          return;\n        }\n      }\n    }\n    /**\n     * @description\n     * Selects a radio button. For internal use only.\n     */\n    select(accessor) {\n      this._accessors.forEach(c => {\n        if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n          c[1].fireUncheck(accessor.value);\n        }\n      });\n    }\n    _isSameGroup(controlPair, accessor) {\n      if (!controlPair[0].control) return false;\n      return controlPair[0]._parent === accessor._control._parent && controlPair[1].name === accessor.name;\n    }\n    static {\n      this.ɵfac = function RadioControlRegistry_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || RadioControlRegistry)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: RadioControlRegistry,\n        factory: RadioControlRegistry.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return RadioControlRegistry;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet RadioControlValueAccessor = /*#__PURE__*/(() => {\n  class RadioControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor(renderer, elementRef, _registry, _injector) {\n      super(renderer, elementRef);\n      this._registry = _registry;\n      this._injector = _injector;\n      this.setDisabledStateFired = false;\n      /**\n       * The registered callback function called when a change event occurs on the input element.\n       * Note: we declare `onChange` here (also used as host listener) as a function with no arguments\n       * to override the `onChange` function (which expects 1 argument) in the parent\n       * `BaseControlValueAccessor` class.\n       * @nodoc\n       */\n      this.onChange = () => {};\n      this.callSetDisabledState = inject(CALL_SET_DISABLED_STATE, {\n        optional: true\n      }) ?? setDisabledStateDefault;\n    }\n    /** @nodoc */\n    ngOnInit() {\n      this._control = this._injector.get(NgControl);\n      this._checkName();\n      this._registry.add(this._control, this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this._registry.remove(this);\n    }\n    /**\n     * Sets the \"checked\" property value on the radio input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this._state = value === this.value;\n      this.setProperty('checked', this._state);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this._fn = fn;\n      this.onChange = () => {\n        fn(this.value);\n        this._registry.select(this);\n      };\n    }\n    /** @nodoc */\n    setDisabledState(isDisabled) {\n      /**\n       * `setDisabledState` is supposed to be called whenever the disabled state of a control changes,\n       * including upon control creation. However, a longstanding bug caused the method to not fire\n       * when an *enabled* control was attached. This bug was fixed in v15 in #47576.\n       *\n       * This had a side effect: previously, it was possible to instantiate a reactive form control\n       * with `[attr.disabled]=true`, even though the corresponding control was enabled in the\n       * model. This resulted in a mismatch between the model and the DOM. Now, because\n       * `setDisabledState` is always called, the value in the DOM will be immediately overwritten\n       * with the \"correct\" enabled value.\n       *\n       * However, the fix also created an exceptional case: radio buttons. Because Reactive Forms\n       * models the entire group of radio buttons as a single `FormControl`, there is no way to\n       * control the disabled state for individual radios, so they can no longer be configured as\n       * disabled. Thus, we keep the old behavior for radio buttons, so that `[attr.disabled]`\n       * continues to work. Specifically, we drop the first call to `setDisabledState` if `disabled`\n       * is `false`, and we are not in legacy mode.\n       */\n      if (this.setDisabledStateFired || isDisabled || this.callSetDisabledState === 'whenDisabledForLegacyCode') {\n        this.setProperty('disabled', isDisabled);\n      }\n      this.setDisabledStateFired = true;\n    }\n    /**\n     * Sets the \"value\" on the radio input element and unchecks it.\n     *\n     * @param value\n     */\n    fireUncheck(value) {\n      this.writeValue(value);\n    }\n    _checkName() {\n      if (this.name && this.formControlName && this.name !== this.formControlName && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwNameError();\n      }\n      if (!this.name && this.formControlName) this.name = this.formControlName;\n    }\n    static {\n      this.ɵfac = function RadioControlValueAccessor_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || RadioControlValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(RadioControlRegistry), i0.ɵɵdirectiveInject(i0.Injector));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: RadioControlValueAccessor,\n        selectors: [[\"input\", \"type\", \"radio\", \"formControlName\", \"\"], [\"input\", \"type\", \"radio\", \"formControl\", \"\"], [\"input\", \"type\", \"radio\", \"ngModel\", \"\"]],\n        hostBindings: function RadioControlValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"change\", function RadioControlValueAccessor_change_HostBindingHandler() {\n              return ctx.onChange();\n            })(\"blur\", function RadioControlValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            });\n          }\n        },\n        inputs: {\n          name: \"name\",\n          formControlName: \"formControlName\",\n          value: \"value\"\n        },\n        features: [i0.ɵɵProvidersFeature([RADIO_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return RadioControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst RANGE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => RangeValueAccessor),\n  multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet RangeValueAccessor = /*#__PURE__*/(() => {\n  class RangeValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.setProperty('value', parseFloat(value));\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = value => {\n        fn(value == '' ? null : parseFloat(value));\n      };\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵRangeValueAccessor_BaseFactory;\n        return function RangeValueAccessor_Factory(__ngFactoryType__) {\n          return (ɵRangeValueAccessor_BaseFactory || (ɵRangeValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(RangeValueAccessor)))(__ngFactoryType__ || RangeValueAccessor);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: RangeValueAccessor,\n        selectors: [[\"input\", \"type\", \"range\", \"formControlName\", \"\"], [\"input\", \"type\", \"range\", \"formControl\", \"\"], [\"input\", \"type\", \"range\", \"ngModel\", \"\"]],\n        hostBindings: function RangeValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"change\", function RangeValueAccessor_change_HostBindingHandler($event) {\n              return ctx.onChange($event.target.value);\n            })(\"input\", function RangeValueAccessor_input_HostBindingHandler($event) {\n              return ctx.onChange($event.target.value);\n            })(\"blur\", function RangeValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            });\n          }\n        },\n        features: [i0.ɵɵProvidersFeature([RANGE_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return RangeValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = /*#__PURE__*/new InjectionToken(ngDevMode ? 'NgModelWithFormControlWarning' : '');\nconst formControlBinding = {\n  provide: NgControl,\n  useExisting: /*#__PURE__*/forwardRef(() => FormControlDirective)\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormControlDirective = /*#__PURE__*/(() => {\n  class FormControlDirective extends NgControl {\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.warn(disabledAttrWarning);\n      }\n    }\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlDirective. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    static {\n      this._ngModelWarningSentOnce = false;\n    }\n    constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig, callSetDisabledState) {\n      super();\n      this._ngModelWarningConfig = _ngModelWarningConfig;\n      this.callSetDisabledState = callSetDisabledState;\n      /** @deprecated as of v6 */\n      this.update = new EventEmitter();\n      /**\n       * @description\n       * Instance property used to track whether an ngModel warning has been sent out for this\n       * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n       *\n       * @internal\n       */\n      this._ngModelWarningSent = false;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n      this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (this._isControlChanged(changes)) {\n        const previousForm = changes['form'].previousValue;\n        if (previousForm) {\n          cleanUpControl(previousForm, this, /* validateControlPresenceOnChange */false);\n        }\n        setUpControl(this.form, this, this.callSetDisabledState);\n        this.form.updateValueAndValidity({\n          emitEvent: false\n        });\n      }\n      if (isPropertyUpdated(changes, this.viewModel)) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n        }\n        this.form.setValue(this.model);\n        this.viewModel = this.model;\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.form) {\n        cleanUpControl(this.form, this, /* validateControlPresenceOnChange */false);\n      }\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return [];\n    }\n    /**\n     * @description\n     * The `FormControl` bound to this directive.\n     */\n    get control() {\n      return this.form;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n      this.viewModel = newValue;\n      this.update.emit(newValue);\n    }\n    _isControlChanged(changes) {\n      return changes.hasOwnProperty('form');\n    }\n    static {\n      this.ɵfac = function FormControlDirective_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || FormControlDirective)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FormControlDirective,\n        selectors: [[\"\", \"formControl\", \"\"]],\n        inputs: {\n          form: [0, \"formControl\", \"form\"],\n          isDisabled: [0, \"disabled\", \"isDisabled\"],\n          model: [0, \"ngModel\", \"model\"]\n        },\n        outputs: {\n          update: \"ngModelChange\"\n        },\n        exportAs: [\"ngForm\"],\n        features: [i0.ɵɵProvidersFeature([formControlBinding]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return FormControlDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formDirectiveProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => FormGroupDirective)\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`/`FormRecord`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormGroupDirective = /*#__PURE__*/(() => {\n  class FormGroupDirective extends ControlContainer {\n    /**\n     * @description\n     * Reports whether the form submission has been triggered.\n     */\n    get submitted() {\n      return untracked(this._submittedReactive);\n    }\n    // TODO(atscott): Remove once invalid API usage is cleaned up internally\n    set submitted(value) {\n      this._submittedReactive.set(value);\n    }\n    constructor(validators, asyncValidators, callSetDisabledState) {\n      super();\n      this.callSetDisabledState = callSetDisabledState;\n      /** @internal */\n      this._submitted = computed(() => this._submittedReactive());\n      this._submittedReactive = signal(false);\n      /**\n       * Callback that should be invoked when controls in FormGroup or FormArray collection change\n       * (added or removed). This callback triggers corresponding DOM updates.\n       */\n      this._onCollectionChange = () => this._updateDomValue();\n      /**\n       * @description\n       * Tracks the list of added `FormControlName` instances\n       */\n      this.directives = [];\n      /**\n       * @description\n       * Tracks the `FormGroup` bound to this directive.\n       */\n      this.form = null;\n      /**\n       * @description\n       * Emits an event when the form submission has been triggered.\n       */\n      this.ngSubmit = new EventEmitter();\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      this._checkFormPresent();\n      if (changes.hasOwnProperty('form')) {\n        this._updateValidators();\n        this._updateDomValue();\n        this._updateRegistrations();\n        this._oldForm = this.form;\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.form) {\n        cleanUpValidators(this.form, this);\n        // Currently the `onCollectionChange` callback is rewritten each time the\n        // `_registerOnCollectionChange` function is invoked. The implication is that cleanup should\n        // happen *only* when the `onCollectionChange` callback was set by this directive instance.\n        // Otherwise it might cause overriding a callback of some other directive instances. We should\n        // consider updating this logic later to make it similar to how `onChange` callbacks are\n        // handled, see https://github.com/angular/angular/issues/39732 for additional info.\n        if (this.form._onCollectionChange === this._onCollectionChange) {\n          this.form._registerOnCollectionChange(() => {});\n        }\n      }\n    }\n    /**\n     * @description\n     * Returns this directive's instance.\n     */\n    get formDirective() {\n      return this;\n    }\n    /**\n     * @description\n     * Returns the `FormGroup` bound to this directive.\n     */\n    get control() {\n      return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it always an empty array.\n     */\n    get path() {\n      return [];\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    addControl(dir) {\n      const ctrl = this.form.get(dir.path);\n      setUpControl(ctrl, dir, this.callSetDisabledState);\n      ctrl.updateValueAndValidity({\n        emitEvent: false\n      });\n      this.directives.push(dir);\n      return ctrl;\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    getControl(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `FormControlName` instance from the internal list of directives\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    removeControl(dir) {\n      cleanUpControl(dir.control || null, dir, /* validateControlPresenceOnChange */false);\n      removeListItem$1(this.directives, dir);\n    }\n    /**\n     * Adds a new `FormGroupName` directive instance to the form.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    addFormGroup(dir) {\n      this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormGroupName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    removeFormGroup(dir) {\n      this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    getFormGroup(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * Performs the necessary setup when a `FormArrayName` directive instance is added to the view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    addFormArray(dir) {\n      this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormArrayName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    removeFormArray(dir) {\n      this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    getFormArray(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `FormControlName` directive.\n     *\n     * @param dir The `FormControlName` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n      const ctrl = this.form.get(dir.path);\n      ctrl.setValue(value);\n    }\n    /**\n     * @description\n     * Method called with the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n      this._submittedReactive.set(true);\n      syncPendingControls(this.form, this.directives);\n      this.ngSubmit.emit($event);\n      this.form._events.next(new FormSubmittedEvent(this.control));\n      // Forms with `method=\"dialog\"` have some special behavior that won't reload the page and that\n      // shouldn't be prevented. Note that we need to null check the `event` and the `target`, because\n      // some internal apps call this method directly with the wrong arguments.\n      return $event?.target?.method === 'dialog';\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n      this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n      this.form.reset(value);\n      this._submittedReactive.set(false);\n      this.form._events.next(new FormResetEvent(this.form));\n    }\n    /** @internal */\n    _updateDomValue() {\n      this.directives.forEach(dir => {\n        const oldCtrl = dir.control;\n        const newCtrl = this.form.get(dir.path);\n        if (oldCtrl !== newCtrl) {\n          // Note: the value of the `dir.control` may not be defined, for example when it's a first\n          // `FormControl` that is added to a `FormGroup` instance (via `addControl` call).\n          cleanUpControl(oldCtrl || null, dir);\n          // Check whether new control at the same location inside the corresponding `FormGroup` is an\n          // instance of `FormControl` and perform control setup only if that's the case.\n          // Note: we don't need to clear the list of directives (`this.directives`) here, it would be\n          // taken care of in the `removeControl` method invoked when corresponding `formControlName`\n          // directive instance is being removed (invoked from `FormControlName.ngOnDestroy`).\n          if (isFormControl(newCtrl)) {\n            setUpControl(newCtrl, dir, this.callSetDisabledState);\n            dir.control = newCtrl;\n          }\n        }\n      });\n      this.form._updateTreeValidity({\n        emitEvent: false\n      });\n    }\n    _setUpFormContainer(dir) {\n      const ctrl = this.form.get(dir.path);\n      setUpFormContainer(ctrl, dir);\n      // NOTE: this operation looks unnecessary in case no new validators were added in\n      // `setUpFormContainer` call. Consider updating this code to match the logic in\n      // `_cleanUpFormContainer` function.\n      ctrl.updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    _cleanUpFormContainer(dir) {\n      if (this.form) {\n        const ctrl = this.form.get(dir.path);\n        if (ctrl) {\n          const isControlUpdated = cleanUpFormContainer(ctrl, dir);\n          if (isControlUpdated) {\n            // Run validity check only in case a control was updated (i.e. view validators were\n            // removed) as removing view validators might cause validity to change.\n            ctrl.updateValueAndValidity({\n              emitEvent: false\n            });\n          }\n        }\n      }\n    }\n    _updateRegistrations() {\n      this.form._registerOnCollectionChange(this._onCollectionChange);\n      if (this._oldForm) {\n        this._oldForm._registerOnCollectionChange(() => {});\n      }\n    }\n    _updateValidators() {\n      setUpValidators(this.form, this);\n      if (this._oldForm) {\n        cleanUpValidators(this._oldForm, this);\n      }\n    }\n    _checkFormPresent() {\n      if (!this.form && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw missingFormException();\n      }\n    }\n    static {\n      this.ɵfac = function FormGroupDirective_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || FormGroupDirective)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FormGroupDirective,\n        selectors: [[\"\", \"formGroup\", \"\"]],\n        hostBindings: function FormGroupDirective_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"submit\", function FormGroupDirective_submit_HostBindingHandler($event) {\n              return ctx.onSubmit($event);\n            })(\"reset\", function FormGroupDirective_reset_HostBindingHandler() {\n              return ctx.onReset();\n            });\n          }\n        },\n        inputs: {\n          form: [0, \"formGroup\", \"form\"]\n        },\n        outputs: {\n          ngSubmit: \"ngSubmit\"\n        },\n        exportAs: [\"ngForm\"],\n        features: [i0.ɵɵProvidersFeature([formDirectiveProvider]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return FormGroupDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formGroupNameProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => FormGroupName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` or `FormRecord` to link, and\n * looks for a `FormGroup` or `FormRecord` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the `AbstractControl.get` method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the `AbstractControl.get` method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormGroupName = /*#__PURE__*/(() => {\n  class FormGroupName extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n      super();\n      /**\n       * @description\n       * Tracks the name of the `FormGroup` bound to the directive. The name corresponds\n       * to a key in the parent `FormGroup` or `FormArray`.\n       * Accepts a name as a string or a number.\n       * The name in the form of a string is useful for individual forms,\n       * while the numerical form allows for form groups to be bound\n       * to indices when iterating over groups in a `FormArray`.\n       */\n      this.name = null;\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n      if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw groupParentException();\n      }\n    }\n    static {\n      this.ɵfac = function FormGroupName_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || FormGroupName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FormGroupName,\n        selectors: [[\"\", \"formGroupName\", \"\"]],\n        inputs: {\n          name: [0, \"formGroupName\", \"name\"]\n        },\n        features: [i0.ɵɵProvidersFeature([formGroupNameProvider]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return FormGroupName;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formArrayNameProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => FormArrayName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormArrayName = /*#__PURE__*/(() => {\n  class FormArrayName extends ControlContainer {\n    constructor(parent, validators, asyncValidators) {\n      super();\n      /**\n       * @description\n       * Tracks the name of the `FormArray` bound to the directive. The name corresponds\n       * to a key in the parent `FormGroup` or `FormArray`.\n       * Accepts a name as a string or a number.\n       * The name in the form of a string is useful for individual forms,\n       * while the numerical form allows for form arrays to be bound\n       * to indices when iterating over arrays in a `FormArray`.\n       */\n      this.name = null;\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /**\n     * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n     * @throws If the directive does not have a valid parent.\n     * @nodoc\n     */\n    ngOnInit() {\n      this._checkParentType();\n      this.formDirective.addFormArray(this);\n    }\n    /**\n     * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @nodoc\n     */\n    ngOnDestroy() {\n      if (this.formDirective) {\n        this.formDirective.removeFormArray(this);\n      }\n    }\n    /**\n     * @description\n     * The `FormArray` bound to this directive.\n     */\n    get control() {\n      return this.formDirective.getFormArray(this);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    _checkParentType() {\n      if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw arrayParentException();\n      }\n    }\n    static {\n      this.ɵfac = function FormArrayName_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || FormArrayName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FormArrayName,\n        selectors: [[\"\", \"formArrayName\", \"\"]],\n        inputs: {\n          name: [0, \"formArrayName\", \"name\"]\n        },\n        features: [i0.ɵɵProvidersFeature([formArrayNameProvider]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return FormArrayName;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction _hasInvalidParent(parent) {\n  return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) && !(parent instanceof FormArrayName);\n}\nconst controlNameBinding = {\n  provide: NgControl,\n  useExisting: /*#__PURE__*/forwardRef(() => FormControlName)\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormControlName = /*#__PURE__*/(() => {\n  class FormControlName extends NgControl {\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.warn(disabledAttrWarning);\n      }\n    }\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlName. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    static {\n      this._ngModelWarningSentOnce = false;\n    }\n    constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n      super();\n      this._ngModelWarningConfig = _ngModelWarningConfig;\n      this._added = false;\n      /**\n       * @description\n       * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n       * to a key in the parent `FormGroup` or `FormArray`.\n       * Accepts a name as a string or a number.\n       * The name in the form of a string is useful for individual forms,\n       * while the numerical form allows for form controls to be bound\n       * to indices when iterating over controls in a `FormArray`.\n       */\n      this.name = null;\n      /** @deprecated as of v6 */\n      this.update = new EventEmitter();\n      /**\n       * @description\n       * Instance property used to track whether an ngModel warning has been sent out for this\n       * particular FormControlName instance. Used to support warning config of \"always\".\n       *\n       * @internal\n       */\n      this._ngModelWarningSent = false;\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n      this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (!this._added) this._setUpControl();\n      if (isPropertyUpdated(changes, this.viewModel)) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n        }\n        this.viewModel = this.model;\n        this.formDirective.updateModel(this, this.model);\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.formDirective) {\n        this.formDirective.removeControl(this);\n      }\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n      this.viewModel = newValue;\n      this.update.emit(newValue);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    _checkParentType() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!(this._parent instanceof FormGroupName) && this._parent instanceof AbstractFormGroupDirective) {\n          throw ngModelGroupException();\n        } else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) && !(this._parent instanceof FormArrayName)) {\n          throw controlParentException(this.name);\n        }\n      }\n    }\n    _setUpControl() {\n      this._checkParentType();\n      this.control = this.formDirective.addControl(this);\n      this._added = true;\n    }\n    static {\n      this.ɵfac = function FormControlName_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || FormControlName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FormControlName,\n        selectors: [[\"\", \"formControlName\", \"\"]],\n        inputs: {\n          name: [0, \"formControlName\", \"name\"],\n          isDisabled: [0, \"disabled\", \"isDisabled\"],\n          model: [0, \"ngModel\", \"model\"]\n        },\n        outputs: {\n          update: \"ngModelChange\"\n        },\n        features: [i0.ɵɵProvidersFeature([controlNameBinding]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return FormControlName;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst SELECT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => SelectControlValueAccessor),\n  multi: true\n};\nfunction _buildValueString$1(id, value) {\n  if (id == null) return `${value}`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n  return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in IE, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet SelectControlValueAccessor = /*#__PURE__*/(() => {\n  class SelectControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this._optionMap = new Map();\n      /** @internal */\n      this._idCounter = 0;\n      this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n      if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new ɵRuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n      }\n      this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on the select element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.value = value;\n      const id = this._getOptionId(value);\n      const valueString = _buildValueString$1(id, value);\n      this.setProperty('value', valueString);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = valueString => {\n        this.value = this._getOptionValue(valueString);\n        fn(this.value);\n      };\n    }\n    /** @internal */\n    _registerOption() {\n      return (this._idCounter++).toString();\n    }\n    /** @internal */\n    _getOptionId(value) {\n      for (const id of this._optionMap.keys()) {\n        if (this._compareWith(this._optionMap.get(id), value)) return id;\n      }\n      return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n      const id = _extractId$1(valueString);\n      return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵSelectControlValueAccessor_BaseFactory;\n        return function SelectControlValueAccessor_Factory(__ngFactoryType__) {\n          return (ɵSelectControlValueAccessor_BaseFactory || (ɵSelectControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(SelectControlValueAccessor)))(__ngFactoryType__ || SelectControlValueAccessor);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: SelectControlValueAccessor,\n        selectors: [[\"select\", \"formControlName\", \"\", 3, \"multiple\", \"\"], [\"select\", \"formControl\", \"\", 3, \"multiple\", \"\"], [\"select\", \"ngModel\", \"\", 3, \"multiple\", \"\"]],\n        hostBindings: function SelectControlValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"change\", function SelectControlValueAccessor_change_HostBindingHandler($event) {\n              return ctx.onChange($event.target.value);\n            })(\"blur\", function SelectControlValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            });\n          }\n        },\n        inputs: {\n          compareWith: \"compareWith\"\n        },\n        features: [i0.ɵɵProvidersFeature([SELECT_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return SelectControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgSelectOption = /*#__PURE__*/(() => {\n  class NgSelectOption {\n    constructor(_element, _renderer, _select) {\n      this._element = _element;\n      this._renderer = _renderer;\n      this._select = _select;\n      if (this._select) this.id = this._select._registerOption();\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n      if (this._select == null) return;\n      this._select._optionMap.set(this.id, value);\n      this._setElementValue(_buildValueString$1(this.id, value));\n      this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n      this._setElementValue(value);\n      if (this._select) this._select.writeValue(this._select.value);\n    }\n    /** @internal */\n    _setElementValue(value) {\n      this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this._select) {\n        this._select._optionMap.delete(this.id);\n        this._select.writeValue(this._select.value);\n      }\n    }\n    static {\n      this.ɵfac = function NgSelectOption_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NgSelectOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(SelectControlValueAccessor, 9));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NgSelectOption,\n        selectors: [[\"option\"]],\n        inputs: {\n          ngValue: \"ngValue\",\n          value: \"value\"\n        }\n      });\n    }\n  }\n  return NgSelectOption;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => SelectMultipleControlValueAccessor),\n  multi: true\n};\nfunction _buildValueString(id, value) {\n  if (id == null) return `${value}`;\n  if (typeof value === 'string') value = `'${value}'`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n  return valueString.split(':')[0];\n}\n/** Mock interface for HTMLCollection */\nclass HTMLCollection {}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet SelectMultipleControlValueAccessor = /*#__PURE__*/(() => {\n  class SelectMultipleControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this._optionMap = new Map();\n      /** @internal */\n      this._idCounter = 0;\n      this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n      if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new ɵRuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n      }\n      this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on one or of more of the select's options.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.value = value;\n      let optionSelectedStateSetter;\n      if (Array.isArray(value)) {\n        // convert values to ids\n        const ids = value.map(v => this._getOptionId(v));\n        optionSelectedStateSetter = (opt, o) => {\n          opt._setSelected(ids.indexOf(o.toString()) > -1);\n        };\n      } else {\n        optionSelectedStateSetter = (opt, o) => {\n          opt._setSelected(false);\n        };\n      }\n      this._optionMap.forEach(optionSelectedStateSetter);\n    }\n    /**\n     * Registers a function called when the control value changes\n     * and writes an array of the selected options.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = element => {\n        const selected = [];\n        const selectedOptions = element.selectedOptions;\n        if (selectedOptions !== undefined) {\n          const options = selectedOptions;\n          for (let i = 0; i < options.length; i++) {\n            const opt = options[i];\n            const val = this._getOptionValue(opt.value);\n            selected.push(val);\n          }\n        }\n        // Degrade to use `options` when `selectedOptions` property is not available.\n        // Note: the `selectedOptions` is available in all supported browsers, but the Domino lib\n        // doesn't have it currently, see https://github.com/fgnass/domino/issues/177.\n        else {\n          const options = element.options;\n          for (let i = 0; i < options.length; i++) {\n            const opt = options[i];\n            if (opt.selected) {\n              const val = this._getOptionValue(opt.value);\n              selected.push(val);\n            }\n          }\n        }\n        this.value = selected;\n        fn(selected);\n      };\n    }\n    /** @internal */\n    _registerOption(value) {\n      const id = (this._idCounter++).toString();\n      this._optionMap.set(id, value);\n      return id;\n    }\n    /** @internal */\n    _getOptionId(value) {\n      for (const id of this._optionMap.keys()) {\n        if (this._compareWith(this._optionMap.get(id)._value, value)) return id;\n      }\n      return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n      const id = _extractId(valueString);\n      return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵSelectMultipleControlValueAccessor_BaseFactory;\n        return function SelectMultipleControlValueAccessor_Factory(__ngFactoryType__) {\n          return (ɵSelectMultipleControlValueAccessor_BaseFactory || (ɵSelectMultipleControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(SelectMultipleControlValueAccessor)))(__ngFactoryType__ || SelectMultipleControlValueAccessor);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: SelectMultipleControlValueAccessor,\n        selectors: [[\"select\", \"multiple\", \"\", \"formControlName\", \"\"], [\"select\", \"multiple\", \"\", \"formControl\", \"\"], [\"select\", \"multiple\", \"\", \"ngModel\", \"\"]],\n        hostBindings: function SelectMultipleControlValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"change\", function SelectMultipleControlValueAccessor_change_HostBindingHandler($event) {\n              return ctx.onChange($event.target);\n            })(\"blur\", function SelectMultipleControlValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            });\n          }\n        },\n        inputs: {\n          compareWith: \"compareWith\"\n        },\n        features: [i0.ɵɵProvidersFeature([SELECT_MULTIPLE_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return SelectMultipleControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectMultipleControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet ɵNgSelectMultipleOption = /*#__PURE__*/(() => {\n  class ɵNgSelectMultipleOption {\n    constructor(_element, _renderer, _select) {\n      this._element = _element;\n      this._renderer = _renderer;\n      this._select = _select;\n      if (this._select) {\n        this.id = this._select._registerOption(this);\n      }\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n      if (this._select == null) return;\n      this._value = value;\n      this._setElementValue(_buildValueString(this.id, value));\n      this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n      if (this._select) {\n        this._value = value;\n        this._setElementValue(_buildValueString(this.id, value));\n        this._select.writeValue(this._select.value);\n      } else {\n        this._setElementValue(value);\n      }\n    }\n    /** @internal */\n    _setElementValue(value) {\n      this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @internal */\n    _setSelected(selected) {\n      this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this._select) {\n        this._select._optionMap.delete(this.id);\n        this._select.writeValue(this._select.value);\n      }\n    }\n    static {\n      this.ɵfac = function ɵNgSelectMultipleOption_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ɵNgSelectMultipleOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(SelectMultipleControlValueAccessor, 9));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: ɵNgSelectMultipleOption,\n        selectors: [[\"option\"]],\n        inputs: {\n          ngValue: \"ngValue\",\n          value: \"value\"\n        }\n      });\n    }\n  }\n  return ɵNgSelectMultipleOption;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Method that updates string to integer if not already a number\n *\n * @param value The value to convert to integer.\n * @returns value of parameter converted to number or integer.\n */\nfunction toInteger(value) {\n  return typeof value === 'number' ? value : parseInt(value, 10);\n}\n/**\n * Method that ensures that provided value is a float (and converts it to float if needed).\n *\n * @param value The value to convert to float.\n * @returns value of parameter converted to number or float.\n */\nfunction toFloat(value) {\n  return typeof value === 'number' ? value : parseFloat(value);\n}\n/**\n * A base class for Validator-based Directives. The class contains common logic shared across such\n * Directives.\n *\n * For internal use only, this class is not intended for use outside of the Forms package.\n */\nlet AbstractValidatorDirective = /*#__PURE__*/(() => {\n  class AbstractValidatorDirective {\n    constructor() {\n      this._validator = nullValidator;\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (this.inputName in changes) {\n        const input = this.normalizeInput(changes[this.inputName].currentValue);\n        this._enabled = this.enabled(input);\n        this._validator = this._enabled ? this.createValidator(input) : nullValidator;\n        if (this._onChange) {\n          this._onChange();\n        }\n      }\n    }\n    /** @nodoc */\n    validate(control) {\n      return this._validator(control);\n    }\n    /** @nodoc */\n    registerOnValidatorChange(fn) {\n      this._onChange = fn;\n    }\n    /**\n     * @description\n     * Determines whether this validator should be active or not based on an input.\n     * Base class implementation checks whether an input is defined (if the value is different from\n     * `null` and `undefined`). Validator classes that extend this base class can override this\n     * function with the logic specific to a particular validator directive.\n     */\n    enabled(input) {\n      return input != null /* both `null` and `undefined` */;\n    }\n    static {\n      this.ɵfac = function AbstractValidatorDirective_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AbstractValidatorDirective)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: AbstractValidatorDirective,\n        features: [i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return AbstractValidatorDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MaxValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MaxValidator),\n  multi: true\n};\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `max` attribute.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a max validator\n *\n * The following example shows how to add a max validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel max=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MaxValidator = /*#__PURE__*/(() => {\n  class MaxValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'max';\n      /** @internal */\n      this.normalizeInput = input => toFloat(input);\n      /** @internal */\n      this.createValidator = max => maxValidator(max);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMaxValidator_BaseFactory;\n        return function MaxValidator_Factory(__ngFactoryType__) {\n          return (ɵMaxValidator_BaseFactory || (ɵMaxValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MaxValidator)))(__ngFactoryType__ || MaxValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MaxValidator,\n        selectors: [[\"input\", \"type\", \"number\", \"max\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"max\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"max\", \"\", \"ngModel\", \"\"]],\n        hostVars: 1,\n        hostBindings: function MaxValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"max\", ctx._enabled ? ctx.max : null);\n          }\n        },\n        inputs: {\n          max: \"max\"\n        },\n        features: [i0.ɵɵProvidersFeature([MAX_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MaxValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MinValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MinValidator),\n  multi: true\n};\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a min validator\n *\n * The following example shows how to add a min validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel min=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MinValidator = /*#__PURE__*/(() => {\n  class MinValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'min';\n      /** @internal */\n      this.normalizeInput = input => toFloat(input);\n      /** @internal */\n      this.createValidator = min => minValidator(min);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMinValidator_BaseFactory;\n        return function MinValidator_Factory(__ngFactoryType__) {\n          return (ɵMinValidator_BaseFactory || (ɵMinValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MinValidator)))(__ngFactoryType__ || MinValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MinValidator,\n        selectors: [[\"input\", \"type\", \"number\", \"min\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"min\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"min\", \"\", \"ngModel\", \"\"]],\n        hostVars: 1,\n        hostBindings: function MinValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"min\", ctx._enabled ? ctx.min : null);\n          }\n        },\n        inputs: {\n          min: \"min\"\n        },\n        features: [i0.ɵɵProvidersFeature([MIN_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MinValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => RequiredValidator),\n  multi: true\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => CheckboxRequiredValidator),\n  multi: true\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet RequiredValidator = /*#__PURE__*/(() => {\n  class RequiredValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'required';\n      /** @internal */\n      this.normalizeInput = booleanAttribute;\n      /** @internal */\n      this.createValidator = input => requiredValidator;\n    }\n    /** @nodoc */\n    enabled(input) {\n      return input;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵRequiredValidator_BaseFactory;\n        return function RequiredValidator_Factory(__ngFactoryType__) {\n          return (ɵRequiredValidator_BaseFactory || (ɵRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(RequiredValidator)))(__ngFactoryType__ || RequiredValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: RequiredValidator,\n        selectors: [[\"\", \"required\", \"\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"]],\n        hostVars: 1,\n        hostBindings: function RequiredValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"required\", ctx._enabled ? \"\" : null);\n          }\n        },\n        inputs: {\n          required: \"required\"\n        },\n        features: [i0.ɵɵProvidersFeature([REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return RequiredValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nlet CheckboxRequiredValidator = /*#__PURE__*/(() => {\n  class CheckboxRequiredValidator extends RequiredValidator {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.createValidator = input => requiredTrueValidator;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵCheckboxRequiredValidator_BaseFactory;\n        return function CheckboxRequiredValidator_Factory(__ngFactoryType__) {\n          return (ɵCheckboxRequiredValidator_BaseFactory || (ɵCheckboxRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(CheckboxRequiredValidator)))(__ngFactoryType__ || CheckboxRequiredValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CheckboxRequiredValidator,\n        selectors: [[\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"ngModel\", \"\"]],\n        hostVars: 1,\n        hostBindings: function CheckboxRequiredValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"required\", ctx._enabled ? \"\" : null);\n          }\n        },\n        features: [i0.ɵɵProvidersFeature([CHECKBOX_REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return CheckboxRequiredValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => EmailValidator),\n  multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * The email validation is based on the WHATWG HTML specification with some enhancements to\n * incorporate more RFC rules. More information can be found on the [Validators.email\n * page](api/forms/Validators#email).\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nlet EmailValidator = /*#__PURE__*/(() => {\n  class EmailValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'email';\n      /** @internal */\n      this.normalizeInput = booleanAttribute;\n      /** @internal */\n      this.createValidator = input => emailValidator;\n    }\n    /** @nodoc */\n    enabled(input) {\n      return input;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵEmailValidator_BaseFactory;\n        return function EmailValidator_Factory(__ngFactoryType__) {\n          return (ɵEmailValidator_BaseFactory || (ɵEmailValidator_BaseFactory = i0.ɵɵgetInheritedFactory(EmailValidator)))(__ngFactoryType__ || EmailValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: EmailValidator,\n        selectors: [[\"\", \"email\", \"\", \"formControlName\", \"\"], [\"\", \"email\", \"\", \"formControl\", \"\"], [\"\", \"email\", \"\", \"ngModel\", \"\"]],\n        inputs: {\n          email: \"email\"\n        },\n        features: [i0.ɵɵProvidersFeature([EMAIL_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return EmailValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MinLengthValidator),\n  multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MinLengthValidator = /*#__PURE__*/(() => {\n  class MinLengthValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'minlength';\n      /** @internal */\n      this.normalizeInput = input => toInteger(input);\n      /** @internal */\n      this.createValidator = minlength => minLengthValidator(minlength);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMinLengthValidator_BaseFactory;\n        return function MinLengthValidator_Factory(__ngFactoryType__) {\n          return (ɵMinLengthValidator_BaseFactory || (ɵMinLengthValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MinLengthValidator)))(__ngFactoryType__ || MinLengthValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MinLengthValidator,\n        selectors: [[\"\", \"minlength\", \"\", \"formControlName\", \"\"], [\"\", \"minlength\", \"\", \"formControl\", \"\"], [\"\", \"minlength\", \"\", \"ngModel\", \"\"]],\n        hostVars: 1,\n        hostBindings: function MinLengthValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"minlength\", ctx._enabled ? ctx.minlength : null);\n          }\n        },\n        inputs: {\n          minlength: \"minlength\"\n        },\n        features: [i0.ɵɵProvidersFeature([MIN_LENGTH_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MinLengthValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MaxLengthValidator),\n  multi: true\n};\n/**\n * A directive that adds maximum length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MaxLengthValidator = /*#__PURE__*/(() => {\n  class MaxLengthValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'maxlength';\n      /** @internal */\n      this.normalizeInput = input => toInteger(input);\n      /** @internal */\n      this.createValidator = maxlength => maxLengthValidator(maxlength);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMaxLengthValidator_BaseFactory;\n        return function MaxLengthValidator_Factory(__ngFactoryType__) {\n          return (ɵMaxLengthValidator_BaseFactory || (ɵMaxLengthValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MaxLengthValidator)))(__ngFactoryType__ || MaxLengthValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MaxLengthValidator,\n        selectors: [[\"\", \"maxlength\", \"\", \"formControlName\", \"\"], [\"\", \"maxlength\", \"\", \"formControl\", \"\"], [\"\", \"maxlength\", \"\", \"ngModel\", \"\"]],\n        hostVars: 1,\n        hostBindings: function MaxLengthValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"maxlength\", ctx._enabled ? ctx.maxlength : null);\n          }\n        },\n        inputs: {\n          maxlength: \"maxlength\"\n        },\n        features: [i0.ɵɵProvidersFeature([MAX_LENGTH_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MaxLengthValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => PatternValidator),\n  multi: true\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet PatternValidator = /*#__PURE__*/(() => {\n  class PatternValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'pattern';\n      /** @internal */\n      this.normalizeInput = input => input;\n      /** @internal */\n      this.createValidator = input => patternValidator(input);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵPatternValidator_BaseFactory;\n        return function PatternValidator_Factory(__ngFactoryType__) {\n          return (ɵPatternValidator_BaseFactory || (ɵPatternValidator_BaseFactory = i0.ɵɵgetInheritedFactory(PatternValidator)))(__ngFactoryType__ || PatternValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: PatternValidator,\n        selectors: [[\"\", \"pattern\", \"\", \"formControlName\", \"\"], [\"\", \"pattern\", \"\", \"formControl\", \"\"], [\"\", \"pattern\", \"\", \"ngModel\", \"\"]],\n        hostVars: 1,\n        hostBindings: function PatternValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"pattern\", ctx._enabled ? ctx.pattern : null);\n          }\n        },\n        inputs: {\n          pattern: \"pattern\"\n        },\n        features: [i0.ɵɵProvidersFeature([PATTERN_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return PatternValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst SHARED_FORM_DIRECTIVES = [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator, MinValidator, MaxValidator];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nlet ɵInternalFormsSharedModule = /*#__PURE__*/(() => {\n  class ɵInternalFormsSharedModule {\n    static {\n      this.ɵfac = function ɵInternalFormsSharedModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ɵInternalFormsSharedModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: ɵInternalFormsSharedModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return ɵInternalFormsSharedModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` accepts one generic argument, which is the type of the controls inside.\n * If you need a heterogenous array, use {@link UntypedFormArray}.\n *\n * `FormArray` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormGroup`, and `FormRecord`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n  /**\n   * Creates a new `FormArray` instance.\n   *\n   * @param controls An array of child controls. Each child control is given an index\n   * where it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    this.controls = controls;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`.\n      // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`\n      // to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n  }\n  /**\n   * Get the `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to retrieve the control. If `index` is negative, it will wrap\n   *     around from the back, and if index is greatly negative (less than `-length`), the result is\n   * undefined. This behavior is the same as `Array.at(index)`.\n   */\n  at(index) {\n    return this.controls[this._adjustIndex(index)];\n  }\n  /**\n   * Insert a new `AbstractControl` at the end of the array.\n   *\n   * @param control Form control to be inserted\n   * @param options Specifies whether this FormArray instance should emit events after a new\n   *     control is added.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * inserted. When false, no events are emitted.\n   */\n  push(control, options = {}) {\n    this.controls.push(control);\n    this._registerControl(control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Insert a new `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to insert the control. If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), prepends to the array.\n   * This behavior is the same as `Array.splice(index, 0, control)`.\n   * @param control Form control to be inserted\n   * @param options Specifies whether this FormArray instance should emit events after a new\n   *     control is inserted.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * inserted. When false, no events are emitted.\n   */\n  insert(index, control, options = {}) {\n    this.controls.splice(index, 0, control);\n    this._registerControl(control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Remove the control at the given `index` in the array.\n   *\n   * @param index Index in the array to remove the control.  If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), removes the first\n   *     element. This behavior is the same as `Array.splice(index, 1)`.\n   * @param options Specifies whether this FormArray instance should emit events after a\n   *     control is removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * removed. When false, no events are emitted.\n   */\n  removeAt(index, options = {}) {\n    // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n    let adjustedIndex = this._adjustIndex(index);\n    if (adjustedIndex < 0) adjustedIndex = 0;\n    if (this.controls[adjustedIndex]) this.controls[adjustedIndex]._registerOnCollectionChange(() => {});\n    this.controls.splice(adjustedIndex, 1);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Replace an existing control.\n   *\n   * @param index Index in the array to replace the control. If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), replaces the first\n   *     element. This behavior is the same as `Array.splice(index, 1, control)`.\n   * @param control The `AbstractControl` control to replace the existing control\n   * @param options Specifies whether this FormArray instance should emit events after an\n   *     existing control is replaced with a new one.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * replaced with a new one. When false, no events are emitted.\n   */\n  setControl(index, control, options = {}) {\n    // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n    let adjustedIndex = this._adjustIndex(index);\n    if (adjustedIndex < 0) adjustedIndex = 0;\n    if (this.controls[adjustedIndex]) this.controls[adjustedIndex]._registerOnCollectionChange(() => {});\n    this.controls.splice(adjustedIndex, 1);\n    if (control) {\n      this.controls.splice(adjustedIndex, 0, control);\n      this._registerControl(control);\n    }\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Length of the control array.\n   */\n  get length() {\n    return this.controls.length;\n  }\n  /**\n   * Sets the value of the `FormArray`. It accepts an array that matches\n   * the structure of the control.\n   *\n   * This method performs strict checks, and throws an error if you try\n   * to set the value of a control that doesn't exist or if you exclude the\n   * value of a control.\n   *\n   * @usageNotes\n   * ### Set the values for the controls in the form array\n   *\n   * ```\n   * const arr = new FormArray([\n   *   new FormControl(),\n   *   new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.setValue(['Nancy', 'Drew']);\n   * console.log(arr.value);   // ['Nancy', 'Drew']\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  setValue(value, options = {}) {\n    assertAllValuesPresent(this, false, value);\n    value.forEach((newValue, index) => {\n      assertControlPresent(this, false, index);\n      this.at(index).setValue(newValue, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of the `FormArray`. It accepts an array that matches the\n   * structure of the control, and does its best to match the values to the correct\n   * controls in the group.\n   *\n   * It accepts both super-sets and sub-sets of the array without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the values for controls in a form array\n   *\n   * ```\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.patchValue(['Nancy']);\n   * console.log(arr.value);   // ['Nancy', null]\n   * ```\n   *\n   * @param value Array of latest values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control\n   * value is updated. When false, no events are emitted. The configuration options are passed to\n   * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n   */\n  patchValue(value, options = {}) {\n    // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n    // `patchValue` can be called recursively and inner data structures might have these values,\n    // so we just ignore such cases when a field containing FormArray instance receives `null` or\n    // `undefined` as a value.\n    if (value == null /* both `null` and `undefined` */) return;\n    value.forEach((newValue, index) => {\n      if (this.at(index)) {\n        this.at(index).patchValue(newValue, {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n   * value of all descendants to null or null maps.\n   *\n   * You reset to a specific form state by passing in an array of states\n   * that matches the structure of the control. The state is a standalone value\n   * or a form state object with both a value and a disabled status.\n   *\n   * @usageNotes\n   * ### Reset the values in a form array\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * arr.reset(['name', 'last name']);\n   *\n   * console.log(arr.value);  // ['name', 'last name']\n   * ```\n   *\n   * ### Reset the values in a form array and the disabled status for the first control\n   *\n   * ```\n   * arr.reset([\n   *   {value: 'name', disabled: true},\n   *   'last'\n   * ]);\n   *\n   * console.log(arr.value);  // ['last']\n   * console.log(arr.at(0).status);  // 'DISABLED'\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  reset(value = [], options = {}) {\n    this._forEachChild((control, index) => {\n      control.reset(value[index], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this._updatePristine(options, this);\n    this._updateTouched(options, this);\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the array, including any disabled controls.\n   *\n   * Reports all values regardless of disabled status.\n   */\n  getRawValue() {\n    return this.controls.map(control => control.getRawValue());\n  }\n  /**\n   * Remove all controls in the `FormArray`.\n   *\n   * @param options Specifies whether this FormArray instance should emit events after all\n   *     controls are removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when all controls\n   * in this FormArray instance are removed. When false, no events are emitted.\n   *\n   * @usageNotes\n   * ### Remove all elements from a FormArray\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.length);  // 2\n   *\n   * arr.clear();\n   * console.log(arr.length);  // 0\n   * ```\n   *\n   * It's a simpler and more efficient alternative to removing all elements one by one:\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   *\n   * while (arr.length) {\n   *    arr.removeAt(0);\n   * }\n   * ```\n   */\n  clear(options = {}) {\n    if (this.controls.length < 1) return;\n    this._forEachChild(control => control._registerOnCollectionChange(() => {}));\n    this.controls.splice(0);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Adjusts a negative index by summing it with the length of the array. For very negative\n   * indices, the result may remain negative.\n   * @internal\n   */\n  _adjustIndex(index) {\n    return index < 0 ? index + this.length : index;\n  }\n  /** @internal */\n  _syncPendingControls() {\n    let subtreeUpdated = this.controls.reduce((updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    }, false);\n    if (subtreeUpdated) this.updateValueAndValidity({\n      onlySelf: true\n    });\n    return subtreeUpdated;\n  }\n  /** @internal */\n  _forEachChild(cb) {\n    this.controls.forEach((control, index) => {\n      cb(control, index);\n    });\n  }\n  /** @internal */\n  _updateValue() {\n    this.value = this.controls.filter(control => control.enabled || this.disabled).map(control => control.value);\n  }\n  /** @internal */\n  _anyControls(condition) {\n    return this.controls.some(control => control.enabled && condition(control));\n  }\n  /** @internal */\n  _setUpControls() {\n    this._forEachChild(control => this._registerControl(control));\n  }\n  /** @internal */\n  _allControlsDisabled() {\n    for (const control of this.controls) {\n      if (control.enabled) return false;\n    }\n    return this.controls.length > 0 || this.disabled;\n  }\n  _registerControl(control) {\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n  }\n  /** @internal */\n  _find(name) {\n    return this.at(name) ?? null;\n  }\n}\nconst UntypedFormArray = FormArray;\n/**\n * @description\n * Asserts that the given control is an instance of `FormArray`\n *\n * @publicApi\n */\nconst isFormArray = control => control instanceof FormArray;\nfunction isAbstractControlOptions(options) {\n  return !!options && (options.asyncValidators !== undefined || options.validators !== undefined || options.updateOn !== undefined);\n}\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a\n * `FormControl`, `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to\n * build complex forms.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @publicApi\n */\nlet FormBuilder = /*#__PURE__*/(() => {\n  class FormBuilder {\n    constructor() {\n      this.useNonNullable = false;\n    }\n    /**\n     * @description\n     * Returns a FormBuilder in which automatically constructed `FormControl` elements\n     * have `{nonNullable: true}` and are non-nullable.\n     *\n     * **Constructing non-nullable controls**\n     *\n     * When constructing a control, it will be non-nullable, and will reset to its initial value.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.control('Alex'); // FormControl<string>\n     * name.reset();\n     * console.log(name); // 'Alex'\n     * ```\n     *\n     * **Constructing non-nullable groups or arrays**\n     *\n     * When constructing a group or array, all automatically created inner controls will be\n     * non-nullable, and will reset to their initial values.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.group({who: 'Alex'}); // FormGroup<{who: FormControl<string>}>\n     * name.reset();\n     * console.log(name); // {who: 'Alex'}\n     * ```\n     * **Constructing *nullable* fields on groups or arrays**\n     *\n     * It is still possible to have a nullable field. In particular, any `FormControl` which is\n     * *already* constructed will not be altered. For example:\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * // FormGroup<{who: FormControl<string|null>}>\n     * let name = nnfb.group({who: new FormControl('Alex')});\n     * name.reset(); console.log(name); // {who: null}\n     * ```\n     *\n     * Because the inner control is constructed explicitly by the caller, the builder has\n     * no control over how it is created, and cannot exclude the `null`.\n     */\n    get nonNullable() {\n      const nnfb = new FormBuilder();\n      nnfb.useNonNullable = true;\n      return nnfb;\n    }\n    group(controls, options = null) {\n      const reducedControls = this._reduceControls(controls);\n      let newOptions = {};\n      if (isAbstractControlOptions(options)) {\n        // `options` are `AbstractControlOptions`\n        newOptions = options;\n      } else if (options !== null) {\n        // `options` are legacy form group options\n        newOptions.validators = options.validator;\n        newOptions.asyncValidators = options.asyncValidator;\n      }\n      return new FormGroup(reducedControls, newOptions);\n    }\n    /**\n     * @description\n     * Constructs a new `FormRecord` instance. Accepts a single generic argument, which is an object\n     * containing all the keys and corresponding inner control types.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param options Configuration options object for the `FormRecord`. The object should have the\n     * `AbstractControlOptions` type and might contain the following fields:\n     * * `validators`: A synchronous validator function, or an array of validator functions.\n     * * `asyncValidators`: A single async validator or array of async validator functions.\n     * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur'\n     * | submit').\n     */\n    record(controls, options = null) {\n      const reducedControls = this._reduceControls(controls);\n      // Cast to `any` because the inferred types are not as specific as Element.\n      return new FormRecord(reducedControls, options);\n    }\n    /**\n     * @description\n     * Constructs a new `FormControl` with the given state, validators and options. Sets\n     * `{nonNullable: true}` in the options to get a non-nullable control. Otherwise, the\n     * control will be nullable. Accepts a single generic argument, which is the type  of the\n     * control's value.\n     *\n     * @param formState Initializes the control with an initial state value, or\n     * with an object that contains both a value and a disabled status.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or a `FormControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     *\n     * @usageNotes\n     *\n     * ### Initialize a control as disabled\n     *\n     * The following example returns a control with an initial value in a disabled state.\n     *\n     * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\n     * </code-example>\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n      let newOptions = {};\n      if (!this.useNonNullable) {\n        return new FormControl(formState, validatorOrOpts, asyncValidator);\n      }\n      if (isAbstractControlOptions(validatorOrOpts)) {\n        // If the second argument is options, then they are copied.\n        newOptions = validatorOrOpts;\n      } else {\n        // If the other arguments are validators, they are copied into an options object.\n        newOptions.validators = validatorOrOpts;\n        newOptions.asyncValidators = asyncValidator;\n      }\n      return new FormControl(formState, {\n        ...newOptions,\n        nonNullable: true\n      });\n    }\n    /**\n     * Constructs a new `FormArray` from the given array of configurations,\n     * validators and options. Accepts a single generic argument, which is the type of each control\n     * inside the array.\n     *\n     * @param controls An array of child controls or control configs. Each child control is given an\n     *     index when it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of such functions, or an\n     *     `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions.\n     */\n    array(controls, validatorOrOpts, asyncValidator) {\n      const createdControls = controls.map(c => this._createControl(c));\n      // Cast to `any` because the inferred types are not as specific as Element.\n      return new FormArray(createdControls, validatorOrOpts, asyncValidator);\n    }\n    /** @internal */\n    _reduceControls(controls) {\n      const createdControls = {};\n      Object.keys(controls).forEach(controlName => {\n        createdControls[controlName] = this._createControl(controls[controlName]);\n      });\n      return createdControls;\n    }\n    /** @internal */\n    _createControl(controls) {\n      if (controls instanceof FormControl) {\n        return controls;\n      } else if (controls instanceof AbstractControl) {\n        // A control; just return it\n        return controls;\n      } else if (Array.isArray(controls)) {\n        // ControlConfig Tuple\n        const value = controls[0];\n        const validator = controls.length > 1 ? controls[1] : null;\n        const asyncValidator = controls.length > 2 ? controls[2] : null;\n        return this.control(value, validator, asyncValidator);\n      } else {\n        // T or FormControlState<T>\n        return this.control(controls);\n      }\n    }\n    static {\n      this.ɵfac = function FormBuilder_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || FormBuilder)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: FormBuilder,\n        factory: FormBuilder.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return FormBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * `NonNullableFormBuilder` is similar to {@link FormBuilder}, but automatically constructed\n * {@link FormControl} elements have `{nonNullable: true}` and are non-nullable.\n *\n * @publicApi\n */\nlet NonNullableFormBuilder = /*#__PURE__*/(() => {\n  class NonNullableFormBuilder {\n    static {\n      this.ɵfac = function NonNullableFormBuilder_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NonNullableFormBuilder)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: NonNullableFormBuilder,\n        factory: () => (() => inject(FormBuilder).nonNullable)(),\n        providedIn: 'root'\n      });\n    }\n  }\n  return NonNullableFormBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * UntypedFormBuilder is the same as `FormBuilder`, but it provides untyped controls.\n */\nlet UntypedFormBuilder = /*#__PURE__*/(() => {\n  class UntypedFormBuilder extends FormBuilder {\n    group(controlsConfig, options = null) {\n      return super.group(controlsConfig, options);\n    }\n    /**\n     * Like `FormBuilder#control`, except the resulting control is untyped.\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n      return super.control(formState, validatorOrOpts, asyncValidator);\n    }\n    /**\n     * Like `FormBuilder#array`, except the resulting array is untyped.\n     */\n    array(controlsConfig, validatorOrOpts, asyncValidator) {\n      return super.array(controlsConfig, validatorOrOpts, asyncValidator);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵUntypedFormBuilder_BaseFactory;\n        return function UntypedFormBuilder_Factory(__ngFactoryType__) {\n          return (ɵUntypedFormBuilder_BaseFactory || (ɵUntypedFormBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(UntypedFormBuilder)))(__ngFactoryType__ || UntypedFormBuilder);\n        };\n      })();\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: UntypedFormBuilder,\n        factory: UntypedFormBuilder.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return UntypedFormBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n/**\n * @publicApi\n */\nconst VERSION = /*#__PURE__*/new Version('18.2.5');\n\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms)\n * @see [Template-driven Forms Guide](guide/forms)\n *\n * @publicApi\n */\nlet FormsModule = /*#__PURE__*/(() => {\n  class FormsModule {\n    /**\n     * @description\n     * Provides options for configuring the forms module.\n     *\n     * @param opts An object of configuration options\n     * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n     * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n     */\n    static withConfig(opts) {\n      return {\n        ngModule: FormsModule,\n        providers: [{\n          provide: CALL_SET_DISABLED_STATE,\n          useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n        }]\n      };\n    }\n    static {\n      this.ɵfac = function FormsModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || FormsModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: FormsModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ɵInternalFormsSharedModule]\n      });\n    }\n  }\n  return FormsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms)\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @publicApi\n */\nlet ReactiveFormsModule = /*#__PURE__*/(() => {\n  class ReactiveFormsModule {\n    /**\n     * @description\n     * Provides options for configuring the reactive forms module.\n     *\n     * @param opts An object of configuration options\n     * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n     * binding is used with reactive form directives.\n     * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n     * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n     */\n    static withConfig(opts) {\n      return {\n        ngModule: ReactiveFormsModule,\n        providers: [{\n          provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,\n          useValue: opts.warnOnNgModelWithFormControl ?? 'always'\n        }, {\n          provide: CALL_SET_DISABLED_STATE,\n          useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n        }]\n      };\n    }\n    static {\n      this.ɵfac = function ReactiveFormsModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ReactiveFormsModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: ReactiveFormsModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ɵInternalFormsSharedModule]\n      });\n    }\n  }\n  return ReactiveFormsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a `FormGroup` that\n * consists of `FormControl` objects, and mapping them onto the DOM. `FormControl`\n * objects can then be used to read information from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, ControlEvent, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormRecord, FormResetEvent, FormSubmittedEvent, FormsModule, MaxLengthValidator, MaxValidator, MinLengthValidator, MinValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NonNullableFormBuilder, NumberValueAccessor, PatternValidator, PristineChangeEvent, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, StatusChangeEvent, TouchedChangeEvent, UntypedFormArray, UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, VERSION, Validators, ValueChangeEvent, isFormArray, isFormControl, isFormGroup, isFormRecord, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Optional, Inject, inject, Input, ANIMATION_MODULE_TYPE, ContentChildren, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, EventEmitter, Output, forwardRef, ChangeDetectorRef, NgModule } from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatRippleModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { Subscription, merge, Subject } from 'rxjs';\nimport { CdkObserveContent, ObserversModule } from '@angular/cdk/observers';\nimport { NgTemplateOutlet, CommonModule } from '@angular/common';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ENTER, SPACE, A, hasModifierKey } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Injection token that can be used to reference instances of an `ListOption`. It serves\n * as alternative token to an actual implementation which could result in undesired\n * retention of the class or circular references breaking runtime execution.\n * @docs-private\n */\nconst _c0 = [\"*\"];\nconst _c1 = \".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mdc-list-list-item-container-color);border-radius:var(--mdc-list-list-item-container-shape, var(--mat-app-corner-none))}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected::before,.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected:focus::before,.cdk-high-contrast-active .mdc-list-item:not(.mdc-list-item--selected):focus::before{border-color:CanvasText}.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item.mdc-list-item--selected::before{border-width:3px;border-style:double}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font, var(--mat-app-label-small-font));line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height, var(--mat-app-label-small-line-height));font-size:var(--mdc-list-list-item-trailing-supporting-text-size, var(--mat-app-label-small-size));font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight, var(--mat-app-label-small-weight));letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking, var(--mat-app-label-small-tracking))}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color, var(--mat-app-on-surface-variant))}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color, var(--mat-app-primary))}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mdc-list-list-item-label-text-color, var(--mat-app-on-surface));font-family:var(--mdc-list-list-item-label-text-font, var(--mat-app-body-large-font));line-height:var(--mdc-list-list-item-label-text-line-height, var(--mat-app-body-large-line-height));font-size:var(--mdc-list-list-item-label-text-size, var(--mat-app-body-large-size));font-weight:var(--mdc-list-list-item-label-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mdc-list-list-item-label-text-tracking, var(--mat-app-body-large-tracking))}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color, var(--mat-app-on-surface))}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mdc-list-list-item-supporting-text-color, var(--mat-app-on-surface-variant));font-family:var(--mdc-list-list-item-supporting-text-font, var(--mat-app-body-medium-font));line-height:var(--mdc-list-list-item-supporting-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mdc-list-list-item-supporting-text-size, var(--mat-app-body-medium-size));font-weight:var(--mdc-list-list-item-supporting-text-weight, var(--mat-app-body-medium-weight));letter-spacing:var(--mdc-list-list-item-supporting-text-tracking, var(--mat-app-body-medium-tracking))}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape, var(--mat-app-corner-full));background-color:var(--mdc-list-list-item-leading-avatar-color, var(--mat-app-primary-container))}.mat-mdc-list-item-icon{font-size:var(--mdc-list-list-item-leading-icon-size)}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full));--mat-mdc-focus-indicator-border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full))}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color, var(--mat-app-secondary-container))}\";\nconst _c2 = [\"unscopedContent\"];\nconst _c3 = [\"text\"];\nconst _c4 = [[[\"\", \"matListItemAvatar\", \"\"], [\"\", \"matListItemIcon\", \"\"]], [[\"\", \"matListItemTitle\", \"\"]], [[\"\", \"matListItemLine\", \"\"]], \"*\", [[\"\", \"matListItemMeta\", \"\"]], [[\"mat-divider\"]]];\nconst _c5 = [\"[matListItemAvatar],[matListItemIcon]\", \"[matListItemTitle]\", \"[matListItemLine]\", \"*\", \"[matListItemMeta]\", \"mat-divider\"];\nconst _c6 = [[[\"\", \"matListItemTitle\", \"\"]], [[\"\", \"matListItemLine\", \"\"]], \"*\", [[\"mat-divider\"]], [[\"\", \"matListItemAvatar\", \"\"], [\"\", \"matListItemIcon\", \"\"]]];\nconst _c7 = [\"[matListItemTitle]\", \"[matListItemLine]\", \"*\", \"mat-divider\", \"[matListItemAvatar],[matListItemIcon]\"];\nfunction MatListOption_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 4);\n  }\n}\nfunction MatListOption_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵelement(1, \"input\", 12);\n    i0.ɵɵelementStart(2, \"div\", 13);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(3, \"svg\", 14);\n    i0.ɵɵelement(4, \"path\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelement(5, \"div\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mdc-checkbox--disabled\", ctx_r1.disabled);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"checked\", ctx_r1.selected)(\"disabled\", ctx_r1.disabled);\n  }\n}\nfunction MatListOption_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelement(1, \"input\", 18);\n    i0.ɵɵelementStart(2, \"div\", 19);\n    i0.ɵɵelement(3, \"div\", 20)(4, \"div\", 21);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mdc-radio--disabled\", ctx_r1.disabled);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"checked\", ctx_r1.selected)(\"disabled\", ctx_r1.disabled);\n  }\n}\nfunction MatListOption_Conditional_6_ng_template_1_Template(rf, ctx) {}\nfunction MatListOption_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtemplate(1, MatListOption_Conditional_6_ng_template_1_Template, 0, 0, \"ng-template\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const checkbox_r3 = i0.ɵɵreference(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", checkbox_r3);\n  }\n}\nfunction MatListOption_Conditional_7_ng_template_1_Template(rf, ctx) {}\nfunction MatListOption_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtemplate(1, MatListOption_Conditional_7_ng_template_1_Template, 0, 0, \"ng-template\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const radio_r4 = i0.ɵɵreference(5);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", radio_r4);\n  }\n}\nfunction MatListOption_Conditional_8_ng_template_0_Template(rf, ctx) {}\nfunction MatListOption_Conditional_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatListOption_Conditional_8_ng_template_0_Template, 0, 0, \"ng-template\", 6);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const icons_r5 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", icons_r5);\n  }\n}\nfunction MatListOption_Conditional_15_ng_template_1_Template(rf, ctx) {}\nfunction MatListOption_Conditional_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtemplate(1, MatListOption_Conditional_15_ng_template_1_Template, 0, 0, \"ng-template\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const checkbox_r3 = i0.ɵɵreference(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", checkbox_r3);\n  }\n}\nfunction MatListOption_Conditional_16_ng_template_1_Template(rf, ctx) {}\nfunction MatListOption_Conditional_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtemplate(1, MatListOption_Conditional_16_ng_template_1_Template, 0, 0, \"ng-template\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const radio_r4 = i0.ɵɵreference(5);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", radio_r4);\n  }\n}\nfunction MatListOption_Conditional_17_ng_template_0_Template(rf, ctx) {}\nfunction MatListOption_Conditional_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatListOption_Conditional_17_ng_template_0_Template, 0, 0, \"ng-template\", 6);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const icons_r5 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", icons_r5);\n  }\n}\nconst LIST_OPTION = /*#__PURE__*/new InjectionToken('ListOption');\n\n/**\n * Directive capturing the title of a list item. A list item usually consists of a\n * title and optional secondary or tertiary lines.\n *\n * Text content for the title never wraps. There can only be a single title per list item.\n */\nlet MatListItemTitle = /*#__PURE__*/(() => {\n  class MatListItemTitle {\n    constructor(_elementRef) {\n      this._elementRef = _elementRef;\n    }\n    static {\n      this.ɵfac = function MatListItemTitle_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatListItemTitle)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatListItemTitle,\n        selectors: [[\"\", \"matListItemTitle\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-list-item-title\", \"mdc-list-item__primary-text\"],\n        standalone: true\n      });\n    }\n  }\n  return MatListItemTitle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive capturing a line in a list item. A list item usually consists of a\n * title and optional secondary or tertiary lines.\n *\n * Text content inside a line never wraps. There can be at maximum two lines per list item.\n */\nlet MatListItemLine = /*#__PURE__*/(() => {\n  class MatListItemLine {\n    constructor(_elementRef) {\n      this._elementRef = _elementRef;\n    }\n    static {\n      this.ɵfac = function MatListItemLine_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatListItemLine)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatListItemLine,\n        selectors: [[\"\", \"matListItemLine\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-list-item-line\", \"mdc-list-item__secondary-text\"],\n        standalone: true\n      });\n    }\n  }\n  return MatListItemLine;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive matching an optional meta section for list items.\n *\n * List items can reserve space at the end of an item to display a control,\n * button or additional text content.\n */\nlet MatListItemMeta = /*#__PURE__*/(() => {\n  class MatListItemMeta {\n    static {\n      this.ɵfac = function MatListItemMeta_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatListItemMeta)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatListItemMeta,\n        selectors: [[\"\", \"matListItemMeta\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-list-item-meta\", \"mdc-list-item__end\"],\n        standalone: true\n      });\n    }\n  }\n  return MatListItemMeta;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @docs-private\n *\n * MDC uses the very intuitively named classes `.mdc-list-item__start` and `.mat-list-item__end` to\n * position content such as icons or checkboxes/radios that comes either before or after the text\n * content respectively. This directive detects the placement of the checkbox/radio and applies the\n * correct MDC class to position the icon/avatar on the opposite side.\n */\nlet _MatListItemGraphicBase = /*#__PURE__*/(() => {\n  class _MatListItemGraphicBase {\n    constructor(_listOption) {\n      this._listOption = _listOption;\n    }\n    _isAlignedAtStart() {\n      // By default, in all list items the graphic is aligned at start. In list options,\n      // the graphic is only aligned at start if the checkbox/radio is at the end.\n      return !this._listOption || this._listOption?._getTogglePosition() === 'after';\n    }\n    static {\n      this.ɵfac = function _MatListItemGraphicBase_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || _MatListItemGraphicBase)(i0.ɵɵdirectiveInject(LIST_OPTION, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: _MatListItemGraphicBase,\n        hostVars: 4,\n        hostBindings: function _MatListItemGraphicBase_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-list-item__start\", ctx._isAlignedAtStart())(\"mdc-list-item__end\", !ctx._isAlignedAtStart());\n          }\n        },\n        standalone: true\n      });\n    }\n  }\n  return _MatListItemGraphicBase;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive matching an optional avatar within a list item.\n *\n * List items can reserve space at the beginning of an item to display an avatar.\n */\nlet MatListItemAvatar = /*#__PURE__*/(() => {\n  class MatListItemAvatar extends _MatListItemGraphicBase {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatListItemAvatar_BaseFactory;\n        return function MatListItemAvatar_Factory(__ngFactoryType__) {\n          return (ɵMatListItemAvatar_BaseFactory || (ɵMatListItemAvatar_BaseFactory = i0.ɵɵgetInheritedFactory(MatListItemAvatar)))(__ngFactoryType__ || MatListItemAvatar);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatListItemAvatar,\n        selectors: [[\"\", \"matListItemAvatar\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-list-item-avatar\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatListItemAvatar;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive matching an optional icon within a list item.\n *\n * List items can reserve space at the beginning of an item to display an icon.\n */\nlet MatListItemIcon = /*#__PURE__*/(() => {\n  class MatListItemIcon extends _MatListItemGraphicBase {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatListItemIcon_BaseFactory;\n        return function MatListItemIcon_Factory(__ngFactoryType__) {\n          return (ɵMatListItemIcon_BaseFactory || (ɵMatListItemIcon_BaseFactory = i0.ɵɵgetInheritedFactory(MatListItemIcon)))(__ngFactoryType__ || MatListItemIcon);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatListItemIcon,\n        selectors: [[\"\", \"matListItemIcon\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-list-item-icon\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatListItemIcon;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Injection token that can be used to provide the default options for the list module. */\nconst MAT_LIST_CONFIG = /*#__PURE__*/new InjectionToken('MAT_LIST_CONFIG');\n\n/** @docs-private */\nlet MatListBase = /*#__PURE__*/(() => {\n  class MatListBase {\n    constructor() {\n      this._isNonInteractive = true;\n      this._disableRipple = false;\n      this._disabled = false;\n      this._defaultOptions = inject(MAT_LIST_CONFIG, {\n        optional: true\n      });\n    }\n    /** Whether ripples for all list items is disabled. */\n    get disableRipple() {\n      return this._disableRipple;\n    }\n    set disableRipple(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the entire list is disabled. When disabled, the list itself and each of its list items\n     * are disabled.\n     */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n    static {\n      this.ɵfac = function MatListBase_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatListBase)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatListBase,\n        hostVars: 1,\n        hostBindings: function MatListBase_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-disabled\", ctx.disabled);\n          }\n        },\n        inputs: {\n          disableRipple: \"disableRipple\",\n          disabled: \"disabled\"\n        },\n        standalone: true\n      });\n    }\n  }\n  return MatListBase;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** @docs-private */\nlet MatListItemBase = /*#__PURE__*/(() => {\n  class MatListItemBase {\n    /**\n     * The number of lines this list item should reserve space for. If not specified,\n     * lines are inferred based on the projected content.\n     *\n     * Explicitly specifying the number of lines is useful if you want to acquire additional\n     * space and enable the wrapping of text. The unscoped text content of a list item will\n     * always be able to take up the remaining space of the item, unless it represents the title.\n     *\n     * A maximum of three lines is supported as per the Material Design specification.\n     */\n    set lines(lines) {\n      this._explicitLines = coerceNumberProperty(lines, null);\n      this._updateItemLines(false);\n    }\n    /** Whether ripples for list items are disabled. */\n    get disableRipple() {\n      return this.disabled || this._disableRipple || this._noopAnimations || !!this._listBase?.disableRipple;\n    }\n    set disableRipple(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n    /** Whether the list-item is disabled. */\n    get disabled() {\n      return this._disabled || !!this._listBase?.disabled;\n    }\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Implemented as part of `RippleTarget`.\n     * @docs-private\n     */\n    get rippleDisabled() {\n      return this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    constructor(_elementRef, _ngZone, _listBase, _platform, globalRippleOptions, animationMode) {\n      this._elementRef = _elementRef;\n      this._ngZone = _ngZone;\n      this._listBase = _listBase;\n      this._platform = _platform;\n      this._explicitLines = null;\n      this._disableRipple = false;\n      this._disabled = false;\n      this._subscriptions = new Subscription();\n      this._rippleRenderer = null;\n      /** Whether the list item has unscoped text content. */\n      this._hasUnscopedTextContent = false;\n      this.rippleConfig = globalRippleOptions || {};\n      this._hostElement = this._elementRef.nativeElement;\n      this._isButtonElement = this._hostElement.nodeName.toLowerCase() === 'button';\n      this._noopAnimations = animationMode === 'NoopAnimations';\n      if (_listBase && !_listBase._isNonInteractive) {\n        this._initInteractiveListItem();\n      }\n      // If no type attribute is specified for a host `<button>` element, set it to `button`. If a\n      // type attribute is already specified, we do nothing. We do this for backwards compatibility.\n      // TODO: Determine if we intend to continue doing this for the MDC-based list.\n      if (this._isButtonElement && !this._hostElement.hasAttribute('type')) {\n        this._hostElement.setAttribute('type', 'button');\n      }\n    }\n    ngAfterViewInit() {\n      this._monitorProjectedLinesAndTitle();\n      this._updateItemLines(true);\n    }\n    ngOnDestroy() {\n      this._subscriptions.unsubscribe();\n      if (this._rippleRenderer !== null) {\n        this._rippleRenderer._removeTriggerEvents();\n      }\n    }\n    /** Whether the list item has icons or avatars. */\n    _hasIconOrAvatar() {\n      return !!(this._avatars.length || this._icons.length);\n    }\n    _initInteractiveListItem() {\n      this._hostElement.classList.add('mat-mdc-list-item-interactive');\n      this._rippleRenderer = new RippleRenderer(this, this._ngZone, this._hostElement, this._platform);\n      this._rippleRenderer.setupTriggerEvents(this._hostElement);\n    }\n    /**\n     * Subscribes to changes in the projected title and lines. Triggers a\n     * item lines update whenever a change occurs.\n     */\n    _monitorProjectedLinesAndTitle() {\n      this._ngZone.runOutsideAngular(() => {\n        this._subscriptions.add(merge(this._lines.changes, this._titles.changes).subscribe(() => this._updateItemLines(false)));\n      });\n    }\n    /**\n     * Updates the lines of the list item. Based on the projected user content and optional\n     * explicit lines setting, the visual appearance of the list item is determined.\n     *\n     * This method should be invoked whenever the projected user content changes, or\n     * when the explicit lines have been updated.\n     *\n     * @param recheckUnscopedContent Whether the projected unscoped content should be re-checked.\n     *   The unscoped content is not re-checked for every update as it is a rather expensive check\n     *   for content that is expected to not change very often.\n     */\n    _updateItemLines(recheckUnscopedContent) {\n      // If the updated is triggered too early before the view and content is initialized,\n      // we just skip the update. After view initialization the update is triggered again.\n      if (!this._lines || !this._titles || !this._unscopedContent) {\n        return;\n      }\n      // Re-check the DOM for unscoped text content if requested. This needs to\n      // happen before any computation or sanity checks run as these rely on the\n      // result of whether there is unscoped text content or not.\n      if (recheckUnscopedContent) {\n        this._checkDomForUnscopedTextContent();\n      }\n      // Sanity check the list item lines and title in the content. This is a dev-mode only\n      // check that can be dead-code eliminated by Terser in production.\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        sanityCheckListItemContent(this);\n      }\n      const numberOfLines = this._explicitLines ?? this._inferLinesFromContent();\n      const unscopedContentEl = this._unscopedContent.nativeElement;\n      // Update the list item element to reflect the number of lines.\n      this._hostElement.classList.toggle('mat-mdc-list-item-single-line', numberOfLines <= 1);\n      this._hostElement.classList.toggle('mdc-list-item--with-one-line', numberOfLines <= 1);\n      this._hostElement.classList.toggle('mdc-list-item--with-two-lines', numberOfLines === 2);\n      this._hostElement.classList.toggle('mdc-list-item--with-three-lines', numberOfLines === 3);\n      // If there is no title and the unscoped content is the is the only line, the\n      // unscoped text content will be treated as the title of the list-item.\n      if (this._hasUnscopedTextContent) {\n        const treatAsTitle = this._titles.length === 0 && numberOfLines === 1;\n        unscopedContentEl.classList.toggle('mdc-list-item__primary-text', treatAsTitle);\n        unscopedContentEl.classList.toggle('mdc-list-item__secondary-text', !treatAsTitle);\n      } else {\n        unscopedContentEl.classList.remove('mdc-list-item__primary-text');\n        unscopedContentEl.classList.remove('mdc-list-item__secondary-text');\n      }\n    }\n    /**\n     * Infers the number of lines based on the projected user content. This is useful\n     * if no explicit number of lines has been specified on the list item.\n     *\n     * The number of lines is inferred based on whether there is a title, the number of\n     * additional lines (secondary/tertiary). An additional line is acquired if there is\n     * unscoped text content.\n     */\n    _inferLinesFromContent() {\n      let numOfLines = this._titles.length + this._lines.length;\n      if (this._hasUnscopedTextContent) {\n        numOfLines += 1;\n      }\n      return numOfLines;\n    }\n    /** Checks whether the list item has unscoped text content. */\n    _checkDomForUnscopedTextContent() {\n      this._hasUnscopedTextContent = Array.from(this._unscopedContent.nativeElement.childNodes).filter(node => node.nodeType !== node.COMMENT_NODE).some(node => !!(node.textContent && node.textContent.trim()));\n    }\n    static {\n      this.ɵfac = function MatListItemBase_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatListItemBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(MatListBase, 8), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatListItemBase,\n        contentQueries: function MatListItemBase_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatListItemAvatar, 4);\n            i0.ɵɵcontentQuery(dirIndex, MatListItemIcon, 4);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._avatars = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._icons = _t);\n          }\n        },\n        hostVars: 4,\n        hostBindings: function MatListItemBase_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"disabled\", ctx._isButtonElement && ctx.disabled || null);\n            i0.ɵɵclassProp(\"mdc-list-item--disabled\", ctx.disabled);\n          }\n        },\n        inputs: {\n          lines: \"lines\",\n          disableRipple: \"disableRipple\",\n          disabled: \"disabled\"\n        },\n        standalone: true\n      });\n    }\n  }\n  return MatListItemBase;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Sanity checks the configuration of the list item with respect to the amount\n * of lines, whether there is a title, or if there is unscoped text content.\n *\n * The checks are extracted into a top-level function that can be dead-code\n * eliminated by Terser or other optimizers in production mode.\n */\nfunction sanityCheckListItemContent(item) {\n  const numTitles = item._titles.length;\n  const numLines = item._lines.length;\n  if (numTitles > 1) {\n    console.warn('A list item cannot have multiple titles.');\n  }\n  if (numTitles === 0 && numLines > 0) {\n    console.warn('A list item line can only be used if there is a list item title.');\n  }\n  if (numTitles === 0 && item._hasUnscopedTextContent && item._explicitLines !== null && item._explicitLines > 1) {\n    console.warn('A list item cannot have wrapping content without a title.');\n  }\n  if (numLines > 2 || numLines === 2 && item._hasUnscopedTextContent) {\n    console.warn('A list item can have at maximum three lines.');\n  }\n}\nlet MatActionList = /*#__PURE__*/(() => {\n  class MatActionList extends MatListBase {\n    constructor() {\n      super(...arguments);\n      // An navigation list is considered interactive, but does not extend the interactive list\n      // base class. We do this because as per MDC, items of interactive lists are only reachable\n      // through keyboard shortcuts. We want all items for the navigation list to be reachable\n      // through tab key as we do not intend to provide any special accessibility treatment. The\n      // accessibility treatment depends on how the end-user will interact with it.\n      this._isNonInteractive = false;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatActionList_BaseFactory;\n        return function MatActionList_Factory(__ngFactoryType__) {\n          return (ɵMatActionList_BaseFactory || (ɵMatActionList_BaseFactory = i0.ɵɵgetInheritedFactory(MatActionList)))(__ngFactoryType__ || MatActionList);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatActionList,\n        selectors: [[\"mat-action-list\"]],\n        hostAttrs: [\"role\", \"group\", 1, \"mat-mdc-action-list\", \"mat-mdc-list-base\", \"mdc-list\"],\n        exportAs: [\"matActionList\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MatListBase,\n          useExisting: MatActionList\n        }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 1,\n        vars: 0,\n        template: function MatActionList_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n          }\n        },\n        styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mdc-list-list-item-container-color);border-radius:var(--mdc-list-list-item-container-shape, var(--mat-app-corner-none))}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected::before,.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected:focus::before,.cdk-high-contrast-active .mdc-list-item:not(.mdc-list-item--selected):focus::before{border-color:CanvasText}.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item.mdc-list-item--selected::before{border-width:3px;border-style:double}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font, var(--mat-app-label-small-font));line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height, var(--mat-app-label-small-line-height));font-size:var(--mdc-list-list-item-trailing-supporting-text-size, var(--mat-app-label-small-size));font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight, var(--mat-app-label-small-weight));letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking, var(--mat-app-label-small-tracking))}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color, var(--mat-app-on-surface-variant))}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color, var(--mat-app-primary))}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mdc-list-list-item-label-text-color, var(--mat-app-on-surface));font-family:var(--mdc-list-list-item-label-text-font, var(--mat-app-body-large-font));line-height:var(--mdc-list-list-item-label-text-line-height, var(--mat-app-body-large-line-height));font-size:var(--mdc-list-list-item-label-text-size, var(--mat-app-body-large-size));font-weight:var(--mdc-list-list-item-label-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mdc-list-list-item-label-text-tracking, var(--mat-app-body-large-tracking))}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color, var(--mat-app-on-surface))}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mdc-list-list-item-supporting-text-color, var(--mat-app-on-surface-variant));font-family:var(--mdc-list-list-item-supporting-text-font, var(--mat-app-body-medium-font));line-height:var(--mdc-list-list-item-supporting-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mdc-list-list-item-supporting-text-size, var(--mat-app-body-medium-size));font-weight:var(--mdc-list-list-item-supporting-text-weight, var(--mat-app-body-medium-weight));letter-spacing:var(--mdc-list-list-item-supporting-text-tracking, var(--mat-app-body-medium-tracking))}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape, var(--mat-app-corner-full));background-color:var(--mdc-list-list-item-leading-avatar-color, var(--mat-app-primary-container))}.mat-mdc-list-item-icon{font-size:var(--mdc-list-list-item-leading-icon-size)}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full));--mat-mdc-focus-indicator-border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full))}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color, var(--mat-app-secondary-container))}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatActionList;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to inject instances of `MatList`. It serves as\n * alternative token to the actual `MatList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_LIST = /*#__PURE__*/new InjectionToken('MatList');\nlet MatList = /*#__PURE__*/(() => {\n  class MatList extends MatListBase {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatList_BaseFactory;\n        return function MatList_Factory(__ngFactoryType__) {\n          return (ɵMatList_BaseFactory || (ɵMatList_BaseFactory = i0.ɵɵgetInheritedFactory(MatList)))(__ngFactoryType__ || MatList);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatList,\n        selectors: [[\"mat-list\"]],\n        hostAttrs: [1, \"mat-mdc-list\", \"mat-mdc-list-base\", \"mdc-list\"],\n        exportAs: [\"matList\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MatListBase,\n          useExisting: MatList\n        }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 1,\n        vars: 0,\n        template: function MatList_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n          }\n        },\n        styles: [_c1],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatList;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatListItem = /*#__PURE__*/(() => {\n  class MatListItem extends MatListItemBase {\n    /** Indicates whether an item in a `<mat-nav-list>` is the currently active page. */\n    get activated() {\n      return this._activated;\n    }\n    set activated(activated) {\n      this._activated = coerceBooleanProperty(activated);\n    }\n    constructor(element, ngZone, listBase, platform, globalRippleOptions, animationMode) {\n      super(element, ngZone, listBase, platform, globalRippleOptions, animationMode);\n      this._activated = false;\n    }\n    /**\n     * Determine the value of `aria-current`. Return 'page' if this item is an activated anchor tag.\n     * Otherwise, return `null`. This method is safe to use with server-side rendering.\n     */\n    _getAriaCurrent() {\n      return this._hostElement.nodeName === 'A' && this._activated ? 'page' : null;\n    }\n    _hasBothLeadingAndTrailing() {\n      return this._meta.length !== 0 && (this._avatars.length !== 0 || this._icons.length !== 0);\n    }\n    static {\n      this.ɵfac = function MatListItem_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatListItem)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(MatListBase, 8), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatListItem,\n        selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]],\n        contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatListItemLine, 5);\n            i0.ɵɵcontentQuery(dirIndex, MatListItemTitle, 5);\n            i0.ɵɵcontentQuery(dirIndex, MatListItemMeta, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._lines = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._titles = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._meta = _t);\n          }\n        },\n        viewQuery: function MatListItem_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c2, 5);\n            i0.ɵɵviewQuery(_c3, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._unscopedContent = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._itemText = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-list-item\", \"mdc-list-item\"],\n        hostVars: 13,\n        hostBindings: function MatListItem_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-current\", ctx._getAriaCurrent());\n            i0.ɵɵclassProp(\"mdc-list-item--activated\", ctx.activated)(\"mdc-list-item--with-leading-avatar\", ctx._avatars.length !== 0)(\"mdc-list-item--with-leading-icon\", ctx._icons.length !== 0)(\"mdc-list-item--with-trailing-meta\", ctx._meta.length !== 0)(\"mat-mdc-list-item-both-leading-and-trailing\", ctx._hasBothLeadingAndTrailing())(\"_mat-animation-noopable\", ctx._noopAnimations);\n          }\n        },\n        inputs: {\n          activated: \"activated\"\n        },\n        exportAs: [\"matListItem\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c5,\n        decls: 10,\n        vars: 0,\n        consts: [[\"unscopedContent\", \"\"], [1, \"mdc-list-item__content\"], [1, \"mat-mdc-list-item-unscoped-content\", 3, \"cdkObserveContent\"], [1, \"mat-mdc-focus-indicator\"]],\n        template: function MatListItem_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef(_c4);\n            i0.ɵɵprojection(0);\n            i0.ɵɵelementStart(1, \"span\", 1);\n            i0.ɵɵprojection(2, 1);\n            i0.ɵɵprojection(3, 2);\n            i0.ɵɵelementStart(4, \"span\", 2, 0);\n            i0.ɵɵlistener(\"cdkObserveContent\", function MatListItem_Template_span_cdkObserveContent_4_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._updateItemLines(true));\n            });\n            i0.ɵɵprojection(6, 3);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵprojection(7, 4);\n            i0.ɵɵprojection(8, 5);\n            i0.ɵɵelement(9, \"div\", 3);\n          }\n        },\n        dependencies: [CdkObserveContent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatListItem;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of an `SelectionList`. It serves\n * as alternative token to an actual implementation which would result in circular references.\n * @docs-private\n */\nconst SELECTION_LIST = /*#__PURE__*/new InjectionToken('SelectionList');\nlet MatListOption = /*#__PURE__*/(() => {\n  class MatListOption extends MatListItemBase {\n    /**\n     * Whether the label should appear before or after the checkbox/radio. Defaults to 'after'\n     *\n     * @deprecated Use `togglePosition` instead.\n     * @breaking-change 17.0.0\n     */\n    get checkboxPosition() {\n      return this.togglePosition;\n    }\n    set checkboxPosition(value) {\n      this.togglePosition = value;\n    }\n    /**\n     * Theme color of the list option. This sets the color of the checkbox/radio.\n     * This API is supported in M2 themes only, it has no effect in M3 themes.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/theming#using-component-color-variants.\n     */\n    get color() {\n      return this._color || this._selectionList.color;\n    }\n    set color(newValue) {\n      this._color = newValue;\n    }\n    /** Value of the option */\n    get value() {\n      return this._value;\n    }\n    set value(newValue) {\n      if (this.selected && newValue !== this.value && this._inputsInitialized) {\n        this.selected = false;\n      }\n      this._value = newValue;\n    }\n    /** Whether the option is selected. */\n    get selected() {\n      return this._selectionList.selectedOptions.isSelected(this);\n    }\n    set selected(value) {\n      const isSelected = coerceBooleanProperty(value);\n      if (isSelected !== this._selected) {\n        this._setSelected(isSelected);\n        if (isSelected || this._selectionList.multiple) {\n          this._selectionList._reportValueChange();\n        }\n      }\n    }\n    constructor(elementRef, ngZone, _selectionList, platform, _changeDetectorRef, globalRippleOptions, animationMode) {\n      super(elementRef, ngZone, _selectionList, platform, globalRippleOptions, animationMode);\n      this._selectionList = _selectionList;\n      this._changeDetectorRef = _changeDetectorRef;\n      /**\n       * Emits when the selected state of the option has changed.\n       * Use to facilitate two-data binding to the `selected` property.\n       * @docs-private\n       */\n      this.selectedChange = new EventEmitter();\n      /** Whether the label should appear before or after the checkbox/radio. Defaults to 'after' */\n      this.togglePosition = 'after';\n      this._selected = false;\n      /**\n       * This is set to true after the first OnChanges cycle so we don't\n       * clear the value of `selected` in the first cycle.\n       */\n      this._inputsInitialized = false;\n    }\n    ngOnInit() {\n      const list = this._selectionList;\n      if (list._value && list._value.some(value => list.compareWith(this._value, value))) {\n        this._setSelected(true);\n      }\n      const wasSelected = this._selected;\n      // List options that are selected at initialization can't be reported properly to the form\n      // control. This is because it takes some time until the selection-list knows about all\n      // available options. Also it can happen that the ControlValueAccessor has an initial value\n      // that should be used instead. Deferring the value change report to the next tick ensures\n      // that the form control value is not being overwritten.\n      Promise.resolve().then(() => {\n        if (this._selected || wasSelected) {\n          this.selected = true;\n          this._changeDetectorRef.markForCheck();\n        }\n      });\n      this._inputsInitialized = true;\n    }\n    ngOnDestroy() {\n      super.ngOnDestroy();\n      if (this.selected) {\n        // We have to delay this until the next tick in order\n        // to avoid changed after checked errors.\n        Promise.resolve().then(() => {\n          this.selected = false;\n        });\n      }\n    }\n    /** Toggles the selection state of the option. */\n    toggle() {\n      this.selected = !this.selected;\n    }\n    /** Allows for programmatic focusing of the option. */\n    focus() {\n      this._hostElement.focus();\n    }\n    /** Gets the text label of the list option. Used for the typeahead functionality in the list. */\n    getLabel() {\n      const titleElement = this._titles?.get(0)?._elementRef.nativeElement;\n      // If there is no explicit title element, the unscoped text content\n      // is treated as the list item title.\n      const labelEl = titleElement || this._unscopedContent?.nativeElement;\n      return labelEl?.textContent || '';\n    }\n    /** Whether a checkbox is shown at the given position. */\n    _hasCheckboxAt(position) {\n      return this._selectionList.multiple && this._getTogglePosition() === position;\n    }\n    /** Where a radio indicator is shown at the given position. */\n    _hasRadioAt(position) {\n      return !this._selectionList.multiple && this._getTogglePosition() === position && !this._selectionList.hideSingleSelectionIndicator;\n    }\n    /** Whether icons or avatars are shown at the given position. */\n    _hasIconsOrAvatarsAt(position) {\n      return this._hasProjected('icons', position) || this._hasProjected('avatars', position);\n    }\n    /** Gets whether the given type of element is projected at the specified position. */\n    _hasProjected(type, position) {\n      // If the checkbox/radio is shown at the specified position, neither icons or\n      // avatars can be shown at the position.\n      return this._getTogglePosition() !== position && (type === 'avatars' ? this._avatars.length !== 0 : this._icons.length !== 0);\n    }\n    _handleBlur() {\n      this._selectionList._onTouched();\n    }\n    /** Gets the current position of the checkbox/radio. */\n    _getTogglePosition() {\n      return this.togglePosition || 'after';\n    }\n    /**\n     * Sets the selected state of the option.\n     * @returns Whether the value has changed.\n     */\n    _setSelected(selected) {\n      if (selected === this._selected) {\n        return false;\n      }\n      this._selected = selected;\n      if (selected) {\n        this._selectionList.selectedOptions.select(this);\n      } else {\n        this._selectionList.selectedOptions.deselect(this);\n      }\n      this.selectedChange.emit(selected);\n      this._changeDetectorRef.markForCheck();\n      return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run.\n     * Mainly used to trigger an update of the list option if the disabled state of the selection\n     * list changed.\n     */\n    _markForCheck() {\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Toggles the option's value based on a user interaction. */\n    _toggleOnInteraction() {\n      if (!this.disabled) {\n        if (this._selectionList.multiple) {\n          this.selected = !this.selected;\n          this._selectionList._emitChangeEvent([this]);\n        } else if (!this.selected) {\n          this.selected = true;\n          this._selectionList._emitChangeEvent([this]);\n        }\n      }\n    }\n    /** Sets the tabindex of the list option. */\n    _setTabindex(value) {\n      this._hostElement.setAttribute('tabindex', value + '');\n    }\n    _hasBothLeadingAndTrailing() {\n      const hasLeading = this._hasProjected('avatars', 'before') || this._hasProjected('icons', 'before') || this._hasCheckboxAt('before') || this._hasRadioAt('before');\n      const hasTrailing = this._hasProjected('icons', 'after') || this._hasProjected('avatars', 'after') || this._hasCheckboxAt('after') || this._hasRadioAt('after');\n      return hasLeading && hasTrailing;\n    }\n    static {\n      this.ɵfac = function MatListOption_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatListOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(SELECTION_LIST), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatListOption,\n        selectors: [[\"mat-list-option\"]],\n        contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatListItemLine, 5);\n            i0.ɵɵcontentQuery(dirIndex, MatListItemTitle, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._lines = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._titles = _t);\n          }\n        },\n        viewQuery: function MatListOption_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c2, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._unscopedContent = _t.first);\n          }\n        },\n        hostAttrs: [\"role\", \"option\", 1, \"mat-mdc-list-item\", \"mat-mdc-list-option\", \"mdc-list-item\"],\n        hostVars: 27,\n        hostBindings: function MatListOption_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"blur\", function MatListOption_blur_HostBindingHandler() {\n              return ctx._handleBlur();\n            })(\"click\", function MatListOption_click_HostBindingHandler() {\n              return ctx._toggleOnInteraction();\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-selected\", ctx.selected);\n            i0.ɵɵclassProp(\"mdc-list-item--selected\", ctx.selected && !ctx._selectionList.multiple && ctx._selectionList.hideSingleSelectionIndicator)(\"mdc-list-item--with-leading-avatar\", ctx._hasProjected(\"avatars\", \"before\"))(\"mdc-list-item--with-leading-icon\", ctx._hasProjected(\"icons\", \"before\"))(\"mdc-list-item--with-trailing-icon\", ctx._hasProjected(\"icons\", \"after\"))(\"mat-mdc-list-option-with-trailing-avatar\", ctx._hasProjected(\"avatars\", \"after\"))(\"mdc-list-item--with-leading-checkbox\", ctx._hasCheckboxAt(\"before\"))(\"mdc-list-item--with-trailing-checkbox\", ctx._hasCheckboxAt(\"after\"))(\"mdc-list-item--with-leading-radio\", ctx._hasRadioAt(\"before\"))(\"mdc-list-item--with-trailing-radio\", ctx._hasRadioAt(\"after\"))(\"mat-mdc-list-item-both-leading-and-trailing\", ctx._hasBothLeadingAndTrailing())(\"mat-accent\", ctx.color !== \"primary\" && ctx.color !== \"warn\")(\"mat-warn\", ctx.color === \"warn\")(\"_mat-animation-noopable\", ctx._noopAnimations);\n          }\n        },\n        inputs: {\n          togglePosition: \"togglePosition\",\n          checkboxPosition: \"checkboxPosition\",\n          color: \"color\",\n          value: \"value\",\n          selected: \"selected\"\n        },\n        outputs: {\n          selectedChange: \"selectedChange\"\n        },\n        exportAs: [\"matListOption\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MatListItemBase,\n          useExisting: MatListOption\n        }, {\n          provide: LIST_OPTION,\n          useExisting: MatListOption\n        }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c7,\n        decls: 20,\n        vars: 4,\n        consts: [[\"icons\", \"\"], [\"checkbox\", \"\"], [\"radio\", \"\"], [\"unscopedContent\", \"\"], [1, \"mdc-list-item__start\", \"mat-mdc-list-option-checkbox-before\"], [1, \"mdc-list-item__start\", \"mat-mdc-list-option-radio-before\"], [3, \"ngTemplateOutlet\"], [1, \"mdc-list-item__content\"], [1, \"mat-mdc-list-item-unscoped-content\", 3, \"cdkObserveContent\"], [1, \"mdc-list-item__end\"], [1, \"mat-mdc-focus-indicator\"], [1, \"mdc-checkbox\"], [\"type\", \"checkbox\", 1, \"mdc-checkbox__native-control\", 3, \"checked\", \"disabled\"], [1, \"mdc-checkbox__background\"], [\"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-checkbox__checkmark\"], [\"fill\", \"none\", \"d\", \"M1.73,12.91 8.1,19.28 22.79,4.59\", 1, \"mdc-checkbox__checkmark-path\"], [1, \"mdc-checkbox__mixedmark\"], [1, \"mdc-radio\"], [\"type\", \"radio\", 1, \"mdc-radio__native-control\", 3, \"checked\", \"disabled\"], [1, \"mdc-radio__background\"], [1, \"mdc-radio__outer-circle\"], [1, \"mdc-radio__inner-circle\"]],\n        template: function MatListOption_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef(_c6);\n            i0.ɵɵtemplate(0, MatListOption_ng_template_0_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(2, MatListOption_ng_template_2_Template, 6, 4, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor)(4, MatListOption_ng_template_4_Template, 5, 4, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor)(6, MatListOption_Conditional_6_Template, 2, 1, \"span\", 4)(7, MatListOption_Conditional_7_Template, 2, 1, \"span\", 5)(8, MatListOption_Conditional_8_Template, 1, 1, null, 6);\n            i0.ɵɵelementStart(9, \"span\", 7);\n            i0.ɵɵprojection(10);\n            i0.ɵɵprojection(11, 1);\n            i0.ɵɵelementStart(12, \"span\", 8, 3);\n            i0.ɵɵlistener(\"cdkObserveContent\", function MatListOption_Template_span_cdkObserveContent_12_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._updateItemLines(true));\n            });\n            i0.ɵɵprojection(14, 2);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(15, MatListOption_Conditional_15_Template, 2, 1, \"span\", 9)(16, MatListOption_Conditional_16_Template, 2, 1, \"span\", 9)(17, MatListOption_Conditional_17_Template, 1, 1, null, 6);\n            i0.ɵɵprojection(18, 3);\n            i0.ɵɵelement(19, \"div\", 10);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(6);\n            i0.ɵɵconditional(ctx._hasCheckboxAt(\"before\") ? 6 : ctx._hasRadioAt(\"before\") ? 7 : -1);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(ctx._hasIconsOrAvatarsAt(\"before\") ? 8 : -1);\n            i0.ɵɵadvance(7);\n            i0.ɵɵconditional(ctx._hasCheckboxAt(\"after\") ? 15 : ctx._hasRadioAt(\"after\") ? 16 : -1);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(ctx._hasIconsOrAvatarsAt(\"after\") ? 17 : -1);\n          }\n        },\n        dependencies: [NgTemplateOutlet, CdkObserveContent],\n        styles: [\".mat-mdc-list-option-with-trailing-avatar.mdc-list-item,[dir=rtl] .mat-mdc-list-option-with-trailing-avatar.mdc-list-item{padding-left:0;padding-right:0}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{margin-left:16px;margin-right:16px;width:40px;height:40px}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{border-radius:50%}.mat-mdc-list-option .mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mat-mdc-list-option .mdc-checkbox--disabled{cursor:default;pointer-events:none}.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox--disabled{opacity:.5}.mat-mdc-list-option .mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mdc-checkbox-unselected-icon-color, var(--mat-app-on-surface-variant));top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mat-mdc-list-option .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary))}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mat-mdc-list-option .mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mat-app-on-surface));background-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary))}.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mat-app-on-surface))}.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary))}.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover .mdc-checkbox__native-control~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox__checkmark{color:CanvasText}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__checkmark,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__checkmark,.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}.mat-mdc-list-option .mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mat-mdc-list-option .mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox__mixedmark{margin:0 1px}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-list-option._mat-animation-noopable .mdc-checkbox *,.mat-mdc-list-option._mat-animation-noopable .mdc-checkbox *::before{transition:none !important;animation:none !important}.mat-mdc-list-option .mdc-radio{display:inline-block;position:relative;flex:0 0 auto;box-sizing:content-box;width:20px;height:20px;cursor:pointer;will-change:opacity,transform,border-color,color;padding:calc((var(--mdc-radio-state-layer-size) - 20px)/2)}.mat-mdc-list-option .mdc-radio__background{display:inline-block;position:relative;box-sizing:border-box;width:20px;height:20px}.mat-mdc-list-option .mdc-radio__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:\\\"\\\";transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size);top:calc(-1*(var(--mdc-radio-state-layer-size) - 20px)/2);left:calc(-1*(var(--mdc-radio-state-layer-size) - 20px)/2)}.mat-mdc-list-option .mdc-radio__outer-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;border-width:2px;border-style:solid;border-radius:50%;transition:border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-radio__inner-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;transform:scale(0, 0);border-width:10px;border-style:solid;border-radius:50%;transition:transform 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-radio__native-control{position:absolute;margin:0;padding:0;opacity:0;top:0;right:0;left:0;cursor:inherit;z-index:1;width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background{transition:opacity 90ms cubic-bezier(0, 0, 0.2, 1),transform 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-unselected-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-radio-disabled-unselected-icon-opacity)}.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background{cursor:default}.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-selected-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-radio-disabled-selected-icon-opacity)}.mat-mdc-list-option .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-list-option .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-list-option .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-icon-color, var(--mat-app-primary))}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle{transform:scale(0.5);transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option._mat-animation-noopable .mdc-radio__background::before,.mat-mdc-list-option._mat-animation-noopable .mdc-radio__outer-circle,.mat-mdc-list-option._mat-animation-noopable .mdc-radio__inner-circle{transition:none !important}.mat-mdc-list-option .mdc-checkbox__native-control,.mat-mdc-list-option .mdc-radio__native-control{display:none}.cdk-high-contrast-active .mat-mdc-list-option.mdc-list-item--selected::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active .mat-mdc-list-option.mdc-list-item--selected [dir=rtl]::after{right:auto;left:16px}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatListOption;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nlet MatListSubheaderCssMatStyler = /*#__PURE__*/(() => {\n  class MatListSubheaderCssMatStyler {\n    static {\n      this.ɵfac = function MatListSubheaderCssMatStyler_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatListSubheaderCssMatStyler)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatListSubheaderCssMatStyler,\n        selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-subheader\", \"mdc-list-group__subheader\"],\n        standalone: true\n      });\n    }\n  }\n  return MatListSubheaderCssMatStyler;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to inject instances of `MatNavList`. It serves as\n * alternative token to the actual `MatNavList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_NAV_LIST = /*#__PURE__*/new InjectionToken('MatNavList');\nlet MatNavList = /*#__PURE__*/(() => {\n  class MatNavList extends MatListBase {\n    constructor() {\n      super(...arguments);\n      // An navigation list is considered interactive, but does not extend the interactive list\n      // base class. We do this because as per MDC, items of interactive lists are only reachable\n      // through keyboard shortcuts. We want all items for the navigation list to be reachable\n      // through tab key as we do not intend to provide any special accessibility treatment. The\n      // accessibility treatment depends on how the end-user will interact with it.\n      this._isNonInteractive = false;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatNavList_BaseFactory;\n        return function MatNavList_Factory(__ngFactoryType__) {\n          return (ɵMatNavList_BaseFactory || (ɵMatNavList_BaseFactory = i0.ɵɵgetInheritedFactory(MatNavList)))(__ngFactoryType__ || MatNavList);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatNavList,\n        selectors: [[\"mat-nav-list\"]],\n        hostAttrs: [\"role\", \"navigation\", 1, \"mat-mdc-nav-list\", \"mat-mdc-list-base\", \"mdc-list\"],\n        exportAs: [\"matNavList\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MatListBase,\n          useExisting: MatNavList\n        }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 1,\n        vars: 0,\n        template: function MatNavList_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n          }\n        },\n        styles: [_c1],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatNavList;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatSelectionList),\n  multi: true\n};\n/** Change event that is being fired whenever the selected state of an option changes. */\nclass MatSelectionListChange {\n  constructor( /** Reference to the selection list that emitted the event. */\n  source, /** Reference to the options that have been changed. */\n  options) {\n    this.source = source;\n    this.options = options;\n  }\n}\nlet MatSelectionList = /*#__PURE__*/(() => {\n  class MatSelectionList extends MatListBase {\n    /** Whether selection is limited to one or multiple items (default multiple). */\n    get multiple() {\n      return this._multiple;\n    }\n    set multiple(value) {\n      const newValue = coerceBooleanProperty(value);\n      if (newValue !== this._multiple) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && this._initialized) {\n          throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n        }\n        this._multiple = newValue;\n        this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n      }\n    }\n    /** Whether radio indicator for all list items is hidden. */\n    get hideSingleSelectionIndicator() {\n      return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n      this._hideSingleSelectionIndicator = coerceBooleanProperty(value);\n    }\n    constructor(_element, _ngZone) {\n      super();\n      this._element = _element;\n      this._ngZone = _ngZone;\n      this._initialized = false;\n      /** Emits when the list has been destroyed. */\n      this._destroyed = new Subject();\n      /** View to model callback that should be called whenever the selected options change. */\n      this._onChange = _ => {};\n      /** Emits a change event whenever the selected state of an option changes. */\n      this.selectionChange = new EventEmitter();\n      /**\n       * Theme color of the selection list. This sets the checkbox color for all\n       * list options. This API is supported in M2 themes only, it has no effect in\n       * M3 themes.\n       *\n       * For information on applying color variants in M3, see\n       * https://material.angular.io/guide/theming#using-component-color-variants.\n       */\n      this.color = 'accent';\n      /**\n       * Function used for comparing an option against the selected value when determining which\n       * options should appear as selected. The first argument is the value of an options. The second\n       * one is a value from the selected value. A boolean must be returned.\n       */\n      this.compareWith = (a1, a2) => a1 === a2;\n      this._multiple = true;\n      this._hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n      /** The currently selected options. */\n      this.selectedOptions = new SelectionModel(this._multiple);\n      /** View to model callback that should be called if the list or its options lost focus. */\n      this._onTouched = () => {};\n      this._changeDetectorRef = inject(ChangeDetectorRef);\n      this._selectionListDisabled = false;\n      /** Handles focusout events within the list. */\n      this._handleFocusout = () => {\n        // Focus takes a while to update so we have to wrap our call in a timeout.\n        setTimeout(() => {\n          if (!this._containsFocus()) {\n            this._resetActiveOption();\n          }\n        });\n      };\n      /** Handles focusin events within the list. */\n      this._handleFocusin = event => {\n        if (this.disabled) {\n          return;\n        }\n        const activeIndex = this._items.toArray().findIndex(item => item._elementRef.nativeElement.contains(event.target));\n        if (activeIndex > -1) {\n          this._setActiveOption(activeIndex);\n        } else {\n          this._resetActiveOption();\n        }\n      };\n      this._isNonInteractive = false;\n    }\n    ngAfterViewInit() {\n      // Mark the selection list as initialized so that the `multiple`\n      // binding can no longer be changed.\n      this._initialized = true;\n      this._setupRovingTabindex();\n      // These events are bound outside the zone, because they don't change\n      // any change-detected properties and they can trigger timeouts.\n      this._ngZone.runOutsideAngular(() => {\n        this._element.nativeElement.addEventListener('focusin', this._handleFocusin);\n        this._element.nativeElement.addEventListener('focusout', this._handleFocusout);\n      });\n      if (this._value) {\n        this._setOptionsFromValues(this._value);\n      }\n      this._watchForSelectionChange();\n    }\n    ngOnChanges(changes) {\n      const disabledChanges = changes['disabled'];\n      const disableRippleChanges = changes['disableRipple'];\n      const hideSingleSelectionIndicatorChanges = changes['hideSingleSelectionIndicator'];\n      if (disableRippleChanges && !disableRippleChanges.firstChange || disabledChanges && !disabledChanges.firstChange || hideSingleSelectionIndicatorChanges && !hideSingleSelectionIndicatorChanges.firstChange) {\n        this._markOptionsForCheck();\n      }\n    }\n    ngOnDestroy() {\n      this._keyManager?.destroy();\n      this._element.nativeElement.removeEventListener('focusin', this._handleFocusin);\n      this._element.nativeElement.removeEventListener('focusout', this._handleFocusout);\n      this._destroyed.next();\n      this._destroyed.complete();\n      this._isDestroyed = true;\n    }\n    /** Focuses the selection list. */\n    focus(options) {\n      this._element.nativeElement.focus(options);\n    }\n    /** Selects all of the options. Returns the options that changed as a result. */\n    selectAll() {\n      return this._setAllOptionsSelected(true);\n    }\n    /** Deselects all of the options. Returns the options that changed as a result. */\n    deselectAll() {\n      return this._setAllOptionsSelected(false);\n    }\n    /** Reports a value change to the ControlValueAccessor */\n    _reportValueChange() {\n      // Stop reporting value changes after the list has been destroyed. This avoids\n      // cases where the list might wrongly reset its value once it is removed, but\n      // the form control is still live.\n      if (this.options && !this._isDestroyed) {\n        const value = this._getSelectedOptionValues();\n        this._onChange(value);\n        this._value = value;\n      }\n    }\n    /** Emits a change event if the selected state of an option changed. */\n    _emitChangeEvent(options) {\n      this.selectionChange.emit(new MatSelectionListChange(this, options));\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(values) {\n      this._value = values;\n      if (this.options) {\n        this._setOptionsFromValues(values || []);\n      }\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether the *entire* selection list is disabled. When true, each list item is also disabled\n     * and each list item is removed from the tab order (has tabindex=\"-1\").\n     */\n    get disabled() {\n      return this._selectionListDisabled;\n    }\n    set disabled(value) {\n      // Update the disabled state of this list. Write to `this._selectionListDisabled` instead of\n      // `super.disabled`. That is to avoid closure compiler compatibility issues with assigning to\n      // a super property.\n      this._selectionListDisabled = coerceBooleanProperty(value);\n      if (this._selectionListDisabled) {\n        this._keyManager?.setActiveItem(-1);\n      }\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n      this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    /** Watches for changes in the selected state of the options and updates the list accordingly. */\n    _watchForSelectionChange() {\n      this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe(event => {\n        // Sync external changes to the model back to the options.\n        for (let item of event.added) {\n          item.selected = true;\n        }\n        for (let item of event.removed) {\n          item.selected = false;\n        }\n        if (!this._containsFocus()) {\n          this._resetActiveOption();\n        }\n      });\n    }\n    /** Sets the selected options based on the specified values. */\n    _setOptionsFromValues(values) {\n      this.options.forEach(option => option._setSelected(false));\n      values.forEach(value => {\n        const correspondingOption = this.options.find(option => {\n          // Skip options that are already in the model. This allows us to handle cases\n          // where the same primitive value is selected multiple times.\n          return option.selected ? false : this.compareWith(option.value, value);\n        });\n        if (correspondingOption) {\n          correspondingOption._setSelected(true);\n        }\n      });\n    }\n    /** Returns the values of the selected options. */\n    _getSelectedOptionValues() {\n      return this.options.filter(option => option.selected).map(option => option.value);\n    }\n    /** Marks all the options to be checked in the next change detection run. */\n    _markOptionsForCheck() {\n      if (this.options) {\n        this.options.forEach(option => option._markForCheck());\n      }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled) {\n      // Keep track of whether anything changed, because we only want to\n      // emit the changed event when something actually changed.\n      const changedOptions = [];\n      this.options.forEach(option => {\n        if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n          changedOptions.push(option);\n        }\n      });\n      if (changedOptions.length) {\n        this._reportValueChange();\n      }\n      return changedOptions;\n    }\n    // Note: This getter exists for backwards compatibility. The `_items` query list\n    // cannot be named `options` as it will be picked up by the interactive list base.\n    /** The option components contained within this selection-list. */\n    get options() {\n      return this._items;\n    }\n    /** Handles keydown events within the list. */\n    _handleKeydown(event) {\n      const activeItem = this._keyManager.activeItem;\n      if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this._keyManager.isTyping() && activeItem && !activeItem.disabled) {\n        event.preventDefault();\n        activeItem._toggleOnInteraction();\n      } else if (event.keyCode === A && this.multiple && !this._keyManager.isTyping() && hasModifierKey(event, 'ctrlKey')) {\n        const shouldSelect = this.options.some(option => !option.disabled && !option.selected);\n        event.preventDefault();\n        this._emitChangeEvent(this._setAllOptionsSelected(shouldSelect, true));\n      } else {\n        this._keyManager.onKeydown(event);\n      }\n    }\n    /**\n     * Sets up the logic for maintaining the roving tabindex.\n     *\n     * `skipPredicate` determines if key manager should avoid putting a given list item in the tab\n     * index. Allow disabled list items to receive focus to align with WAI ARIA recommendation.\n     * Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n     * makes a few exceptions for compound widgets.\n     *\n     * From [Developing a Keyboard Interface](\n     * https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n     *   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n     *   Listbox...\"\n     */\n    _setupRovingTabindex() {\n      this._keyManager = new FocusKeyManager(this._items).withHomeAndEnd().withTypeAhead().withWrap().skipPredicate(() => this.disabled);\n      // Set the initial focus.\n      this._resetActiveOption();\n      // Move the tabindex to the currently-focused list item.\n      this._keyManager.change.subscribe(activeItemIndex => this._setActiveOption(activeItemIndex));\n      // If the active item is removed from the list, reset back to the first one.\n      this._items.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        const activeItem = this._keyManager.activeItem;\n        if (!activeItem || this._items.toArray().indexOf(activeItem) === -1) {\n          this._resetActiveOption();\n        }\n      });\n    }\n    /**\n     * Sets an option as active.\n     * @param index Index of the active option. If set to -1, no option will be active.\n     */\n    _setActiveOption(index) {\n      this._items.forEach((item, itemIndex) => item._setTabindex(itemIndex === index ? 0 : -1));\n      this._keyManager.updateActiveItem(index);\n    }\n    /**\n     * Resets the active option. When the list is disabled, remove all options from to the tab order.\n     * Otherwise, focus the first selected option.\n     */\n    _resetActiveOption() {\n      if (this.disabled) {\n        this._setActiveOption(-1);\n        return;\n      }\n      const activeItem = this._items.find(item => item.selected && !item.disabled) || this._items.first;\n      this._setActiveOption(activeItem ? this._items.toArray().indexOf(activeItem) : -1);\n    }\n    /** Returns whether the focus is currently within the list. */\n    _containsFocus() {\n      const activeElement = _getFocusedElementPierceShadowDom();\n      return activeElement && this._element.nativeElement.contains(activeElement);\n    }\n    static {\n      this.ɵfac = function MatSelectionList_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatSelectionList)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatSelectionList,\n        selectors: [[\"mat-selection-list\"]],\n        contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatListOption, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n          }\n        },\n        hostAttrs: [\"role\", \"listbox\", 1, \"mat-mdc-selection-list\", \"mat-mdc-list-base\", \"mdc-list\"],\n        hostVars: 1,\n        hostBindings: function MatSelectionList_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) {\n              return ctx._handleKeydown($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-multiselectable\", ctx.multiple);\n          }\n        },\n        inputs: {\n          color: \"color\",\n          compareWith: \"compareWith\",\n          multiple: \"multiple\",\n          hideSingleSelectionIndicator: \"hideSingleSelectionIndicator\",\n          disabled: \"disabled\"\n        },\n        outputs: {\n          selectionChange: \"selectionChange\"\n        },\n        exportAs: [\"matSelectionList\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR, {\n          provide: MatListBase,\n          useExisting: MatSelectionList\n        }, {\n          provide: SELECTION_LIST,\n          useExisting: MatSelectionList\n        }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 1,\n        vars: 0,\n        template: function MatSelectionList_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n          }\n        },\n        styles: [_c1],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatSelectionList;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatListModule = /*#__PURE__*/(() => {\n  class MatListModule {\n    static {\n      this.ɵfac = function MatListModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatListModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatListModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ObserversModule, CommonModule, MatCommonModule, MatRippleModule, MatPseudoCheckboxModule, MatDividerModule]\n      });\n    }\n  }\n  return MatListModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LIST, MAT_LIST_CONFIG, MAT_NAV_LIST, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatActionList, MatList, MatListItem, MatListItemAvatar, MatListItemIcon, MatListItemLine, MatListItemMeta, MatListItemTitle, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange, SELECTION_LIST, _MatListItemGraphicBase };\n","import { Component, inject, Renderer2, signal, WritableSignal } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { ModalWindowComponent } from '../../framework/modal-window/modal-window.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport nls from '../../framework/resources/nls/accounts';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatListModule } from '@angular/material/list';\nimport { CommonModule } from '@angular/common';\nimport moment from 'moment';\nimport { RightPanelComponent } from \"../../framework/right-panel/right-panel.component\";\nimport { FormComponent } from \"../../framework/form/form.component\";\nimport { FormFields } from '../../framework/form/form.interfaces';\nimport { accountItems, backupDataFormFields, chnagePasswordFields, editProfileFields } from './account.resources';\nimport { ApiService } from '../../services/api.service';\nimport { MessagesService } from '../../services/messages.service';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { AppService } from '../../services/app.service';\n\n@Component({\n  selector: 'app-account',\n  standalone: true,\n  imports: [CommonModule, ModalWindowComponent, MatIconModule, MatButtonModule, MatRippleModule, MatListModule, RightPanelComponent, FormComponent, MatSlideToggleModule],\n  templateUrl: './account.component.html',\n  styleUrl: './account.component.scss'\n})\nexport class AccountComponent {\n\n  private _authService: AuthenticationService = inject(AuthenticationService);\n  private _api: ApiService = inject(ApiService);\n  private _message: MessagesService = inject(MessagesService);\n  private _appService: AppService = inject(AppService);\n  private renderer: Renderer2 = inject(Renderer2);\n\n  window: any;\n  nls = nls;\n  moment = moment;\n  isModalOpen: WritableSignal<boolean> = signal(false);\n  modalType: WritableSignal<string> = signal('');\n  accountItems: WritableSignal<any> = signal(accountItems);\n  modalId: WritableSignal<string> = signal('');\n  modalHeading: WritableSignal<string> = signal('');\n  myProfileData: WritableSignal<any> = signal(null);\n  rightPanelOpen: WritableSignal<boolean> = signal(false);\n  panelId: WritableSignal<string> = signal('');\n  panelHeading: WritableSignal<string> = signal('');\n  changePasswordFields: WritableSignal<FormFields[]> = signal(chnagePasswordFields);\n  editProfileFields: WritableSignal<FormFields[]> = signal(editProfileFields);\n  backupDataFormFields: WritableSignal<FormFields[]> = signal(backupDataFormFields);\n  themeMode: WritableSignal<string> = signal('');\n  isBiometricAvailable: WritableSignal<boolean> = signal(false);\n  isBiometricEnabled: WritableSignal<boolean> = signal(false);\n\n  constructor() {\n    this.window = this._appService.getWindow();\n    this.getMyProfileData();\n    this.getCurrentTheme();\n    this.checkBiometricAvailable();\n    this.checkBiometricEnabled();\n  }\n  async checkBiometricAvailable() {\n    try {\n      await this._authService.isBiometricAvailable();\n      this.isBiometricAvailable.set(true);\n    } catch (error) {\n      this.isBiometricAvailable.set(false);\n    }\n  }\n  checkBiometricEnabled() {\n    let isBiometricEnabled = this.window.localStorage.getItem('isBiometricEnabled');\n    if (isBiometricEnabled === 'enabled') {\n      this.isBiometricEnabled.set(true);\n    } else {\n      this.isBiometricEnabled.set(false);\n    }\n  }\n  getCurrentTheme() {\n    const prefersDark = this.window.matchMedia('(prefers-color-scheme: dark)').matches;\n    const themePreference = this.window.localStorage.getItem('theme-mode');\n\n    if (themePreference) {\n      this.themeMode.set(themePreference);\n    } else if (prefersDark) {\n      this.themeMode.set('dark');\n    } else {\n      this.themeMode.set('light');\n    }\n  }\n  handleFormChange(data: any) {\n\n  }\n  getMyProfileData() {\n    this.myProfileData = this._authService.currentUser;\n  }\n  onClickAccountItem(id: string, disabled = false) {\n    if (disabled) {\n      return;\n    }\n    switch (id) {\n      case 'logout': {\n        this.modalType.set('confirm');\n        this.modalId.set(id);\n        this.modalHeading.set(nls.logout);\n        this.toggleModal(true);\n        break;\n      }\n      case 'view-profile': {\n        this.modalType.set('info');\n        this.modalId.set(id);\n        this.modalHeading.set(nls.EditProfile);\n        this.toggleModal(true);\n        break;\n      }\n      case 'change-password': {\n        this.panelHeading.set(nls.ChangePassword);\n        this.panelId.set(id);\n        this.togglePanel(true);\n        break;\n      }\n      case 'edit-profile': {\n        this.panelHeading.set(nls.EditProfile);\n        this.panelId.set(id);\n        let filledEditProfileField = editProfileFields.map((item: FormFields) => {\n          item.defaultValue = this.myProfileData()[item.name];\n          return item\n        })\n        this.editProfileFields.set(filledEditProfileField)\n\n        this.togglePanel(true);\n        break;\n      }\n      case 'help': {\n        this.modalType.set('info');\n        this.modalId.set(id);\n        this.modalHeading.set(nls.HelpSupport);\n        this.toggleModal(true);\n        break;\n      }\n      case 'about': {\n        this.modalType.set('info');\n        this.modalId.set(id);\n        this.modalHeading.set(nls.About);\n        this.toggleModal(true);\n        break;\n      }\n      case 'reset-account': {\n        this.modalType.set('confirm');\n        this.modalId.set(id);\n        this.modalHeading.set(nls.resetAccount);\n        this.toggleModal(true);\n        break;\n      }\n      case 'backup-data': {\n        this.modalType.set('info');\n        this.modalId.set(id);\n        this.modalHeading.set(nls.backupData);\n        this.toggleModal(true);\n        break;\n      }\n      case 'theme': {\n        this.switchTheme();\n        break;\n      }\n      case 'biometric': {\n        this.switchBiometric();\n        break;\n      }\n    }\n  }\n  switchBiometric() {\n    if (this.isBiometricEnabled()) {\n      this.isBiometricEnabled.set(false);\n      this.window.localStorage.removeItem('isBiometricEnabled');\n    } else {\n      this.isBiometricEnabled.set(true);\n      this.window.localStorage.setItem('isBiometricEnabled', 'enabled');\n    }\n  }\n  getAccountItems(data: any[]): any[] {\n    if (!this.isBiometricAvailable()) {\n      return data.filter((item: any) => {\n        return item.id !== 'biometric'\n      })\n    } else {\n      return data;\n    }\n  }\n  switchTheme() {\n    if (this.themeMode() === 'dark') {\n      this.themeMode.set('light');\n    } else {\n      this.themeMode.set('dark');\n    }\n    this.window.localStorage.setItem('theme-mode', this.themeMode());\n    this.renderer.removeClass(document.body, this.themeMode() === 'dark' ? 'light-theme' : 'dark-theme');\n    this.renderer.addClass(document.body, `${this.themeMode()}-theme`);\n  }\n  async backupData() {\n    this.toggleModal(false);\n    await this._api.backupData();\n  }\n  restorePanelOpen() {\n    this.toggleModal(false);\n    this.panelHeading.set(nls.importMyData);\n    this.panelId.set('backup-data');\n    this.togglePanel(true);\n  }\n  toggleModal(state: boolean) {\n    this.isModalOpen.set(state);\n    if (!state) {\n      this.modalType.set('');\n      this.modalId.set('');\n      this.modalHeading.set('');\n    }\n  }\n  async submitModal(state: boolean) {\n    switch (this.modalId()) {\n      case 'logout': {\n        await this.logout();\n        this.toggleModal(false);\n        break;\n      }\n      case 'reset-account': {\n        await this._api.local_clear();\n        this.toggleModal(false);\n        break;\n      }\n    }\n\n  }\n  togglePanel(state: boolean) {\n    this.rightPanelOpen.set(state);\n    if (!state) {\n      this.panelId.set('');\n      this.panelHeading.set('');\n    }\n  }\n  async submitPanel(data: any): Promise<void> {\n    switch (this.panelId()) {\n      case 'change-password': {\n        let result = await this._api.hit('users/change_password', 'post', data);\n        if (result.success) {\n          this._message.success(result.message);\n          let userPreferences: any = window.localStorage.getItem('userPreferences');\n          userPreferences = userPreferences ? JSON.parse(userPreferences) : null;\n\n          let user = await this._api.local_get('user');\n\n          if (userPreferences && user && userPreferences.email === user.email) {\n            userPreferences.password = data.new_password;\n            window.localStorage.setItem('userPreferences', JSON.stringify(userPreferences));\n          }\n\n          this.togglePanel(false)\n        } else {\n          if (result.name === 'IncorrectPasswordError') {\n            this._message.error(nls.incorrectPassword);\n          }\n          else {\n            this._message.error(result.message);\n          }\n        }\n        break;\n      }\n      case 'edit-profile': {\n        let result = await this._api.hit('users/profile/update', 'put', data);\n        if (result.success) {\n          this._message.success(result.message);\n          let currentUser = await this._api.hit('users/current', 'get');\n          if (currentUser.isAuthenticated) {\n            await this._api.local_post('user', currentUser.user);\n            this.myProfileData.set(currentUser.user)\n          } else {\n            await this._api.local_delete('user');\n            await this._api.local_delete('access');\n          }\n          this.togglePanel(false)\n        } else {\n          this._message.error(result.message);\n        }\n        break;\n      }\n      case 'backup-data': {\n        await this._api.restoreBackupData(data['backup-file']);\n        this.togglePanel(false)\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  private async logout() {\n    await this._authService.logout();\n  }\n\n}\n","<div class=\"row pt-md-3\">\n  <div class=\"col-12 col-md-8 col-lg-6 account py-3\">\n    <div>\n      <div class=\"text-center my-3\">\n        <img src=\"../../../assets/images/avatar.svg\" alt=\"User Avtar\" class=\"avatar\" />\n        <p class=\"h5 my-3\">{{myProfileData().first_name}} {{myProfileData().last_name}}</p>\n      </div>\n      <div class=\"my-3\">\n        <mat-list role=\"list\" class=\"profile-item-list-container mb-2\">\n          <mat-list-item role=\"listitem\" mat-ripple *ngFor=\"let item of getAccountItems(accountItems())\"\n            (click)=\"onClickAccountItem(item.id, item.disabled)\" class=\"profile-item-list\" [disabled]=\"item.disabled\">\n            <div class=\"profile-item-list-label\" *ngIf=\"item.id!=='biometric'\">\n              <span class=\"m-0\">{{item.label}}</span>\n              <span *ngIf=\"item.id==='theme'\"\n                class=\"text-capitalize m-0 d-flex align-items-center gap-2\">{{themeMode()}}<mat-slide-toggle\n                  [checked]=\"themeMode().toLowerCase()==='dark'\" color=\"primary\" /></span>\n            </div>\n            <div class=\"profile-item-list-label\" *ngIf=\"item.id==='biometric' && isBiometricAvailable()\">\n              <span class=\"m-0\">{{item.label}}</span>\n              <span><mat-slide-toggle [checked]=\"isBiometricEnabled()\" color=\"primary\" /></span>\n            </div>\n          </mat-list-item>\n        </mat-list>\n      </div>\n    </div>\n    <button mat-raised-button (click)=\"onClickAccountItem('logout')\" class=\"w-100 py-2\"\n      color=\"accent\">{{nls.logout}}</button>\n  </div>\n</div>\n<app-modal-window [isOpen]=\"isModalOpen()\" (onCancel)=\"toggleModal($event)\" (onSubmit)=\"submitModal($event)\"\n  [modal-heading]=\"modalHeading()\" [type]=\"modalType()\"\n  [showHeader]=\"modalId()==='logout' || modalId()==='view-profile' || modalId()==='reset-account' || modalId()==='backup-data'\">\n  <ng-template>\n    <p *ngIf=\"modalId()==='logout'\">{{nls.logoutText}}</p>\n\n    <p *ngIf=\"modalId()==='reset-account'\">{{nls.resetText}}</p>\n\n    <div *ngIf=\"modalId()==='view-profile'\">\n      <div class=\"profile-detail-item\">\n        <label>{{nls.fname}}</label>\n        <p>{{myProfileData().first_name}}</p>\n      </div>\n      <div class=\"profile-detail-item\">\n        <label>{{nls.lname}}</label>\n        <p>{{myProfileData().last_name}}</p>\n      </div>\n      <div class=\"profile-detail-item\">\n        <label>{{nls.email}}</label>\n        <p>{{myProfileData().email}}</p>\n      </div>\n      <div class=\"profile-detail-item\">\n        <label>{{nls.phone}}</label>\n        <p>{{myProfileData().phone}}</p>\n      </div>\n      <div class=\"profile-detail-item\">\n        <label>{{nls.verified}}?</label>\n        <p [class.small-text]=\"!myProfileData().verified\">{{myProfileData().verified?nls.done:nls.unverified}}</p>\n      </div>\n      <div class=\"profile-detail-item\">\n        <label>{{nls.lastLogin}}</label>\n        <p>{{moment(myProfileData().last_login).format('lll')}}</p>\n      </div>\n      <div class=\"profile-detail-item\">\n        <label>{{nls.memberSince}}</label>\n        <p>{{moment(myProfileData().createdAt).format('lll')}}</p>\n      </div>\n    </div>\n\n    <div *ngIf=\"modalId()==='about'\">\n      <div>\n        <p class=\"h6\">{{nls.aboutApp}}</p>\n        <mat-divider class=\"w-100 mb-2\"></mat-divider>\n        <p>{{nls.aboutText1}}</p>\n      </div>\n\n      <div>\n        <mat-divider class=\"w-100 mb-2\"></mat-divider>\n        <p class=\"h6\">{{nls.appOwnership}}</p>\n        <p>{{nls.aboutText2}} <strong>{{nls.owner}}</strong> {{nls.aboutText3}}</p>\n        <p>{{nls.contactMessage}}</p>\n        <img src=\"../../../assets/images/red-heart.png\" height=\"40px\" width=\"40px\" alt=\"Heart\" />\n      </div>\n      <button class=\"w-100 mt-2\" mat-raised-button (click)=\"toggleModal(false)\">{{nls.okay}}</button>\n    </div>\n\n    <div *ngIf=\"modalId()==='help'\">\n      <div>\n        <p class=\"h6\">{{nls.HelpSupport}}</p>\n        <mat-divider class=\"w-100 mb-2\"></mat-divider>\n        <p>{{nls.supportText1}}</p>\n      </div>\n      <div>\n        <p class=\"m-0\">{{nls.supportEmail}}</p>\n        <p><a [href]=\"'mailto:'+nls.supportEmailValue\">{{nls.supportEmailValue}}</a></p>\n      </div>\n      <button class=\"w-100 mt-2\" mat-raised-button (click)=\"toggleModal(false)\">{{nls.okay}}</button>\n    </div>\n    <div *ngIf=\"modalId()==='backup-data'\">\n      <button class=\"w-100 mt-2\" mat-raised-button (click)=\"backupData()\" color=\"primary\">{{nls.backupMyData}}</button>\n      <button class=\"w-100 mt-2\" mat-raised-button (click)=\"restorePanelOpen()\"\n        color=\"accent\">{{nls.importMyData}}</button>\n      <button class=\"w-100 mt-2\" mat-raised-button (click)=\"toggleModal(false)\">{{nls.cancel}}</button>\n    </div>\n  </ng-template>\n</app-modal-window>\n\n<app-right-panel [isOpen]=\"rightPanelOpen()\" (onCancel)=\"togglePanel($event)\" (onSubmit)=\"submitPanel($event)\"\n  [panel-heading]=\"panelHeading()\" [type]=\"'info'\">\n  <ng-template>\n\n    <app-form *ngIf=\"panelId()==='change-password'\" (on-submit)=\"submitPanel($event)\"\n      [form-fields]=\"changePasswordFields()\" [submit-button-title]=\"nls.save\" [cancel-button-title]=\"nls.cancel\"\n      (on-cancel)=\"togglePanel($event)\" (on-change)=\"handleFormChange($event)\"></app-form>\n    <app-form *ngIf=\"panelId()==='edit-profile'\" (on-submit)=\"submitPanel($event)\" [form-fields]=\"editProfileFields()\"\n      [submit-button-title]=\"nls.save\" [cancel-button-title]=\"nls.cancel\" (on-cancel)=\"togglePanel($event)\"\n      (on-change)=\"handleFormChange($event)\"></app-form>\n    <app-form *ngIf=\"panelId()==='backup-data'\" (on-submit)=\"submitPanel($event)\" [form-fields]=\"backupDataFormFields()\"\n      [submit-button-title]=\"nls.import\" [cancel-button-title]=\"nls.cancel\" (on-cancel)=\"togglePanel($event)\"\n      (on-change)=\"handleFormChange($event)\"></app-form>\n  </ng-template>\n</app-right-panel>","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n  private cordova: any;\n  private window: Window;\n\n  constructor(private router: Router) {\n    if (typeof window != \"undefined\") {\n      this.window = window;\n    } else {\n      this.window = new Window();\n    }\n    if ((this.window as any).cordova) {\n      this.cordova = (this.window as any).cordova;\n    }\n  }\n  getCordova(): any {\n    return this.cordova;\n  }\n  getWindow(): Window {\n    return this.window;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, ContentChild, EventEmitter, inject, Input, Output, TemplateRef } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { AppService } from '../../services/app.service';\nimport { slideInOut } from '../../animations';\nimport nls from '../resources/nls/generic';\n\n@Component({\n  selector: 'app-right-panel',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatRippleModule,\n    MatButtonModule,\n    MatDividerModule\n  ],\n  templateUrl: './right-panel.component.html',\n  styleUrl: './right-panel.component.scss',\n  animations: [slideInOut]\n})\nexport class RightPanelComponent {\n\n  _appService: AppService = inject(AppService);\n\n  @Input() type: 'confirm' | 'info' = 'confirm';\n  @Input('panel-heading') heading: string = '';\n  @Input() isOpen: boolean = false;\n  @Input() showCloseButton: boolean = true;\n  @Input() showHeader: boolean = true;\n  @Output() onCancel = new EventEmitter<boolean>();\n  @Output() onSubmit = new EventEmitter<boolean>();\n\n  @ContentChild(TemplateRef) content!: TemplateRef<any>;\n\n  nls = nls;\n  cancelPanel() {\n    // this.isOpen = !this.isOpen;\n    this.onCancel.emit(!this.isOpen);\n  }\n  submitPanel() {\n    // this.isOpen = !this.isOpen;\n    this.onSubmit.emit(!this.isOpen);\n  }\n}\n","<div class=\"overlay\" *ngIf=\"isOpen\"></div>\n<div class=\"right-panel custom-scrollbar\" *ngIf=\"isOpen\" @slideInOut role=\"dialog\" [attr.aria-label]=\"heading\">\n  <div class=\"right-panel-heading\" *ngIf=\"showHeader\">\n    <div class=\"right-panel-heading-text\">\n      <span class=\"h5\" *ngIf=\"heading!==''\">{{heading}}</span>\n    </div>\n    <button mat-icon-button color=\"error\" [attr.aria-label]=\"heading\" *ngIf=\"showCloseButton\" (click)=\"cancelPanel()\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <mat-divider class=\"w-100\"></mat-divider>\n  <div class=\"right-panel-content\">\n    <ng-template [ngTemplateOutlet]=\"content\"></ng-template>\n    <div *ngIf=\"type==='confirm'\">\n      <div class=\"d-flex gap-2 pt-3\">\n        <button mat-raised-button class=\"w-100\" (click)=\"cancelPanel()\">{{nls.cancel}}</button>\n        <button class=\"w-100\" mat-raised-button color=\"primary\" type=\"button\"\n          (click)=\"submitPanel()\">{{nls.okay}}</button>\n      </div>\n    </div>\n  </div>\n</div>","import * as i0 from '@angular/core';\nimport { inject, NgZone, Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { filter, shareReplay, takeUntil } from 'rxjs/operators';\n\n/**\n * Handler that logs \"ResizeObserver loop limit exceeded\" errors.\n * These errors are not shown in the Chrome console, so we log them to ensure developers are aware.\n * @param e The error\n */\nconst loopLimitExceededErrorHandler = e => {\n  if (e instanceof ErrorEvent && e.message === 'ResizeObserver loop limit exceeded') {\n    console.error(`${e.message}. This could indicate a performance issue with your app. See https://github.com/WICG/resize-observer/blob/master/explainer.md#error-handling`);\n  }\n};\n/**\n * A shared ResizeObserver to be used for a particular box type (content-box, border-box, or\n * device-pixel-content-box)\n */\nclass SingleBoxSharedResizeObserver {\n  constructor( /** The box type to observe for resizes. */\n  _box) {\n    this._box = _box;\n    /** Stream that emits when the shared observer is destroyed. */\n    this._destroyed = new Subject();\n    /** Stream of all events from the ResizeObserver. */\n    this._resizeSubject = new Subject();\n    /** A map of elements to streams of their resize events. */\n    this._elementObservables = new Map();\n    if (typeof ResizeObserver !== 'undefined') {\n      this._resizeObserver = new ResizeObserver(entries => this._resizeSubject.next(entries));\n    }\n  }\n  /**\n   * Gets a stream of resize events for the given element.\n   * @param target The element to observe.\n   * @return The stream of resize events for the element.\n   */\n  observe(target) {\n    if (!this._elementObservables.has(target)) {\n      this._elementObservables.set(target, new Observable(observer => {\n        const subscription = this._resizeSubject.subscribe(observer);\n        this._resizeObserver?.observe(target, {\n          box: this._box\n        });\n        return () => {\n          this._resizeObserver?.unobserve(target);\n          subscription.unsubscribe();\n          this._elementObservables.delete(target);\n        };\n      }).pipe(filter(entries => entries.some(entry => entry.target === target)),\n      // Share a replay of the last event so that subsequent calls to observe the same element\n      // receive initial sizing info like the first one. Also enable ref counting so the\n      // element will be automatically unobserved when there are no more subscriptions.\n      shareReplay({\n        bufferSize: 1,\n        refCount: true\n      }), takeUntil(this._destroyed)));\n    }\n    return this._elementObservables.get(target);\n  }\n  /** Destroys this instance. */\n  destroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._resizeSubject.complete();\n    this._elementObservables.clear();\n  }\n}\n/**\n * Allows observing resize events on multiple elements using a shared set of ResizeObserver.\n * Sharing a ResizeObserver instance is recommended for better performance (see\n * https://github.com/WICG/resize-observer/issues/59).\n *\n * Rather than share a single `ResizeObserver`, this class creates one `ResizeObserver` per type\n * of observed box ('content-box', 'border-box', and 'device-pixel-content-box'). This avoids\n * later calls to `observe` with a different box type from influencing the events dispatched to\n * earlier calls.\n */\nlet SharedResizeObserver = /*#__PURE__*/(() => {\n  class SharedResizeObserver {\n    constructor() {\n      /** Map of box type to shared resize observer. */\n      this._observers = new Map();\n      /** The Angular zone. */\n      this._ngZone = inject(NgZone);\n      if (typeof ResizeObserver !== 'undefined' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        this._ngZone.runOutsideAngular(() => {\n          window.addEventListener('error', loopLimitExceededErrorHandler);\n        });\n      }\n    }\n    ngOnDestroy() {\n      for (const [, observer] of this._observers) {\n        observer.destroy();\n      }\n      this._observers.clear();\n      if (typeof ResizeObserver !== 'undefined' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        window.removeEventListener('error', loopLimitExceededErrorHandler);\n      }\n    }\n    /**\n     * Gets a stream of resize events for the given target element and box type.\n     * @param target The element to observe for resizes.\n     * @param options Options to pass to the `ResizeObserver`\n     * @return The stream of resize events for the element.\n     */\n    observe(target, options) {\n      const box = options?.box || 'content-box';\n      if (!this._observers.has(box)) {\n        this._observers.set(box, new SingleBoxSharedResizeObserver(box));\n      }\n      return this._observers.get(box).observe(target);\n    }\n    static {\n      this.ɵfac = function SharedResizeObserver_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || SharedResizeObserver)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: SharedResizeObserver,\n        factory: SharedResizeObserver.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return SharedResizeObserver;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SharedResizeObserver };\n","import * as i0 from '@angular/core';\nimport { Directive, InjectionToken, Attribute, Input, inject, NgZone, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, contentChild, Injector, computed, afterRender, ANIMATION_MODULE_TYPE, Optional, Inject, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i2 from '@angular/cdk/platform';\nimport { DOCUMENT, NgTemplateOutlet, CommonModule } from '@angular/common';\nimport { Subscription, Subject, merge } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { SharedResizeObserver } from '@angular/cdk/observers/private';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** The floating label for a `mat-form-field`. */\nconst _c0 = [\"notch\"];\nconst _c1 = [\"matFormFieldNotchedOutline\", \"\"];\nconst _c2 = [\"*\"];\nconst _c3 = [\"textField\"];\nconst _c4 = [\"iconPrefixContainer\"];\nconst _c5 = [\"textPrefixContainer\"];\nconst _c6 = [\"iconSuffixContainer\"];\nconst _c7 = [\"textSuffixContainer\"];\nconst _c8 = [\"*\", [[\"mat-label\"]], [[\"\", \"matPrefix\", \"\"], [\"\", \"matIconPrefix\", \"\"]], [[\"\", \"matTextPrefix\", \"\"]], [[\"\", \"matTextSuffix\", \"\"]], [[\"\", \"matSuffix\", \"\"], [\"\", \"matIconSuffix\", \"\"]], [[\"mat-error\"], [\"\", \"matError\", \"\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c9 = [\"*\", \"mat-label\", \"[matPrefix], [matIconPrefix]\", \"[matTextPrefix]\", \"[matTextSuffix]\", \"[matSuffix], [matIconSuffix]\", \"mat-error, [matError]\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nfunction MatFormField_ng_template_0_Conditional_0_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 21);\n  }\n}\nfunction MatFormField_ng_template_0_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 20);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵtemplate(2, MatFormField_ng_template_0_Conditional_0_Conditional_2_Template, 1, 0, \"span\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"floating\", ctx_r1._shouldLabelFloat())(\"monitorResize\", ctx_r1._hasOutline())(\"id\", ctx_r1._labelId);\n    i0.ɵɵattribute(\"for\", ctx_r1._control.disableAutomaticLabeling ? null : ctx_r1._control.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵconditional(!ctx_r1.hideRequiredMarker && ctx_r1._control.required ? 2 : -1);\n  }\n}\nfunction MatFormField_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatFormField_ng_template_0_Conditional_0_Template, 3, 5, \"label\", 20);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(ctx_r1._hasFloatingLabel() ? 0 : -1);\n  }\n}\nfunction MatFormField_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n}\nfunction MatFormField_Conditional_6_Conditional_1_ng_template_0_Template(rf, ctx) {}\nfunction MatFormField_Conditional_6_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatFormField_Conditional_6_Conditional_1_ng_template_0_Template, 0, 0, \"ng-template\", 13);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n    const labelTemplate_r3 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", labelTemplate_r3);\n  }\n}\nfunction MatFormField_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, MatFormField_Conditional_6_Conditional_1_Template, 1, 1, null, 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matFormFieldNotchedOutlineOpen\", ctx_r1._shouldLabelFloat());\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(!ctx_r1._forceDisplayInfixLabel() ? 1 : -1);\n  }\n}\nfunction MatFormField_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10, 2);\n    i0.ɵɵprojection(2, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11, 3);\n    i0.ɵɵprojection(2, 3);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_10_ng_template_0_Template(rf, ctx) {}\nfunction MatFormField_Conditional_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatFormField_Conditional_10_ng_template_0_Template, 0, 0, \"ng-template\", 13);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const labelTemplate_r3 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", labelTemplate_r3);\n  }\n}\nfunction MatFormField_Conditional_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14, 4);\n    i0.ɵɵprojection(2, 4);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15, 5);\n    i0.ɵɵprojection(2, 5);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n  }\n}\nfunction MatFormField_Case_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵprojection(1, 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@transitionMessages\", ctx_r1._subscriptAnimationState);\n  }\n}\nfunction MatFormField_Case_17_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"id\", ctx_r1._hintLabelId);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.hintLabel);\n  }\n}\nfunction MatFormField_Case_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, MatFormField_Case_17_Conditional_1_Template, 2, 2, \"mat-hint\", 22);\n    i0.ɵɵprojection(2, 7);\n    i0.ɵɵelement(3, \"div\", 23);\n    i0.ɵɵprojection(4, 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@transitionMessages\", ctx_r1._subscriptAnimationState);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1.hintLabel ? 1 : -1);\n  }\n}\nlet MatLabel = /*#__PURE__*/(() => {\n  class MatLabel {\n    static {\n      this.ɵfac = function MatLabel_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatLabel)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatLabel,\n        selectors: [[\"mat-label\"]],\n        standalone: true\n      });\n    }\n  }\n  return MatLabel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet nextUniqueId$2 = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = /*#__PURE__*/new InjectionToken('MatError');\n/** Single error message to be shown underneath the form-field. */\nlet MatError = /*#__PURE__*/(() => {\n  class MatError {\n    constructor(ariaLive, elementRef) {\n      this.id = `mat-mdc-error-${nextUniqueId$2++}`;\n      // If no aria-live value is set add 'polite' as a default. This is preferred over setting\n      // role='alert' so that screen readers do not interrupt the current task to read this aloud.\n      if (!ariaLive) {\n        elementRef.nativeElement.setAttribute('aria-live', 'polite');\n      }\n    }\n    static {\n      this.ɵfac = function MatError_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatError)(i0.ɵɵinjectAttribute('aria-live'), i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatError,\n        selectors: [[\"mat-error\"], [\"\", \"matError\", \"\"]],\n        hostAttrs: [\"aria-atomic\", \"true\", 1, \"mat-mdc-form-field-error\", \"mat-mdc-form-field-bottom-align\"],\n        hostVars: 1,\n        hostBindings: function MatError_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"id\", ctx.id);\n          }\n        },\n        inputs: {\n          id: \"id\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_ERROR,\n          useExisting: MatError\n        }])]\n      });\n    }\n  }\n  return MatError;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet nextUniqueId$1 = 0;\n/** Hint text to be shown underneath the form field control. */\nlet MatHint = /*#__PURE__*/(() => {\n  class MatHint {\n    constructor() {\n      /** Whether to align the hint label at the start or end of the line. */\n      this.align = 'start';\n      /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n      this.id = `mat-mdc-hint-${nextUniqueId$1++}`;\n    }\n    static {\n      this.ɵfac = function MatHint_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatHint)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatHint,\n        selectors: [[\"mat-hint\"]],\n        hostAttrs: [1, \"mat-mdc-form-field-hint\", \"mat-mdc-form-field-bottom-align\"],\n        hostVars: 4,\n        hostBindings: function MatHint_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"id\", ctx.id);\n            i0.ɵɵattribute(\"align\", null);\n            i0.ɵɵclassProp(\"mat-mdc-form-field-hint-end\", ctx.align === \"end\");\n          }\n        },\n        inputs: {\n          align: \"align\",\n          id: \"id\"\n        },\n        standalone: true\n      });\n    }\n  }\n  return MatHint;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = /*#__PURE__*/new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nlet MatPrefix = /*#__PURE__*/(() => {\n  class MatPrefix {\n    constructor() {\n      this._isText = false;\n    }\n    set _isTextSelector(value) {\n      this._isText = true;\n    }\n    static {\n      this.ɵfac = function MatPrefix_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatPrefix)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatPrefix,\n        selectors: [[\"\", \"matPrefix\", \"\"], [\"\", \"matIconPrefix\", \"\"], [\"\", \"matTextPrefix\", \"\"]],\n        inputs: {\n          _isTextSelector: [0, \"matTextPrefix\", \"_isTextSelector\"]\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_PREFIX,\n          useExisting: MatPrefix\n        }])]\n      });\n    }\n  }\n  return MatPrefix;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = /*#__PURE__*/new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nlet MatSuffix = /*#__PURE__*/(() => {\n  class MatSuffix {\n    constructor() {\n      this._isText = false;\n    }\n    set _isTextSelector(value) {\n      this._isText = true;\n    }\n    static {\n      this.ɵfac = function MatSuffix_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatSuffix)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatSuffix,\n        selectors: [[\"\", \"matSuffix\", \"\"], [\"\", \"matIconSuffix\", \"\"], [\"\", \"matTextSuffix\", \"\"]],\n        inputs: {\n          _isTextSelector: [0, \"matTextSuffix\", \"_isTextSelector\"]\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_SUFFIX,\n          useExisting: MatSuffix\n        }])]\n      });\n    }\n  }\n  return MatSuffix;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** An injion token for the parent form-field. */\nconst FLOATING_LABEL_PARENT = /*#__PURE__*/new InjectionToken('FloatingLabelParent');\n/**\n * Internal directive that maintains a MDC floating label. This directive does not\n * use the `MDCFloatingLabelFoundation` class, as it is not worth the size cost of\n * including it just to measure the label width and toggle some classes.\n *\n * The use of a directive allows us to conditionally render a floating label in the\n * template without having to manually manage instantiation and destruction of the\n * floating label component based on.\n *\n * The component is responsible for setting up the floating label styles, measuring label\n * width for the outline notch, and providing inputs that can be used to toggle the\n * label's floating or required state.\n */\nlet MatFormFieldFloatingLabel = /*#__PURE__*/(() => {\n  class MatFormFieldFloatingLabel {\n    /** Whether the label is floating. */\n    get floating() {\n      return this._floating;\n    }\n    set floating(value) {\n      this._floating = value;\n      if (this.monitorResize) {\n        this._handleResize();\n      }\n    }\n    /** Whether to monitor for resize events on the floating label. */\n    get monitorResize() {\n      return this._monitorResize;\n    }\n    set monitorResize(value) {\n      this._monitorResize = value;\n      if (this._monitorResize) {\n        this._subscribeToResize();\n      } else {\n        this._resizeSubscription.unsubscribe();\n      }\n    }\n    constructor(_elementRef) {\n      this._elementRef = _elementRef;\n      this._floating = false;\n      this._monitorResize = false;\n      /** The shared ResizeObserver. */\n      this._resizeObserver = inject(SharedResizeObserver);\n      /** The Angular zone. */\n      this._ngZone = inject(NgZone);\n      /** The parent form-field. */\n      this._parent = inject(FLOATING_LABEL_PARENT);\n      /** The current resize event subscription. */\n      this._resizeSubscription = new Subscription();\n    }\n    ngOnDestroy() {\n      this._resizeSubscription.unsubscribe();\n    }\n    /** Gets the width of the label. Used for the outline notch. */\n    getWidth() {\n      return estimateScrollWidth(this._elementRef.nativeElement);\n    }\n    /** Gets the HTML element for the floating label. */\n    get element() {\n      return this._elementRef.nativeElement;\n    }\n    /** Handles resize events from the ResizeObserver. */\n    _handleResize() {\n      // In the case where the label grows in size, the following sequence of events occurs:\n      // 1. The label grows by 1px triggering the ResizeObserver\n      // 2. The notch is expanded to accommodate the entire label\n      // 3. The label expands to its full width, triggering the ResizeObserver again\n      //\n      // This is expected, but If we allow this to all happen within the same macro task it causes an\n      // error: `ResizeObserver loop limit exceeded`. Therefore we push the notch resize out until\n      // the next macro task.\n      setTimeout(() => this._parent._handleLabelResized());\n    }\n    /** Subscribes to resize events. */\n    _subscribeToResize() {\n      this._resizeSubscription.unsubscribe();\n      this._ngZone.runOutsideAngular(() => {\n        this._resizeSubscription = this._resizeObserver.observe(this._elementRef.nativeElement, {\n          box: 'border-box'\n        }).subscribe(() => this._handleResize());\n      });\n    }\n    static {\n      this.ɵfac = function MatFormFieldFloatingLabel_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatFormFieldFloatingLabel)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatFormFieldFloatingLabel,\n        selectors: [[\"label\", \"matFormFieldFloatingLabel\", \"\"]],\n        hostAttrs: [1, \"mdc-floating-label\", \"mat-mdc-floating-label\"],\n        hostVars: 2,\n        hostBindings: function MatFormFieldFloatingLabel_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-floating-label--float-above\", ctx.floating);\n          }\n        },\n        inputs: {\n          floating: \"floating\",\n          monitorResize: \"monitorResize\"\n        },\n        standalone: true\n      });\n    }\n  }\n  return MatFormFieldFloatingLabel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Estimates the scroll width of an element.\n * via https://github.com/material-components/material-components-web/blob/c0a11ef0d000a098fd0c372be8f12d6a99302855/packages/mdc-dom/ponyfill.ts\n */\nfunction estimateScrollWidth(element) {\n  // Check the offsetParent. If the element inherits display: none from any\n  // parent, the offsetParent property will be null (see\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\n  // This check ensures we only clone the node when necessary.\n  const htmlEl = element;\n  if (htmlEl.offsetParent !== null) {\n    return htmlEl.scrollWidth;\n  }\n  const clone = htmlEl.cloneNode(true);\n  clone.style.setProperty('position', 'absolute');\n  clone.style.setProperty('transform', 'translate(-9999px, -9999px)');\n  document.documentElement.appendChild(clone);\n  const scrollWidth = clone.scrollWidth;\n  clone.remove();\n  return scrollWidth;\n}\n\n/** Class added when the line ripple is active. */\nconst ACTIVATE_CLASS = 'mdc-line-ripple--active';\n/** Class added when the line ripple is being deactivated. */\nconst DEACTIVATING_CLASS = 'mdc-line-ripple--deactivating';\n/**\n * Internal directive that creates an instance of the MDC line-ripple component. Using a\n * directive allows us to conditionally render a line-ripple in the template without having\n * to manually create and destroy the `MDCLineRipple` component whenever the condition changes.\n *\n * The directive sets up the styles for the line-ripple and provides an API for activating\n * and deactivating the line-ripple.\n */\nlet MatFormFieldLineRipple = /*#__PURE__*/(() => {\n  class MatFormFieldLineRipple {\n    constructor(_elementRef, ngZone) {\n      this._elementRef = _elementRef;\n      this._handleTransitionEnd = event => {\n        const classList = this._elementRef.nativeElement.classList;\n        const isDeactivating = classList.contains(DEACTIVATING_CLASS);\n        if (event.propertyName === 'opacity' && isDeactivating) {\n          classList.remove(ACTIVATE_CLASS, DEACTIVATING_CLASS);\n        }\n      };\n      ngZone.runOutsideAngular(() => {\n        _elementRef.nativeElement.addEventListener('transitionend', this._handleTransitionEnd);\n      });\n    }\n    activate() {\n      const classList = this._elementRef.nativeElement.classList;\n      classList.remove(DEACTIVATING_CLASS);\n      classList.add(ACTIVATE_CLASS);\n    }\n    deactivate() {\n      this._elementRef.nativeElement.classList.add(DEACTIVATING_CLASS);\n    }\n    ngOnDestroy() {\n      this._elementRef.nativeElement.removeEventListener('transitionend', this._handleTransitionEnd);\n    }\n    static {\n      this.ɵfac = function MatFormFieldLineRipple_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatFormFieldLineRipple)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatFormFieldLineRipple,\n        selectors: [[\"div\", \"matFormFieldLineRipple\", \"\"]],\n        hostAttrs: [1, \"mdc-line-ripple\"],\n        standalone: true\n      });\n    }\n  }\n  return MatFormFieldLineRipple;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Internal component that creates an instance of the MDC notched-outline component.\n *\n * The component sets up the HTML structure and styles for the notched-outline. It provides\n * inputs to toggle the notch state and width.\n */\nlet MatFormFieldNotchedOutline = /*#__PURE__*/(() => {\n  class MatFormFieldNotchedOutline {\n    constructor(_elementRef, _ngZone) {\n      this._elementRef = _elementRef;\n      this._ngZone = _ngZone;\n      /** Whether the notch should be opened. */\n      this.open = false;\n    }\n    ngAfterViewInit() {\n      const label = this._elementRef.nativeElement.querySelector('.mdc-floating-label');\n      if (label) {\n        this._elementRef.nativeElement.classList.add('mdc-notched-outline--upgraded');\n        if (typeof requestAnimationFrame === 'function') {\n          label.style.transitionDuration = '0s';\n          this._ngZone.runOutsideAngular(() => {\n            requestAnimationFrame(() => label.style.transitionDuration = '');\n          });\n        }\n      } else {\n        this._elementRef.nativeElement.classList.add('mdc-notched-outline--no-label');\n      }\n    }\n    _setNotchWidth(labelWidth) {\n      if (!this.open || !labelWidth) {\n        this._notch.nativeElement.style.width = '';\n      } else {\n        const NOTCH_ELEMENT_PADDING = 8;\n        const NOTCH_ELEMENT_BORDER = 1;\n        this._notch.nativeElement.style.width = `calc(${labelWidth}px * var(--mat-mdc-form-field-floating-label-scale, 0.75) + ${NOTCH_ELEMENT_PADDING + NOTCH_ELEMENT_BORDER}px)`;\n      }\n    }\n    static {\n      this.ɵfac = function MatFormFieldNotchedOutline_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatFormFieldNotchedOutline)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatFormFieldNotchedOutline,\n        selectors: [[\"div\", \"matFormFieldNotchedOutline\", \"\"]],\n        viewQuery: function MatFormFieldNotchedOutline_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._notch = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mdc-notched-outline\"],\n        hostVars: 2,\n        hostBindings: function MatFormFieldNotchedOutline_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-notched-outline--notched\", ctx.open);\n          }\n        },\n        inputs: {\n          open: [0, \"matFormFieldNotchedOutlineOpen\", \"open\"]\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        attrs: _c1,\n        ngContentSelectors: _c2,\n        decls: 5,\n        vars: 0,\n        consts: [[\"notch\", \"\"], [1, \"mat-mdc-notch-piece\", \"mdc-notched-outline__leading\"], [1, \"mat-mdc-notch-piece\", \"mdc-notched-outline__notch\"], [1, \"mat-mdc-notch-piece\", \"mdc-notched-outline__trailing\"]],\n        template: function MatFormFieldNotchedOutline_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelement(0, \"div\", 1);\n            i0.ɵɵelementStart(1, \"div\", 2, 0);\n            i0.ɵɵprojection(3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(4, \"div\", 3);\n          }\n        },\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatFormFieldNotchedOutline;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n  /** Animation that transitions the form field's error and hint messages. */\n  transitionMessages: /*#__PURE__*/trigger('transitionMessages', [\n  /*#__PURE__*/\n  // TODO(mmalerba): Use angular animations for label animation as well.\n  state('enter', /*#__PURE__*/style({\n    opacity: 1,\n    transform: 'translateY(0%)'\n  })), /*#__PURE__*/transition('void => enter', [/*#__PURE__*/style({\n    opacity: 0,\n    transform: 'translateY(-5px)'\n  }), /*#__PURE__*/animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')])])\n};\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\nlet MatFormFieldControl = /*#__PURE__*/(() => {\n  class MatFormFieldControl {\n    static {\n      this.ɵfac = function MatFormFieldControl_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatFormFieldControl)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatFormFieldControl\n      });\n    }\n  }\n  return MatFormFieldControl;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n  return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n  return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n  return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = /*#__PURE__*/new InjectionToken('MatFormField');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\nlet nextUniqueId = 0;\n/** Default appearance used by the form field. */\nconst DEFAULT_APPEARANCE = 'fill';\n/**\n * Whether the label for form fields should by default float `always`,\n * `never`, or `auto`.\n */\nconst DEFAULT_FLOAT_LABEL = 'auto';\n/** Default way that the subscript element height is set. */\nconst DEFAULT_SUBSCRIPT_SIZING = 'fixed';\n/**\n * Default transform for docked floating labels in a MDC text-field. This value has been\n * extracted from the MDC text-field styles because we programmatically modify the docked\n * label transform, but do not want to accidentally discard the default label transform.\n */\nconst FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM = `translateY(-50%)`;\n/** Container for form controls that applies Material Design styling and behavior. */\nlet MatFormField = /*#__PURE__*/(() => {\n  class MatFormField {\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() {\n      return this._hideRequiredMarker;\n    }\n    set hideRequiredMarker(value) {\n      this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the label should always float or float as the user types. */\n    get floatLabel() {\n      return this._floatLabel || this._defaults?.floatLabel || DEFAULT_FLOAT_LABEL;\n    }\n    set floatLabel(value) {\n      if (value !== this._floatLabel) {\n        this._floatLabel = value;\n        // For backwards compatibility. Custom form field controls or directives might set\n        // the \"floatLabel\" input and expect the form field view to be updated automatically.\n        // e.g. autocomplete trigger. Ideally we'd get rid of this and the consumers would just\n        // emit the \"stateChanges\" observable. TODO(devversion): consider removing.\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /** The form field appearance style. */\n    get appearance() {\n      return this._appearance;\n    }\n    set appearance(value) {\n      const oldValue = this._appearance;\n      const newAppearance = value || this._defaults?.appearance || DEFAULT_APPEARANCE;\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (newAppearance !== 'fill' && newAppearance !== 'outline') {\n          throw new Error(`MatFormField: Invalid appearance \"${newAppearance}\", valid values are \"fill\" or \"outline\".`);\n        }\n      }\n      this._appearance = newAppearance;\n      if (this._appearance === 'outline' && this._appearance !== oldValue) {\n        // If the appearance has been switched to `outline`, the label offset needs to be updated.\n        // The update can happen once the view has been re-checked, but not immediately because\n        // the view has not been updated and the notched-outline floating label is not present.\n        this._needsOutlineLabelOffsetUpdate = true;\n      }\n    }\n    /**\n     * Whether the form field should reserve space for one line of hint/error text (default)\n     * or to have the spacing grow from 0px as needed based on the size of the hint/error content.\n     * Note that when using dynamic sizing, layout shifts will occur when hint/error text changes.\n     */\n    get subscriptSizing() {\n      return this._subscriptSizing || this._defaults?.subscriptSizing || DEFAULT_SUBSCRIPT_SIZING;\n    }\n    set subscriptSizing(value) {\n      this._subscriptSizing = value || this._defaults?.subscriptSizing || DEFAULT_SUBSCRIPT_SIZING;\n    }\n    /** Text for the form field hint. */\n    get hintLabel() {\n      return this._hintLabel;\n    }\n    set hintLabel(value) {\n      this._hintLabel = value;\n      this._processHints();\n    }\n    /** Gets the current form field control */\n    get _control() {\n      return this._explicitFormFieldControl || this._formFieldControl;\n    }\n    set _control(value) {\n      this._explicitFormFieldControl = value;\n    }\n    constructor(_elementRef, _changeDetectorRef,\n    /**\n     * @deprecated not needed, to be removed.\n     * @breaking-change 19.0.0 remove this param\n     */\n    _unusedNgZone, _dir, _platform, _defaults, _animationMode,\n    /**\n     * @deprecated not needed, to be removed.\n     * @breaking-change 17.0.0 remove this param\n     */\n    _unusedDocument) {\n      this._elementRef = _elementRef;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._dir = _dir;\n      this._platform = _platform;\n      this._defaults = _defaults;\n      this._animationMode = _animationMode;\n      this._labelChild = contentChild(MatLabel);\n      this._hideRequiredMarker = false;\n      /**\n       * Theme color of the form field. This API is supported in M2 themes only, it\n       * has no effect in M3 themes.\n       *\n       * For information on applying color variants in M3, see\n       * https://material.angular.io/guide/theming#using-component-color-variants.\n       */\n      this.color = 'primary';\n      this._appearance = DEFAULT_APPEARANCE;\n      this._subscriptSizing = null;\n      this._hintLabel = '';\n      this._hasIconPrefix = false;\n      this._hasTextPrefix = false;\n      this._hasIconSuffix = false;\n      this._hasTextSuffix = false;\n      // Unique id for the internal form field label.\n      this._labelId = `mat-mdc-form-field-label-${nextUniqueId++}`;\n      // Unique id for the hint label.\n      this._hintLabelId = `mat-mdc-hint-${nextUniqueId++}`;\n      /** State of the mat-hint and mat-error animations. */\n      this._subscriptAnimationState = '';\n      this._destroyed = new Subject();\n      this._isFocused = null;\n      this._needsOutlineLabelOffsetUpdate = false;\n      this._previousControl = null;\n      this._injector = inject(Injector);\n      /**\n       * Gets the id of the label element. If no label is present, returns `null`.\n       */\n      this.getLabelId = computed(() => this._hasFloatingLabel() ? this._labelId : null);\n      this._hasFloatingLabel = computed(() => !!this._labelChild());\n      if (_defaults) {\n        if (_defaults.appearance) {\n          this.appearance = _defaults.appearance;\n        }\n        this._hideRequiredMarker = Boolean(_defaults?.hideRequiredMarker);\n        if (_defaults.color) {\n          this.color = _defaults.color;\n        }\n      }\n    }\n    ngAfterViewInit() {\n      // Initial focus state sync. This happens rarely, but we want to account for\n      // it in case the form field control has \"focused\" set to true on init.\n      this._updateFocusState();\n      // Enable animations now. This ensures we don't animate on initial render.\n      this._subscriptAnimationState = 'enter';\n      // Because the above changes a value used in the template after it was checked, we need\n      // to trigger CD or the change might not be reflected if there is no other CD scheduled.\n      this._changeDetectorRef.detectChanges();\n    }\n    ngAfterContentInit() {\n      this._assertFormFieldControl();\n      this._initializeSubscript();\n      this._initializePrefixAndSuffix();\n      this._initializeOutlineLabelOffsetSubscriptions();\n    }\n    ngAfterContentChecked() {\n      this._assertFormFieldControl();\n      if (this._control !== this._previousControl) {\n        this._initializeControl(this._previousControl);\n        this._previousControl = this._control;\n      }\n    }\n    ngOnDestroy() {\n      this._stateChanges?.unsubscribe();\n      this._valueChanges?.unsubscribe();\n      this._destroyed.next();\n      this._destroyed.complete();\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form field\n     * should be positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n      return this._textField || this._elementRef;\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n      // This is for backwards compatibility only. Consumers of the form field might use\n      // this method. e.g. the autocomplete trigger. This method has been added to the non-MDC\n      // form field because setting \"floatLabel\" to \"always\" caused the label to float without\n      // animation. This is different in MDC where the label always animates, so this method\n      // is no longer necessary. There doesn't seem any benefit in adding logic to allow changing\n      // the floating label state without animations. The non-MDC implementation was inconsistent\n      // because it always animates if \"floatLabel\" is set away from \"always\".\n      // TODO(devversion): consider removing this method when releasing the MDC form field.\n      if (this._hasFloatingLabel()) {\n        this.floatLabel = 'always';\n      }\n    }\n    /** Initializes the registered form field control. */\n    _initializeControl(previousControl) {\n      const control = this._control;\n      const classPrefix = 'mat-mdc-form-field-type-';\n      if (previousControl) {\n        this._elementRef.nativeElement.classList.remove(classPrefix + previousControl.controlType);\n      }\n      if (control.controlType) {\n        this._elementRef.nativeElement.classList.add(classPrefix + control.controlType);\n      }\n      // Subscribe to changes in the child control state in order to update the form field UI.\n      this._stateChanges?.unsubscribe();\n      this._stateChanges = control.stateChanges.subscribe(() => {\n        this._updateFocusState();\n        this._syncDescribedByIds();\n        this._changeDetectorRef.markForCheck();\n      });\n      this._valueChanges?.unsubscribe();\n      // Run change detection if the value changes.\n      if (control.ngControl && control.ngControl.valueChanges) {\n        this._valueChanges = control.ngControl.valueChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._changeDetectorRef.markForCheck());\n      }\n    }\n    _checkPrefixAndSuffixTypes() {\n      this._hasIconPrefix = !!this._prefixChildren.find(p => !p._isText);\n      this._hasTextPrefix = !!this._prefixChildren.find(p => p._isText);\n      this._hasIconSuffix = !!this._suffixChildren.find(s => !s._isText);\n      this._hasTextSuffix = !!this._suffixChildren.find(s => s._isText);\n    }\n    /** Initializes the prefix and suffix containers. */\n    _initializePrefixAndSuffix() {\n      this._checkPrefixAndSuffixTypes();\n      // Mark the form field as dirty whenever the prefix or suffix children change. This\n      // is necessary because we conditionally display the prefix/suffix containers based\n      // on whether there is projected content.\n      merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n        this._checkPrefixAndSuffixTypes();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n    /**\n     * Initializes the subscript by validating hints and synchronizing \"aria-describedby\" ids\n     * with the custom form field control. Also subscribes to hint and error changes in order\n     * to be able to validate and synchronize ids on change.\n     */\n    _initializeSubscript() {\n      // Re-validate when the number of hints changes.\n      this._hintChildren.changes.subscribe(() => {\n        this._processHints();\n        this._changeDetectorRef.markForCheck();\n      });\n      // Update the aria-described by when the number of errors changes.\n      this._errorChildren.changes.subscribe(() => {\n        this._syncDescribedByIds();\n        this._changeDetectorRef.markForCheck();\n      });\n      // Initial mat-hint validation and subscript describedByIds sync.\n      this._validateHints();\n      this._syncDescribedByIds();\n    }\n    /** Throws an error if the form field's control is missing. */\n    _assertFormFieldControl() {\n      if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getMatFormFieldMissingControlError();\n      }\n    }\n    _updateFocusState() {\n      // Usually the MDC foundation would call \"activateFocus\" and \"deactivateFocus\" whenever\n      // certain DOM events are emitted. This is not possible in our implementation of the\n      // form field because we support abstract form field controls which are not necessarily\n      // of type input, nor do we have a reference to a native form field control element. Instead\n      // we handle the focus by checking if the abstract form field control focused state changes.\n      if (this._control.focused && !this._isFocused) {\n        this._isFocused = true;\n        this._lineRipple?.activate();\n      } else if (!this._control.focused && (this._isFocused || this._isFocused === null)) {\n        this._isFocused = false;\n        this._lineRipple?.deactivate();\n      }\n      this._textField?.nativeElement.classList.toggle('mdc-text-field--focused', this._control.focused);\n    }\n    /**\n     * The floating label in the docked state needs to account for prefixes. The horizontal offset\n     * is calculated whenever the appearance changes to `outline`, the prefixes change, or when the\n     * form field is added to the DOM. This method sets up all subscriptions which are needed to\n     * trigger the label offset update.\n     */\n    _initializeOutlineLabelOffsetSubscriptions() {\n      // Whenever the prefix changes, schedule an update of the label offset.\n      // TODO(mmalerba): Use ResizeObserver to better support dynamically changing prefix content.\n      this._prefixChildren.changes.subscribe(() => this._needsOutlineLabelOffsetUpdate = true);\n      // TODO(mmalerba): Split this into separate `afterRender` calls using the `EarlyRead` and\n      //  `Write` phases.\n      afterRender(() => {\n        if (this._needsOutlineLabelOffsetUpdate) {\n          this._needsOutlineLabelOffsetUpdate = false;\n          this._updateOutlineLabelOffset();\n        }\n      }, {\n        injector: this._injector\n      });\n      this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => this._needsOutlineLabelOffsetUpdate = true);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n      return this.floatLabel === 'always';\n    }\n    _hasOutline() {\n      return this.appearance === 'outline';\n    }\n    /**\n     * Whether the label should display in the infix. Labels in the outline appearance are\n     * displayed as part of the notched-outline and are horizontally offset to account for\n     * form field prefix content. This won't work in server side rendering since we cannot\n     * measure the width of the prefix container. To make the docked label appear as if the\n     * right offset has been calculated, we forcibly render the label inside the infix. Since\n     * the label is part of the infix, the label cannot overflow the prefix content.\n     */\n    _forceDisplayInfixLabel() {\n      return !this._platform.isBrowser && this._prefixChildren.length && !this._shouldLabelFloat();\n    }\n    _shouldLabelFloat() {\n      if (!this._hasFloatingLabel()) {\n        return false;\n      }\n      return this._control.shouldLabelFloat || this._shouldAlwaysFloat();\n    }\n    /**\n     * Determines whether a class from the AbstractControlDirective\n     * should be forwarded to the host element.\n     */\n    _shouldForward(prop) {\n      const control = this._control ? this._control.ngControl : null;\n      return control && control[prop];\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n      return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState ? 'error' : 'hint';\n    }\n    /** Handle label resize events. */\n    _handleLabelResized() {\n      this._refreshOutlineNotchWidth();\n    }\n    /** Refreshes the width of the outline-notch, if present. */\n    _refreshOutlineNotchWidth() {\n      if (!this._hasOutline() || !this._floatingLabel || !this._shouldLabelFloat()) {\n        this._notchedOutline?._setNotchWidth(0);\n      } else {\n        this._notchedOutline?._setNotchWidth(this._floatingLabel.getWidth());\n      }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n      this._validateHints();\n      this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each \"mat-hint\" alignment specified. The hint\n     * label specified set through the input is being considered as \"start\" aligned.\n     *\n     * This method is a noop if Angular runs in production mode.\n     */\n    _validateHints() {\n      if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        let startHint;\n        let endHint;\n        this._hintChildren.forEach(hint => {\n          if (hint.align === 'start') {\n            if (startHint || this.hintLabel) {\n              throw getMatFormFieldDuplicatedHintError('start');\n            }\n            startHint = hint;\n          } else if (hint.align === 'end') {\n            if (endHint) {\n              throw getMatFormFieldDuplicatedHintError('end');\n            }\n            endHint = hint;\n          }\n        });\n      }\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n      if (this._control) {\n        let ids = [];\n        // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n        if (this._control.userAriaDescribedBy && typeof this._control.userAriaDescribedBy === 'string') {\n          ids.push(...this._control.userAriaDescribedBy.split(' '));\n        }\n        if (this._getDisplayedMessages() === 'hint') {\n          const startHint = this._hintChildren ? this._hintChildren.find(hint => hint.align === 'start') : null;\n          const endHint = this._hintChildren ? this._hintChildren.find(hint => hint.align === 'end') : null;\n          if (startHint) {\n            ids.push(startHint.id);\n          } else if (this._hintLabel) {\n            ids.push(this._hintLabelId);\n          }\n          if (endHint) {\n            ids.push(endHint.id);\n          }\n        } else if (this._errorChildren) {\n          ids.push(...this._errorChildren.map(error => error.id));\n        }\n        this._control.setDescribedByIds(ids);\n      }\n    }\n    /**\n     * Updates the horizontal offset of the label in the outline appearance. In the outline\n     * appearance, the notched-outline and label are not relative to the infix container because\n     * the outline intends to surround prefixes, suffixes and the infix. This means that the\n     * floating label by default overlaps prefixes in the docked state. To avoid this, we need to\n     * horizontally offset the label by the width of the prefix container. The MDC text-field does\n     * not need to do this because they use a fixed width for prefixes. Hence, they can simply\n     * incorporate the horizontal offset into their default text-field styles.\n     */\n    _updateOutlineLabelOffset() {\n      if (!this._hasOutline() || !this._floatingLabel) {\n        return;\n      }\n      const floatingLabel = this._floatingLabel.element;\n      // If no prefix is displayed, reset the outline label offset from potential\n      // previous label offset updates.\n      if (!(this._iconPrefixContainer || this._textPrefixContainer)) {\n        floatingLabel.style.transform = '';\n        return;\n      }\n      // If the form field is not attached to the DOM yet (e.g. in a tab), we defer\n      // the label offset update until the zone stabilizes.\n      if (!this._isAttachedToDom()) {\n        this._needsOutlineLabelOffsetUpdate = true;\n        return;\n      }\n      const iconPrefixContainer = this._iconPrefixContainer?.nativeElement;\n      const textPrefixContainer = this._textPrefixContainer?.nativeElement;\n      const iconSuffixContainer = this._iconSuffixContainer?.nativeElement;\n      const textSuffixContainer = this._textSuffixContainer?.nativeElement;\n      const iconPrefixContainerWidth = iconPrefixContainer?.getBoundingClientRect().width ?? 0;\n      const textPrefixContainerWidth = textPrefixContainer?.getBoundingClientRect().width ?? 0;\n      const iconSuffixContainerWidth = iconSuffixContainer?.getBoundingClientRect().width ?? 0;\n      const textSuffixContainerWidth = textSuffixContainer?.getBoundingClientRect().width ?? 0;\n      // If the directionality is RTL, the x-axis transform needs to be inverted. This\n      // is because `transformX` does not change based on the page directionality.\n      const negate = this._dir.value === 'rtl' ? '-1' : '1';\n      const prefixWidth = `${iconPrefixContainerWidth + textPrefixContainerWidth}px`;\n      const labelOffset = `var(--mat-mdc-form-field-label-offset-x, 0px)`;\n      const labelHorizontalOffset = `calc(${negate} * (${prefixWidth} + ${labelOffset}))`;\n      // Update the translateX of the floating label to account for the prefix container,\n      // but allow the CSS to override this setting via a CSS variable when the label is\n      // floating.\n      floatingLabel.style.transform = `var(\n        --mat-mdc-form-field-label-transform,\n        ${FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM} translateX(${labelHorizontalOffset})\n    )`;\n      // Prevent the label from overlapping the suffix when in resting position.\n      const prefixAndSuffixWidth = iconPrefixContainerWidth + textPrefixContainerWidth + iconSuffixContainerWidth + textSuffixContainerWidth;\n      this._elementRef.nativeElement.style.setProperty('--mat-form-field-notch-max-width', `calc(100% - ${prefixAndSuffixWidth}px)`);\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDom() {\n      const element = this._elementRef.nativeElement;\n      if (element.getRootNode) {\n        const rootNode = element.getRootNode();\n        // If the element is inside the DOM the root node will be either the document\n        // or the closest shadow root, otherwise it'll be the element itself.\n        return rootNode && rootNode !== element;\n      }\n      // Otherwise fall back to checking if it's in the document. This doesn't account for\n      // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n      return document.documentElement.contains(element);\n    }\n    static {\n      this.ɵfac = function MatFormField_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatFormField)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.Directionality), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatFormField,\n        selectors: [[\"mat-form-field\"]],\n        contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuerySignal(dirIndex, ctx._labelChild, MatLabel, 5);\n            i0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 5);\n            i0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, 5);\n            i0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, 5);\n            i0.ɵɵcontentQuery(dirIndex, MAT_ERROR, 5);\n            i0.ɵɵcontentQuery(dirIndex, MatHint, 5);\n          }\n          if (rf & 2) {\n            i0.ɵɵqueryAdvance();\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._formFieldControl = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n          }\n        },\n        viewQuery: function MatFormField_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c3, 5);\n            i0.ɵɵviewQuery(_c4, 5);\n            i0.ɵɵviewQuery(_c5, 5);\n            i0.ɵɵviewQuery(_c6, 5);\n            i0.ɵɵviewQuery(_c7, 5);\n            i0.ɵɵviewQuery(MatFormFieldFloatingLabel, 5);\n            i0.ɵɵviewQuery(MatFormFieldNotchedOutline, 5);\n            i0.ɵɵviewQuery(MatFormFieldLineRipple, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._textField = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._iconPrefixContainer = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._textPrefixContainer = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._iconSuffixContainer = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._textSuffixContainer = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._floatingLabel = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._notchedOutline = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._lineRipple = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-form-field\"],\n        hostVars: 42,\n        hostBindings: function MatFormField_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-mdc-form-field-label-always-float\", ctx._shouldAlwaysFloat())(\"mat-mdc-form-field-has-icon-prefix\", ctx._hasIconPrefix)(\"mat-mdc-form-field-has-icon-suffix\", ctx._hasIconSuffix)(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-form-field-no-animations\", ctx._animationMode === \"NoopAnimations\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-hide-placeholder\", ctx._hasFloatingLabel() && !ctx._shouldLabelFloat())(\"mat-focused\", ctx._control.focused)(\"mat-primary\", ctx.color !== \"accent\" && ctx.color !== \"warn\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"));\n          }\n        },\n        inputs: {\n          hideRequiredMarker: \"hideRequiredMarker\",\n          color: \"color\",\n          floatLabel: \"floatLabel\",\n          appearance: \"appearance\",\n          subscriptSizing: \"subscriptSizing\",\n          hintLabel: \"hintLabel\"\n        },\n        exportAs: [\"matFormField\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_FORM_FIELD,\n          useExisting: MatFormField\n        }, {\n          provide: FLOATING_LABEL_PARENT,\n          useExisting: MatFormField\n        }]), i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c9,\n        decls: 18,\n        vars: 21,\n        consts: [[\"labelTemplate\", \"\"], [\"textField\", \"\"], [\"iconPrefixContainer\", \"\"], [\"textPrefixContainer\", \"\"], [\"textSuffixContainer\", \"\"], [\"iconSuffixContainer\", \"\"], [1, \"mat-mdc-text-field-wrapper\", \"mdc-text-field\", 3, \"click\"], [1, \"mat-mdc-form-field-focus-overlay\"], [1, \"mat-mdc-form-field-flex\"], [\"matFormFieldNotchedOutline\", \"\", 3, \"matFormFieldNotchedOutlineOpen\"], [1, \"mat-mdc-form-field-icon-prefix\"], [1, \"mat-mdc-form-field-text-prefix\"], [1, \"mat-mdc-form-field-infix\"], [3, \"ngTemplateOutlet\"], [1, \"mat-mdc-form-field-text-suffix\"], [1, \"mat-mdc-form-field-icon-suffix\"], [\"matFormFieldLineRipple\", \"\"], [1, \"mat-mdc-form-field-subscript-wrapper\", \"mat-mdc-form-field-bottom-align\"], [1, \"mat-mdc-form-field-error-wrapper\"], [1, \"mat-mdc-form-field-hint-wrapper\"], [\"matFormFieldFloatingLabel\", \"\", 3, \"floating\", \"monitorResize\", \"id\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-form-field-required-marker\", \"mdc-floating-label--required\"], [3, \"id\"], [1, \"mat-mdc-form-field-hint-spacer\"]],\n        template: function MatFormField_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef(_c8);\n            i0.ɵɵtemplate(0, MatFormField_ng_template_0_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n            i0.ɵɵelementStart(2, \"div\", 6, 1);\n            i0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_2_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._control.onContainerClick($event));\n            });\n            i0.ɵɵtemplate(4, MatFormField_Conditional_4_Template, 1, 0, \"div\", 7);\n            i0.ɵɵelementStart(5, \"div\", 8);\n            i0.ɵɵtemplate(6, MatFormField_Conditional_6_Template, 2, 2, \"div\", 9)(7, MatFormField_Conditional_7_Template, 3, 0, \"div\", 10)(8, MatFormField_Conditional_8_Template, 3, 0, \"div\", 11);\n            i0.ɵɵelementStart(9, \"div\", 12);\n            i0.ɵɵtemplate(10, MatFormField_Conditional_10_Template, 1, 1, null, 13);\n            i0.ɵɵprojection(11);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(12, MatFormField_Conditional_12_Template, 3, 0, \"div\", 14)(13, MatFormField_Conditional_13_Template, 3, 0, \"div\", 15);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(14, MatFormField_Conditional_14_Template, 1, 0, \"div\", 16);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"div\", 17);\n            i0.ɵɵtemplate(16, MatFormField_Case_16_Template, 2, 1, \"div\", 18)(17, MatFormField_Case_17_Template, 5, 2, \"div\", 19);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            let tmp_16_0;\n            i0.ɵɵadvance(2);\n            i0.ɵɵclassProp(\"mdc-text-field--filled\", !ctx._hasOutline())(\"mdc-text-field--outlined\", ctx._hasOutline())(\"mdc-text-field--no-label\", !ctx._hasFloatingLabel())(\"mdc-text-field--disabled\", ctx._control.disabled)(\"mdc-text-field--invalid\", ctx._control.errorState);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(!ctx._hasOutline() && !ctx._control.disabled ? 4 : -1);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(ctx._hasOutline() ? 6 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx._hasIconPrefix ? 7 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx._hasTextPrefix ? 8 : -1);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(!ctx._hasOutline() || ctx._forceDisplayInfixLabel() ? 10 : -1);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(ctx._hasTextSuffix ? 12 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx._hasIconSuffix ? 13 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(!ctx._hasOutline() ? 14 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"mat-mdc-form-field-subscript-dynamic-size\", ctx.subscriptSizing === \"dynamic\");\n            i0.ɵɵadvance();\n            i0.ɵɵconditional((tmp_16_0 = ctx._getDisplayedMessages()) === \"error\" ? 16 : tmp_16_0 === \"hint\" ? 17 : -1);\n          }\n        },\n        dependencies: [MatFormFieldFloatingLabel, MatFormFieldNotchedOutline, NgTemplateOutlet, MatFormFieldLineRipple, MatHint],\n        styles: [\".mdc-text-field{display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color;border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.mdc-text-field__input{width:100%;min-width:0;border:none;border-radius:0;background:none;padding:0;-moz-appearance:none;-webkit-appearance:none;height:28px}.mdc-text-field__input::-webkit-calendar-picker-indicator{display:none}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}.mdc-text-field__input::placeholder{opacity:0}.mdc-text-field__input::-moz-placeholder{opacity:0}.mdc-text-field__input::-webkit-input-placeholder{opacity:0}.mdc-text-field__input:-ms-input-placeholder{opacity:0}.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}.mdc-text-field--outlined .mdc-text-field__input,.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mdc-filled-text-field-input-text-color, var(--mat-app-on-surface));caret-color:var(--mdc-filled-text-field-caret-color, var(--mat-app-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mdc-filled-text-field-error-caret-color)}.mdc-text-field--filled.mdc-text-field--disabled .mdc-text-field__input{color:var(--mdc-filled-text-field-disabled-input-text-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mdc-outlined-text-field-input-text-color, var(--mat-app-on-surface));caret-color:var(--mdc-outlined-text-field-caret-color, var(--mat-app-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color, var(--mat-app-on-surface-variant))}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mdc-outlined-text-field-error-caret-color)}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input{color:var(--mdc-outlined-text-field-disabled-input-text-color)}.mdc-text-field--disabled .cdk-high-contrast-active .mdc-text-field__input{background-color:Window}.mdc-text-field--filled{height:56px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:var(--mdc-filled-text-field-container-shape, var(--mat-app-corner-extra-small-top));border-top-right-radius:var(--mdc-filled-text-field-container-shape, var(--mat-app-corner-extra-small-top))}.mdc-text-field--filled:not(.mdc-text-field--disabled){background-color:var(--mdc-filled-text-field-container-color, var(--mat-app-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled{background-color:var(--mdc-filled-text-field-disabled-container-color)}.mdc-text-field--outlined{height:56px;overflow:visible;padding-right:max(16px,var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small)));padding-left:max(16px,var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small)) + 4px)}[dir=rtl] .mdc-text-field--outlined{padding-right:max(16px,var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small)) + 4px);padding-left:max(16px,var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small)))}.mdc-floating-label{position:absolute;left:0;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label{right:0;left:auto;transform-origin:right top;text-align:right}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:auto}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label{left:auto;right:4px}.mdc-text-field--filled .mdc-floating-label{left:16px;right:auto}[dir=rtl] .mdc-text-field--filled .mdc-floating-label{left:auto;right:16px}.mdc-text-field--disabled .mdc-floating-label{cursor:default}.cdk-high-contrast-active .mdc-text-field--disabled .mdc-floating-label{z-index:1}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mdc-filled-text-field-label-text-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mdc-filled-text-field-focus-label-text-color, var(--mat-app-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mdc-filled-text-field-hover-label-text-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label{color:var(--mdc-filled-text-field-disabled-label-text-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mdc-filled-text-field-error-label-text-color, var(--mat-app-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mdc-filled-text-field-error-focus-label-text-color, var(--mat-app-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mdc-filled-text-field-error-hover-label-text-color, var(--mat-app-on-error-container))}.mdc-text-field--filled .mdc-floating-label{font-family:var(--mdc-filled-text-field-label-text-font, var(--mat-app-body-large-font));font-size:var(--mdc-filled-text-field-label-text-size, var(--mat-app-body-large-size));font-weight:var(--mdc-filled-text-field-label-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mdc-filled-text-field-label-text-tracking, var(--mat-app-body-large-tracking))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mdc-outlined-text-field-label-text-color, var(--mat-app-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mdc-outlined-text-field-focus-label-text-color, var(--mat-app-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mdc-outlined-text-field-hover-label-text-color, var(--mat-app-on-surface))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label{color:var(--mdc-outlined-text-field-disabled-label-text-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mdc-outlined-text-field-error-label-text-color, var(--mat-app-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mdc-outlined-text-field-error-focus-label-text-color, var(--mat-app-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mdc-outlined-text-field-error-hover-label-text-color, var(--mat-app-on-error-container))}.mdc-text-field--outlined .mdc-floating-label{font-family:var(--mdc-outlined-text-field-label-text-font, var(--mat-app-body-large-font));font-size:var(--mdc-outlined-text-field-label-text-size, var(--mat-app-body-large-size));font-weight:var(--mdc-outlined-text-field-label-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mdc-outlined-text-field-label-text-tracking, var(--mat-app-body-large-tracking))}.mdc-floating-label--float-above{cursor:auto;transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1);font-size:.75rem}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0;content:\\\"*\\\"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:0;margin-right:1px}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline{text-align:right}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mat-mdc-notch-piece{box-sizing:border-box;height:100%;pointer-events:none;border-top:1px solid;border-bottom:1px solid}.mdc-text-field--focused .mat-mdc-notch-piece{border-width:2px}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-outline-color, var(--mat-app-outline));border-width:var(--mdc-outlined-text-field-outline-width)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-hover-outline-color, var(--mat-app-on-surface))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-focus-outline-color, var(--mat-app-primary))}.mdc-text-field--outlined.mdc-text-field--disabled .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-disabled-outline-color)}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-error-outline-color, var(--mat-app-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-notched-outline .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-error-hover-outline-color, var(--mat-app-on-error-container))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-error-focus-outline-color, var(--mat-app-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mat-mdc-notch-piece{border-width:var(--mdc-outlined-text-field-focus-outline-width)}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small));border-bottom-left-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small))}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px,var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small)))}[dir=rtl] .mdc-notched-outline__leading{border-left:none;border-right:1px solid;border-bottom-left-radius:0;border-top-left-radius:0;border-top-right-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small));border-bottom-right-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small))}.mdc-notched-outline__trailing{flex-grow:1;border-left:none;border-right:1px solid;border-top-left-radius:0;border-bottom-left-radius:0;border-top-right-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small));border-bottom-right-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small))}[dir=rtl] .mdc-notched-outline__trailing{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small));border-bottom-left-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small))}.mdc-notched-outline__notch{flex:0 0 auto;width:auto}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:min(var(--mat-form-field-notch-max-width, 100%),100% - max(12px,var(--mdc-outlined-text-field-container-shape, var(--mat-app-corner-extra-small)))*2)}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none;--mat-form-field-notch-max-width: 100%}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:\\\"\\\"}.mdc-line-ripple::before{z-index:1;border-bottom-width:var(--mdc-filled-text-field-active-indicator-height)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-active-indicator-color, var(--mat-app-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-hover-active-indicator-color, var(--mat-app-on-surface))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-disabled-active-indicator-color)}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-error-active-indicator-color, var(--mat-app-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-error-hover-active-indicator-color, var(--mat-app-on-error-container))}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-text-field--filled .mdc-line-ripple::after{border-bottom-width:var(--mdc-filled-text-field-focus-active-indicator-height)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mdc-filled-text-field-focus-active-indicator-color, var(--mat-app-primary))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mdc-filled-text-field-error-focus-active-indicator-color, var(--mat-app-error))}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mdc-text-field--disabled{pointer-events:none}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;line-height:normal;pointer-events:all;will-change:auto}.mat-mdc-form-field:not(.mat-form-field-disabled) .mat-mdc-floating-label.mdc-floating-label{cursor:inherit}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto;will-change:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-form-field-disabled .mdc-text-field__input::placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-form-field-disabled .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-form-field-disabled .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-form-field-disabled .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color)}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:1px solid rgba(0,0,0,0)}[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:none;border-right:1px solid rgba(0,0,0,0)}.mat-mdc-form-field-infix{min-height:var(--mat-form-field-container-height);padding-top:var(--mat-form-field-filled-with-label-container-padding-top);padding-bottom:var(--mat-form-field-filled-with-label-container-padding-bottom)}.mdc-text-field--outlined .mat-mdc-form-field-infix,.mdc-text-field--no-label .mat-mdc-form-field-infix{padding-top:var(--mat-form-field-container-vertical-padding);padding-bottom:var(--mat-form-field-container-vertical-padding)}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:calc(var(--mat-form-field-container-height)/2)}.mdc-text-field--filled .mat-mdc-floating-label{display:var(--mat-form-field-filled-label-display, block)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY(calc(calc(6.75px + var(--mat-form-field-container-height) / 2) * -1)) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:\\\"\\\";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block;color:var(--mat-form-field-error-text-color, var(--mat-app-error))}.mat-mdc-form-field-subscript-wrapper,.mat-mdc-form-field-bottom-align::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-subscript-text-font, var(--mat-app-body-small-font));line-height:var(--mat-form-field-subscript-text-line-height, var(--mat-app-body-small-line-height));font-size:var(--mat-form-field-subscript-text-size, var(--mat-app-body-small-size));letter-spacing:var(--mat-form-field-subscript-text-tracking, var(--mat-app-body-small-tracking));font-weight:var(--mat-form-field-subscript-text-weight, var(--mat-app-body-small-weight))}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none;background-color:var(--mat-form-field-state-layer-color, var(--mat-app-on-surface))}.mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-focus-state-layer-opacity)}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option{color:var(--mat-form-field-select-option-text-color)}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option:disabled{color:var(--mat-form-field-select-disabled-option-text-color)}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none;color:var(--mat-form-field-enabled-select-arrow-color, var(--mat-app-on-surface-variant))}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select.mat-focused .mat-mdc-form-field-infix::after{color:var(--mat-form-field-focus-select-arrow-color, var(--mat-app-primary))}.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after{color:var(--mat-form-field-disabled-select-arrow-color)}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}.cdk-high-contrast-active .mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-container-text-font, var(--mat-app-body-large-font));line-height:var(--mat-form-field-container-text-line-height, var(--mat-app-body-large-line-height));font-size:var(--mat-form-field-container-text-size, var(--mat-app-body-large-size));letter-spacing:var(--mat-form-field-container-text-tracking, var(--mat-app-body-large-tracking));font-weight:var(--mat-form-field-container-text-weight, var(--mat-app-body-large-weight))}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(var(--mat-form-field-outlined-label-text-populated-size)*var(--mat-mdc-form-field-floating-label-scale))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mat-form-field-outlined-label-text-populated-size)}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%;z-index:0}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto;position:relative;z-index:1}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:0 12px;box-sizing:content-box}.mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-leading-icon-color, var(--mat-app-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-disabled-leading-icon-color)}.mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-trailing-icon-color, var(--mat-app-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-disabled-trailing-icon-color)}.mat-form-field-invalid .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-trailing-icon-color, var(--mat-app-error))}.mat-form-field-invalid:not(.mat-focused):not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-hover-trailing-icon-color, var(--mat-app-on-error-container))}.mat-form-field-invalid.mat-focused .mat-mdc-text-field-wrapper .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-focus-trailing-icon-color, var(--mat-app-error))}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input{transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::-moz-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input::-webkit-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--no-label .mdc-text-field__input::placeholder,.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--focused .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mat-mdc-form-field:not(.mat-form-field-no-animations).mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field:not(.mat-form-field-no-animations) .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-notched-outline .mdc-floating-label{max-width:calc(100% + 1px)}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:calc(133.3333333333% + 1px)}\"],\n        encapsulation: 2,\n        data: {\n          animation: [matFormFieldAnimations.transitionMessages]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return MatFormField;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatFormFieldModule = /*#__PURE__*/(() => {\n  class MatFormFieldModule {\n    static {\n      this.ɵfac = function MatFormFieldModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatFormFieldModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatFormFieldModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, CommonModule, ObserversModule, MatCommonModule]\n      });\n    }\n  }\n  return MatFormFieldModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n","import * as i1 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, booleanAttribute, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/** Options to pass to the animationstart listener. */\nconst listenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nlet AutofillMonitor = /*#__PURE__*/(() => {\n  class AutofillMonitor {\n    constructor(_platform, _ngZone) {\n      this._platform = _platform;\n      this._ngZone = _ngZone;\n      this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n      if (!this._platform.isBrowser) {\n        return EMPTY;\n      }\n      const element = coerceElement(elementOrRef);\n      const info = this._monitoredElements.get(element);\n      if (info) {\n        return info.subject;\n      }\n      const result = new Subject();\n      const cssClass = 'cdk-text-field-autofilled';\n      const listener = event => {\n        // Animation events fire on initial element render, we check for the presence of the autofill\n        // CSS class to make sure this is a real change in state, not just the initial render before\n        // we fire off events.\n        if (event.animationName === 'cdk-text-field-autofill-start' && !element.classList.contains(cssClass)) {\n          element.classList.add(cssClass);\n          this._ngZone.run(() => result.next({\n            target: event.target,\n            isAutofilled: true\n          }));\n        } else if (event.animationName === 'cdk-text-field-autofill-end' && element.classList.contains(cssClass)) {\n          element.classList.remove(cssClass);\n          this._ngZone.run(() => result.next({\n            target: event.target,\n            isAutofilled: false\n          }));\n        }\n      };\n      this._ngZone.runOutsideAngular(() => {\n        element.addEventListener('animationstart', listener, listenerOptions);\n        element.classList.add('cdk-text-field-autofill-monitored');\n      });\n      this._monitoredElements.set(element, {\n        subject: result,\n        unlisten: () => {\n          element.removeEventListener('animationstart', listener, listenerOptions);\n        }\n      });\n      return result;\n    }\n    stopMonitoring(elementOrRef) {\n      const element = coerceElement(elementOrRef);\n      const info = this._monitoredElements.get(element);\n      if (info) {\n        info.unlisten();\n        info.subject.complete();\n        element.classList.remove('cdk-text-field-autofill-monitored');\n        element.classList.remove('cdk-text-field-autofilled');\n        this._monitoredElements.delete(element);\n      }\n    }\n    ngOnDestroy() {\n      this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    static {\n      this.ɵfac = function AutofillMonitor_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AutofillMonitor)(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: AutofillMonitor,\n        factory: AutofillMonitor.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AutofillMonitor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** A directive that can be used to monitor the autofill state of an input. */\nlet CdkAutofill = /*#__PURE__*/(() => {\n  class CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n      this._elementRef = _elementRef;\n      this._autofillMonitor = _autofillMonitor;\n      /** Emits when the autofill state of the element changes. */\n      this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n      this._autofillMonitor.monitor(this._elementRef).subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n      this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n    static {\n      this.ɵfac = function CdkAutofill_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkAutofill)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(AutofillMonitor));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkAutofill,\n        selectors: [[\"\", \"cdkAutofill\", \"\"]],\n        outputs: {\n          cdkAutofill: \"cdkAutofill\"\n        },\n        standalone: true\n      });\n    }\n  }\n  return CdkAutofill;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Directive to automatically resize a textarea to fit its content. */\nlet CdkTextareaAutosize = /*#__PURE__*/(() => {\n  class CdkTextareaAutosize {\n    /** Minimum amount of rows in the textarea. */\n    get minRows() {\n      return this._minRows;\n    }\n    set minRows(value) {\n      this._minRows = coerceNumberProperty(value);\n      this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() {\n      return this._maxRows;\n    }\n    set maxRows(value) {\n      this._maxRows = coerceNumberProperty(value);\n      this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() {\n      return this._enabled;\n    }\n    set enabled(value) {\n      // Only act if the actual value changed. This specifically helps to not run\n      // resizeToFitContent too early (i.e. before ngAfterViewInit)\n      if (this._enabled !== value) {\n        (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n      }\n    }\n    get placeholder() {\n      return this._textareaElement.placeholder;\n    }\n    set placeholder(value) {\n      this._cachedPlaceholderHeight = undefined;\n      if (value) {\n        this._textareaElement.setAttribute('placeholder', value);\n      } else {\n        this._textareaElement.removeAttribute('placeholder');\n      }\n      this._cacheTextareaPlaceholderHeight();\n    }\n    constructor(_elementRef, _platform, _ngZone, /** @breaking-change 11.0.0 make document required */\n    document) {\n      this._elementRef = _elementRef;\n      this._platform = _platform;\n      this._ngZone = _ngZone;\n      this._destroyed = new Subject();\n      this._enabled = true;\n      /**\n       * Value of minRows as of last resize. If the minRows has decreased, the\n       * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n       * does not have the same problem because it does not affect the textarea's scrollHeight.\n       */\n      this._previousMinRows = -1;\n      this._isViewInited = false;\n      /** Handles `focus` and `blur` events. */\n      this._handleFocusEvent = event => {\n        this._hasFocus = event.type === 'focus';\n      };\n      this._document = document;\n      this._textareaElement = this._elementRef.nativeElement;\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n      const minHeight = this.minRows && this._cachedLineHeight ? `${this.minRows * this._cachedLineHeight}px` : null;\n      if (minHeight) {\n        this._textareaElement.style.minHeight = minHeight;\n      }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n      const maxHeight = this.maxRows && this._cachedLineHeight ? `${this.maxRows * this._cachedLineHeight}px` : null;\n      if (maxHeight) {\n        this._textareaElement.style.maxHeight = maxHeight;\n      }\n    }\n    ngAfterViewInit() {\n      if (this._platform.isBrowser) {\n        // Remember the height which we started with in case autosizing is disabled\n        this._initialHeight = this._textareaElement.style.height;\n        this.resizeToFitContent();\n        this._ngZone.runOutsideAngular(() => {\n          const window = this._getWindow();\n          fromEvent(window, 'resize').pipe(auditTime(16), takeUntil(this._destroyed)).subscribe(() => this.resizeToFitContent(true));\n          this._textareaElement.addEventListener('focus', this._handleFocusEvent);\n          this._textareaElement.addEventListener('blur', this._handleFocusEvent);\n        });\n        this._isViewInited = true;\n        this.resizeToFitContent(true);\n      }\n    }\n    ngOnDestroy() {\n      this._textareaElement.removeEventListener('focus', this._handleFocusEvent);\n      this._textareaElement.removeEventListener('blur', this._handleFocusEvent);\n      this._destroyed.next();\n      this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n      if (this._cachedLineHeight) {\n        return;\n      }\n      // Use a clone element because we have to override some styles.\n      let textareaClone = this._textareaElement.cloneNode(false);\n      textareaClone.rows = 1;\n      // Use `position: absolute` so that this doesn't cause a browser layout and use\n      // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n      // would affect the height.\n      textareaClone.style.position = 'absolute';\n      textareaClone.style.visibility = 'hidden';\n      textareaClone.style.border = 'none';\n      textareaClone.style.padding = '0';\n      textareaClone.style.height = '';\n      textareaClone.style.minHeight = '';\n      textareaClone.style.maxHeight = '';\n      // In Firefox it happens that textarea elements are always bigger than the specified amount\n      // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n      // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n      // to hidden. This ensures that there is no invalid calculation of the line height.\n      // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n      textareaClone.style.overflow = 'hidden';\n      this._textareaElement.parentNode.appendChild(textareaClone);\n      this._cachedLineHeight = textareaClone.clientHeight;\n      textareaClone.remove();\n      // Min and max heights have to be re-calculated if the cached line height changes\n      this._setMinHeight();\n      this._setMaxHeight();\n    }\n    _measureScrollHeight() {\n      const element = this._textareaElement;\n      const previousMargin = element.style.marginBottom || '';\n      const isFirefox = this._platform.FIREFOX;\n      const needsMarginFiller = isFirefox && this._hasFocus;\n      const measuringClass = isFirefox ? 'cdk-textarea-autosize-measuring-firefox' : 'cdk-textarea-autosize-measuring';\n      // In some cases the page might move around while we're measuring the `textarea` on Firefox. We\n      // work around it by assigning a temporary margin with the same height as the `textarea` so that\n      // it occupies the same amount of space. See #23233.\n      if (needsMarginFiller) {\n        element.style.marginBottom = `${element.clientHeight}px`;\n      }\n      // Reset the textarea height to auto in order to shrink back to its default size.\n      // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n      element.classList.add(measuringClass);\n      // The measuring class includes a 2px padding to workaround an issue with Chrome,\n      // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n      const scrollHeight = element.scrollHeight - 4;\n      element.classList.remove(measuringClass);\n      if (needsMarginFiller) {\n        element.style.marginBottom = previousMargin;\n      }\n      return scrollHeight;\n    }\n    _cacheTextareaPlaceholderHeight() {\n      if (!this._isViewInited || this._cachedPlaceholderHeight != undefined) {\n        return;\n      }\n      if (!this.placeholder) {\n        this._cachedPlaceholderHeight = 0;\n        return;\n      }\n      const value = this._textareaElement.value;\n      this._textareaElement.value = this._textareaElement.placeholder;\n      this._cachedPlaceholderHeight = this._measureScrollHeight();\n      this._textareaElement.value = value;\n    }\n    ngDoCheck() {\n      if (this._platform.isBrowser) {\n        this.resizeToFitContent();\n      }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n      // If autosizing is disabled, just skip everything else\n      if (!this._enabled) {\n        return;\n      }\n      this._cacheTextareaLineHeight();\n      this._cacheTextareaPlaceholderHeight();\n      // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n      // in checking the height of the textarea.\n      if (!this._cachedLineHeight) {\n        return;\n      }\n      const textarea = this._elementRef.nativeElement;\n      const value = textarea.value;\n      // Only resize if the value or minRows have changed since these calculations can be expensive.\n      if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n        return;\n      }\n      const scrollHeight = this._measureScrollHeight();\n      const height = Math.max(scrollHeight, this._cachedPlaceholderHeight || 0);\n      // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n      textarea.style.height = `${height}px`;\n      this._ngZone.runOutsideAngular(() => {\n        if (typeof requestAnimationFrame !== 'undefined') {\n          requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n        } else {\n          setTimeout(() => this._scrollToCaretPosition(textarea));\n        }\n      });\n      this._previousValue = value;\n      this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n      // Do not try to change the textarea, if the initialHeight has not been determined yet\n      // This might potentially remove styles when reset() is called before ngAfterViewInit\n      if (this._initialHeight !== undefined) {\n        this._textareaElement.style.height = this._initialHeight;\n      }\n    }\n    _noopInputHandler() {\n      // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n      return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n      const doc = this._getDocument();\n      return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n      const {\n        selectionStart,\n        selectionEnd\n      } = textarea;\n      // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n      // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n      // between the time we requested the animation frame and when it was executed.\n      // Also note that we have to assert that the textarea is focused before we set the\n      // selection range. Setting the selection range on a non-focused textarea will cause\n      // it to receive focus on IE and Edge.\n      if (!this._destroyed.isStopped && this._hasFocus) {\n        textarea.setSelectionRange(selectionStart, selectionEnd);\n      }\n    }\n    static {\n      this.ɵfac = function CdkTextareaAutosize_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkTextareaAutosize)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(DOCUMENT, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkTextareaAutosize,\n        selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]],\n        hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"],\n        hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() {\n              return ctx._noopInputHandler();\n            });\n          }\n        },\n        inputs: {\n          minRows: [0, \"cdkAutosizeMinRows\", \"minRows\"],\n          maxRows: [0, \"cdkAutosizeMaxRows\", \"maxRows\"],\n          enabled: [2, \"cdkTextareaAutosize\", \"enabled\", booleanAttribute],\n          placeholder: \"placeholder\"\n        },\n        exportAs: [\"cdkTextareaAutosize\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return CdkTextareaAutosize;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TextFieldModule = /*#__PURE__*/(() => {\n  class TextFieldModule {\n    static {\n      this.ɵfac = function TextFieldModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TextFieldModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: TextFieldModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return TextFieldModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { getSupportedInputTypes } from '@angular/cdk/platform';\nimport * as i4 from '@angular/cdk/text-field';\nimport { TextFieldModule } from '@angular/cdk/text-field';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Optional, Self, Inject, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport * as i3 from '@angular/material/core';\nimport { _ErrorStateTracker, MatCommonModule } from '@angular/material/core';\nimport * as i5 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nexport { MatError, MatFormField, MatHint, MatLabel, MatPrefix, MatSuffix } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n  return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = /*#__PURE__*/new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = ['button', 'checkbox', 'file', 'hidden', 'image', 'radio', 'range', 'reset', 'submit'];\nlet nextUniqueId = 0;\nlet MatInput = /*#__PURE__*/(() => {\n  class MatInput {\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n      // Browsers may not fire the blur event if the input is disabled too quickly.\n      // Reset from here to ensure that the element doesn't become stuck.\n      if (this.focused) {\n        this.focused = false;\n        this.stateChanges.next();\n      }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n      return this._id;\n    }\n    set id(value) {\n      this._id = value || this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n      return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n      this._required = coerceBooleanProperty(value);\n    }\n    /** Input type of the element. */\n    get type() {\n      return this._type;\n    }\n    set type(value) {\n      this._type = value || 'text';\n      this._validateType();\n      // When using Angular inputs, developers are no longer able to set the properties on the native\n      // input element. To ensure that bindings for `type` work, we need to sync the setter\n      // with the native property. Textarea elements don't support the type property or attribute.\n      if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n        this._elementRef.nativeElement.type = this._type;\n      }\n      this._ensureWheelDefaultBehavior();\n    }\n    /** An object used to control when error messages are shown. */\n    get errorStateMatcher() {\n      return this._errorStateTracker.matcher;\n    }\n    set errorStateMatcher(value) {\n      this._errorStateTracker.matcher = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n      return this._inputValueAccessor.value;\n    }\n    set value(value) {\n      if (value !== this.value) {\n        this._inputValueAccessor.value = value;\n        this.stateChanges.next();\n      }\n    }\n    /** Whether the element is readonly. */\n    get readonly() {\n      return this._readonly;\n    }\n    set readonly(value) {\n      this._readonly = coerceBooleanProperty(value);\n    }\n    /** Whether the input is in an error state. */\n    get errorState() {\n      return this._errorStateTracker.errorState;\n    }\n    set errorState(value) {\n      this._errorStateTracker.errorState = value;\n    }\n    constructor(_elementRef, _platform, ngControl, parentForm, parentFormGroup, defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, _ngZone,\n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form field for determining whether the placeholder has been promoted.\n    _formField) {\n      this._elementRef = _elementRef;\n      this._platform = _platform;\n      this.ngControl = ngControl;\n      this._autofillMonitor = _autofillMonitor;\n      this._ngZone = _ngZone;\n      this._formField = _formField;\n      this._uid = `mat-input-${nextUniqueId++}`;\n      this._webkitBlinkWheelListenerAttached = false;\n      /**\n       * Implemented as part of MatFormFieldControl.\n       * @docs-private\n       */\n      this.focused = false;\n      /**\n       * Implemented as part of MatFormFieldControl.\n       * @docs-private\n       */\n      this.stateChanges = new Subject();\n      /**\n       * Implemented as part of MatFormFieldControl.\n       * @docs-private\n       */\n      this.controlType = 'mat-input';\n      /**\n       * Implemented as part of MatFormFieldControl.\n       * @docs-private\n       */\n      this.autofilled = false;\n      this._disabled = false;\n      this._type = 'text';\n      this._readonly = false;\n      this._neverEmptyInputTypes = ['date', 'datetime', 'datetime-local', 'month', 'time', 'week'].filter(t => getSupportedInputTypes().has(t));\n      this._iOSKeyupListener = event => {\n        const el = event.target;\n        // Note: We specifically check for 0, rather than `!el.selectionStart`, because the two\n        // indicate different things. If the value is 0, it means that the caret is at the start\n        // of the input, whereas a value of `null` means that the input doesn't support\n        // manipulating the selection range. Inputs that don't support setting the selection range\n        // will throw an error so we want to avoid calling `setSelectionRange` on them. See:\n        // https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n        if (!el.value && el.selectionStart === 0 && el.selectionEnd === 0) {\n          // Note: Just setting `0, 0` doesn't fix the issue. Setting\n          // `1, 1` fixes it for the first time that you type text and\n          // then hold delete. Toggling to `1, 1` and then back to\n          // `0, 0` seems to completely fix it.\n          el.setSelectionRange(1, 1);\n          el.setSelectionRange(0, 0);\n        }\n      };\n      this._webkitBlinkWheelListener = () => {\n        // This is a noop function and is used to enable mouse wheel input\n        // on number inputs\n        // on blink and webkit browsers.\n      };\n      const element = this._elementRef.nativeElement;\n      const nodeName = element.nodeName.toLowerCase();\n      // If no input value accessor was explicitly specified, use the element as the input value\n      // accessor.\n      this._inputValueAccessor = inputValueAccessor || element;\n      this._previousNativeValue = this.value;\n      // Force setter to be called in case id was not specified.\n      this.id = this.id;\n      // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n      // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n      // exists on iOS, we only bother to install the listener on iOS.\n      if (_platform.IOS) {\n        _ngZone.runOutsideAngular(() => {\n          _elementRef.nativeElement.addEventListener('keyup', this._iOSKeyupListener);\n        });\n      }\n      this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, ngControl, parentFormGroup, parentForm, this.stateChanges);\n      this._isServer = !this._platform.isBrowser;\n      this._isNativeSelect = nodeName === 'select';\n      this._isTextarea = nodeName === 'textarea';\n      this._isInFormField = !!_formField;\n      if (this._isNativeSelect) {\n        this.controlType = element.multiple ? 'mat-native-select-multiple' : 'mat-native-select';\n      }\n    }\n    ngAfterViewInit() {\n      if (this._platform.isBrowser) {\n        this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n          this.autofilled = event.isAutofilled;\n          this.stateChanges.next();\n        });\n      }\n    }\n    ngOnChanges() {\n      this.stateChanges.next();\n    }\n    ngOnDestroy() {\n      this.stateChanges.complete();\n      if (this._platform.isBrowser) {\n        this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n      }\n      if (this._platform.IOS) {\n        this._elementRef.nativeElement.removeEventListener('keyup', this._iOSKeyupListener);\n      }\n      if (this._webkitBlinkWheelListenerAttached) {\n        this._elementRef.nativeElement.removeEventListener('wheel', this._webkitBlinkWheelListener);\n      }\n    }\n    ngDoCheck() {\n      if (this.ngControl) {\n        // We need to re-evaluate this on every change detection cycle, because there are some\n        // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n        // that whatever logic is in here has to be super lean or we risk destroying the performance.\n        this.updateErrorState();\n        // Since the input isn't a `ControlValueAccessor`, we don't have a good way of knowing when\n        // the disabled state has changed. We can't use the `ngControl.statusChanges`, because it\n        // won't fire if the input is disabled with `emitEvents = false`, despite the input becoming\n        // disabled.\n        if (this.ngControl.disabled !== null && this.ngControl.disabled !== this.disabled) {\n          this.disabled = this.ngControl.disabled;\n          this.stateChanges.next();\n        }\n      }\n      // We need to dirty-check the native element's value, because there are some cases where\n      // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n      // updating the value using `emitEvent: false`).\n      this._dirtyCheckNativeValue();\n      // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n      // present or not depends on a query which is prone to \"changed after checked\" errors.\n      this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n      this._elementRef.nativeElement.focus(options);\n    }\n    /** Refreshes the error state of the input. */\n    updateErrorState() {\n      this._errorStateTracker.updateErrorState();\n    }\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused) {\n      if (isFocused !== this.focused) {\n        this.focused = isFocused;\n        this.stateChanges.next();\n      }\n    }\n    _onInput() {\n      // This is a noop function and is used to let Angular know whenever the value changes.\n      // Angular will run a new change detection each time the `input` event has been dispatched.\n      // It's necessary that Angular recognizes the value change, because when floatingLabel\n      // is set to false and Angular forms aren't used, the placeholder won't recognize the\n      // value changes and will not disappear.\n      // Listening to the input event wouldn't be necessary when the input is using the\n      // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n      const newValue = this._elementRef.nativeElement.value;\n      if (this._previousNativeValue !== newValue) {\n        this._previousNativeValue = newValue;\n        this.stateChanges.next();\n      }\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n      const placeholder = this._getPlaceholder();\n      if (placeholder !== this._previousPlaceholder) {\n        const element = this._elementRef.nativeElement;\n        this._previousPlaceholder = placeholder;\n        placeholder ? element.setAttribute('placeholder', placeholder) : element.removeAttribute('placeholder');\n      }\n    }\n    /** Gets the current placeholder of the form field. */\n    _getPlaceholder() {\n      return this.placeholder || null;\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n      if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getMatInputUnsupportedTypeError(this._type);\n      }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n      return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n      // The `validity` property won't be present on platform-server.\n      let validity = this._elementRef.nativeElement.validity;\n      return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n      return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() && !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n      if (this._isNativeSelect) {\n        // For a single-selection `<select>`, the label should float when the selected option has\n        // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n        // overlapping the label with the options.\n        const selectElement = this._elementRef.nativeElement;\n        const firstOption = selectElement.options[0];\n        // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n        // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n        return this.focused || selectElement.multiple || !this.empty || !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n      } else {\n        return this.focused || !this.empty;\n      }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n      if (ids.length) {\n        this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n      } else {\n        this._elementRef.nativeElement.removeAttribute('aria-describedby');\n      }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n      // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n      // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n      // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n      if (!this.focused) {\n        this.focus();\n      }\n    }\n    /** Whether the form control is a native select that is displayed inline. */\n    _isInlineSelect() {\n      const element = this._elementRef.nativeElement;\n      return this._isNativeSelect && (element.multiple || element.size > 1);\n    }\n    /**\n     * In blink and webkit browsers a focused number input does not increment or decrement its value\n     * on mouse wheel interaction unless a wheel event listener is attached to it or one of its ancestors or a passive wheel listener is attached somewhere in the DOM.\n     * For example: Hitting a tooltip once enables the mouse wheel input for all number inputs as long as it exists.\n     * In order to get reliable and intuitive behavior we apply a wheel event on our own\n     * thus making sure increment and decrement by mouse wheel works every time.\n     * @docs-private\n     */\n    _ensureWheelDefaultBehavior() {\n      if (!this._webkitBlinkWheelListenerAttached && this._type === 'number' && (this._platform.BLINK || this._platform.WEBKIT)) {\n        this._ngZone.runOutsideAngular(() => {\n          this._elementRef.nativeElement.addEventListener('wheel', this._webkitBlinkWheelListener);\n        });\n        this._webkitBlinkWheelListenerAttached = true;\n      }\n      if (this._webkitBlinkWheelListenerAttached && this._type !== 'number') {\n        this._elementRef.nativeElement.removeEventListener('wheel', this._webkitBlinkWheelListener);\n        this._webkitBlinkWheelListenerAttached = true;\n      }\n    }\n    static {\n      this.ɵfac = function MatInput_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatInput)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i2.NgControl, 10), i0.ɵɵdirectiveInject(i2.NgForm, 8), i0.ɵɵdirectiveInject(i2.FormGroupDirective, 8), i0.ɵɵdirectiveInject(i3.ErrorStateMatcher), i0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(i4.AutofillMonitor), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatInput,\n        selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-input-element\"],\n        hostVars: 18,\n        hostBindings: function MatInput_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() {\n              return ctx._focusChanged(true);\n            })(\"blur\", function MatInput_blur_HostBindingHandler() {\n              return ctx._focusChanged(false);\n            })(\"input\", function MatInput_input_HostBindingHandler() {\n              return ctx._onInput();\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"id\", ctx.id)(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n            i0.ɵɵattribute(\"name\", ctx.name || null)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-invalid\", ctx.empty && ctx.required ? null : ctx.errorState)(\"aria-required\", ctx.required)(\"id\", ctx.id);\n            i0.ɵɵclassProp(\"mat-input-server\", ctx._isServer)(\"mat-mdc-form-field-textarea-control\", ctx._isInFormField && ctx._isTextarea)(\"mat-mdc-form-field-input-control\", ctx._isInFormField)(\"mdc-text-field__input\", ctx._isInFormField)(\"mat-mdc-native-select-inline\", ctx._isInlineSelect());\n          }\n        },\n        inputs: {\n          disabled: \"disabled\",\n          id: \"id\",\n          placeholder: \"placeholder\",\n          name: \"name\",\n          required: \"required\",\n          type: \"type\",\n          errorStateMatcher: \"errorStateMatcher\",\n          userAriaDescribedBy: [0, \"aria-describedby\", \"userAriaDescribedBy\"],\n          value: \"value\",\n          readonly: \"readonly\"\n        },\n        exportAs: [\"matInput\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MatFormFieldControl,\n          useExisting: MatInput\n        }]), i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return MatInput;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatInputModule = /*#__PURE__*/(() => {\n  class MatInputModule {\n    static {\n      this.ɵfac = function MatInputModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatInputModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatInputModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, MatFormFieldModule, MatFormFieldModule, TextFieldModule, MatCommonModule]\n      });\n    }\n  }\n  return MatInputModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, getMatInputUnsupportedTypeError };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, ANIMATION_MODULE_TYPE, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, Input, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-progress-bar`. */\nfunction MatProgressBar_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 2);\n  }\n}\nconst MAT_PROGRESS_BAR_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('MAT_PROGRESS_BAR_DEFAULT_OPTIONS');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_PROGRESS_BAR_LOCATION = /*#__PURE__*/new InjectionToken('mat-progress-bar-location', {\n  providedIn: 'root',\n  factory: MAT_PROGRESS_BAR_LOCATION_FACTORY\n});\n/** @docs-private */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n  const _document = inject(DOCUMENT);\n  const _location = _document ? _document.location : null;\n  return {\n    // Note that this needs to be a function, rather than a property, because Angular\n    // will only resolve it once, but we want the current path on each call.\n    getPathname: () => _location ? _location.pathname + _location.search : ''\n  };\n}\nlet MatProgressBar = /*#__PURE__*/(() => {\n  class MatProgressBar {\n    constructor(_elementRef, _ngZone, _changeDetectorRef, _animationMode, defaults) {\n      this._elementRef = _elementRef;\n      this._ngZone = _ngZone;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._animationMode = _animationMode;\n      /** Flag that indicates whether NoopAnimations mode is set to true. */\n      this._isNoopAnimation = false;\n      this._defaultColor = 'primary';\n      this._value = 0;\n      this._bufferValue = 0;\n      /**\n       * Event emitted when animation of the primary progress bar completes. This event will not\n       * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n       * animations (indeterminate and query).\n       */\n      this.animationEnd = new EventEmitter();\n      this._mode = 'determinate';\n      /** Event handler for `transitionend` events. */\n      this._transitionendHandler = event => {\n        if (this.animationEnd.observers.length === 0 || !event.target || !event.target.classList.contains('mdc-linear-progress__primary-bar')) {\n          return;\n        }\n        if (this.mode === 'determinate' || this.mode === 'buffer') {\n          this._ngZone.run(() => this.animationEnd.next({\n            value: this.value\n          }));\n        }\n      };\n      this._isNoopAnimation = _animationMode === 'NoopAnimations';\n      if (defaults) {\n        if (defaults.color) {\n          this.color = this._defaultColor = defaults.color;\n        }\n        this.mode = defaults.mode || this.mode;\n      }\n    }\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n    /**\n     * Theme color of the progress bar. This API is supported in M2 themes only, it\n     * has no effect in M3 themes.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/theming#using-component-color-variants.\n     */\n    get color() {\n      return this._color || this._defaultColor;\n    }\n    set color(value) {\n      this._color = value;\n    }\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() {\n      return this._value;\n    }\n    set value(v) {\n      this._value = clamp(v || 0);\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Buffer value of the progress bar. Defaults to zero. */\n    get bufferValue() {\n      return this._bufferValue || 0;\n    }\n    set bufferValue(v) {\n      this._bufferValue = clamp(v || 0);\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Mode of the progress bar.\n     *\n     * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n     * 'determinate'.\n     * Mirrored to mode attribute.\n     */\n    get mode() {\n      return this._mode;\n    }\n    set mode(value) {\n      // Note that we don't technically need a getter and a setter here,\n      // but we use it to match the behavior of the existing mat-progress-bar.\n      this._mode = value;\n      this._changeDetectorRef.markForCheck();\n    }\n    ngAfterViewInit() {\n      // Run outside angular so change detection didn't get triggered on every transition end\n      // instead only on the animation that we care about (primary value bar's transitionend)\n      this._ngZone.runOutsideAngular(() => {\n        this._elementRef.nativeElement.addEventListener('transitionend', this._transitionendHandler);\n      });\n    }\n    ngOnDestroy() {\n      this._elementRef.nativeElement.removeEventListener('transitionend', this._transitionendHandler);\n    }\n    /** Gets the transform style that should be applied to the primary bar. */\n    _getPrimaryBarTransform() {\n      return `scaleX(${this._isIndeterminate() ? 1 : this.value / 100})`;\n    }\n    /** Gets the `flex-basis` value that should be applied to the buffer bar. */\n    _getBufferBarFlexBasis() {\n      return `${this.mode === 'buffer' ? this.bufferValue : 100}%`;\n    }\n    /** Returns whether the progress bar is indeterminate. */\n    _isIndeterminate() {\n      return this.mode === 'indeterminate' || this.mode === 'query';\n    }\n    static {\n      this.ɵfac = function MatProgressBar_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatProgressBar)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_PROGRESS_BAR_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatProgressBar,\n        selectors: [[\"mat-progress-bar\"]],\n        hostAttrs: [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"tabindex\", \"-1\", 1, \"mat-mdc-progress-bar\", \"mdc-linear-progress\"],\n        hostVars: 10,\n        hostBindings: function MatProgressBar_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-valuenow\", ctx._isIndeterminate() ? null : ctx.value)(\"mode\", ctx.mode);\n            i0.ɵɵclassMap(\"mat-\" + ctx.color);\n            i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._isNoopAnimation)(\"mdc-linear-progress--animation-ready\", !ctx._isNoopAnimation)(\"mdc-linear-progress--indeterminate\", ctx._isIndeterminate());\n          }\n        },\n        inputs: {\n          color: \"color\",\n          value: [2, \"value\", \"value\", numberAttribute],\n          bufferValue: [2, \"bufferValue\", \"bufferValue\", numberAttribute],\n          mode: \"mode\"\n        },\n        outputs: {\n          animationEnd: \"animationEnd\"\n        },\n        exportAs: [\"matProgressBar\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        decls: 7,\n        vars: 5,\n        consts: [[\"aria-hidden\", \"true\", 1, \"mdc-linear-progress__buffer\"], [1, \"mdc-linear-progress__buffer-bar\"], [1, \"mdc-linear-progress__buffer-dots\"], [\"aria-hidden\", \"true\", 1, \"mdc-linear-progress__bar\", \"mdc-linear-progress__primary-bar\"], [1, \"mdc-linear-progress__bar-inner\"], [\"aria-hidden\", \"true\", 1, \"mdc-linear-progress__bar\", \"mdc-linear-progress__secondary-bar\"]],\n        template: function MatProgressBar_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵelement(1, \"div\", 1);\n            i0.ɵɵtemplate(2, MatProgressBar_Conditional_2_Template, 1, 0, \"div\", 2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 3);\n            i0.ɵɵelement(4, \"span\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"div\", 5);\n            i0.ɵɵelement(6, \"span\", 4);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"flex-basis\", ctx._getBufferBarFlexBasis());\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.mode === \"buffer\" ? 2 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"transform\", ctx._getPrimaryBarTransform());\n          }\n        },\n        styles: [\".mat-mdc-progress-bar{display:block;text-align:start}.mat-mdc-progress-bar[mode=query]{transform:scaleX(-1)}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-dots,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__secondary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__bar-inner.mdc-linear-progress__bar-inner{animation:none}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-bar{transition:transform 1ms}.mdc-linear-progress{position:relative;width:100%;transform:translateZ(0);outline:1px solid rgba(0,0,0,0);overflow-x:hidden;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);height:max(var(--mdc-linear-progress-track-height),var(--mdc-linear-progress-active-indicator-height))}.cdk-high-contrast-active .mdc-linear-progress{outline-color:CanvasText}.mdc-linear-progress__bar{position:absolute;top:0;bottom:0;margin:auto 0;width:100%;animation:none;transform-origin:top left;transition:transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);height:var(--mdc-linear-progress-active-indicator-height)}.mdc-linear-progress--indeterminate .mdc-linear-progress__bar{transition:none}[dir=rtl] .mdc-linear-progress__bar{right:0;transform-origin:center right}.mdc-linear-progress__bar-inner{display:inline-block;position:absolute;width:100%;animation:none;border-top-style:solid;border-color:var(--mdc-linear-progress-active-indicator-color, var(--mat-app-primary));border-top-width:var(--mdc-linear-progress-active-indicator-height)}.mdc-linear-progress__buffer{display:flex;position:absolute;top:0;bottom:0;margin:auto 0;width:100%;overflow:hidden;height:var(--mdc-linear-progress-track-height);border-radius:var(--mdc-linear-progress-track-shape, var(--mat-app-corner-none))}.mdc-linear-progress__buffer-dots{-webkit-mask-image:url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\\\");mask-image:url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\\\");background-repeat:repeat-x;flex:auto;transform:rotate(180deg);animation:mdc-linear-progress-buffering 250ms infinite linear;background-color:var(--mdc-linear-progress-track-color, var(--mat-app-surface-variant))}.cdk-high-contrast-active .mdc-linear-progress__buffer-dots{background-color:ButtonBorder}[dir=rtl] .mdc-linear-progress__buffer-dots{animation:mdc-linear-progress-buffering-reverse 250ms infinite linear;transform:rotate(0)}.mdc-linear-progress__buffer-bar{flex:0 1 100%;transition:flex-basis 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);background-color:var(--mdc-linear-progress-track-color, var(--mat-app-surface-variant))}.mdc-linear-progress__primary-bar{transform:scaleX(0)}.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{left:-145.166611%}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation:mdc-linear-progress-primary-indeterminate-translate 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-primary-indeterminate-scale 2s infinite linear}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation-name:mdc-linear-progress-primary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{right:-145.166611%;left:auto}.mdc-linear-progress__secondary-bar{display:none}.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{left:-54.888891%;display:block}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation:mdc-linear-progress-secondary-indeterminate-translate 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-secondary-indeterminate-scale 2s infinite linear}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation-name:mdc-linear-progress-secondary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{right:-54.888891%;left:auto}@keyframes mdc-linear-progress-buffering{from{transform:rotate(180deg) translateX(calc(var(--mdc-linear-progress-track-height) * -2.5))}}@keyframes mdc-linear-progress-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mdc-linear-progress-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mdc-linear-progress-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.205028, 0.057051, 0.57661, 0.453971);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.152313, 0.196432, 0.648374, 1.004315);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.257759, -0.003163, 0.211762, 1.38179);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-primary-indeterminate-translate-reverse{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(-83.67142%)}100%{transform:translateX(-200.611057%)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate-reverse{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(-37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(-84.386165%)}100%{transform:translateX(-160.277782%)}}@keyframes mdc-linear-progress-buffering-reverse{from{transform:translateX(-10px)}}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatProgressBar;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp(v, min = 0, max = 100) {\n  return Math.max(min, Math.min(max, v));\n}\nlet MatProgressBarModule = /*#__PURE__*/(() => {\n  class MatProgressBarModule {\n    static {\n      this.ɵfac = function MatProgressBarModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatProgressBarModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatProgressBarModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule]\n      });\n    }\n  }\n  return MatProgressBarModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_BAR_DEFAULT_OPTIONS, MAT_PROGRESS_BAR_LOCATION, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBar, MatProgressBarModule };\n","import { coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Input, Injectable, Optional, Inject, inject, Injector, afterNextRender, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, ViewChild, SkipSelf, ElementRef, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nimport { getRtlScrollAxisType, RtlScrollAxisType, supportsScrollBehavior, Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/cdk/collections';\nimport { isDataSource, ArrayDataSource, _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy } from '@angular/cdk/collections';\n\n/** The injection token used to specify the virtual scrolling strategy. */\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nconst VIRTUAL_SCROLL_STRATEGY = /*#__PURE__*/new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n  /**\n   * @param itemSize The size of the items in the virtually scrolling list.\n   * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n   * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n   */\n  constructor(itemSize, minBufferPx, maxBufferPx) {\n    this._scrolledIndexChange = new Subject();\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n    /** The attached viewport. */\n    this._viewport = null;\n    this._itemSize = itemSize;\n    this._minBufferPx = minBufferPx;\n    this._maxBufferPx = maxBufferPx;\n  }\n  /**\n   * Attaches this scroll strategy to a viewport.\n   * @param viewport The viewport to attach this strategy to.\n   */\n  attach(viewport) {\n    this._viewport = viewport;\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n  /** Detaches this scroll strategy from the currently attached viewport. */\n  detach() {\n    this._scrolledIndexChange.complete();\n    this._viewport = null;\n  }\n  /**\n   * Update the item size and buffer size.\n   * @param itemSize The size of the items in the virtually scrolling list.\n   * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n   * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n   */\n  updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n    if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n    }\n    this._itemSize = itemSize;\n    this._minBufferPx = minBufferPx;\n    this._maxBufferPx = maxBufferPx;\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onContentScrolled() {\n    this._updateRenderedRange();\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onDataLengthChanged() {\n    this._updateTotalContentSize();\n    this._updateRenderedRange();\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onContentRendered() {\n    /* no-op */\n  }\n  /** @docs-private Implemented as part of VirtualScrollStrategy. */\n  onRenderedOffsetChanged() {\n    /* no-op */\n  }\n  /**\n   * Scroll to the offset for the given index.\n   * @param index The index of the element to scroll to.\n   * @param behavior The ScrollBehavior to use when scrolling.\n   */\n  scrollToIndex(index, behavior) {\n    if (this._viewport) {\n      this._viewport.scrollToOffset(index * this._itemSize, behavior);\n    }\n  }\n  /** Update the viewport's total content size. */\n  _updateTotalContentSize() {\n    if (!this._viewport) {\n      return;\n    }\n    this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n  }\n  /** Update the viewport's rendered range. */\n  _updateRenderedRange() {\n    if (!this._viewport) {\n      return;\n    }\n    const renderedRange = this._viewport.getRenderedRange();\n    const newRange = {\n      start: renderedRange.start,\n      end: renderedRange.end\n    };\n    const viewportSize = this._viewport.getViewportSize();\n    const dataLength = this._viewport.getDataLength();\n    let scrollOffset = this._viewport.measureScrollOffset();\n    // Prevent NaN as result when dividing by zero.\n    let firstVisibleIndex = this._itemSize > 0 ? scrollOffset / this._itemSize : 0;\n    // If user scrolls to the bottom of the list and data changes to a smaller list\n    if (newRange.end > dataLength) {\n      // We have to recalculate the first visible index based on new data length and viewport size.\n      const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n      const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n      // If first visible index changed we must update scroll offset to handle start/end buffers\n      // Current range must also be adjusted to cover the new position (bottom of new list).\n      if (firstVisibleIndex != newVisibleIndex) {\n        firstVisibleIndex = newVisibleIndex;\n        scrollOffset = newVisibleIndex * this._itemSize;\n        newRange.start = Math.floor(firstVisibleIndex);\n      }\n      newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n    }\n    const startBuffer = scrollOffset - newRange.start * this._itemSize;\n    if (startBuffer < this._minBufferPx && newRange.start != 0) {\n      const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n      newRange.start = Math.max(0, newRange.start - expandStart);\n      newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n    } else {\n      const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n      if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n        const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n        if (expandEnd > 0) {\n          newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n          newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n        }\n      }\n    }\n    this._viewport.setRenderedRange(newRange);\n    this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n    this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n  }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n  return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nlet CdkFixedSizeVirtualScroll = /*#__PURE__*/(() => {\n  class CdkFixedSizeVirtualScroll {\n    constructor() {\n      this._itemSize = 20;\n      this._minBufferPx = 100;\n      this._maxBufferPx = 200;\n      /** The scroll strategy used by this directive. */\n      this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /** The size of the items in the list (in pixels). */\n    get itemSize() {\n      return this._itemSize;\n    }\n    set itemSize(value) {\n      this._itemSize = coerceNumberProperty(value);\n    }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() {\n      return this._minBufferPx;\n    }\n    set minBufferPx(value) {\n      this._minBufferPx = coerceNumberProperty(value);\n    }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() {\n      return this._maxBufferPx;\n    }\n    set maxBufferPx(value) {\n      this._maxBufferPx = coerceNumberProperty(value);\n    }\n    ngOnChanges() {\n      this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    static {\n      this.ɵfac = function CdkFixedSizeVirtualScroll_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkFixedSizeVirtualScroll)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkFixedSizeVirtualScroll,\n        selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]],\n        inputs: {\n          itemSize: \"itemSize\",\n          minBufferPx: \"minBufferPx\",\n          maxBufferPx: \"maxBufferPx\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: VIRTUAL_SCROLL_STRATEGY,\n          useFactory: _fixedSizeVirtualScrollStrategyFactory,\n          deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n        }]), i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return CdkFixedSizeVirtualScroll;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nlet ScrollDispatcher = /*#__PURE__*/(() => {\n  class ScrollDispatcher {\n    constructor(_ngZone, _platform, document) {\n      this._ngZone = _ngZone;\n      this._platform = _platform;\n      /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n      this._scrolled = new Subject();\n      /** Keeps track of the global `scroll` and `resize` subscriptions. */\n      this._globalSubscription = null;\n      /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n      this._scrolledCount = 0;\n      /**\n       * Map of all the scrollable references that are registered with the service and their\n       * scroll event subscriptions.\n       */\n      this.scrollContainers = new Map();\n      this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n      if (!this.scrollContainers.has(scrollable)) {\n        this.scrollContainers.set(scrollable, scrollable.elementScrolled().subscribe(() => this._scrolled.next(scrollable)));\n      }\n    }\n    /**\n     * De-registers a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n      const scrollableReference = this.scrollContainers.get(scrollable);\n      if (scrollableReference) {\n        scrollableReference.unsubscribe();\n        this.scrollContainers.delete(scrollable);\n      }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n      if (!this._platform.isBrowser) {\n        return of();\n      }\n      return new Observable(observer => {\n        if (!this._globalSubscription) {\n          this._addGlobalListener();\n        }\n        // In the case of a 0ms delay, use an observable without auditTime\n        // since it does add a perceptible delay in processing overhead.\n        const subscription = auditTimeInMs > 0 ? this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) : this._scrolled.subscribe(observer);\n        this._scrolledCount++;\n        return () => {\n          subscription.unsubscribe();\n          this._scrolledCount--;\n          if (!this._scrolledCount) {\n            this._removeGlobalListener();\n          }\n        };\n      });\n    }\n    ngOnDestroy() {\n      this._removeGlobalListener();\n      this.scrollContainers.forEach((_, container) => this.deregister(container));\n      this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementOrElementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n      const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n      return this.scrolled(auditTimeInMs).pipe(filter(target => {\n        return !target || ancestors.indexOf(target) > -1;\n      }));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementOrElementRef) {\n      const scrollingContainers = [];\n      this.scrollContainers.forEach((_subscription, scrollable) => {\n        if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n          scrollingContainers.push(scrollable);\n        }\n      });\n      return scrollingContainers;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n      return this._document.defaultView || window;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\n      let element = coerceElement(elementOrElementRef);\n      let scrollableElement = scrollable.getElementRef().nativeElement;\n      // Traverse through the element parents until we reach null, checking if any of the elements\n      // are the scrollable's element.\n      do {\n        if (element == scrollableElement) {\n          return true;\n        }\n      } while (element = element.parentElement);\n      return false;\n    }\n    /** Sets up the global scroll listeners. */\n    _addGlobalListener() {\n      this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n        const window = this._getWindow();\n        return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n      });\n    }\n    /** Cleans up the global scroll listener. */\n    _removeGlobalListener() {\n      if (this._globalSubscription) {\n        this._globalSubscription.unsubscribe();\n        this._globalSubscription = null;\n      }\n    }\n    static {\n      this.ɵfac = function ScrollDispatcher_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ScrollDispatcher)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.Platform), i0.ɵɵinject(DOCUMENT, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ScrollDispatcher,\n        factory: ScrollDispatcher.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ScrollDispatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nlet CdkScrollable = /*#__PURE__*/(() => {\n  class CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n      this.elementRef = elementRef;\n      this.scrollDispatcher = scrollDispatcher;\n      this.ngZone = ngZone;\n      this.dir = dir;\n      this._destroyed = new Subject();\n      this._elementScrolled = new Observable(observer => this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed)).subscribe(observer)));\n    }\n    ngOnInit() {\n      this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n      this.scrollDispatcher.deregister(this);\n      this._destroyed.next();\n      this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n      return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n      return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n      const el = this.elementRef.nativeElement;\n      const isRtl = this.dir && this.dir.value == 'rtl';\n      // Rewrite start & end offsets as right or left offsets.\n      if (options.left == null) {\n        options.left = isRtl ? options.end : options.start;\n      }\n      if (options.right == null) {\n        options.right = isRtl ? options.start : options.end;\n      }\n      // Rewrite the bottom offset as a top offset.\n      if (options.bottom != null) {\n        options.top = el.scrollHeight - el.clientHeight - options.bottom;\n      }\n      // Rewrite the right offset as a left offset.\n      if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n        if (options.left != null) {\n          options.right = el.scrollWidth - el.clientWidth - options.left;\n        }\n        if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n          options.left = options.right;\n        } else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n          options.left = options.right ? -options.right : options.right;\n        }\n      } else {\n        if (options.right != null) {\n          options.left = el.scrollWidth - el.clientWidth - options.right;\n        }\n      }\n      this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n      const el = this.elementRef.nativeElement;\n      if (supportsScrollBehavior()) {\n        el.scrollTo(options);\n      } else {\n        if (options.top != null) {\n          el.scrollTop = options.top;\n        }\n        if (options.left != null) {\n          el.scrollLeft = options.left;\n        }\n      }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n      const LEFT = 'left';\n      const RIGHT = 'right';\n      const el = this.elementRef.nativeElement;\n      if (from == 'top') {\n        return el.scrollTop;\n      }\n      if (from == 'bottom') {\n        return el.scrollHeight - el.clientHeight - el.scrollTop;\n      }\n      // Rewrite start & end as left or right offsets.\n      const isRtl = this.dir && this.dir.value == 'rtl';\n      if (from == 'start') {\n        from = isRtl ? RIGHT : LEFT;\n      } else if (from == 'end') {\n        from = isRtl ? LEFT : RIGHT;\n      }\n      if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n        // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n        // 0 when scrolled all the way right.\n        if (from == LEFT) {\n          return el.scrollWidth - el.clientWidth - el.scrollLeft;\n        } else {\n          return el.scrollLeft;\n        }\n      } else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n        // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n        // 0 when scrolled all the way right.\n        if (from == LEFT) {\n          return el.scrollLeft + el.scrollWidth - el.clientWidth;\n        } else {\n          return -el.scrollLeft;\n        }\n      } else {\n        // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n        // (scrollWidth - clientWidth) when scrolled all the way right.\n        if (from == LEFT) {\n          return el.scrollLeft;\n        } else {\n          return el.scrollWidth - el.clientWidth - el.scrollLeft;\n        }\n      }\n    }\n    static {\n      this.ɵfac = function CdkScrollable_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkScrollable)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ScrollDispatcher), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkScrollable,\n        selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]],\n        standalone: true\n      });\n    }\n  }\n  return CdkScrollable;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nlet ViewportRuler = /*#__PURE__*/(() => {\n  class ViewportRuler {\n    constructor(_platform, ngZone, document) {\n      this._platform = _platform;\n      /** Stream of viewport change events. */\n      this._change = new Subject();\n      /** Event listener that will be used to handle the viewport change events. */\n      this._changeListener = event => {\n        this._change.next(event);\n      };\n      this._document = document;\n      ngZone.runOutsideAngular(() => {\n        if (_platform.isBrowser) {\n          const window = this._getWindow();\n          // Note that bind the events ourselves, rather than going through something like RxJS's\n          // `fromEvent` so that we can ensure that they're bound outside of the NgZone.\n          window.addEventListener('resize', this._changeListener);\n          window.addEventListener('orientationchange', this._changeListener);\n        }\n        // Clear the cached position so that the viewport is re-measured next time it is required.\n        // We don't need to keep track of the subscription, because it is completed on destroy.\n        this.change().subscribe(() => this._viewportSize = null);\n      });\n    }\n    ngOnDestroy() {\n      if (this._platform.isBrowser) {\n        const window = this._getWindow();\n        window.removeEventListener('resize', this._changeListener);\n        window.removeEventListener('orientationchange', this._changeListener);\n      }\n      this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n      if (!this._viewportSize) {\n        this._updateViewportSize();\n      }\n      const output = {\n        width: this._viewportSize.width,\n        height: this._viewportSize.height\n      };\n      // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n      if (!this._platform.isBrowser) {\n        this._viewportSize = null;\n      }\n      return output;\n    }\n    /** Gets a DOMRect for the viewport's bounds. */\n    getViewportRect() {\n      // Use the document element's bounding rect rather than the window scroll properties\n      // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n      // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n      // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n      // can disagree when the page is pinch-zoomed (on devices that support touch).\n      // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n      // We use the documentElement instead of the body because, by default (without a css reset)\n      // browsers typically give the document body an 8px margin, which is not included in\n      // getBoundingClientRect().\n      const scrollPosition = this.getViewportScrollPosition();\n      const {\n        width,\n        height\n      } = this.getViewportSize();\n      return {\n        top: scrollPosition.top,\n        left: scrollPosition.left,\n        bottom: scrollPosition.top + height,\n        right: scrollPosition.left + width,\n        height,\n        width\n      };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n      // While we can get a reference to the fake document\n      // during SSR, it doesn't have getBoundingClientRect.\n      if (!this._platform.isBrowser) {\n        return {\n          top: 0,\n          left: 0\n        };\n      }\n      // The top-left-corner of the viewport is determined by the scroll position of the document\n      // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n      // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n      // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n      // `document.documentElement` works consistently, where the `top` and `left` values will\n      // equal negative the scroll position.\n      const document = this._document;\n      const window = this._getWindow();\n      const documentElement = document.documentElement;\n      const documentRect = documentElement.getBoundingClientRect();\n      const top = -documentRect.top || document.body.scrollTop || window.scrollY || documentElement.scrollTop || 0;\n      const left = -documentRect.left || document.body.scrollLeft || window.scrollX || documentElement.scrollLeft || 0;\n      return {\n        top,\n        left\n      };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * This stream emits outside of the Angular zone.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n      return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n      return this._document.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n      const window = this._getWindow();\n      this._viewportSize = this._platform.isBrowser ? {\n        width: window.innerWidth,\n        height: window.innerHeight\n      } : {\n        width: 0,\n        height: 0\n      };\n    }\n    static {\n      this.ɵfac = function ViewportRuler_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ViewportRuler)(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ViewportRuler,\n        factory: ViewportRuler.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ViewportRuler;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst VIRTUAL_SCROLLABLE = /*#__PURE__*/new InjectionToken('VIRTUAL_SCROLLABLE');\n/**\n * Extending the {@link CdkScrollable} to be used as scrolling container for virtual scrolling.\n */\nlet CdkVirtualScrollable = /*#__PURE__*/(() => {\n  class CdkVirtualScrollable extends CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n      super(elementRef, scrollDispatcher, ngZone, dir);\n    }\n    /**\n     * Measure the viewport size for the provided orientation.\n     *\n     * @param orientation The orientation to measure the size from.\n     */\n    measureViewportSize(orientation) {\n      const viewportEl = this.elementRef.nativeElement;\n      return orientation === 'horizontal' ? viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    static {\n      this.ɵfac = function CdkVirtualScrollable_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkVirtualScrollable)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ScrollDispatcher), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkVirtualScrollable,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return CdkVirtualScrollable;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n  return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nlet CdkVirtualScrollViewport = /*#__PURE__*/(() => {\n  class CdkVirtualScrollViewport extends CdkVirtualScrollable {\n    /** The direction the viewport scrolls. */\n    get orientation() {\n      return this._orientation;\n    }\n    set orientation(orientation) {\n      if (this._orientation !== orientation) {\n        this._orientation = orientation;\n        this._calculateSpacerSize();\n      }\n    }\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, viewportRuler, scrollable) {\n      super(elementRef, scrollDispatcher, ngZone, dir);\n      this.elementRef = elementRef;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._scrollStrategy = _scrollStrategy;\n      this.scrollable = scrollable;\n      this._platform = inject(Platform);\n      /** Emits when the viewport is detached from a CdkVirtualForOf. */\n      this._detachedSubject = new Subject();\n      /** Emits when the rendered range changes. */\n      this._renderedRangeSubject = new Subject();\n      this._orientation = 'vertical';\n      /**\n       * Whether rendered items should persist in the DOM after scrolling out of view. By default, items\n       * will be removed.\n       */\n      this.appendOnly = false;\n      // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n      // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n      // depending on how the strategy calculates the scrolled index, it may come at a cost to\n      // performance.\n      /** Emits when the index of the first element visible in the viewport changes. */\n      this.scrolledIndexChange = new Observable(observer => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n      /** A stream that emits whenever the rendered range changes. */\n      this.renderedRangeStream = this._renderedRangeSubject;\n      /**\n       * The total size of all content (in pixels), including content that is not currently rendered.\n       */\n      this._totalContentSize = 0;\n      /** A string representing the `style.width` property value to be used for the spacer element. */\n      this._totalContentWidth = '';\n      /** A string representing the `style.height` property value to be used for the spacer element. */\n      this._totalContentHeight = '';\n      /** The currently rendered range of indices. */\n      this._renderedRange = {\n        start: 0,\n        end: 0\n      };\n      /** The length of the data bound to this viewport (in number of items). */\n      this._dataLength = 0;\n      /** The size of the viewport (in pixels). */\n      this._viewportSize = 0;\n      /** The last rendered content offset that was set. */\n      this._renderedContentOffset = 0;\n      /**\n       * Whether the last rendered content offset was to the end of the content (and therefore needs to\n       * be rewritten as an offset to the start of the content).\n       */\n      this._renderedContentOffsetNeedsRewrite = false;\n      /** Whether there is a pending change detection cycle. */\n      this._isChangeDetectionPending = false;\n      /** A list of functions to run after the next change detection cycle. */\n      this._runAfterChangeDetection = [];\n      /** Subscription to changes in the viewport size. */\n      this._viewportChanges = Subscription.EMPTY;\n      this._injector = inject(Injector);\n      this._isDestroyed = false;\n      if (!_scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n      }\n      this._viewportChanges = viewportRuler.change().subscribe(() => {\n        this.checkViewportSize();\n      });\n      if (!this.scrollable) {\n        // No scrollable is provided, so the virtual-scroll-viewport needs to become a scrollable\n        this.elementRef.nativeElement.classList.add('cdk-virtual-scrollable');\n        this.scrollable = this;\n      }\n    }\n    ngOnInit() {\n      // Scrolling depends on the element dimensions which we can't get during SSR.\n      if (!this._platform.isBrowser) {\n        return;\n      }\n      if (this.scrollable === this) {\n        super.ngOnInit();\n      }\n      // It's still too early to measure the viewport at this point. Deferring with a promise allows\n      // the Viewport to be rendered with the correct size before we measure. We run this outside the\n      // zone to avoid causing more change detection cycles. We handle the change detection loop\n      // ourselves instead.\n      this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n        this._measureViewportSize();\n        this._scrollStrategy.attach(this);\n        this.scrollable.elementScrolled().pipe(\n        // Start off with a fake scroll event so we properly detect our initial position.\n        startWith(null),\n        // Collect multiple events into one until the next animation frame. This way if\n        // there are multiple scroll events in the same frame we only need to recheck\n        // our layout once.\n        auditTime(0, SCROLL_SCHEDULER),\n        // Usually `elementScrolled` is completed when the scrollable is destroyed, but\n        // that may not be the case if a `CdkVirtualScrollableElement` is used so we have\n        // to unsubscribe here just in case.\n        takeUntil(this._destroyed)).subscribe(() => this._scrollStrategy.onContentScrolled());\n        this._markChangeDetectionNeeded();\n      }));\n    }\n    ngOnDestroy() {\n      this.detach();\n      this._scrollStrategy.detach();\n      // Complete all subjects\n      this._renderedRangeSubject.complete();\n      this._detachedSubject.complete();\n      this._viewportChanges.unsubscribe();\n      this._isDestroyed = true;\n      super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n      if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('CdkVirtualScrollViewport is already attached.');\n      }\n      // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n      // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n      // change detection loop ourselves.\n      this.ngZone.runOutsideAngular(() => {\n        this._forOf = forOf;\n        this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n          const newLength = data.length;\n          if (newLength !== this._dataLength) {\n            this._dataLength = newLength;\n            this._scrollStrategy.onDataLengthChanged();\n          }\n          this._doChangeDetection();\n        });\n      });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n      this._forOf = null;\n      this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n      return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n      return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n      return this._renderedRange;\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n      return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n      if (this._totalContentSize !== size) {\n        this._totalContentSize = size;\n        this._calculateSpacerSize();\n        this._markChangeDetectionNeeded();\n      }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n      if (!rangesEqual(this._renderedRange, range)) {\n        if (this.appendOnly) {\n          range = {\n            start: 0,\n            end: Math.max(this._renderedRange.end, range.end)\n          };\n        }\n        this._renderedRangeSubject.next(this._renderedRange = range);\n        this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n      }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n      return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n      // In appendOnly, we always start from the top\n      offset = this.appendOnly && to === 'to-start' ? 0 : offset;\n      // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n      // in the negative direction.\n      const isRtl = this.dir && this.dir.value == 'rtl';\n      const isHorizontal = this.orientation == 'horizontal';\n      const axis = isHorizontal ? 'X' : 'Y';\n      const axisDirection = isHorizontal && isRtl ? -1 : 1;\n      let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n      this._renderedContentOffset = offset;\n      if (to === 'to-end') {\n        transform += ` translate${axis}(-100%)`;\n        // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n        // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n        // expand upward).\n        this._renderedContentOffsetNeedsRewrite = true;\n      }\n      if (this._renderedContentTransform != transform) {\n        // We know this value is safe because we parse `offset` with `Number()` before passing it\n        // into the string.\n        this._renderedContentTransform = transform;\n        this._markChangeDetectionNeeded(() => {\n          if (this._renderedContentOffsetNeedsRewrite) {\n            this._renderedContentOffset -= this.measureRenderedContentSize();\n            this._renderedContentOffsetNeedsRewrite = false;\n            this.setRenderedContentOffset(this._renderedContentOffset);\n          } else {\n            this._scrollStrategy.onRenderedOffsetChanged();\n          }\n        });\n      }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n      const options = {\n        behavior\n      };\n      if (this.orientation === 'horizontal') {\n        options.start = offset;\n      } else {\n        options.top = offset;\n      }\n      this.scrollable.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n      this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the scrollable (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n      // This is to break the call cycle\n      let measureScrollOffset;\n      if (this.scrollable == this) {\n        measureScrollOffset = _from => super.measureScrollOffset(_from);\n      } else {\n        measureScrollOffset = _from => this.scrollable.measureScrollOffset(_from);\n      }\n      return Math.max(0, measureScrollOffset(from ?? (this.orientation === 'horizontal' ? 'start' : 'top')) - this.measureViewportOffset());\n    }\n    /**\n     * Measures the offset of the viewport from the scrolling container\n     * @param from The edge to measure from.\n     */\n    measureViewportOffset(from) {\n      let fromRect;\n      const LEFT = 'left';\n      const RIGHT = 'right';\n      const isRtl = this.dir?.value == 'rtl';\n      if (from == 'start') {\n        fromRect = isRtl ? RIGHT : LEFT;\n      } else if (from == 'end') {\n        fromRect = isRtl ? LEFT : RIGHT;\n      } else if (from) {\n        fromRect = from;\n      } else {\n        fromRect = this.orientation === 'horizontal' ? 'left' : 'top';\n      }\n      const scrollerClientRect = this.scrollable.measureBoundingClientRectWithScrollOffset(fromRect);\n      const viewportClientRect = this.elementRef.nativeElement.getBoundingClientRect()[fromRect];\n      return viewportClientRect - scrollerClientRect;\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n      const contentEl = this._contentWrapper.nativeElement;\n      return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n      if (!this._forOf) {\n        return 0;\n      }\n      return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n      // TODO: Cleanup later when add logic for handling content resize\n      this._measureViewportSize();\n      this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n      this._viewportSize = this.scrollable.measureViewportSize(this.orientation);\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n      if (runAfter) {\n        this._runAfterChangeDetection.push(runAfter);\n      }\n      // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n      // properties sequentially we only have to run `_doChangeDetection` once at the end.\n      if (!this._isChangeDetectionPending) {\n        this._isChangeDetectionPending = true;\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n          this._doChangeDetection();\n        }));\n      }\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n      if (this._isDestroyed) {\n        return;\n      }\n      this.ngZone.run(() => {\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this._changeDetectorRef.markForCheck();\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        afterNextRender(() => {\n          this._isChangeDetectionPending = false;\n          const runAfterChangeDetection = this._runAfterChangeDetection;\n          this._runAfterChangeDetection = [];\n          for (const fn of runAfterChangeDetection) {\n            fn();\n          }\n        }, {\n          injector: this._injector\n        });\n      });\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n      this._totalContentHeight = this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n      this._totalContentWidth = this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n    static {\n      this.ɵfac = function CdkVirtualScrollViewport_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkVirtualScrollViewport)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(ScrollDispatcher), i0.ɵɵdirectiveInject(ViewportRuler), i0.ɵɵdirectiveInject(VIRTUAL_SCROLLABLE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: CdkVirtualScrollViewport,\n        selectors: [[\"cdk-virtual-scroll-viewport\"]],\n        viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 7);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n          }\n        },\n        hostAttrs: [1, \"cdk-virtual-scroll-viewport\"],\n        hostVars: 4,\n        hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n          }\n        },\n        inputs: {\n          orientation: \"orientation\",\n          appendOnly: [2, \"appendOnly\", \"appendOnly\", booleanAttribute]\n        },\n        outputs: {\n          scrolledIndexChange: \"scrolledIndexChange\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CdkScrollable,\n          useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n          deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport]\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c1,\n        decls: 4,\n        vars: 4,\n        consts: [[\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-content-wrapper\"], [1, \"cdk-virtual-scroll-spacer\"]],\n        template: function CdkVirtualScrollViewport_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\", 1, 0);\n            i0.ɵɵprojection(2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(3, \"div\", 2);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n          }\n        },\n        styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return CdkVirtualScrollViewport;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n  const el = node;\n  if (!el.getBoundingClientRect) {\n    return 0;\n  }\n  const rect = el.getBoundingClientRect();\n  if (orientation === 'horizontal') {\n    return direction === 'start' ? rect.left : rect.right;\n  }\n  return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nlet CdkVirtualForOf = /*#__PURE__*/(() => {\n  class CdkVirtualForOf {\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n      return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n      this._cdkVirtualForOf = value;\n      if (isDataSource(value)) {\n        this._dataSourceChanges.next(value);\n      } else {\n        // If value is an an NgIterable, convert it to an array.\n        this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n      }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n      return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n      this._needsUpdate = true;\n      this._cdkVirtualForTrackBy = fn ? (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item) : undefined;\n    }\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n      if (value) {\n        this._needsUpdate = true;\n        this._template = value;\n      }\n    }\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     */\n    get cdkVirtualForTemplateCacheSize() {\n      return this._viewRepeater.viewCacheSize;\n    }\n    set cdkVirtualForTemplateCacheSize(size) {\n      this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n    }\n    constructor( /** The view container to add items to. */\n    _viewContainerRef, /** The template to use when stamping out new items. */\n    _template, /** The set of available differs. */\n    _differs, /** The strategy used to render items in the virtual scroll viewport. */\n    _viewRepeater, /** The virtual scrolling viewport that these items are being rendered in. */\n    _viewport, ngZone) {\n      this._viewContainerRef = _viewContainerRef;\n      this._template = _template;\n      this._differs = _differs;\n      this._viewRepeater = _viewRepeater;\n      this._viewport = _viewport;\n      /** Emits when the rendered view of the data changes. */\n      this.viewChange = new Subject();\n      /** Subject that emits when a new DataSource instance is given. */\n      this._dataSourceChanges = new Subject();\n      /** Emits whenever the data in the current DataSource changes. */\n      this.dataStream = this._dataSourceChanges.pipe(\n      // Start off with null `DataSource`.\n      startWith(null),\n      // Bundle up the previous and current data sources so we can work with both.\n      pairwise(),\n      // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n      // new one, passing back a stream of data changes which we run through `switchMap` to give\n      // us a data stream that emits the latest data from whatever the current `DataSource` is.\n      switchMap(([prev, cur]) => this._changeDataSource(prev, cur)),\n      // Replay the last emitted data when someone subscribes.\n      shareReplay(1));\n      /** The differ used to calculate changes to the data. */\n      this._differ = null;\n      /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n      this._needsUpdate = false;\n      this._destroyed = new Subject();\n      this.dataStream.subscribe(data => {\n        this._data = data;\n        this._onRenderedDataChange();\n      });\n      this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n        this._renderedRange = range;\n        if (this.viewChange.observers.length) {\n          ngZone.run(() => this.viewChange.next(this._renderedRange));\n        }\n        this._onRenderedDataChange();\n      });\n      this._viewport.attach(this);\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n      if (range.start >= range.end) {\n        return 0;\n      }\n      if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(`Error: attempted to measure an item that isn't rendered.`);\n      }\n      // The index into the list of rendered views for the first item in the range.\n      const renderedStartIndex = range.start - this._renderedRange.start;\n      // The length of the range we're measuring.\n      const rangeLen = range.end - range.start;\n      // Loop over all the views, find the first and land node and compute the size by subtracting\n      // the top of the first node from the bottom of the last one.\n      let firstNode;\n      let lastNode;\n      // Find the first node by starting from the beginning and going forwards.\n      for (let i = 0; i < rangeLen; i++) {\n        const view = this._viewContainerRef.get(i + renderedStartIndex);\n        if (view && view.rootNodes.length) {\n          firstNode = lastNode = view.rootNodes[0];\n          break;\n        }\n      }\n      // Find the last node by starting from the end and going backwards.\n      for (let i = rangeLen - 1; i > -1; i--) {\n        const view = this._viewContainerRef.get(i + renderedStartIndex);\n        if (view && view.rootNodes.length) {\n          lastNode = view.rootNodes[view.rootNodes.length - 1];\n          break;\n        }\n      }\n      return firstNode && lastNode ? getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode) : 0;\n    }\n    ngDoCheck() {\n      if (this._differ && this._needsUpdate) {\n        // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n        // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n        // changing (need to do this diff).\n        const changes = this._differ.diff(this._renderedItems);\n        if (!changes) {\n          this._updateContext();\n        } else {\n          this._applyChanges(changes);\n        }\n        this._needsUpdate = false;\n      }\n    }\n    ngOnDestroy() {\n      this._viewport.detach();\n      this._dataSourceChanges.next(undefined);\n      this._dataSourceChanges.complete();\n      this.viewChange.complete();\n      this._destroyed.next();\n      this._destroyed.complete();\n      this._viewRepeater.detach();\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n      if (!this._renderedRange) {\n        return;\n      }\n      this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n      if (!this._differ) {\n        // Use a wrapper function for the `trackBy` so any new values are\n        // picked up automatically without having to recreate the differ.\n        this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n          return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n        });\n      }\n      this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n      if (oldDs) {\n        oldDs.disconnect(this);\n      }\n      this._needsUpdate = true;\n      return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n      const count = this._data.length;\n      let i = this._viewContainerRef.length;\n      while (i--) {\n        const view = this._viewContainerRef.get(i);\n        view.context.index = this._renderedRange.start + i;\n        view.context.count = count;\n        this._updateComputedContextProperties(view.context);\n        view.detectChanges();\n      }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n      this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), record => record.item);\n      // Update $implicit for any items that had an identity change.\n      changes.forEachIdentityChange(record => {\n        const view = this._viewContainerRef.get(record.currentIndex);\n        view.context.$implicit = record.item;\n      });\n      // Update the context variables on all items.\n      const count = this._data.length;\n      let i = this._viewContainerRef.length;\n      while (i--) {\n        const view = this._viewContainerRef.get(i);\n        view.context.index = this._renderedRange.start + i;\n        view.context.count = count;\n        this._updateComputedContextProperties(view.context);\n      }\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n      context.first = context.index === 0;\n      context.last = context.index === context.count - 1;\n      context.even = context.index % 2 === 0;\n      context.odd = !context.even;\n    }\n    _getEmbeddedViewArgs(record, index) {\n      // Note that it's important that we insert the item directly at the proper index,\n      // rather than inserting it and the moving it in place, because if there's a directive\n      // on the same node that injects the `ViewContainerRef`, Angular will insert another\n      // comment node which can throw off the move when it's being repeated for all items.\n      return {\n        templateRef: this._template,\n        context: {\n          $implicit: record.item,\n          // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n          // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n          cdkVirtualForOf: this._cdkVirtualForOf,\n          index: -1,\n          count: -1,\n          first: false,\n          last: false,\n          odd: false,\n          even: false\n        },\n        index\n      };\n    }\n    static {\n      this.ɵfac = function CdkVirtualForOf_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkVirtualForOf)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY), i0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), i0.ɵɵdirectiveInject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkVirtualForOf,\n        selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]],\n        inputs: {\n          cdkVirtualForOf: \"cdkVirtualForOf\",\n          cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\",\n          cdkVirtualForTemplate: \"cdkVirtualForTemplate\",\n          cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: _VIEW_REPEATER_STRATEGY,\n          useClass: _RecycleViewRepeaterStrategy\n        }])]\n      });\n    }\n  }\n  return CdkVirtualForOf;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Provides a virtual scrollable for the element it is attached to.\n */\nlet CdkVirtualScrollableElement = /*#__PURE__*/(() => {\n  class CdkVirtualScrollableElement extends CdkVirtualScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n      super(elementRef, scrollDispatcher, ngZone, dir);\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n      return this.getElementRef().nativeElement.getBoundingClientRect()[from] - this.measureScrollOffset(from);\n    }\n    static {\n      this.ɵfac = function CdkVirtualScrollableElement_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkVirtualScrollableElement)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ScrollDispatcher), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkVirtualScrollableElement,\n        selectors: [[\"\", \"cdkVirtualScrollingElement\", \"\"]],\n        hostAttrs: [1, \"cdk-virtual-scrollable\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: VIRTUAL_SCROLLABLE,\n          useExisting: CdkVirtualScrollableElement\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return CdkVirtualScrollableElement;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Provides as virtual scrollable for the global / window scrollbar.\n */\nlet CdkVirtualScrollableWindow = /*#__PURE__*/(() => {\n  class CdkVirtualScrollableWindow extends CdkVirtualScrollable {\n    constructor(scrollDispatcher, ngZone, dir) {\n      super(new ElementRef(document.documentElement), scrollDispatcher, ngZone, dir);\n      this._elementScrolled = new Observable(observer => this.ngZone.runOutsideAngular(() => fromEvent(document, 'scroll').pipe(takeUntil(this._destroyed)).subscribe(observer)));\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n      return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    static {\n      this.ɵfac = function CdkVirtualScrollableWindow_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkVirtualScrollableWindow)(i0.ɵɵdirectiveInject(ScrollDispatcher), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkVirtualScrollableWindow,\n        selectors: [[\"cdk-virtual-scroll-viewport\", \"scrollWindow\", \"\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: VIRTUAL_SCROLLABLE,\n          useExisting: CdkVirtualScrollableWindow\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return CdkVirtualScrollableWindow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet CdkScrollableModule = /*#__PURE__*/(() => {\n  class CdkScrollableModule {\n    static {\n      this.ɵfac = function CdkScrollableModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkScrollableModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: CdkScrollableModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return CdkScrollableModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @docs-primary-export\n */\nlet ScrollingModule = /*#__PURE__*/(() => {\n  class ScrollingModule {\n    static {\n      this.ɵfac = function ScrollingModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ScrollingModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: ScrollingModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [BidiModule, CdkScrollableModule, BidiModule, CdkScrollableModule]\n      });\n    }\n  }\n  return ScrollingModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollable, CdkVirtualScrollableElement, CdkVirtualScrollableWindow, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLLABLE, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n","import * as i0 from '@angular/core';\nimport { ElementRef, Injector, Directive, EventEmitter, Inject, Input, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nfunction throwNullPortalError() {\n  throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nfunction throwPortalAlreadyAttachedError() {\n  throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n  throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nfunction throwUnknownPortalTypeError() {\n  throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' + 'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nfunction throwNullPortalOutletError() {\n  throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nfunction throwNoPortalAttachedError() {\n  throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nclass Portal {\n  /** Attach this portal to a host. */\n  attach(host) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (host == null) {\n        throwNullPortalOutletError();\n      }\n      if (host.hasAttached()) {\n        throwPortalAlreadyAttachedError();\n      }\n    }\n    this._attachedHost = host;\n    return host.attach(this);\n  }\n  /** Detach this portal from its host */\n  detach() {\n    let host = this._attachedHost;\n    if (host != null) {\n      this._attachedHost = null;\n      host.detach();\n    } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throwNoPortalAttachedError();\n    }\n  }\n  /** Whether this portal is attached to a host. */\n  get isAttached() {\n    return this._attachedHost != null;\n  }\n  /**\n   * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n   * the PortalOutlet when it is performing an `attach()` or `detach()`.\n   */\n  setAttachedHost(host) {\n    this._attachedHost = host;\n  }\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal extends Portal {\n  constructor(component, viewContainerRef, injector, componentFactoryResolver, projectableNodes) {\n    super();\n    this.component = component;\n    this.viewContainerRef = viewContainerRef;\n    this.injector = injector;\n    this.componentFactoryResolver = componentFactoryResolver;\n    this.projectableNodes = projectableNodes;\n  }\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nclass TemplatePortal extends Portal {\n  constructor( /** The embedded template that will be used to instantiate an embedded View in the host. */\n  templateRef, /** Reference to the ViewContainer into which the template will be stamped out. */\n  viewContainerRef, /** Contextual data to be passed in to the embedded view. */\n  context, /** The injector to use for the embedded view. */\n  injector) {\n    super();\n    this.templateRef = templateRef;\n    this.viewContainerRef = viewContainerRef;\n    this.context = context;\n    this.injector = injector;\n  }\n  get origin() {\n    return this.templateRef.elementRef;\n  }\n  /**\n   * Attach the portal to the provided `PortalOutlet`.\n   * When a context is provided it will override the `context` property of the `TemplatePortal`\n   * instance.\n   */\n  attach(host, context = this.context) {\n    this.context = context;\n    return super.attach(host);\n  }\n  detach() {\n    this.context = undefined;\n    return super.detach();\n  }\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nclass DomPortal extends Portal {\n  constructor(element) {\n    super();\n    this.element = element instanceof ElementRef ? element.nativeElement : element;\n  }\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nclass BasePortalOutlet {\n  constructor() {\n    /** Whether this host has already been permanently disposed. */\n    this._isDisposed = false;\n    // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n    this.attachDomPortal = null;\n  }\n  /** Whether this host has an attached portal. */\n  hasAttached() {\n    return !!this._attachedPortal;\n  }\n  /** Attaches a portal. */\n  attach(portal) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!portal) {\n        throwNullPortalError();\n      }\n      if (this.hasAttached()) {\n        throwPortalAlreadyAttachedError();\n      }\n      if (this._isDisposed) {\n        throwPortalOutletAlreadyDisposedError();\n      }\n    }\n    if (portal instanceof ComponentPortal) {\n      this._attachedPortal = portal;\n      return this.attachComponentPortal(portal);\n    } else if (portal instanceof TemplatePortal) {\n      this._attachedPortal = portal;\n      return this.attachTemplatePortal(portal);\n      // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n    } else if (this.attachDomPortal && portal instanceof DomPortal) {\n      this._attachedPortal = portal;\n      return this.attachDomPortal(portal);\n    }\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throwUnknownPortalTypeError();\n    }\n  }\n  /** Detaches a previously attached portal. */\n  detach() {\n    if (this._attachedPortal) {\n      this._attachedPortal.setAttachedHost(null);\n      this._attachedPortal = null;\n    }\n    this._invokeDisposeFn();\n  }\n  /** Permanently dispose of this portal host. */\n  dispose() {\n    if (this.hasAttached()) {\n      this.detach();\n    }\n    this._invokeDisposeFn();\n    this._isDisposed = true;\n  }\n  /** @docs-private */\n  setDisposeFn(fn) {\n    this._disposeFn = fn;\n  }\n  _invokeDisposeFn() {\n    if (this._disposeFn) {\n      this._disposeFn();\n      this._disposeFn = null;\n    }\n  }\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass BasePortalHost extends BasePortalOutlet {}\n\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n  /**\n   * @param outletElement Element into which the content is projected.\n   * @param _componentFactoryResolver Used to resolve the component factory.\n   *   Only required when attaching component portals.\n   * @param _appRef Reference to the application. Only used in component portals when there\n   *   is no `ViewContainerRef` available.\n   * @param _defaultInjector Injector to use as a fallback when the portal being attached doesn't\n   *   have one. Only used for component portals.\n   * @param _document Reference to the document. Used when attaching a DOM portal. Will eventually\n   *   become a required parameter.\n   */\n  constructor( /** Element into which the content is projected. */\n  outletElement, _componentFactoryResolver, _appRef, _defaultInjector,\n  /**\n   * @deprecated `_document` Parameter to be made required.\n   * @breaking-change 10.0.0\n   */\n  _document) {\n    super();\n    this.outletElement = outletElement;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._appRef = _appRef;\n    this._defaultInjector = _defaultInjector;\n    /**\n     * Attaches a DOM portal by transferring its content into the outlet.\n     * @param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * @breaking-change 10.0.0\n     */\n    this.attachDomPortal = portal => {\n      // @breaking-change 10.0.0 Remove check and error once the\n      // `_document` constructor parameter is required.\n      if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Cannot attach DOM portal without _document constructor parameter');\n      }\n      const element = portal.element;\n      if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('DOM portal content must be attached to a parent node.');\n      }\n      // Anchor used to save the element's previous position so\n      // that we can restore it when the portal is detached.\n      const anchorNode = this._document.createComment('dom-portal');\n      element.parentNode.insertBefore(anchorNode, element);\n      this.outletElement.appendChild(element);\n      this._attachedPortal = portal;\n      super.setDisposeFn(() => {\n        // We can't use `replaceWith` here because IE doesn't support it.\n        if (anchorNode.parentNode) {\n          anchorNode.parentNode.replaceChild(element, anchorNode);\n        }\n      });\n    };\n    this._document = _document;\n  }\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   * @returns Reference to the created component.\n   */\n  attachComponentPortal(portal) {\n    const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && !resolver) {\n      throw Error('Cannot attach component portal to outlet without a ComponentFactoryResolver.');\n    }\n    const componentFactory = resolver.resolveComponentFactory(portal.component);\n    let componentRef;\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the view to the application.\n    if (portal.viewContainerRef) {\n      componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector, portal.projectableNodes || undefined);\n      this.setDisposeFn(() => componentRef.destroy());\n    } else {\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._appRef) {\n        throw Error('Cannot attach component portal to outlet without an ApplicationRef.');\n      }\n      componentRef = componentFactory.create(portal.injector || this._defaultInjector || Injector.NULL);\n      this._appRef.attachView(componentRef.hostView);\n      this.setDisposeFn(() => {\n        // Verify that the ApplicationRef has registered views before trying to detach a host view.\n        // This check also protects the `detachView` from being called on a destroyed ApplicationRef.\n        if (this._appRef.viewCount > 0) {\n          this._appRef.detachView(componentRef.hostView);\n        }\n        componentRef.destroy();\n      });\n    }\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n    this._attachedPortal = portal;\n    return componentRef;\n  }\n  /**\n   * Attaches a template portal to the DOM as an embedded view.\n   * @param portal Portal to be attached.\n   * @returns Reference to the created embedded view.\n   */\n  attachTemplatePortal(portal) {\n    let viewContainer = portal.viewContainerRef;\n    let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context, {\n      injector: portal.injector\n    });\n    // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n    // But for the DomPortalOutlet the view can be added everywhere in the DOM\n    // (e.g Overlay Container) To move the view to the specified host element. We just\n    // re-append the existing root nodes.\n    viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\n    // Note that we want to detect changes after the nodes have been moved so that\n    // any directives inside the portal that are looking at the DOM inside a lifecycle\n    // hook won't be invoked too early.\n    viewRef.detectChanges();\n    this.setDisposeFn(() => {\n      let index = viewContainer.indexOf(viewRef);\n      if (index !== -1) {\n        viewContainer.remove(index);\n      }\n    });\n    this._attachedPortal = portal;\n    // TODO(jelbourn): Return locals from view.\n    return viewRef;\n  }\n  /**\n   * Clears out a portal from the DOM.\n   */\n  dispose() {\n    super.dispose();\n    this.outletElement.remove();\n  }\n  /** Gets the root HTMLElement for an instantiated component. */\n  _getComponentRootNode(componentRef) {\n    return componentRef.hostView.rootNodes[0];\n  }\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {}\n\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nlet CdkPortal = /*#__PURE__*/(() => {\n  class CdkPortal extends TemplatePortal {\n    constructor(templateRef, viewContainerRef) {\n      super(templateRef, viewContainerRef);\n    }\n    static {\n      this.ɵfac = function CdkPortal_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkPortal)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkPortal,\n        selectors: [[\"\", \"cdkPortal\", \"\"]],\n        exportAs: [\"cdkPortal\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return CdkPortal;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @deprecated Use `CdkPortal` instead.\n * @breaking-change 9.0.0\n */\nlet TemplatePortalDirective = /*#__PURE__*/(() => {\n  class TemplatePortalDirective extends CdkPortal {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵTemplatePortalDirective_BaseFactory;\n        return function TemplatePortalDirective_Factory(__ngFactoryType__) {\n          return (ɵTemplatePortalDirective_BaseFactory || (ɵTemplatePortalDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TemplatePortalDirective)))(__ngFactoryType__ || TemplatePortalDirective);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: TemplatePortalDirective,\n        selectors: [[\"\", \"cdk-portal\", \"\"], [\"\", \"portal\", \"\"]],\n        exportAs: [\"cdkPortal\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CdkPortal,\n          useExisting: TemplatePortalDirective\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return TemplatePortalDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nlet CdkPortalOutlet = /*#__PURE__*/(() => {\n  class CdkPortalOutlet extends BasePortalOutlet {\n    constructor(_componentFactoryResolver, _viewContainerRef,\n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n      super();\n      this._componentFactoryResolver = _componentFactoryResolver;\n      this._viewContainerRef = _viewContainerRef;\n      /** Whether the portal component is initialized. */\n      this._isInitialized = false;\n      /** Emits when a portal is attached to the outlet. */\n      this.attached = new EventEmitter();\n      /**\n       * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n       * @param portal Portal to be attached.\n       * @deprecated To be turned into a method.\n       * @breaking-change 10.0.0\n       */\n      this.attachDomPortal = portal => {\n        // @breaking-change 9.0.0 Remove check and error once the\n        // `_document` constructor parameter is required.\n        if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw Error('Cannot attach DOM portal without _document constructor parameter');\n        }\n        const element = portal.element;\n        if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw Error('DOM portal content must be attached to a parent node.');\n        }\n        // Anchor used to save the element's previous position so\n        // that we can restore it when the portal is detached.\n        const anchorNode = this._document.createComment('dom-portal');\n        portal.setAttachedHost(this);\n        element.parentNode.insertBefore(anchorNode, element);\n        this._getRootNode().appendChild(element);\n        this._attachedPortal = portal;\n        super.setDisposeFn(() => {\n          if (anchorNode.parentNode) {\n            anchorNode.parentNode.replaceChild(element, anchorNode);\n          }\n        });\n      };\n      this._document = _document;\n    }\n    /** Portal associated with the Portal outlet. */\n    get portal() {\n      return this._attachedPortal;\n    }\n    set portal(portal) {\n      // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n      // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n      // and attach a portal programmatically in the parent component. When Angular does the first CD\n      // round, it will fire the setter with empty string, causing the user's content to be cleared.\n      if (this.hasAttached() && !portal && !this._isInitialized) {\n        return;\n      }\n      if (this.hasAttached()) {\n        super.detach();\n      }\n      if (portal) {\n        super.attach(portal);\n      }\n      this._attachedPortal = portal || null;\n    }\n    /** Component or view reference that is attached to the portal. */\n    get attachedRef() {\n      return this._attachedRef;\n    }\n    ngOnInit() {\n      this._isInitialized = true;\n    }\n    ngOnDestroy() {\n      super.dispose();\n      this._attachedRef = this._attachedPortal = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @param portal Portal to be attached to the portal outlet.\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n      portal.setAttachedHost(this);\n      // If the portal specifies an origin, use that as the logical location of the component\n      // in the application tree. Otherwise use the location of this PortalOutlet.\n      const viewContainerRef = portal.viewContainerRef != null ? portal.viewContainerRef : this._viewContainerRef;\n      const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n      const componentFactory = resolver.resolveComponentFactory(portal.component);\n      const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector, portal.projectableNodes || undefined);\n      // If we're using a view container that's different from the injected one (e.g. when the portal\n      // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n      // inside of the alternate view container.\n      if (viewContainerRef !== this._viewContainerRef) {\n        this._getRootNode().appendChild(ref.hostView.rootNodes[0]);\n      }\n      super.setDisposeFn(() => ref.destroy());\n      this._attachedPortal = portal;\n      this._attachedRef = ref;\n      this.attached.emit(ref);\n      return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n      portal.setAttachedHost(this);\n      const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context, {\n        injector: portal.injector\n      });\n      super.setDisposeFn(() => this._viewContainerRef.clear());\n      this._attachedPortal = portal;\n      this._attachedRef = viewRef;\n      this.attached.emit(viewRef);\n      return viewRef;\n    }\n    /** Gets the root node of the portal outlet. */\n    _getRootNode() {\n      const nativeElement = this._viewContainerRef.element.nativeElement;\n      // The directive could be set on a template which will result in a comment\n      // node being the root. Use the comment's parent node if that is the case.\n      return nativeElement.nodeType === nativeElement.ELEMENT_NODE ? nativeElement : nativeElement.parentNode;\n    }\n    static {\n      this.ɵfac = function CdkPortalOutlet_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkPortalOutlet)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkPortalOutlet,\n        selectors: [[\"\", \"cdkPortalOutlet\", \"\"]],\n        inputs: {\n          portal: [0, \"cdkPortalOutlet\", \"portal\"]\n        },\n        outputs: {\n          attached: \"attached\"\n        },\n        exportAs: [\"cdkPortalOutlet\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return CdkPortalOutlet;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nlet PortalHostDirective = /*#__PURE__*/(() => {\n  class PortalHostDirective extends CdkPortalOutlet {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵPortalHostDirective_BaseFactory;\n        return function PortalHostDirective_Factory(__ngFactoryType__) {\n          return (ɵPortalHostDirective_BaseFactory || (ɵPortalHostDirective_BaseFactory = i0.ɵɵgetInheritedFactory(PortalHostDirective)))(__ngFactoryType__ || PortalHostDirective);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: PortalHostDirective,\n        selectors: [[\"\", \"cdkPortalHost\", \"\"], [\"\", \"portalHost\", \"\"]],\n        inputs: {\n          portal: [0, \"cdkPortalHost\", \"portal\"]\n        },\n        exportAs: [\"cdkPortalHost\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CdkPortalOutlet,\n          useExisting: PortalHostDirective\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return PortalHostDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PortalModule = /*#__PURE__*/(() => {\n  class PortalModule {\n    static {\n      this.ɵfac = function PortalModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || PortalModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: PortalModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return PortalModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * @docs-private\n * @deprecated Use `Injector.create` instead.\n * @breaking-change 11.0.0\n */\nclass PortalInjector {\n  constructor(_parentInjector, _customTokens) {\n    this._parentInjector = _parentInjector;\n    this._customTokens = _customTokens;\n  }\n  get(token, notFoundValue) {\n    const value = this._customTokens.get(token);\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n    return this._parentInjector.get(token, notFoundValue);\n  }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n","import * as i1 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport * as i6 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, Optional, untracked, afterRender, afterNextRender, ElementRef, EnvironmentInjector, ApplicationRef, ANIMATION_MODULE_TYPE, InjectionToken, inject, Directive, NgZone, EventEmitter, booleanAttribute, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { supportsScrollBehavior, _getEventTarget, _isTestEnvironment } from '@angular/cdk/platform';\nimport { filter, takeUntil, takeWhile } from 'rxjs/operators';\nimport * as i5 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nconst scrollBehaviorSupported = /*#__PURE__*/supportsScrollBehavior();\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n  constructor(_viewportRuler, document) {\n    this._viewportRuler = _viewportRuler;\n    this._previousHTMLStyles = {\n      top: '',\n      left: ''\n    };\n    this._isEnabled = false;\n    this._document = document;\n  }\n  /** Attaches this scroll strategy to an overlay. */\n  attach() {}\n  /** Blocks page-level scroll while the attached overlay is open. */\n  enable() {\n    if (this._canBeEnabled()) {\n      const root = this._document.documentElement;\n      this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n      // Cache the previous inline styles in case the user had set them.\n      this._previousHTMLStyles.left = root.style.left || '';\n      this._previousHTMLStyles.top = root.style.top || '';\n      // Note: we're using the `html` node, instead of the `body`, because the `body` may\n      // have the user agent margin, whereas the `html` is guaranteed not to have one.\n      root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n      root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n      root.classList.add('cdk-global-scrollblock');\n      this._isEnabled = true;\n    }\n  }\n  /** Unblocks page-level scroll while the attached overlay is open. */\n  disable() {\n    if (this._isEnabled) {\n      const html = this._document.documentElement;\n      const body = this._document.body;\n      const htmlStyle = html.style;\n      const bodyStyle = body.style;\n      const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n      const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n      this._isEnabled = false;\n      htmlStyle.left = this._previousHTMLStyles.left;\n      htmlStyle.top = this._previousHTMLStyles.top;\n      html.classList.remove('cdk-global-scrollblock');\n      // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n      // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n      // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n      // because it can throw off feature detections in `supportsScrollBehavior` which\n      // checks for `'scrollBehavior' in documentElement.style`.\n      if (scrollBehaviorSupported) {\n        htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n      }\n      window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n      if (scrollBehaviorSupported) {\n        htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n        bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n      }\n    }\n  }\n  _canBeEnabled() {\n    // Since the scroll strategies can't be singletons, we have to use a global CSS class\n    // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n    // scrolling multiple times.\n    const html = this._document.documentElement;\n    if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n      return false;\n    }\n    const body = this._document.body;\n    const viewport = this._viewportRuler.getViewportSize();\n    return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n  }\n}\n\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n  return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n  constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n    this._scrollDispatcher = _scrollDispatcher;\n    this._ngZone = _ngZone;\n    this._viewportRuler = _viewportRuler;\n    this._config = _config;\n    this._scrollSubscription = null;\n    /** Detaches the overlay ref and disables the scroll strategy. */\n    this._detach = () => {\n      this.disable();\n      if (this._overlayRef.hasAttached()) {\n        this._ngZone.run(() => this._overlayRef.detach());\n      }\n    };\n  }\n  /** Attaches this scroll strategy to an overlay. */\n  attach(overlayRef) {\n    if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatScrollStrategyAlreadyAttachedError();\n    }\n    this._overlayRef = overlayRef;\n  }\n  /** Enables the closing of the attached overlay on scroll. */\n  enable() {\n    if (this._scrollSubscription) {\n      return;\n    }\n    const stream = this._scrollDispatcher.scrolled(0).pipe(filter(scrollable => {\n      return !scrollable || !this._overlayRef.overlayElement.contains(scrollable.getElementRef().nativeElement);\n    }));\n    if (this._config && this._config.threshold && this._config.threshold > 1) {\n      this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n      this._scrollSubscription = stream.subscribe(() => {\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n        if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n          this._detach();\n        } else {\n          this._overlayRef.updatePosition();\n        }\n      });\n    } else {\n      this._scrollSubscription = stream.subscribe(this._detach);\n    }\n  }\n  /** Disables the closing the attached overlay on scroll. */\n  disable() {\n    if (this._scrollSubscription) {\n      this._scrollSubscription.unsubscribe();\n      this._scrollSubscription = null;\n    }\n  }\n  detach() {\n    this.disable();\n    this._overlayRef = null;\n  }\n}\n\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n  /** Does nothing, as this scroll strategy is a no-op. */\n  enable() {}\n  /** Does nothing, as this scroll strategy is a no-op. */\n  disable() {}\n  /** Does nothing, as this scroll strategy is a no-op. */\n  attach() {}\n}\n\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n  return scrollContainers.some(containerBounds => {\n    const outsideAbove = element.bottom < containerBounds.top;\n    const outsideBelow = element.top > containerBounds.bottom;\n    const outsideLeft = element.right < containerBounds.left;\n    const outsideRight = element.left > containerBounds.right;\n    return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n  });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n  return scrollContainers.some(scrollContainerRect => {\n    const clippedAbove = element.top < scrollContainerRect.top;\n    const clippedBelow = element.bottom > scrollContainerRect.bottom;\n    const clippedLeft = element.left < scrollContainerRect.left;\n    const clippedRight = element.right > scrollContainerRect.right;\n    return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n  });\n}\n\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n  constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n    this._scrollDispatcher = _scrollDispatcher;\n    this._viewportRuler = _viewportRuler;\n    this._ngZone = _ngZone;\n    this._config = _config;\n    this._scrollSubscription = null;\n  }\n  /** Attaches this scroll strategy to an overlay. */\n  attach(overlayRef) {\n    if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatScrollStrategyAlreadyAttachedError();\n    }\n    this._overlayRef = overlayRef;\n  }\n  /** Enables repositioning of the attached overlay on scroll. */\n  enable() {\n    if (!this._scrollSubscription) {\n      const throttle = this._config ? this._config.scrollThrottle : 0;\n      this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n        this._overlayRef.updatePosition();\n        // TODO(crisbeto): make `close` on by default once all components can handle it.\n        if (this._config && this._config.autoClose) {\n          const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n          const {\n            width,\n            height\n          } = this._viewportRuler.getViewportSize();\n          // TODO(crisbeto): include all ancestor scroll containers here once\n          // we have a way of exposing the trigger element to the scroll strategy.\n          const parentRects = [{\n            width,\n            height,\n            bottom: height,\n            right: width,\n            top: 0,\n            left: 0\n          }];\n          if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n            this.disable();\n            this._ngZone.run(() => this._overlayRef.detach());\n          }\n        }\n      });\n    }\n  }\n  /** Disables repositioning of the attached overlay on scroll. */\n  disable() {\n    if (this._scrollSubscription) {\n      this._scrollSubscription.unsubscribe();\n      this._scrollSubscription = null;\n    }\n  }\n  detach() {\n    this.disable();\n    this._overlayRef = null;\n  }\n}\n\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nlet ScrollStrategyOptions = /*#__PURE__*/(() => {\n  class ScrollStrategyOptions {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n      this._scrollDispatcher = _scrollDispatcher;\n      this._viewportRuler = _viewportRuler;\n      this._ngZone = _ngZone;\n      /** Do nothing on scroll. */\n      this.noop = () => new NoopScrollStrategy();\n      /**\n       * Close the overlay as soon as the user scrolls.\n       * @param config Configuration to be used inside the scroll strategy.\n       */\n      this.close = config => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config);\n      /** Block scrolling. */\n      this.block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n      /**\n       * Update the overlay's position on scroll.\n       * @param config Configuration to be used inside the scroll strategy.\n       * Allows debouncing the reposition calls.\n       */\n      this.reposition = config => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config);\n      this._document = document;\n    }\n    static {\n      this.ɵfac = function ScrollStrategyOptions_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ScrollStrategyOptions)(i0.ɵɵinject(i1.ScrollDispatcher), i0.ɵɵinject(i1.ViewportRuler), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ScrollStrategyOptions,\n        factory: ScrollStrategyOptions.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ScrollStrategyOptions;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n  constructor(config) {\n    /** Strategy to be used when handling scroll events while the overlay is open. */\n    this.scrollStrategy = new NoopScrollStrategy();\n    /** Custom class to add to the overlay pane. */\n    this.panelClass = '';\n    /** Whether the overlay has a backdrop. */\n    this.hasBackdrop = false;\n    /** Custom class to add to the backdrop */\n    this.backdropClass = 'cdk-overlay-dark-backdrop';\n    /**\n     * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     */\n    this.disposeOnNavigation = false;\n    if (config) {\n      // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n      // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n      // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n      const configKeys = Object.keys(config);\n      for (const key of configKeys) {\n        if (config[key] !== undefined) {\n          // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n          // as \"I don't know *which* key this is, so the only valid value is the intersection\n          // of all the possible values.\" In this case, that happens to be `undefined`. TypeScript\n          // is not smart enough to see that the right-hand-side is actually an access of the same\n          // exact type with the same exact key, meaning that the value type must be identical.\n          // So we use `any` to work around this.\n          this[key] = config[key];\n        }\n      }\n    }\n  }\n}\n\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n  constructor(origin, overlay, /** Offset along the X axis. */\n  offsetX, /** Offset along the Y axis. */\n  offsetY, /** Class(es) to be applied to the panel while this position is active. */\n  panelClass) {\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    this.panelClass = panelClass;\n    this.originX = origin.originX;\n    this.originY = origin.originY;\n    this.overlayX = overlay.overlayX;\n    this.overlayY = overlay.overlayY;\n  }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n  constructor( /** The position used as a result of this change. */\n  connectionPair, /** @docs-private */\n  scrollableViewProperties) {\n    this.connectionPair = connectionPair;\n    this.scrollableViewProperties = scrollableViewProperties;\n  }\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n  if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n    throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` + `Expected \"top\", \"bottom\" or \"center\".`);\n  }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n  if (value !== 'start' && value !== 'end' && value !== 'center') {\n    throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` + `Expected \"start\", \"end\" or \"center\".`);\n  }\n}\n\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nlet BaseOverlayDispatcher = /*#__PURE__*/(() => {\n  class BaseOverlayDispatcher {\n    constructor(document) {\n      /** Currently attached overlays in the order they were attached. */\n      this._attachedOverlays = [];\n      this._document = document;\n    }\n    ngOnDestroy() {\n      this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n      // Ensure that we don't get the same overlay multiple times.\n      this.remove(overlayRef);\n      this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n      const index = this._attachedOverlays.indexOf(overlayRef);\n      if (index > -1) {\n        this._attachedOverlays.splice(index, 1);\n      }\n      // Remove the global listener once there are no more overlays.\n      if (this._attachedOverlays.length === 0) {\n        this.detach();\n      }\n    }\n    static {\n      this.ɵfac = function BaseOverlayDispatcher_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || BaseOverlayDispatcher)(i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: BaseOverlayDispatcher,\n        factory: BaseOverlayDispatcher.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return BaseOverlayDispatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nlet OverlayKeyboardDispatcher = /*#__PURE__*/(() => {\n  class OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    constructor(document, /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n      super(document);\n      this._ngZone = _ngZone;\n      /** Keyboard event listener that will be attached to the body. */\n      this._keydownListener = event => {\n        const overlays = this._attachedOverlays;\n        for (let i = overlays.length - 1; i > -1; i--) {\n          // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n          // We want to target the most recent overlay, rather than trying to match where the event came\n          // from, because some components might open an overlay, but keep focus on a trigger element\n          // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n          // because we don't want overlays that don't handle keyboard events to block the ones below\n          // them that do.\n          if (overlays[i]._keydownEvents.observers.length > 0) {\n            const keydownEvents = overlays[i]._keydownEvents;\n            /** @breaking-change 14.0.0 _ngZone will be required. */\n            if (this._ngZone) {\n              this._ngZone.run(() => keydownEvents.next(event));\n            } else {\n              keydownEvents.next(event);\n            }\n            break;\n          }\n        }\n      };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n      super.add(overlayRef);\n      // Lazily start dispatcher once first overlay is added\n      if (!this._isAttached) {\n        /** @breaking-change 14.0.0 _ngZone will be required. */\n        if (this._ngZone) {\n          this._ngZone.runOutsideAngular(() => this._document.body.addEventListener('keydown', this._keydownListener));\n        } else {\n          this._document.body.addEventListener('keydown', this._keydownListener);\n        }\n        this._isAttached = true;\n      }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n      if (this._isAttached) {\n        this._document.body.removeEventListener('keydown', this._keydownListener);\n        this._isAttached = false;\n      }\n    }\n    static {\n      this.ɵfac = function OverlayKeyboardDispatcher_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || OverlayKeyboardDispatcher)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i0.NgZone, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: OverlayKeyboardDispatcher,\n        factory: OverlayKeyboardDispatcher.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return OverlayKeyboardDispatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nlet OverlayOutsideClickDispatcher = /*#__PURE__*/(() => {\n  class OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    constructor(document, _platform, /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n      super(document);\n      this._platform = _platform;\n      this._ngZone = _ngZone;\n      this._cursorStyleIsSet = false;\n      /** Store pointerdown event target to track origin of click. */\n      this._pointerDownListener = event => {\n        this._pointerDownEventTarget = _getEventTarget(event);\n      };\n      /** Click event listener that will be attached to the body propagate phase. */\n      this._clickListener = event => {\n        const target = _getEventTarget(event);\n        // In case of a click event, we want to check the origin of the click\n        // (e.g. in case where a user starts a click inside the overlay and\n        // releases the click outside of it).\n        // This is done by using the event target of the preceding pointerdown event.\n        // Every click event caused by a pointer device has a preceding pointerdown\n        // event, unless the click was programmatically triggered (e.g. in a unit test).\n        const origin = event.type === 'click' && this._pointerDownEventTarget ? this._pointerDownEventTarget : target;\n        // Reset the stored pointerdown event target, to avoid having it interfere\n        // in subsequent events.\n        this._pointerDownEventTarget = null;\n        // We copy the array because the original may be modified asynchronously if the\n        // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n        // the for loop.\n        const overlays = this._attachedOverlays.slice();\n        // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n        // We want to target all overlays for which the click could be considered as outside click.\n        // As soon as we reach an overlay for which the click is not outside click we break off\n        // the loop.\n        for (let i = overlays.length - 1; i > -1; i--) {\n          const overlayRef = overlays[i];\n          if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n            continue;\n          }\n          // If it's a click inside the overlay, just break - we should do nothing\n          // If it's an outside click (both origin and target of the click) dispatch the mouse event,\n          // and proceed with the next overlay\n          if (containsPierceShadowDom(overlayRef.overlayElement, target) || containsPierceShadowDom(overlayRef.overlayElement, origin)) {\n            break;\n          }\n          const outsidePointerEvents = overlayRef._outsidePointerEvents;\n          /** @breaking-change 14.0.0 _ngZone will be required. */\n          if (this._ngZone) {\n            this._ngZone.run(() => outsidePointerEvents.next(event));\n          } else {\n            outsidePointerEvents.next(event);\n          }\n        }\n      };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n      super.add(overlayRef);\n      // Safari on iOS does not generate click events for non-interactive\n      // elements. However, we want to receive a click for any element outside\n      // the overlay. We can force a \"clickable\" state by setting\n      // `cursor: pointer` on the document body. See:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n      // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n      if (!this._isAttached) {\n        const body = this._document.body;\n        /** @breaking-change 14.0.0 _ngZone will be required. */\n        if (this._ngZone) {\n          this._ngZone.runOutsideAngular(() => this._addEventListeners(body));\n        } else {\n          this._addEventListeners(body);\n        }\n        // click event is not fired on iOS. To make element \"clickable\" we are\n        // setting the cursor to pointer\n        if (this._platform.IOS && !this._cursorStyleIsSet) {\n          this._cursorOriginalValue = body.style.cursor;\n          body.style.cursor = 'pointer';\n          this._cursorStyleIsSet = true;\n        }\n        this._isAttached = true;\n      }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n      if (this._isAttached) {\n        const body = this._document.body;\n        body.removeEventListener('pointerdown', this._pointerDownListener, true);\n        body.removeEventListener('click', this._clickListener, true);\n        body.removeEventListener('auxclick', this._clickListener, true);\n        body.removeEventListener('contextmenu', this._clickListener, true);\n        if (this._platform.IOS && this._cursorStyleIsSet) {\n          body.style.cursor = this._cursorOriginalValue;\n          this._cursorStyleIsSet = false;\n        }\n        this._isAttached = false;\n      }\n    }\n    _addEventListeners(body) {\n      body.addEventListener('pointerdown', this._pointerDownListener, true);\n      body.addEventListener('click', this._clickListener, true);\n      body.addEventListener('auxclick', this._clickListener, true);\n      body.addEventListener('contextmenu', this._clickListener, true);\n    }\n    static {\n      this.ɵfac = function OverlayOutsideClickDispatcher_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || OverlayOutsideClickDispatcher)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1$1.Platform), i0.ɵɵinject(i0.NgZone, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: OverlayOutsideClickDispatcher,\n        factory: OverlayOutsideClickDispatcher.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return OverlayOutsideClickDispatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Version of `Element.contains` that transcends shadow DOM boundaries. */\nfunction containsPierceShadowDom(parent, child) {\n  const supportsShadowRoot = typeof ShadowRoot !== 'undefined' && ShadowRoot;\n  let current = child;\n  while (current) {\n    if (current === parent) {\n      return true;\n    }\n    current = supportsShadowRoot && current instanceof ShadowRoot ? current.host : current.parentNode;\n  }\n  return false;\n}\n\n/** Container inside which all overlays will render. */\nlet OverlayContainer = /*#__PURE__*/(() => {\n  class OverlayContainer {\n    constructor(document, _platform) {\n      this._platform = _platform;\n      this._document = document;\n    }\n    ngOnDestroy() {\n      this._containerElement?.remove();\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n      if (!this._containerElement) {\n        this._createContainer();\n      }\n      return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n      const containerClass = 'cdk-overlay-container';\n      // TODO(crisbeto): remove the testing check once we have an overlay testing\n      // module or Angular starts tearing down the testing `NgModule`. See:\n      // https://github.com/angular/angular/issues/18831\n      if (this._platform.isBrowser || _isTestEnvironment()) {\n        const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` + `.${containerClass}[platform=\"test\"]`);\n        // Remove any old containers from the opposite platform.\n        // This can happen when transitioning from the server to the client.\n        for (let i = 0; i < oppositePlatformContainers.length; i++) {\n          oppositePlatformContainers[i].remove();\n        }\n      }\n      const container = this._document.createElement('div');\n      container.classList.add(containerClass);\n      // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n      // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n      // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n      // To mitigate the problem we made it so that only containers from a different platform are\n      // cleared, but the side-effect was that people started depending on the overly-aggressive\n      // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n      // module which does the cleanup, we try to detect that we're in a test environment and we\n      // always clear the container. See #17006.\n      // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n      if (_isTestEnvironment()) {\n        container.setAttribute('platform', 'test');\n      } else if (!this._platform.isBrowser) {\n        container.setAttribute('platform', 'server');\n      }\n      this._document.body.appendChild(container);\n      this._containerElement = container;\n    }\n    static {\n      this.ɵfac = function OverlayContainer_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || OverlayContainer)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1$1.Platform));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: OverlayContainer,\n        factory: OverlayContainer.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return OverlayContainer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n  constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher, _animationsDisabled = false, _injector) {\n    this._portalOutlet = _portalOutlet;\n    this._host = _host;\n    this._pane = _pane;\n    this._config = _config;\n    this._ngZone = _ngZone;\n    this._keyboardDispatcher = _keyboardDispatcher;\n    this._document = _document;\n    this._location = _location;\n    this._outsideClickDispatcher = _outsideClickDispatcher;\n    this._animationsDisabled = _animationsDisabled;\n    this._injector = _injector;\n    this._backdropElement = null;\n    this._backdropClick = new Subject();\n    this._attachments = new Subject();\n    this._detachments = new Subject();\n    this._locationChanges = Subscription.EMPTY;\n    this._backdropClickHandler = event => this._backdropClick.next(event);\n    this._backdropTransitionendHandler = event => {\n      this._disposeBackdrop(event.target);\n    };\n    /** Stream of keydown events dispatched to this overlay. */\n    this._keydownEvents = new Subject();\n    /** Stream of mouse outside events dispatched to this overlay. */\n    this._outsidePointerEvents = new Subject();\n    this._renders = new Subject();\n    if (_config.scrollStrategy) {\n      this._scrollStrategy = _config.scrollStrategy;\n      this._scrollStrategy.attach(this);\n    }\n    this._positionStrategy = _config.positionStrategy;\n    // Users could open the overlay from an `effect`, in which case we need to\n    // run the `afterRender` as `untracked`. We don't recommend that users do\n    // this, but we also don't want to break users who are doing it.\n    this._afterRenderRef = untracked(() => afterRender(() => {\n      this._renders.next();\n    }, {\n      injector: this._injector\n    }));\n  }\n  /** The overlay's HTML element */\n  get overlayElement() {\n    return this._pane;\n  }\n  /** The overlay's backdrop HTML element. */\n  get backdropElement() {\n    return this._backdropElement;\n  }\n  /**\n   * Wrapper around the panel element. Can be used for advanced\n   * positioning where a wrapper with specific styling is\n   * required around the overlay pane.\n   */\n  get hostElement() {\n    return this._host;\n  }\n  /**\n   * Attaches content, given via a Portal, to the overlay.\n   * If the overlay is configured to have a backdrop, it will be created.\n   *\n   * @param portal Portal instance to which to attach the overlay.\n   * @returns The portal attachment result.\n   */\n  attach(portal) {\n    // Insert the host into the DOM before attaching the portal, otherwise\n    // the animations module will skip animations on repeat attachments.\n    if (!this._host.parentElement && this._previousHostParent) {\n      this._previousHostParent.appendChild(this._host);\n    }\n    const attachResult = this._portalOutlet.attach(portal);\n    if (this._positionStrategy) {\n      this._positionStrategy.attach(this);\n    }\n    this._updateStackingOrder();\n    this._updateElementSize();\n    this._updateElementDirection();\n    if (this._scrollStrategy) {\n      this._scrollStrategy.enable();\n    }\n    // We need to clean this up ourselves, because we're passing in an\n    // `EnvironmentInjector` below which won't ever be destroyed.\n    // Otherwise it causes some callbacks to be retained (see #29696).\n    this._afterNextRenderRef?.destroy();\n    // Update the position once the overlay is fully rendered before attempting to position it,\n    // as the position may depend on the size of the rendered content.\n    this._afterNextRenderRef = afterNextRender(() => {\n      // The overlay could've been detached before the callback executed.\n      if (this.hasAttached()) {\n        this.updatePosition();\n      }\n    }, {\n      injector: this._injector\n    });\n    // Enable pointer events for the overlay pane element.\n    this._togglePointerEvents(true);\n    if (this._config.hasBackdrop) {\n      this._attachBackdrop();\n    }\n    if (this._config.panelClass) {\n      this._toggleClasses(this._pane, this._config.panelClass, true);\n    }\n    // Only emit the `attachments` event once all other setup is done.\n    this._attachments.next();\n    // Track this overlay by the keyboard dispatcher\n    this._keyboardDispatcher.add(this);\n    if (this._config.disposeOnNavigation) {\n      this._locationChanges = this._location.subscribe(() => this.dispose());\n    }\n    this._outsideClickDispatcher.add(this);\n    // TODO(crisbeto): the null check is here, because the portal outlet returns `any`.\n    // We should be guaranteed for the result to be `ComponentRef | EmbeddedViewRef`, but\n    // `instanceof EmbeddedViewRef` doesn't appear to work at the moment.\n    if (typeof attachResult?.onDestroy === 'function') {\n      // In most cases we control the portal and we know when it is being detached so that\n      // we can finish the disposal process. The exception is if the user passes in a custom\n      // `ViewContainerRef` that isn't destroyed through the overlay API. Note that we use\n      // `detach` here instead of `dispose`, because we don't know if the user intends to\n      // reattach the overlay at a later point. It also has the advantage of waiting for animations.\n      attachResult.onDestroy(() => {\n        if (this.hasAttached()) {\n          // We have to delay the `detach` call, because detaching immediately prevents\n          // other destroy hooks from running. This is likely a framework bug similar to\n          // https://github.com/angular/angular/issues/46119\n          this._ngZone.runOutsideAngular(() => Promise.resolve().then(() => this.detach()));\n        }\n      });\n    }\n    return attachResult;\n  }\n  /**\n   * Detaches an overlay from a portal.\n   * @returns The portal detachment result.\n   */\n  detach() {\n    if (!this.hasAttached()) {\n      return;\n    }\n    this.detachBackdrop();\n    // When the overlay is detached, the pane element should disable pointer events.\n    // This is necessary because otherwise the pane element will cover the page and disable\n    // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n    this._togglePointerEvents(false);\n    if (this._positionStrategy && this._positionStrategy.detach) {\n      this._positionStrategy.detach();\n    }\n    if (this._scrollStrategy) {\n      this._scrollStrategy.disable();\n    }\n    const detachmentResult = this._portalOutlet.detach();\n    // Only emit after everything is detached.\n    this._detachments.next();\n    // Remove this overlay from keyboard dispatcher tracking.\n    this._keyboardDispatcher.remove(this);\n    // Keeping the host element in the DOM can cause scroll jank, because it still gets\n    // rendered, even though it's transparent and unclickable which is why we remove it.\n    this._detachContentWhenEmpty();\n    this._locationChanges.unsubscribe();\n    this._outsideClickDispatcher.remove(this);\n    return detachmentResult;\n  }\n  /** Cleans up the overlay from the DOM. */\n  dispose() {\n    const isAttached = this.hasAttached();\n    if (this._positionStrategy) {\n      this._positionStrategy.dispose();\n    }\n    this._disposeScrollStrategy();\n    this._disposeBackdrop(this._backdropElement);\n    this._locationChanges.unsubscribe();\n    this._keyboardDispatcher.remove(this);\n    this._portalOutlet.dispose();\n    this._attachments.complete();\n    this._backdropClick.complete();\n    this._keydownEvents.complete();\n    this._outsidePointerEvents.complete();\n    this._outsideClickDispatcher.remove(this);\n    this._host?.remove();\n    this._afterNextRenderRef?.destroy();\n    this._previousHostParent = this._pane = this._host = null;\n    if (isAttached) {\n      this._detachments.next();\n    }\n    this._detachments.complete();\n    this._afterRenderRef.destroy();\n    this._renders.complete();\n  }\n  /** Whether the overlay has attached content. */\n  hasAttached() {\n    return this._portalOutlet.hasAttached();\n  }\n  /** Gets an observable that emits when the backdrop has been clicked. */\n  backdropClick() {\n    return this._backdropClick;\n  }\n  /** Gets an observable that emits when the overlay has been attached. */\n  attachments() {\n    return this._attachments;\n  }\n  /** Gets an observable that emits when the overlay has been detached. */\n  detachments() {\n    return this._detachments;\n  }\n  /** Gets an observable of keydown events targeted to this overlay. */\n  keydownEvents() {\n    return this._keydownEvents;\n  }\n  /** Gets an observable of pointer events targeted outside this overlay. */\n  outsidePointerEvents() {\n    return this._outsidePointerEvents;\n  }\n  /** Gets the current overlay configuration, which is immutable. */\n  getConfig() {\n    return this._config;\n  }\n  /** Updates the position of the overlay based on the position strategy. */\n  updatePosition() {\n    if (this._positionStrategy) {\n      this._positionStrategy.apply();\n    }\n  }\n  /** Switches to a new position strategy and updates the overlay position. */\n  updatePositionStrategy(strategy) {\n    if (strategy === this._positionStrategy) {\n      return;\n    }\n    if (this._positionStrategy) {\n      this._positionStrategy.dispose();\n    }\n    this._positionStrategy = strategy;\n    if (this.hasAttached()) {\n      strategy.attach(this);\n      this.updatePosition();\n    }\n  }\n  /** Update the size properties of the overlay. */\n  updateSize(sizeConfig) {\n    this._config = {\n      ...this._config,\n      ...sizeConfig\n    };\n    this._updateElementSize();\n  }\n  /** Sets the LTR/RTL direction for the overlay. */\n  setDirection(dir) {\n    this._config = {\n      ...this._config,\n      direction: dir\n    };\n    this._updateElementDirection();\n  }\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes) {\n    if (this._pane) {\n      this._toggleClasses(this._pane, classes, true);\n    }\n  }\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes) {\n    if (this._pane) {\n      this._toggleClasses(this._pane, classes, false);\n    }\n  }\n  /**\n   * Returns the layout direction of the overlay panel.\n   */\n  getDirection() {\n    const direction = this._config.direction;\n    if (!direction) {\n      return 'ltr';\n    }\n    return typeof direction === 'string' ? direction : direction.value;\n  }\n  /** Switches to a new scroll strategy. */\n  updateScrollStrategy(strategy) {\n    if (strategy === this._scrollStrategy) {\n      return;\n    }\n    this._disposeScrollStrategy();\n    this._scrollStrategy = strategy;\n    if (this.hasAttached()) {\n      strategy.attach(this);\n      strategy.enable();\n    }\n  }\n  /** Updates the text direction of the overlay panel. */\n  _updateElementDirection() {\n    this._host.setAttribute('dir', this.getDirection());\n  }\n  /** Updates the size of the overlay element based on the overlay config. */\n  _updateElementSize() {\n    if (!this._pane) {\n      return;\n    }\n    const style = this._pane.style;\n    style.width = coerceCssPixelValue(this._config.width);\n    style.height = coerceCssPixelValue(this._config.height);\n    style.minWidth = coerceCssPixelValue(this._config.minWidth);\n    style.minHeight = coerceCssPixelValue(this._config.minHeight);\n    style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n    style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n  }\n  /** Toggles the pointer events for the overlay pane element. */\n  _togglePointerEvents(enablePointer) {\n    this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n  }\n  /** Attaches a backdrop for this overlay. */\n  _attachBackdrop() {\n    const showingClass = 'cdk-overlay-backdrop-showing';\n    this._backdropElement = this._document.createElement('div');\n    this._backdropElement.classList.add('cdk-overlay-backdrop');\n    if (this._animationsDisabled) {\n      this._backdropElement.classList.add('cdk-overlay-backdrop-noop-animation');\n    }\n    if (this._config.backdropClass) {\n      this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n    }\n    // Insert the backdrop before the pane in the DOM order,\n    // in order to handle stacked overlays properly.\n    this._host.parentElement.insertBefore(this._backdropElement, this._host);\n    // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n    // action desired when such a click occurs (usually closing the overlay).\n    this._backdropElement.addEventListener('click', this._backdropClickHandler);\n    // Add class to fade-in the backdrop after one frame.\n    if (!this._animationsDisabled && typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => {\n          if (this._backdropElement) {\n            this._backdropElement.classList.add(showingClass);\n          }\n        });\n      });\n    } else {\n      this._backdropElement.classList.add(showingClass);\n    }\n  }\n  /**\n   * Updates the stacking order of the element, moving it to the top if necessary.\n   * This is required in cases where one overlay was detached, while another one,\n   * that should be behind it, was destroyed. The next time both of them are opened,\n   * the stacking will be wrong, because the detached element's pane will still be\n   * in its original DOM position.\n   */\n  _updateStackingOrder() {\n    if (this._host.nextSibling) {\n      this._host.parentNode.appendChild(this._host);\n    }\n  }\n  /** Detaches the backdrop (if any) associated with the overlay. */\n  detachBackdrop() {\n    const backdropToDetach = this._backdropElement;\n    if (!backdropToDetach) {\n      return;\n    }\n    if (this._animationsDisabled) {\n      this._disposeBackdrop(backdropToDetach);\n      return;\n    }\n    backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n    this._ngZone.runOutsideAngular(() => {\n      backdropToDetach.addEventListener('transitionend', this._backdropTransitionendHandler);\n    });\n    // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n    // In this case we make it unclickable and we try to remove it after a delay.\n    backdropToDetach.style.pointerEvents = 'none';\n    // Run this outside the Angular zone because there's nothing that Angular cares about.\n    // If it were to run inside the Angular zone, every test that used Overlay would have to be\n    // either async or fakeAsync.\n    this._backdropTimeout = this._ngZone.runOutsideAngular(() => setTimeout(() => {\n      this._disposeBackdrop(backdropToDetach);\n    }, 500));\n  }\n  /** Toggles a single CSS class or an array of classes on an element. */\n  _toggleClasses(element, cssClasses, isAdd) {\n    const classes = coerceArray(cssClasses || []).filter(c => !!c);\n    if (classes.length) {\n      isAdd ? element.classList.add(...classes) : element.classList.remove(...classes);\n    }\n  }\n  /** Detaches the overlay content next time the zone stabilizes. */\n  _detachContentWhenEmpty() {\n    // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n    // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n    // be patched to run inside the zone, which will throw us into an infinite loop.\n    this._ngZone.runOutsideAngular(() => {\n      // We can't remove the host here immediately, because the overlay pane's content\n      // might still be animating. This stream helps us avoid interrupting the animation\n      // by waiting for the pane to become empty.\n      const subscription = this._renders.pipe(takeUntil(merge(this._attachments, this._detachments))).subscribe(() => {\n        // Needs a couple of checks for the pane and host, because\n        // they may have been removed by the time the zone stabilizes.\n        if (!this._pane || !this._host || this._pane.children.length === 0) {\n          if (this._pane && this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, false);\n          }\n          if (this._host && this._host.parentElement) {\n            this._previousHostParent = this._host.parentElement;\n            this._host.remove();\n          }\n          subscription.unsubscribe();\n        }\n      });\n    });\n  }\n  /** Disposes of a scroll strategy. */\n  _disposeScrollStrategy() {\n    const scrollStrategy = this._scrollStrategy;\n    if (scrollStrategy) {\n      scrollStrategy.disable();\n      if (scrollStrategy.detach) {\n        scrollStrategy.detach();\n      }\n    }\n  }\n  /** Removes a backdrop element from the DOM. */\n  _disposeBackdrop(backdrop) {\n    if (backdrop) {\n      backdrop.removeEventListener('click', this._backdropClickHandler);\n      backdrop.removeEventListener('transitionend', this._backdropTransitionendHandler);\n      backdrop.remove();\n      // It is possible that a new portal has been attached to this overlay since we started\n      // removing the backdrop. If that is the case, only clear the backdrop reference if it\n      // is still the same instance that we started to remove.\n      if (this._backdropElement === backdrop) {\n        this._backdropElement = null;\n      }\n    }\n    if (this._backdropTimeout) {\n      clearTimeout(this._backdropTimeout);\n      this._backdropTimeout = undefined;\n    }\n  }\n}\n\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n  /** Ordered list of preferred positions, from most to least desirable. */\n  get positions() {\n    return this._preferredPositions;\n  }\n  constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n    this._viewportRuler = _viewportRuler;\n    this._document = _document;\n    this._platform = _platform;\n    this._overlayContainer = _overlayContainer;\n    /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n    this._lastBoundingBoxSize = {\n      width: 0,\n      height: 0\n    };\n    /** Whether the overlay was pushed in a previous positioning. */\n    this._isPushed = false;\n    /** Whether the overlay can be pushed on-screen on the initial open. */\n    this._canPush = true;\n    /** Whether the overlay can grow via flexible width/height after the initial open. */\n    this._growAfterOpen = false;\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    this._hasFlexibleDimensions = true;\n    /** Whether the overlay position is locked. */\n    this._positionLocked = false;\n    /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n    this._viewportMargin = 0;\n    /** The Scrollable containers used to check scrollable view properties on position change. */\n    this._scrollables = [];\n    /** Ordered list of preferred positions, from most to least desirable. */\n    this._preferredPositions = [];\n    /** Subject that emits whenever the position changes. */\n    this._positionChanges = new Subject();\n    /** Subscription to viewport size changes. */\n    this._resizeSubscription = Subscription.EMPTY;\n    /** Default offset for the overlay along the x axis. */\n    this._offsetX = 0;\n    /** Default offset for the overlay along the y axis. */\n    this._offsetY = 0;\n    /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n    this._appliedPanelClasses = [];\n    /** Observable sequence of position changes. */\n    this.positionChanges = this._positionChanges;\n    this.setOrigin(connectedTo);\n  }\n  /** Attaches this position strategy to an overlay. */\n  attach(overlayRef) {\n    if (this._overlayRef && overlayRef !== this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('This position strategy is already attached to an overlay');\n    }\n    this._validatePositions();\n    overlayRef.hostElement.classList.add(boundingBoxClass);\n    this._overlayRef = overlayRef;\n    this._boundingBox = overlayRef.hostElement;\n    this._pane = overlayRef.overlayElement;\n    this._isDisposed = false;\n    this._isInitialRender = true;\n    this._lastPosition = null;\n    this._resizeSubscription.unsubscribe();\n    this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n      // When the window is resized, we want to trigger the next reposition as if it\n      // was an initial render, in order for the strategy to pick a new optimal position,\n      // otherwise position locking will cause it to stay at the old one.\n      this._isInitialRender = true;\n      this.apply();\n    });\n  }\n  /**\n   * Updates the position of the overlay element, using whichever preferred position relative\n   * to the origin best fits on-screen.\n   *\n   * The selection of a position goes as follows:\n   *  - If any positions fit completely within the viewport as-is,\n   *      choose the first position that does so.\n   *  - If flexible dimensions are enabled and at least one satisfies the given minimum width/height,\n   *      choose the position with the greatest available size modified by the positions' weight.\n   *  - If pushing is enabled, take the position that went off-screen the least and push it\n   *      on-screen.\n   *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n   * @docs-private\n   */\n  apply() {\n    // We shouldn't do anything if the strategy was disposed or we're on the server.\n    if (this._isDisposed || !this._platform.isBrowser) {\n      return;\n    }\n    // If the position has been applied already (e.g. when the overlay was opened) and the\n    // consumer opted into locking in the position, re-use the old position, in order to\n    // prevent the overlay from jumping around.\n    if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n      this.reapplyLastPosition();\n      return;\n    }\n    this._clearPanelClasses();\n    this._resetOverlayElementStyles();\n    this._resetBoundingBoxStyles();\n    // We need the bounding rects for the origin, the overlay and the container to determine how to position\n    // the overlay relative to the origin.\n    // We use the viewport rect to determine whether a position would go off-screen.\n    this._viewportRect = this._getNarrowedViewportRect();\n    this._originRect = this._getOriginRect();\n    this._overlayRect = this._pane.getBoundingClientRect();\n    this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n    const originRect = this._originRect;\n    const overlayRect = this._overlayRect;\n    const viewportRect = this._viewportRect;\n    const containerRect = this._containerRect;\n    // Positions where the overlay will fit with flexible dimensions.\n    const flexibleFits = [];\n    // Fallback if none of the preferred positions fit within the viewport.\n    let fallback;\n    // Go through each of the preferred positions looking for a good fit.\n    // If a good fit is found, it will be applied immediately.\n    for (let pos of this._preferredPositions) {\n      // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n      let originPoint = this._getOriginPoint(originRect, containerRect, pos);\n      // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n      // overlay in this position. We use the top-left corner for calculations and later translate\n      // this into an appropriate (top, left, bottom, right) style.\n      let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n      // Calculate how well the overlay would fit into the viewport with this point.\n      let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n      // If the overlay, without any further work, fits into the viewport, use this position.\n      if (overlayFit.isCompletelyWithinViewport) {\n        this._isPushed = false;\n        this._applyPosition(pos, originPoint);\n        return;\n      }\n      // If the overlay has flexible dimensions, we can use this position\n      // so long as there's enough space for the minimum dimensions.\n      if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n        // Save positions where the overlay will fit with flexible dimensions. We will use these\n        // if none of the positions fit *without* flexible dimensions.\n        flexibleFits.push({\n          position: pos,\n          origin: originPoint,\n          overlayRect,\n          boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n        });\n        continue;\n      }\n      // If the current preferred position does not fit on the screen, remember the position\n      // if it has more visible area on-screen than we've seen and move onto the next preferred\n      // position.\n      if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n        fallback = {\n          overlayFit,\n          overlayPoint,\n          originPoint,\n          position: pos,\n          overlayRect\n        };\n      }\n    }\n    // If there are any positions where the overlay would fit with flexible dimensions, choose the\n    // one that has the greatest area available modified by the position's weight\n    if (flexibleFits.length) {\n      let bestFit = null;\n      let bestScore = -1;\n      for (const fit of flexibleFits) {\n        const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n        if (score > bestScore) {\n          bestScore = score;\n          bestFit = fit;\n        }\n      }\n      this._isPushed = false;\n      this._applyPosition(bestFit.position, bestFit.origin);\n      return;\n    }\n    // When none of the preferred positions fit within the viewport, take the position\n    // that went off-screen the least and attempt to push it on-screen.\n    if (this._canPush) {\n      // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n      this._isPushed = true;\n      this._applyPosition(fallback.position, fallback.originPoint);\n      return;\n    }\n    // All options for getting the overlay within the viewport have been exhausted, so go with the\n    // position that went off-screen the least.\n    this._applyPosition(fallback.position, fallback.originPoint);\n  }\n  detach() {\n    this._clearPanelClasses();\n    this._lastPosition = null;\n    this._previousPushAmount = null;\n    this._resizeSubscription.unsubscribe();\n  }\n  /** Cleanup after the element gets destroyed. */\n  dispose() {\n    if (this._isDisposed) {\n      return;\n    }\n    // We can't use `_resetBoundingBoxStyles` here, because it resets\n    // some properties to zero, rather than removing them.\n    if (this._boundingBox) {\n      extendStyles(this._boundingBox.style, {\n        top: '',\n        left: '',\n        right: '',\n        bottom: '',\n        height: '',\n        width: '',\n        alignItems: '',\n        justifyContent: ''\n      });\n    }\n    if (this._pane) {\n      this._resetOverlayElementStyles();\n    }\n    if (this._overlayRef) {\n      this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n    }\n    this.detach();\n    this._positionChanges.complete();\n    this._overlayRef = this._boundingBox = null;\n    this._isDisposed = true;\n  }\n  /**\n   * This re-aligns the overlay element with the trigger in its last calculated position,\n   * even if a position higher in the \"preferred positions\" list would now fit. This\n   * allows one to re-align the panel without changing the orientation of the panel.\n   */\n  reapplyLastPosition() {\n    if (this._isDisposed || !this._platform.isBrowser) {\n      return;\n    }\n    const lastPosition = this._lastPosition;\n    if (lastPosition) {\n      this._originRect = this._getOriginRect();\n      this._overlayRect = this._pane.getBoundingClientRect();\n      this._viewportRect = this._getNarrowedViewportRect();\n      this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n      const originPoint = this._getOriginPoint(this._originRect, this._containerRect, lastPosition);\n      this._applyPosition(lastPosition, originPoint);\n    } else {\n      this.apply();\n    }\n  }\n  /**\n   * Sets the list of Scrollable containers that host the origin element so that\n   * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n   * Scrollable must be an ancestor element of the strategy's origin element.\n   */\n  withScrollableContainers(scrollables) {\n    this._scrollables = scrollables;\n    return this;\n  }\n  /**\n   * Adds new preferred positions.\n   * @param positions List of positions options for this overlay.\n   */\n  withPositions(positions) {\n    this._preferredPositions = positions;\n    // If the last calculated position object isn't part of the positions anymore, clear\n    // it in order to avoid it being picked up if the consumer tries to re-apply.\n    if (positions.indexOf(this._lastPosition) === -1) {\n      this._lastPosition = null;\n    }\n    this._validatePositions();\n    return this;\n  }\n  /**\n   * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n   * @param margin Required margin between the overlay and the viewport edge in pixels.\n   */\n  withViewportMargin(margin) {\n    this._viewportMargin = margin;\n    return this;\n  }\n  /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n  withFlexibleDimensions(flexibleDimensions = true) {\n    this._hasFlexibleDimensions = flexibleDimensions;\n    return this;\n  }\n  /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n  withGrowAfterOpen(growAfterOpen = true) {\n    this._growAfterOpen = growAfterOpen;\n    return this;\n  }\n  /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n  withPush(canPush = true) {\n    this._canPush = canPush;\n    return this;\n  }\n  /**\n   * Sets whether the overlay's position should be locked in after it is positioned\n   * initially. When an overlay is locked in, it won't attempt to reposition itself\n   * when the position is re-applied (e.g. when the user scrolls away).\n   * @param isLocked Whether the overlay should locked in.\n   */\n  withLockedPosition(isLocked = true) {\n    this._positionLocked = isLocked;\n    return this;\n  }\n  /**\n   * Sets the origin, relative to which to position the overlay.\n   * Using an element origin is useful for building components that need to be positioned\n   * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n   * used for cases like contextual menus which open relative to the user's pointer.\n   * @param origin Reference to the new origin.\n   */\n  setOrigin(origin) {\n    this._origin = origin;\n    return this;\n  }\n  /**\n   * Sets the default offset for the overlay's connection point on the x-axis.\n   * @param offset New offset in the X axis.\n   */\n  withDefaultOffsetX(offset) {\n    this._offsetX = offset;\n    return this;\n  }\n  /**\n   * Sets the default offset for the overlay's connection point on the y-axis.\n   * @param offset New offset in the Y axis.\n   */\n  withDefaultOffsetY(offset) {\n    this._offsetY = offset;\n    return this;\n  }\n  /**\n   * Configures that the position strategy should set a `transform-origin` on some elements\n   * inside the overlay, depending on the current position that is being applied. This is\n   * useful for the cases where the origin of an animation can change depending on the\n   * alignment of the overlay.\n   * @param selector CSS selector that will be used to find the target\n   *    elements onto which to set the transform origin.\n   */\n  withTransformOriginOn(selector) {\n    this._transformOriginSelector = selector;\n    return this;\n  }\n  /**\n   * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n   */\n  _getOriginPoint(originRect, containerRect, pos) {\n    let x;\n    if (pos.originX == 'center') {\n      // Note: when centering we should always use the `left`\n      // offset, otherwise the position will be wrong in RTL.\n      x = originRect.left + originRect.width / 2;\n    } else {\n      const startX = this._isRtl() ? originRect.right : originRect.left;\n      const endX = this._isRtl() ? originRect.left : originRect.right;\n      x = pos.originX == 'start' ? startX : endX;\n    }\n    // When zooming in Safari the container rectangle contains negative values for the position\n    // and we need to re-add them to the calculated coordinates.\n    if (containerRect.left < 0) {\n      x -= containerRect.left;\n    }\n    let y;\n    if (pos.originY == 'center') {\n      y = originRect.top + originRect.height / 2;\n    } else {\n      y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n    }\n    // Normally the containerRect's top value would be zero, however when the overlay is attached to an input\n    // (e.g. in an autocomplete), mobile browsers will shift everything in order to put the input in the middle\n    // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n    // otherwise our positioning will be thrown off.\n    // Additionally, when zooming in Safari this fixes the vertical position.\n    if (containerRect.top < 0) {\n      y -= containerRect.top;\n    }\n    return {\n      x,\n      y\n    };\n  }\n  /**\n   * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n   * origin point to which the overlay should be connected.\n   */\n  _getOverlayPoint(originPoint, overlayRect, pos) {\n    // Calculate the (overlayStartX, overlayStartY), the start of the\n    // potential overlay position relative to the origin point.\n    let overlayStartX;\n    if (pos.overlayX == 'center') {\n      overlayStartX = -overlayRect.width / 2;\n    } else if (pos.overlayX === 'start') {\n      overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n    } else {\n      overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n    }\n    let overlayStartY;\n    if (pos.overlayY == 'center') {\n      overlayStartY = -overlayRect.height / 2;\n    } else {\n      overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n    }\n    // The (x, y) coordinates of the overlay.\n    return {\n      x: originPoint.x + overlayStartX,\n      y: originPoint.y + overlayStartY\n    };\n  }\n  /** Gets how well an overlay at the given point will fit within the viewport. */\n  _getOverlayFit(point, rawOverlayRect, viewport, position) {\n    // Round the overlay rect when comparing against the\n    // viewport, because the viewport is always rounded.\n    const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n    let {\n      x,\n      y\n    } = point;\n    let offsetX = this._getOffset(position, 'x');\n    let offsetY = this._getOffset(position, 'y');\n    // Account for the offsets since they could push the overlay out of the viewport.\n    if (offsetX) {\n      x += offsetX;\n    }\n    if (offsetY) {\n      y += offsetY;\n    }\n    // How much the overlay would overflow at this position, on each side.\n    let leftOverflow = 0 - x;\n    let rightOverflow = x + overlay.width - viewport.width;\n    let topOverflow = 0 - y;\n    let bottomOverflow = y + overlay.height - viewport.height;\n    // Visible parts of the element on each axis.\n    let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n    let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n    let visibleArea = visibleWidth * visibleHeight;\n    return {\n      visibleArea,\n      isCompletelyWithinViewport: overlay.width * overlay.height === visibleArea,\n      fitsInViewportVertically: visibleHeight === overlay.height,\n      fitsInViewportHorizontally: visibleWidth == overlay.width\n    };\n  }\n  /**\n   * Whether the overlay can fit within the viewport when it may resize either its width or height.\n   * @param fit How well the overlay fits in the viewport at some position.\n   * @param point The (x, y) coordinates of the overlay at some position.\n   * @param viewport The geometry of the viewport.\n   */\n  _canFitWithFlexibleDimensions(fit, point, viewport) {\n    if (this._hasFlexibleDimensions) {\n      const availableHeight = viewport.bottom - point.y;\n      const availableWidth = viewport.right - point.x;\n      const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n      const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n      const verticalFit = fit.fitsInViewportVertically || minHeight != null && minHeight <= availableHeight;\n      const horizontalFit = fit.fitsInViewportHorizontally || minWidth != null && minWidth <= availableWidth;\n      return verticalFit && horizontalFit;\n    }\n    return false;\n  }\n  /**\n   * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n   * the viewport, the top-left corner will be pushed on-screen (with overflow occurring on the\n   * right and bottom).\n   *\n   * @param start Starting point from which the overlay is pushed.\n   * @param rawOverlayRect Dimensions of the overlay.\n   * @param scrollPosition Current viewport scroll position.\n   * @returns The point at which to position the overlay after pushing. This is effectively a new\n   *     originPoint.\n   */\n  _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n    // If the position is locked and we've pushed the overlay already, reuse the previous push\n    // amount, rather than pushing it again. If we were to continue pushing, the element would\n    // remain in the viewport, which goes against the expectations when position locking is enabled.\n    if (this._previousPushAmount && this._positionLocked) {\n      return {\n        x: start.x + this._previousPushAmount.x,\n        y: start.y + this._previousPushAmount.y\n      };\n    }\n    // Round the overlay rect when comparing against the\n    // viewport, because the viewport is always rounded.\n    const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n    const viewport = this._viewportRect;\n    // Determine how much the overlay goes outside the viewport on each\n    // side, which we'll use to decide which direction to push it.\n    const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n    const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n    const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n    const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n    // Amount by which to push the overlay in each axis such that it remains on-screen.\n    let pushX = 0;\n    let pushY = 0;\n    // If the overlay fits completely within the bounds of the viewport, push it from whichever\n    // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n    // viewport and allow for the trailing end of the overlay to go out of bounds.\n    if (overlay.width <= viewport.width) {\n      pushX = overflowLeft || -overflowRight;\n    } else {\n      pushX = start.x < this._viewportMargin ? viewport.left - scrollPosition.left - start.x : 0;\n    }\n    if (overlay.height <= viewport.height) {\n      pushY = overflowTop || -overflowBottom;\n    } else {\n      pushY = start.y < this._viewportMargin ? viewport.top - scrollPosition.top - start.y : 0;\n    }\n    this._previousPushAmount = {\n      x: pushX,\n      y: pushY\n    };\n    return {\n      x: start.x + pushX,\n      y: start.y + pushY\n    };\n  }\n  /**\n   * Applies a computed position to the overlay and emits a position change.\n   * @param position The position preference\n   * @param originPoint The point on the origin element where the overlay is connected.\n   */\n  _applyPosition(position, originPoint) {\n    this._setTransformOrigin(position);\n    this._setOverlayElementStyles(originPoint, position);\n    this._setBoundingBoxStyles(originPoint, position);\n    if (position.panelClass) {\n      this._addPanelClasses(position.panelClass);\n    }\n    // Notify that the position has been changed along with its change properties.\n    // We only emit if we've got any subscriptions, because the scroll visibility\n    // calculations can be somewhat expensive.\n    if (this._positionChanges.observers.length) {\n      const scrollVisibility = this._getScrollVisibility();\n      // We're recalculating on scroll, but we only want to emit if anything\n      // changed since downstream code might be hitting the `NgZone`.\n      if (position !== this._lastPosition || !this._lastScrollVisibility || !compareScrollVisibility(this._lastScrollVisibility, scrollVisibility)) {\n        const changeEvent = new ConnectedOverlayPositionChange(position, scrollVisibility);\n        this._positionChanges.next(changeEvent);\n      }\n      this._lastScrollVisibility = scrollVisibility;\n    }\n    // Save the last connected position in case the position needs to be re-calculated.\n    this._lastPosition = position;\n    this._isInitialRender = false;\n  }\n  /** Sets the transform origin based on the configured selector and the passed-in position.  */\n  _setTransformOrigin(position) {\n    if (!this._transformOriginSelector) {\n      return;\n    }\n    const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n    let xOrigin;\n    let yOrigin = position.overlayY;\n    if (position.overlayX === 'center') {\n      xOrigin = 'center';\n    } else if (this._isRtl()) {\n      xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n    } else {\n      xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n    }\n    for (let i = 0; i < elements.length; i++) {\n      elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n    }\n  }\n  /**\n   * Gets the position and size of the overlay's sizing container.\n   *\n   * This method does no measuring and applies no styles so that we can cheaply compute the\n   * bounds for all positions and choose the best fit based on these results.\n   */\n  _calculateBoundingBoxRect(origin, position) {\n    const viewport = this._viewportRect;\n    const isRtl = this._isRtl();\n    let height, top, bottom;\n    if (position.overlayY === 'top') {\n      // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n      top = origin.y;\n      height = viewport.height - top + this._viewportMargin;\n    } else if (position.overlayY === 'bottom') {\n      // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n      // the viewport margin back in, because the viewport rect is narrowed down to remove the\n      // margin, whereas the `origin` position is calculated based on its `DOMRect`.\n      bottom = viewport.height - origin.y + this._viewportMargin * 2;\n      height = viewport.height - bottom + this._viewportMargin;\n    } else {\n      // If neither top nor bottom, it means that the overlay is vertically centered on the\n      // origin point. Note that we want the position relative to the viewport, rather than\n      // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n      // `origin.y - viewport.top`.\n      const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n      const previousHeight = this._lastBoundingBoxSize.height;\n      height = smallestDistanceToViewportEdge * 2;\n      top = origin.y - smallestDistanceToViewportEdge;\n      if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n        top = origin.y - previousHeight / 2;\n      }\n    }\n    // The overlay is opening 'right-ward' (the content flows to the right).\n    const isBoundedByRightViewportEdge = position.overlayX === 'start' && !isRtl || position.overlayX === 'end' && isRtl;\n    // The overlay is opening 'left-ward' (the content flows to the left).\n    const isBoundedByLeftViewportEdge = position.overlayX === 'end' && !isRtl || position.overlayX === 'start' && isRtl;\n    let width, left, right;\n    if (isBoundedByLeftViewportEdge) {\n      right = viewport.width - origin.x + this._viewportMargin * 2;\n      width = origin.x - this._viewportMargin;\n    } else if (isBoundedByRightViewportEdge) {\n      left = origin.x;\n      width = viewport.right - origin.x;\n    } else {\n      // If neither start nor end, it means that the overlay is horizontally centered on the\n      // origin point. Note that we want the position relative to the viewport, rather than\n      // the page, which is why we don't use something like `viewport.right - origin.x` and\n      // `origin.x - viewport.left`.\n      const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n      const previousWidth = this._lastBoundingBoxSize.width;\n      width = smallestDistanceToViewportEdge * 2;\n      left = origin.x - smallestDistanceToViewportEdge;\n      if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n        left = origin.x - previousWidth / 2;\n      }\n    }\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right,\n      width,\n      height\n    };\n  }\n  /**\n   * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n   * origin's connection point and stretches to the bounds of the viewport.\n   *\n   * @param origin The point on the origin element where the overlay is connected.\n   * @param position The position preference\n   */\n  _setBoundingBoxStyles(origin, position) {\n    const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n    // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n    // when applying a new size.\n    if (!this._isInitialRender && !this._growAfterOpen) {\n      boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n      boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n    }\n    const styles = {};\n    if (this._hasExactPosition()) {\n      styles.top = styles.left = '0';\n      styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n      styles.width = styles.height = '100%';\n    } else {\n      const maxHeight = this._overlayRef.getConfig().maxHeight;\n      const maxWidth = this._overlayRef.getConfig().maxWidth;\n      styles.height = coerceCssPixelValue(boundingBoxRect.height);\n      styles.top = coerceCssPixelValue(boundingBoxRect.top);\n      styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n      styles.width = coerceCssPixelValue(boundingBoxRect.width);\n      styles.left = coerceCssPixelValue(boundingBoxRect.left);\n      styles.right = coerceCssPixelValue(boundingBoxRect.right);\n      // Push the pane content towards the proper direction.\n      if (position.overlayX === 'center') {\n        styles.alignItems = 'center';\n      } else {\n        styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n      }\n      if (position.overlayY === 'center') {\n        styles.justifyContent = 'center';\n      } else {\n        styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n      }\n      if (maxHeight) {\n        styles.maxHeight = coerceCssPixelValue(maxHeight);\n      }\n      if (maxWidth) {\n        styles.maxWidth = coerceCssPixelValue(maxWidth);\n      }\n    }\n    this._lastBoundingBoxSize = boundingBoxRect;\n    extendStyles(this._boundingBox.style, styles);\n  }\n  /** Resets the styles for the bounding box so that a new positioning can be computed. */\n  _resetBoundingBoxStyles() {\n    extendStyles(this._boundingBox.style, {\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      height: '',\n      width: '',\n      alignItems: '',\n      justifyContent: ''\n    });\n  }\n  /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n  _resetOverlayElementStyles() {\n    extendStyles(this._pane.style, {\n      top: '',\n      left: '',\n      bottom: '',\n      right: '',\n      position: '',\n      transform: ''\n    });\n  }\n  /** Sets positioning styles to the overlay element. */\n  _setOverlayElementStyles(originPoint, position) {\n    const styles = {};\n    const hasExactPosition = this._hasExactPosition();\n    const hasFlexibleDimensions = this._hasFlexibleDimensions;\n    const config = this._overlayRef.getConfig();\n    if (hasExactPosition) {\n      const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n      extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n      extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n    } else {\n      styles.position = 'static';\n    }\n    // Use a transform to apply the offsets. We do this because the `center` positions rely on\n    // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n    // off the position. We also can't use margins, because they won't have an effect in some\n    // cases where the element doesn't have anything to \"push off of\". Finally, this works\n    // better both with flexible and non-flexible positioning.\n    let transformString = '';\n    let offsetX = this._getOffset(position, 'x');\n    let offsetY = this._getOffset(position, 'y');\n    if (offsetX) {\n      transformString += `translateX(${offsetX}px) `;\n    }\n    if (offsetY) {\n      transformString += `translateY(${offsetY}px)`;\n    }\n    styles.transform = transformString.trim();\n    // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n    // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n    // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n    // Note that this doesn't apply when we have an exact position, in which case we do want to\n    // apply them because they'll be cleared from the bounding box.\n    if (config.maxHeight) {\n      if (hasExactPosition) {\n        styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n      } else if (hasFlexibleDimensions) {\n        styles.maxHeight = '';\n      }\n    }\n    if (config.maxWidth) {\n      if (hasExactPosition) {\n        styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n      } else if (hasFlexibleDimensions) {\n        styles.maxWidth = '';\n      }\n    }\n    extendStyles(this._pane.style, styles);\n  }\n  /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n  _getExactOverlayY(position, originPoint, scrollPosition) {\n    // Reset any existing styles. This is necessary in case the\n    // preferred position has changed since the last `apply`.\n    let styles = {\n      top: '',\n      bottom: ''\n    };\n    let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n    if (this._isPushed) {\n      overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n    }\n    // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n    // above or below the origin and the direction in which the element will expand.\n    if (position.overlayY === 'bottom') {\n      // When using `bottom`, we adjust the y position such that it is the distance\n      // from the bottom of the viewport rather than the top.\n      const documentHeight = this._document.documentElement.clientHeight;\n      styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n    } else {\n      styles.top = coerceCssPixelValue(overlayPoint.y);\n    }\n    return styles;\n  }\n  /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n  _getExactOverlayX(position, originPoint, scrollPosition) {\n    // Reset any existing styles. This is necessary in case the preferred position has\n    // changed since the last `apply`.\n    let styles = {\n      left: '',\n      right: ''\n    };\n    let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n    if (this._isPushed) {\n      overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n    }\n    // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n    // or \"after\" the origin, which determines the direction in which the element will expand.\n    // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n    // page is in RTL or LTR.\n    let horizontalStyleProperty;\n    if (this._isRtl()) {\n      horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n    } else {\n      horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n    }\n    // When we're setting `right`, we adjust the x position such that it is the distance\n    // from the right edge of the viewport rather than the left edge.\n    if (horizontalStyleProperty === 'right') {\n      const documentWidth = this._document.documentElement.clientWidth;\n      styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n    } else {\n      styles.left = coerceCssPixelValue(overlayPoint.x);\n    }\n    return styles;\n  }\n  /**\n   * Gets the view properties of the trigger and overlay, including whether they are clipped\n   * or completely outside the view of any of the strategy's scrollables.\n   */\n  _getScrollVisibility() {\n    // Note: needs fresh rects since the position could've changed.\n    const originBounds = this._getOriginRect();\n    const overlayBounds = this._pane.getBoundingClientRect();\n    // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n    // every time, we should be able to use the scrollTop of the containers if the size of those\n    // containers hasn't changed.\n    const scrollContainerBounds = this._scrollables.map(scrollable => {\n      return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n    });\n    return {\n      isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n      isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n      isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n      isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds)\n    };\n  }\n  /** Subtracts the amount that an element is overflowing on an axis from its length. */\n  _subtractOverflows(length, ...overflows) {\n    return overflows.reduce((currentValue, currentOverflow) => {\n      return currentValue - Math.max(currentOverflow, 0);\n    }, length);\n  }\n  /** Narrows the given viewport rect by the current _viewportMargin. */\n  _getNarrowedViewportRect() {\n    // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n    // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n    // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n    // and `innerHeight` that do. This is necessary, because the overlay container uses\n    // 100% `width` and `height` which don't include the scrollbar either.\n    const width = this._document.documentElement.clientWidth;\n    const height = this._document.documentElement.clientHeight;\n    const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n    return {\n      top: scrollPosition.top + this._viewportMargin,\n      left: scrollPosition.left + this._viewportMargin,\n      right: scrollPosition.left + width - this._viewportMargin,\n      bottom: scrollPosition.top + height - this._viewportMargin,\n      width: width - 2 * this._viewportMargin,\n      height: height - 2 * this._viewportMargin\n    };\n  }\n  /** Whether the we're dealing with an RTL context */\n  _isRtl() {\n    return this._overlayRef.getDirection() === 'rtl';\n  }\n  /** Determines whether the overlay uses exact or flexible positioning. */\n  _hasExactPosition() {\n    return !this._hasFlexibleDimensions || this._isPushed;\n  }\n  /** Retrieves the offset of a position along the x or y axis. */\n  _getOffset(position, axis) {\n    if (axis === 'x') {\n      // We don't do something like `position['offset' + axis]` in\n      // order to avoid breaking minifiers that rename properties.\n      return position.offsetX == null ? this._offsetX : position.offsetX;\n    }\n    return position.offsetY == null ? this._offsetY : position.offsetY;\n  }\n  /** Validates that the current position match the expected values. */\n  _validatePositions() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._preferredPositions.length) {\n        throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n      }\n      // TODO(crisbeto): remove these once Angular's template type\n      // checking is advanced enough to catch these cases.\n      this._preferredPositions.forEach(pair => {\n        validateHorizontalPosition('originX', pair.originX);\n        validateVerticalPosition('originY', pair.originY);\n        validateHorizontalPosition('overlayX', pair.overlayX);\n        validateVerticalPosition('overlayY', pair.overlayY);\n      });\n    }\n  }\n  /** Adds a single CSS class or an array of classes on the overlay panel. */\n  _addPanelClasses(cssClasses) {\n    if (this._pane) {\n      coerceArray(cssClasses).forEach(cssClass => {\n        if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n          this._appliedPanelClasses.push(cssClass);\n          this._pane.classList.add(cssClass);\n        }\n      });\n    }\n  }\n  /** Clears the classes that the position strategy has applied from the overlay panel. */\n  _clearPanelClasses() {\n    if (this._pane) {\n      this._appliedPanelClasses.forEach(cssClass => {\n        this._pane.classList.remove(cssClass);\n      });\n      this._appliedPanelClasses = [];\n    }\n  }\n  /** Returns the DOMRect of the current origin. */\n  _getOriginRect() {\n    const origin = this._origin;\n    if (origin instanceof ElementRef) {\n      return origin.nativeElement.getBoundingClientRect();\n    }\n    // Check for Element so SVG elements are also supported.\n    if (origin instanceof Element) {\n      return origin.getBoundingClientRect();\n    }\n    const width = origin.width || 0;\n    const height = origin.height || 0;\n    // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n    return {\n      top: origin.y,\n      bottom: origin.y + height,\n      left: origin.x,\n      right: origin.x + width,\n      height,\n      width\n    };\n  }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n  for (let key in source) {\n    if (source.hasOwnProperty(key)) {\n      destination[key] = source[key];\n    }\n  }\n  return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n  if (typeof input !== 'number' && input != null) {\n    const [value, units] = input.split(cssUnitPattern);\n    return !units || units === 'px' ? parseFloat(value) : null;\n  }\n  return input || null;\n}\n/**\n * Gets a version of an element's bounding `DOMRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `DOMRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n  return {\n    top: Math.floor(clientRect.top),\n    right: Math.floor(clientRect.right),\n    bottom: Math.floor(clientRect.bottom),\n    left: Math.floor(clientRect.left),\n    width: Math.floor(clientRect.width),\n    height: Math.floor(clientRect.height)\n  };\n}\n/** Returns whether two `ScrollingVisibility` objects are identical. */\nfunction compareScrollVisibility(a, b) {\n  if (a === b) {\n    return true;\n  }\n  return a.isOriginClipped === b.isOriginClipped && a.isOriginOutsideView === b.isOriginOutsideView && a.isOverlayClipped === b.isOverlayClipped && a.isOverlayOutsideView === b.isOverlayOutsideView;\n}\nconst STANDARD_DROPDOWN_BELOW_POSITIONS = [{\n  originX: 'start',\n  originY: 'bottom',\n  overlayX: 'start',\n  overlayY: 'top'\n}, {\n  originX: 'start',\n  originY: 'top',\n  overlayX: 'start',\n  overlayY: 'bottom'\n}, {\n  originX: 'end',\n  originY: 'bottom',\n  overlayX: 'end',\n  overlayY: 'top'\n}, {\n  originX: 'end',\n  originY: 'top',\n  overlayX: 'end',\n  overlayY: 'bottom'\n}];\nconst STANDARD_DROPDOWN_ADJACENT_POSITIONS = [{\n  originX: 'end',\n  originY: 'top',\n  overlayX: 'start',\n  overlayY: 'top'\n}, {\n  originX: 'end',\n  originY: 'bottom',\n  overlayX: 'start',\n  overlayY: 'bottom'\n}, {\n  originX: 'start',\n  originY: 'top',\n  overlayX: 'end',\n  overlayY: 'top'\n}, {\n  originX: 'start',\n  originY: 'bottom',\n  overlayX: 'end',\n  overlayY: 'bottom'\n}];\n\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n  constructor() {\n    this._cssPosition = 'static';\n    this._topOffset = '';\n    this._bottomOffset = '';\n    this._alignItems = '';\n    this._xPosition = '';\n    this._xOffset = '';\n    this._width = '';\n    this._height = '';\n    this._isDisposed = false;\n  }\n  attach(overlayRef) {\n    const config = overlayRef.getConfig();\n    this._overlayRef = overlayRef;\n    if (this._width && !config.width) {\n      overlayRef.updateSize({\n        width: this._width\n      });\n    }\n    if (this._height && !config.height) {\n      overlayRef.updateSize({\n        height: this._height\n      });\n    }\n    overlayRef.hostElement.classList.add(wrapperClass);\n    this._isDisposed = false;\n  }\n  /**\n   * Sets the top position of the overlay. Clears any previously set vertical position.\n   * @param value New top offset.\n   */\n  top(value = '') {\n    this._bottomOffset = '';\n    this._topOffset = value;\n    this._alignItems = 'flex-start';\n    return this;\n  }\n  /**\n   * Sets the left position of the overlay. Clears any previously set horizontal position.\n   * @param value New left offset.\n   */\n  left(value = '') {\n    this._xOffset = value;\n    this._xPosition = 'left';\n    return this;\n  }\n  /**\n   * Sets the bottom position of the overlay. Clears any previously set vertical position.\n   * @param value New bottom offset.\n   */\n  bottom(value = '') {\n    this._topOffset = '';\n    this._bottomOffset = value;\n    this._alignItems = 'flex-end';\n    return this;\n  }\n  /**\n   * Sets the right position of the overlay. Clears any previously set horizontal position.\n   * @param value New right offset.\n   */\n  right(value = '') {\n    this._xOffset = value;\n    this._xPosition = 'right';\n    return this;\n  }\n  /**\n   * Sets the overlay to the start of the viewport, depending on the overlay direction.\n   * This will be to the left in LTR layouts and to the right in RTL.\n   * @param offset Offset from the edge of the screen.\n   */\n  start(value = '') {\n    this._xOffset = value;\n    this._xPosition = 'start';\n    return this;\n  }\n  /**\n   * Sets the overlay to the end of the viewport, depending on the overlay direction.\n   * This will be to the right in LTR layouts and to the left in RTL.\n   * @param offset Offset from the edge of the screen.\n   */\n  end(value = '') {\n    this._xOffset = value;\n    this._xPosition = 'end';\n    return this;\n  }\n  /**\n   * Sets the overlay width and clears any previously set width.\n   * @param value New width for the overlay\n   * @deprecated Pass the `width` through the `OverlayConfig`.\n   * @breaking-change 8.0.0\n   */\n  width(value = '') {\n    if (this._overlayRef) {\n      this._overlayRef.updateSize({\n        width: value\n      });\n    } else {\n      this._width = value;\n    }\n    return this;\n  }\n  /**\n   * Sets the overlay height and clears any previously set height.\n   * @param value New height for the overlay\n   * @deprecated Pass the `height` through the `OverlayConfig`.\n   * @breaking-change 8.0.0\n   */\n  height(value = '') {\n    if (this._overlayRef) {\n      this._overlayRef.updateSize({\n        height: value\n      });\n    } else {\n      this._height = value;\n    }\n    return this;\n  }\n  /**\n   * Centers the overlay horizontally with an optional offset.\n   * Clears any previously set horizontal position.\n   *\n   * @param offset Overlay offset from the horizontal center.\n   */\n  centerHorizontally(offset = '') {\n    this.left(offset);\n    this._xPosition = 'center';\n    return this;\n  }\n  /**\n   * Centers the overlay vertically with an optional offset.\n   * Clears any previously set vertical position.\n   *\n   * @param offset Overlay offset from the vertical center.\n   */\n  centerVertically(offset = '') {\n    this.top(offset);\n    this._alignItems = 'center';\n    return this;\n  }\n  /**\n   * Apply the position to the element.\n   * @docs-private\n   */\n  apply() {\n    // Since the overlay ref applies the strategy asynchronously, it could\n    // have been disposed before it ends up being applied. If that is the\n    // case, we shouldn't do anything.\n    if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n      return;\n    }\n    const styles = this._overlayRef.overlayElement.style;\n    const parentStyles = this._overlayRef.hostElement.style;\n    const config = this._overlayRef.getConfig();\n    const {\n      width,\n      height,\n      maxWidth,\n      maxHeight\n    } = config;\n    const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') && (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n    const shouldBeFlushVertically = (height === '100%' || height === '100vh') && (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n    const xPosition = this._xPosition;\n    const xOffset = this._xOffset;\n    const isRtl = this._overlayRef.getConfig().direction === 'rtl';\n    let marginLeft = '';\n    let marginRight = '';\n    let justifyContent = '';\n    if (shouldBeFlushHorizontally) {\n      justifyContent = 'flex-start';\n    } else if (xPosition === 'center') {\n      justifyContent = 'center';\n      if (isRtl) {\n        marginRight = xOffset;\n      } else {\n        marginLeft = xOffset;\n      }\n    } else if (isRtl) {\n      if (xPosition === 'left' || xPosition === 'end') {\n        justifyContent = 'flex-end';\n        marginLeft = xOffset;\n      } else if (xPosition === 'right' || xPosition === 'start') {\n        justifyContent = 'flex-start';\n        marginRight = xOffset;\n      }\n    } else if (xPosition === 'left' || xPosition === 'start') {\n      justifyContent = 'flex-start';\n      marginLeft = xOffset;\n    } else if (xPosition === 'right' || xPosition === 'end') {\n      justifyContent = 'flex-end';\n      marginRight = xOffset;\n    }\n    styles.position = this._cssPosition;\n    styles.marginLeft = shouldBeFlushHorizontally ? '0' : marginLeft;\n    styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n    styles.marginBottom = this._bottomOffset;\n    styles.marginRight = shouldBeFlushHorizontally ? '0' : marginRight;\n    parentStyles.justifyContent = justifyContent;\n    parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n  }\n  /**\n   * Cleans up the DOM changes from the position strategy.\n   * @docs-private\n   */\n  dispose() {\n    if (this._isDisposed || !this._overlayRef) {\n      return;\n    }\n    const styles = this._overlayRef.overlayElement.style;\n    const parent = this._overlayRef.hostElement;\n    const parentStyles = parent.style;\n    parent.classList.remove(wrapperClass);\n    parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop = styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n    this._overlayRef = null;\n    this._isDisposed = true;\n  }\n}\n\n/** Builder for overlay position strategy. */\nlet OverlayPositionBuilder = /*#__PURE__*/(() => {\n  class OverlayPositionBuilder {\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n      this._viewportRuler = _viewportRuler;\n      this._document = _document;\n      this._platform = _platform;\n      this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n      return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n      return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    static {\n      this.ɵfac = function OverlayPositionBuilder_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || OverlayPositionBuilder)(i0.ɵɵinject(i1.ViewportRuler), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1$1.Platform), i0.ɵɵinject(OverlayContainer));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: OverlayPositionBuilder,\n        factory: OverlayPositionBuilder.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return OverlayPositionBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nlet Overlay = /*#__PURE__*/(() => {\n  class Overlay {\n    constructor( /** Scrolling strategies that can be used when creating an overlay. */\n    scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location, _outsideClickDispatcher, _animationsModuleType) {\n      this.scrollStrategies = scrollStrategies;\n      this._overlayContainer = _overlayContainer;\n      this._componentFactoryResolver = _componentFactoryResolver;\n      this._positionBuilder = _positionBuilder;\n      this._keyboardDispatcher = _keyboardDispatcher;\n      this._injector = _injector;\n      this._ngZone = _ngZone;\n      this._document = _document;\n      this._directionality = _directionality;\n      this._location = _location;\n      this._outsideClickDispatcher = _outsideClickDispatcher;\n      this._animationsModuleType = _animationsModuleType;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n      const host = this._createHostElement();\n      const pane = this._createPaneElement(host);\n      const portalOutlet = this._createPortalOutlet(pane);\n      const overlayConfig = new OverlayConfig(config);\n      overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n      return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher, this._animationsModuleType === 'NoopAnimations', this._injector.get(EnvironmentInjector));\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n      return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(host) {\n      const pane = this._document.createElement('div');\n      pane.id = `cdk-overlay-${nextUniqueId++}`;\n      pane.classList.add('cdk-overlay-pane');\n      host.appendChild(pane);\n      return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @returns Newly-create host element.\n     */\n    _createHostElement() {\n      const host = this._document.createElement('div');\n      this._overlayContainer.getContainerElement().appendChild(host);\n      return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal outlet.\n     * @returns A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n      // We have to resolve the ApplicationRef later in order to allow people\n      // to use overlay-based providers during app initialization.\n      if (!this._appRef) {\n        this._appRef = this._injector.get(ApplicationRef);\n      }\n      return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n    static {\n      this.ɵfac = function Overlay_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || Overlay)(i0.ɵɵinject(ScrollStrategyOptions), i0.ɵɵinject(OverlayContainer), i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(OverlayPositionBuilder), i0.ɵɵinject(OverlayKeyboardDispatcher), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i5.Directionality), i0.ɵɵinject(i6.Location), i0.ɵɵinject(OverlayOutsideClickDispatcher), i0.ɵɵinject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: Overlay,\n        factory: Overlay.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return Overlay;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [{\n  originX: 'start',\n  originY: 'bottom',\n  overlayX: 'start',\n  overlayY: 'top'\n}, {\n  originX: 'start',\n  originY: 'top',\n  overlayX: 'start',\n  overlayY: 'bottom'\n}, {\n  originX: 'end',\n  originY: 'top',\n  overlayX: 'end',\n  overlayY: 'bottom'\n}, {\n  originX: 'end',\n  originY: 'bottom',\n  overlayX: 'end',\n  overlayY: 'top'\n}];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = /*#__PURE__*/new InjectionToken('cdk-connected-overlay-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nlet CdkOverlayOrigin = /*#__PURE__*/(() => {\n  class CdkOverlayOrigin {\n    constructor( /** Reference to the element on which the directive is applied. */\n    elementRef) {\n      this.elementRef = elementRef;\n    }\n    static {\n      this.ɵfac = function CdkOverlayOrigin_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkOverlayOrigin)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkOverlayOrigin,\n        selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]],\n        exportAs: [\"cdkOverlayOrigin\"],\n        standalone: true\n      });\n    }\n  }\n  return CdkOverlayOrigin;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nlet CdkConnectedOverlay = /*#__PURE__*/(() => {\n  class CdkConnectedOverlay {\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() {\n      return this._offsetX;\n    }\n    set offsetX(offsetX) {\n      this._offsetX = offsetX;\n      if (this._position) {\n        this._updatePositionStrategy(this._position);\n      }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() {\n      return this._offsetY;\n    }\n    set offsetY(offsetY) {\n      this._offsetY = offsetY;\n      if (this._position) {\n        this._updatePositionStrategy(this._position);\n      }\n    }\n    /** Whether the overlay should be disposed of when the user goes backwards/forwards in history. */\n    get disposeOnNavigation() {\n      return this._disposeOnNavigation;\n    }\n    set disposeOnNavigation(value) {\n      this._disposeOnNavigation = value;\n    }\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n      this._overlay = _overlay;\n      this._dir = _dir;\n      this._backdropSubscription = Subscription.EMPTY;\n      this._attachSubscription = Subscription.EMPTY;\n      this._detachSubscription = Subscription.EMPTY;\n      this._positionSubscription = Subscription.EMPTY;\n      this._disposeOnNavigation = false;\n      this._ngZone = inject(NgZone);\n      /** Margin between the overlay and the viewport edges. */\n      this.viewportMargin = 0;\n      /** Whether the overlay is open. */\n      this.open = false;\n      /** Whether the overlay can be closed by user interaction. */\n      this.disableClose = false;\n      /** Whether or not the overlay should attach a backdrop. */\n      this.hasBackdrop = false;\n      /** Whether or not the overlay should be locked when scrolling. */\n      this.lockPosition = false;\n      /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n      this.flexibleDimensions = false;\n      /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n      this.growAfterOpen = false;\n      /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n      this.push = false;\n      /** Event emitted when the backdrop is clicked. */\n      this.backdropClick = new EventEmitter();\n      /** Event emitted when the position has changed. */\n      this.positionChange = new EventEmitter();\n      /** Event emitted when the overlay has been attached. */\n      this.attach = new EventEmitter();\n      /** Event emitted when the overlay has been detached. */\n      this.detach = new EventEmitter();\n      /** Emits when there are keyboard events that are targeted at the overlay. */\n      this.overlayKeydown = new EventEmitter();\n      /** Emits when there are mouse outside click events that are targeted at the overlay. */\n      this.overlayOutsideClick = new EventEmitter();\n      this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n      this._scrollStrategyFactory = scrollStrategyFactory;\n      this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The associated overlay reference. */\n    get overlayRef() {\n      return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n      return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n      this._attachSubscription.unsubscribe();\n      this._detachSubscription.unsubscribe();\n      this._backdropSubscription.unsubscribe();\n      this._positionSubscription.unsubscribe();\n      if (this._overlayRef) {\n        this._overlayRef.dispose();\n      }\n    }\n    ngOnChanges(changes) {\n      if (this._position) {\n        this._updatePositionStrategy(this._position);\n        this._overlayRef.updateSize({\n          width: this.width,\n          minWidth: this.minWidth,\n          height: this.height,\n          minHeight: this.minHeight\n        });\n        if (changes['origin'] && this.open) {\n          this._position.apply();\n        }\n      }\n      if (changes['open']) {\n        this.open ? this._attachOverlay() : this._detachOverlay();\n      }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n      if (!this.positions || !this.positions.length) {\n        this.positions = defaultPositionList;\n      }\n      const overlayRef = this._overlayRef = this._overlay.create(this._buildConfig());\n      this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n      this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n      overlayRef.keydownEvents().subscribe(event => {\n        this.overlayKeydown.next(event);\n        if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n          event.preventDefault();\n          this._detachOverlay();\n        }\n      });\n      this._overlayRef.outsidePointerEvents().subscribe(event => {\n        const origin = this._getOriginElement();\n        const target = _getEventTarget(event);\n        if (!origin || origin !== target && !origin.contains(target)) {\n          this.overlayOutsideClick.next(event);\n        }\n      });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n      const positionStrategy = this._position = this.positionStrategy || this._createPositionStrategy();\n      const overlayConfig = new OverlayConfig({\n        direction: this._dir,\n        positionStrategy,\n        scrollStrategy: this.scrollStrategy,\n        hasBackdrop: this.hasBackdrop,\n        disposeOnNavigation: this.disposeOnNavigation\n      });\n      if (this.width || this.width === 0) {\n        overlayConfig.width = this.width;\n      }\n      if (this.height || this.height === 0) {\n        overlayConfig.height = this.height;\n      }\n      if (this.minWidth || this.minWidth === 0) {\n        overlayConfig.minWidth = this.minWidth;\n      }\n      if (this.minHeight || this.minHeight === 0) {\n        overlayConfig.minHeight = this.minHeight;\n      }\n      if (this.backdropClass) {\n        overlayConfig.backdropClass = this.backdropClass;\n      }\n      if (this.panelClass) {\n        overlayConfig.panelClass = this.panelClass;\n      }\n      return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n      const positions = this.positions.map(currentPosition => ({\n        originX: currentPosition.originX,\n        originY: currentPosition.originY,\n        overlayX: currentPosition.overlayX,\n        overlayY: currentPosition.overlayY,\n        offsetX: currentPosition.offsetX || this.offsetX,\n        offsetY: currentPosition.offsetY || this.offsetY,\n        panelClass: currentPosition.panelClass || undefined\n      }));\n      return positionStrategy.setOrigin(this._getOrigin()).withPositions(positions).withFlexibleDimensions(this.flexibleDimensions).withPush(this.push).withGrowAfterOpen(this.growAfterOpen).withViewportMargin(this.viewportMargin).withLockedPosition(this.lockPosition).withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n      const strategy = this._overlay.position().flexibleConnectedTo(this._getOrigin());\n      this._updatePositionStrategy(strategy);\n      return strategy;\n    }\n    _getOrigin() {\n      if (this.origin instanceof CdkOverlayOrigin) {\n        return this.origin.elementRef;\n      } else {\n        return this.origin;\n      }\n    }\n    _getOriginElement() {\n      if (this.origin instanceof CdkOverlayOrigin) {\n        return this.origin.elementRef.nativeElement;\n      }\n      if (this.origin instanceof ElementRef) {\n        return this.origin.nativeElement;\n      }\n      if (typeof Element !== 'undefined' && this.origin instanceof Element) {\n        return this.origin;\n      }\n      return null;\n    }\n    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n    _attachOverlay() {\n      if (!this._overlayRef) {\n        this._createOverlay();\n      } else {\n        // Update the overlay size, in case the directive's inputs have changed\n        this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n      }\n      if (!this._overlayRef.hasAttached()) {\n        this._overlayRef.attach(this._templatePortal);\n      }\n      if (this.hasBackdrop) {\n        this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n          this.backdropClick.emit(event);\n        });\n      } else {\n        this._backdropSubscription.unsubscribe();\n      }\n      this._positionSubscription.unsubscribe();\n      // Only subscribe to `positionChanges` if requested, because putting\n      // together all the information for it can be expensive.\n      if (this.positionChange.observers.length > 0) {\n        this._positionSubscription = this._position.positionChanges.pipe(takeWhile(() => this.positionChange.observers.length > 0)).subscribe(position => {\n          this._ngZone.run(() => this.positionChange.emit(position));\n          if (this.positionChange.observers.length === 0) {\n            this._positionSubscription.unsubscribe();\n          }\n        });\n      }\n    }\n    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n    _detachOverlay() {\n      if (this._overlayRef) {\n        this._overlayRef.detach();\n      }\n      this._backdropSubscription.unsubscribe();\n      this._positionSubscription.unsubscribe();\n    }\n    static {\n      this.ɵfac = function CdkConnectedOverlay_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkConnectedOverlay)(i0.ɵɵdirectiveInject(Overlay), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), i0.ɵɵdirectiveInject(i5.Directionality, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkConnectedOverlay,\n        selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]],\n        inputs: {\n          origin: [0, \"cdkConnectedOverlayOrigin\", \"origin\"],\n          positions: [0, \"cdkConnectedOverlayPositions\", \"positions\"],\n          positionStrategy: [0, \"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"],\n          offsetX: [0, \"cdkConnectedOverlayOffsetX\", \"offsetX\"],\n          offsetY: [0, \"cdkConnectedOverlayOffsetY\", \"offsetY\"],\n          width: [0, \"cdkConnectedOverlayWidth\", \"width\"],\n          height: [0, \"cdkConnectedOverlayHeight\", \"height\"],\n          minWidth: [0, \"cdkConnectedOverlayMinWidth\", \"minWidth\"],\n          minHeight: [0, \"cdkConnectedOverlayMinHeight\", \"minHeight\"],\n          backdropClass: [0, \"cdkConnectedOverlayBackdropClass\", \"backdropClass\"],\n          panelClass: [0, \"cdkConnectedOverlayPanelClass\", \"panelClass\"],\n          viewportMargin: [0, \"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"],\n          scrollStrategy: [0, \"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"],\n          open: [0, \"cdkConnectedOverlayOpen\", \"open\"],\n          disableClose: [0, \"cdkConnectedOverlayDisableClose\", \"disableClose\"],\n          transformOriginSelector: [0, \"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"],\n          hasBackdrop: [2, \"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\", booleanAttribute],\n          lockPosition: [2, \"cdkConnectedOverlayLockPosition\", \"lockPosition\", booleanAttribute],\n          flexibleDimensions: [2, \"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\", booleanAttribute],\n          growAfterOpen: [2, \"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\", booleanAttribute],\n          push: [2, \"cdkConnectedOverlayPush\", \"push\", booleanAttribute],\n          disposeOnNavigation: [2, \"cdkConnectedOverlayDisposeOnNavigation\", \"disposeOnNavigation\", booleanAttribute]\n        },\n        outputs: {\n          backdropClick: \"backdropClick\",\n          positionChange: \"positionChange\",\n          attach: \"attach\",\n          detach: \"detach\",\n          overlayKeydown: \"overlayKeydown\",\n          overlayOutsideClick: \"overlayOutsideClick\"\n        },\n        exportAs: [\"cdkConnectedOverlay\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return CdkConnectedOverlay;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n  provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\nlet OverlayModule = /*#__PURE__*/(() => {\n  class OverlayModule {\n    static {\n      this.ɵfac = function OverlayModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || OverlayModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: OverlayModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER],\n        imports: [BidiModule, PortalModule, ScrollingModule, ScrollingModule]\n      });\n    }\n  }\n  return OverlayModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nlet FullscreenOverlayContainer = /*#__PURE__*/(() => {\n  class FullscreenOverlayContainer extends OverlayContainer {\n    constructor(_document, platform) {\n      super(_document, platform);\n    }\n    ngOnDestroy() {\n      super.ngOnDestroy();\n      if (this._fullScreenEventName && this._fullScreenListener) {\n        this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n      }\n    }\n    _createContainer() {\n      super._createContainer();\n      this._adjustParentForFullscreenChange();\n      this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n    }\n    _adjustParentForFullscreenChange() {\n      if (!this._containerElement) {\n        return;\n      }\n      const fullscreenElement = this.getFullscreenElement();\n      const parent = fullscreenElement || this._document.body;\n      parent.appendChild(this._containerElement);\n    }\n    _addFullscreenChangeListener(fn) {\n      const eventName = this._getEventName();\n      if (eventName) {\n        if (this._fullScreenListener) {\n          this._document.removeEventListener(eventName, this._fullScreenListener);\n        }\n        this._document.addEventListener(eventName, fn);\n        this._fullScreenListener = fn;\n      }\n    }\n    _getEventName() {\n      if (!this._fullScreenEventName) {\n        const _document = this._document;\n        if (_document.fullscreenEnabled) {\n          this._fullScreenEventName = 'fullscreenchange';\n        } else if (_document.webkitFullscreenEnabled) {\n          this._fullScreenEventName = 'webkitfullscreenchange';\n        } else if (_document.mozFullScreenEnabled) {\n          this._fullScreenEventName = 'mozfullscreenchange';\n        } else if (_document.msFullscreenEnabled) {\n          this._fullScreenEventName = 'MSFullscreenChange';\n        }\n      }\n      return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n      const _document = this._document;\n      return _document.fullscreenElement || _document.webkitFullscreenElement || _document.mozFullScreenElement || _document.msFullscreenElement || null;\n    }\n    static {\n      this.ɵfac = function FullscreenOverlayContainer_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || FullscreenOverlayContainer)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1$1.Platform));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: FullscreenOverlayContainer,\n        factory: FullscreenOverlayContainer.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return FullscreenOverlayContainer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, STANDARD_DROPDOWN_ADJACENT_POSITIONS, STANDARD_DROPDOWN_BELOW_POSITIONS, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition };\n","import { Overlay, CdkOverlayOrigin, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { NgClass, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Self, Attribute, ContentChildren, ContentChild, Input, ViewChild, Output, Directive, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { _countGroupLabelsBeforeOption, _getOptionScrollPosition, _ErrorStateTracker, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nfunction MatSelect_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.placeholder);\n  }\n}\nfunction MatSelect_Conditional_5_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction MatSelect_Conditional_5_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.triggerValue);\n  }\n}\nfunction MatSelect_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtemplate(1, MatSelect_Conditional_5_Conditional_1_Template, 1, 0)(2, MatSelect_Conditional_5_Conditional_2_Template, 2, 1, \"span\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1.customTrigger ? 1 : 2);\n  }\n}\nfunction MatSelect_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12, 1);\n    i0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_10_Template_div_animation_transformPanel_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._panelDoneAnimatingStream.next($event.toState));\n    })(\"keydown\", function MatSelect_ng_template_10_Template_div_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._handleKeydown($event));\n    });\n    i0.ɵɵprojection(2, 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open \", ctx_r1._getPanelTheme(), \"\");\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.panelClass)(\"@transformPanel\", \"showing\");\n    i0.ɵɵattribute(\"id\", ctx_r1.id + \"-panel\")(\"aria-multiselectable\", ctx_r1.multiple)(\"aria-label\", ctx_r1.ariaLabel || null)(\"aria-labelledby\", ctx_r1._getPanelAriaLabelledby());\n  }\n}\nexport { MatOptgroup, MatOption } from '@angular/material/core';\nimport * as i6 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nexport { MatError, MatFormField, MatHint, MatLabel, MatPrefix, MatSuffix } from '@angular/material/form-field';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/cdk/a11y';\nimport { removeAriaReferencedId, addAriaReferencedId, ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport * as i4 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, filter, map, distinctUntilChanged, takeUntil, take } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nconst matSelectAnimations = {\n  /**\n   * This animation ensures the select's overlay panel animation (transformPanel) is called when\n   * closing the select.\n   * This is needed due to https://github.com/angular/angular/issues/23302\n   */\n  transformPanelWrap: /*#__PURE__*/trigger('transformPanelWrap', [/*#__PURE__*/transition('* => void', /*#__PURE__*/query('@transformPanel', [/*#__PURE__*/animateChild()], {\n    optional: true\n  }))]),\n  /** This animation transforms the select's overlay panel on and off the page. */\n  transformPanel: /*#__PURE__*/trigger('transformPanel', [/*#__PURE__*/state('void', /*#__PURE__*/style({\n    opacity: 0,\n    transform: 'scale(1, 0.8)'\n  })), /*#__PURE__*/transition('void => showing', /*#__PURE__*/animate('120ms cubic-bezier(0, 0, 0.2, 1)', /*#__PURE__*/style({\n    opacity: 1,\n    transform: 'scale(1, 1)'\n  }))), /*#__PURE__*/transition('* => void', /*#__PURE__*/animate('100ms linear', /*#__PURE__*/style({\n    opacity: 0\n  })))])\n};\n\n// Note that these have been copied over verbatim from\n// `material/select` so that we don't have to expose them publicly.\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n  return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n  return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n  return Error('`compareWith` must be a function.');\n}\nlet nextUniqueId = 0;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = /*#__PURE__*/new InjectionToken('mat-select-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = /*#__PURE__*/new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_SELECT_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = /*#__PURE__*/new InjectionToken('MatSelectTrigger');\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n  constructor( /** Reference to the select that emitted the change event. */\n  source, /** Current value of the select that emitted the event. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\nlet MatSelect = /*#__PURE__*/(() => {\n  class MatSelect {\n    /** Scrolls a particular option into the view. */\n    _scrollOptionIntoView(index) {\n      const option = this.options.toArray()[index];\n      if (option) {\n        const panel = this.panel.nativeElement;\n        const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n        const element = option._getHostElement();\n        if (index === 0 && labelCount === 1) {\n          // If we've got one group label before the option and we're at the top option,\n          // scroll the list to the top. This is better UX than scrolling the list to the\n          // top of the option, because it allows the user to read the top group's label.\n          panel.scrollTop = 0;\n        } else {\n          panel.scrollTop = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, panel.scrollTop, panel.offsetHeight);\n        }\n      }\n    }\n    /** Called when the panel has been opened and the overlay has settled on its final position. */\n    _positioningSettled() {\n      this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n    }\n    /** Creates a change event object that should be emitted by the select. */\n    _getChangeEvent(value) {\n      return new MatSelectChange(this, value);\n    }\n    /** Whether the select is focused. */\n    get focused() {\n      return this._focused || this._panelOpen;\n    }\n    /** Whether checkmark indicator for single-selection options is hidden. */\n    get hideSingleSelectionIndicator() {\n      return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n      this._hideSingleSelectionIndicator = value;\n      this._syncParentProperties();\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() {\n      return this._placeholder;\n    }\n    set placeholder(value) {\n      this._placeholder = value;\n      this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() {\n      return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n      this._required = value;\n      this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() {\n      return this._multiple;\n    }\n    set multiple(value) {\n      if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getMatSelectDynamicMultipleError();\n      }\n      this._multiple = value;\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() {\n      return this._compareWith;\n    }\n    set compareWith(fn) {\n      if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getMatSelectNonFunctionValueError();\n      }\n      this._compareWith = fn;\n      if (this._selectionModel) {\n        // A different comparator means the selection could change.\n        this._initializeSelection();\n      }\n    }\n    /** Value of the select control. */\n    get value() {\n      return this._value;\n    }\n    set value(newValue) {\n      const hasAssigned = this._assignValue(newValue);\n      if (hasAssigned) {\n        this._onChange(newValue);\n      }\n    }\n    /** Object used to control when error messages are shown. */\n    get errorStateMatcher() {\n      return this._errorStateTracker.matcher;\n    }\n    set errorStateMatcher(value) {\n      this._errorStateTracker.matcher = value;\n    }\n    /** Unique id of the element. */\n    get id() {\n      return this._id;\n    }\n    set id(value) {\n      this._id = value || this._uid;\n      this.stateChanges.next();\n    }\n    /** Whether the select is in an error state. */\n    get errorState() {\n      return this._errorStateTracker.errorState;\n    }\n    set errorState(value) {\n      this._errorStateTracker.errorState = value;\n    }\n    constructor(_viewportRuler, _changeDetectorRef,\n    /**\n     * @deprecated Unused param, will be removed.\n     * @breaking-change 19.0.0\n     */\n    _unusedNgZone, defaultErrorStateMatcher, _elementRef, _dir, parentForm, parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n      this._viewportRuler = _viewportRuler;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._elementRef = _elementRef;\n      this._dir = _dir;\n      this._parentFormField = _parentFormField;\n      this.ngControl = ngControl;\n      this._liveAnnouncer = _liveAnnouncer;\n      this._defaultOptions = _defaultOptions;\n      /**\n       * This position config ensures that the top \"start\" corner of the overlay\n       * is aligned with with the top \"start\" of the origin by default (overlapping\n       * the trigger completely). If the panel cannot fit below the trigger, it\n       * will fall back to a position above the trigger.\n       */\n      this._positions = [{\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n      }, {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n      }, {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        panelClass: 'mat-mdc-select-panel-above'\n      }, {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        panelClass: 'mat-mdc-select-panel-above'\n      }];\n      /** Whether or not the overlay panel is open. */\n      this._panelOpen = false;\n      /** Comparison function to specify which option is displayed. Defaults to object equality. */\n      this._compareWith = (o1, o2) => o1 === o2;\n      /** Unique id for this input. */\n      this._uid = `mat-select-${nextUniqueId++}`;\n      /** Current `aria-labelledby` value for the select trigger. */\n      this._triggerAriaLabelledBy = null;\n      /** Emits whenever the component is destroyed. */\n      this._destroy = new Subject();\n      /**\n       * Emits whenever the component state changes and should cause the parent\n       * form-field to update. Implemented as part of `MatFormFieldControl`.\n       * @docs-private\n       */\n      this.stateChanges = new Subject();\n      /**\n       * Disable the automatic labeling to avoid issues like #27241.\n       * @docs-private\n       */\n      this.disableAutomaticLabeling = true;\n      /** `View -> model callback called when value changes` */\n      this._onChange = () => {};\n      /** `View -> model callback called when select has been touched` */\n      this._onTouched = () => {};\n      /** ID for the DOM node containing the select's value. */\n      this._valueId = `mat-select-value-${nextUniqueId++}`;\n      /** Emits when the panel element is finished transforming in. */\n      this._panelDoneAnimatingStream = new Subject();\n      this._overlayPanelClass = this._defaultOptions?.overlayPanelClass || '';\n      this._focused = false;\n      /** A name for this control that can be used by `mat-form-field`. */\n      this.controlType = 'mat-select';\n      /** Whether the select is disabled. */\n      this.disabled = false;\n      /** Whether ripples in the select are disabled. */\n      this.disableRipple = false;\n      /** Tab index of the select. */\n      this.tabIndex = 0;\n      this._hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n      this._multiple = false;\n      /** Whether to center the active option over the trigger. */\n      this.disableOptionCentering = this._defaultOptions?.disableOptionCentering ?? false;\n      /** Aria label of the select. */\n      this.ariaLabel = '';\n      /**\n       * Width of the panel. If set to `auto`, the panel will match the trigger width.\n       * If set to null or an empty string, the panel will grow to match the longest option's text.\n       */\n      this.panelWidth = this._defaultOptions && typeof this._defaultOptions.panelWidth !== 'undefined' ? this._defaultOptions.panelWidth : 'auto';\n      this._initialized = new Subject();\n      /** Combined stream of all of the child options' change events. */\n      this.optionSelectionChanges = defer(() => {\n        const options = this.options;\n        if (options) {\n          return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n        }\n        return this._initialized.pipe(switchMap(() => this.optionSelectionChanges));\n      });\n      /** Event emitted when the select panel has been toggled. */\n      this.openedChange = new EventEmitter();\n      /** Event emitted when the select has been opened. */\n      this._openedStream = this.openedChange.pipe(filter(o => o), map(() => {}));\n      /** Event emitted when the select has been closed. */\n      this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => {}));\n      /** Event emitted when the selected value has been changed by the user. */\n      this.selectionChange = new EventEmitter();\n      /**\n       * Event that emits whenever the raw value of the select changes. This is here primarily\n       * to facilitate the two-way binding for the `value` input.\n       * @docs-private\n       */\n      this.valueChange = new EventEmitter();\n      /**\n       * Track which modal we have modified the `aria-owns` attribute of. When the combobox trigger is\n       * inside an aria-modal, we apply aria-owns to the parent modal with the `id` of the options\n       * panel. Track the modal we have changed so we can undo the changes on destroy.\n       */\n      this._trackedModal = null;\n      // `skipPredicate` determines if key manager should avoid putting a given option in the tab\n      // order. Allow disabled list items to receive focus via keyboard to align with WAI ARIA\n      // recommendation.\n      //\n      // Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n      // makes a few exceptions for compound widgets.\n      //\n      // From [Developing a Keyboard Interface](\n      // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n      //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n      //   Listbox...\"\n      //\n      // The user can focus disabled options using the keyboard, but the user cannot click disabled\n      // options.\n      this._skipPredicate = option => {\n        if (this.panelOpen) {\n          // Support keyboard focusing disabled options in an ARIA listbox.\n          return false;\n        }\n        // When the panel is closed, skip over disabled options. Support options via the UP/DOWN arrow\n        // keys on a closed select. ARIA listbox interaction pattern is less relevant when the panel is\n        // closed.\n        return option.disabled;\n      };\n      if (this.ngControl) {\n        // Note: we provide the value accessor through here, instead of\n        // the `providers` to avoid running into a circular import.\n        this.ngControl.valueAccessor = this;\n      }\n      // Note that we only want to set this when the defaults pass it in, otherwise it should\n      // stay as `undefined` so that it falls back to the default in the key manager.\n      if (_defaultOptions?.typeaheadDebounceInterval != null) {\n        this.typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n      }\n      this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, ngControl, parentFormGroup, parentForm, this.stateChanges);\n      this._scrollStrategyFactory = scrollStrategyFactory;\n      this._scrollStrategy = this._scrollStrategyFactory();\n      this.tabIndex = parseInt(tabIndex) || 0;\n      // Force setter to be called in case id was not specified.\n      this.id = this.id;\n    }\n    ngOnInit() {\n      this._selectionModel = new SelectionModel(this.multiple);\n      this.stateChanges.next();\n      // We need `distinctUntilChanged` here, because some browsers will\n      // fire the animation end event twice for the same animation. See:\n      // https://github.com/angular/angular/issues/24084\n      this._panelDoneAnimatingStream.pipe(distinctUntilChanged(), takeUntil(this._destroy)).subscribe(() => this._panelDoneAnimating(this.panelOpen));\n      this._viewportRuler.change().pipe(takeUntil(this._destroy)).subscribe(() => {\n        if (this.panelOpen) {\n          this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n          this._changeDetectorRef.detectChanges();\n        }\n      });\n    }\n    ngAfterContentInit() {\n      this._initialized.next();\n      this._initialized.complete();\n      this._initKeyManager();\n      this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n        event.added.forEach(option => option.select());\n        event.removed.forEach(option => option.deselect());\n      });\n      this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n        this._resetOptions();\n        this._initializeSelection();\n      });\n    }\n    ngDoCheck() {\n      const newAriaLabelledby = this._getTriggerAriaLabelledby();\n      const ngControl = this.ngControl;\n      // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n      // is computed as a result of a content query which can cause this binding to trigger a\n      // \"changed after checked\" error.\n      if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n        const element = this._elementRef.nativeElement;\n        this._triggerAriaLabelledBy = newAriaLabelledby;\n        if (newAriaLabelledby) {\n          element.setAttribute('aria-labelledby', newAriaLabelledby);\n        } else {\n          element.removeAttribute('aria-labelledby');\n        }\n      }\n      if (ngControl) {\n        // The disabled state might go out of sync if the form group is swapped out. See #17860.\n        if (this._previousControl !== ngControl.control) {\n          if (this._previousControl !== undefined && ngControl.disabled !== null && ngControl.disabled !== this.disabled) {\n            this.disabled = ngControl.disabled;\n          }\n          this._previousControl = ngControl.control;\n        }\n        this.updateErrorState();\n      }\n    }\n    ngOnChanges(changes) {\n      // Updating the disabled state is handled by the input, but we need to additionally let\n      // the parent form field know to run change detection when the disabled state changes.\n      if (changes['disabled'] || changes['userAriaDescribedBy']) {\n        this.stateChanges.next();\n      }\n      if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n        this._keyManager.withTypeAhead(this.typeaheadDebounceInterval);\n      }\n    }\n    ngOnDestroy() {\n      this._keyManager?.destroy();\n      this._destroy.next();\n      this._destroy.complete();\n      this.stateChanges.complete();\n      this._clearFromModal();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n      this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n      if (!this._canOpen()) {\n        return;\n      }\n      // It's important that we read this as late as possible, because doing so earlier will\n      // return a different element since it's based on queries in the form field which may\n      // not have run yet. Also this needs to be assigned before we measure the overlay width.\n      if (this._parentFormField) {\n        this._preferredOverlayOrigin = this._parentFormField.getConnectedOverlayOrigin();\n      }\n      this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n      this._applyModalPanelOwnership();\n      this._panelOpen = true;\n      this._keyManager.withHorizontalOrientation(null);\n      this._highlightCorrectOption();\n      this._changeDetectorRef.markForCheck();\n      // Required for the MDC form field to pick up when the overlay has been opened.\n      this.stateChanges.next();\n    }\n    /**\n     * If the autocomplete trigger is inside of an `aria-modal` element, connect\n     * that modal to the options panel with `aria-owns`.\n     *\n     * For some browser + screen reader combinations, when navigation is inside\n     * of an `aria-modal` element, the screen reader treats everything outside\n     * of that modal as hidden or invisible.\n     *\n     * This causes a problem when the combobox trigger is _inside_ of a modal, because the\n     * options panel is rendered _outside_ of that modal, preventing screen reader navigation\n     * from reaching the panel.\n     *\n     * We can work around this issue by applying `aria-owns` to the modal with the `id` of\n     * the options panel. This effectively communicates to assistive technology that the\n     * options panel is part of the same interaction as the modal.\n     *\n     * At time of this writing, this issue is present in VoiceOver.\n     * See https://github.com/angular/components/issues/20694\n     */\n    _applyModalPanelOwnership() {\n      // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n      // the `LiveAnnouncer` and any other usages.\n      //\n      // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n      // section of the DOM we need to look through. This should cover all the cases we support, but\n      // the selector can be expanded if it turns out to be too narrow.\n      const modal = this._elementRef.nativeElement.closest('body > .cdk-overlay-container [aria-modal=\"true\"]');\n      if (!modal) {\n        // Most commonly, the autocomplete trigger is not inside a modal.\n        return;\n      }\n      const panelId = `${this.id}-panel`;\n      if (this._trackedModal) {\n        removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n      }\n      addAriaReferencedId(modal, 'aria-owns', panelId);\n      this._trackedModal = modal;\n    }\n    /** Clears the reference to the listbox overlay element from the modal it was added to. */\n    _clearFromModal() {\n      if (!this._trackedModal) {\n        // Most commonly, the autocomplete trigger is not used inside a modal.\n        return;\n      }\n      const panelId = `${this.id}-panel`;\n      removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n      this._trackedModal = null;\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n      if (this._panelOpen) {\n        this._panelOpen = false;\n        this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n        this._changeDetectorRef.markForCheck();\n        this._onTouched();\n        // Required for the MDC form field to pick up when the overlay has been closed.\n        this.stateChanges.next();\n      }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n      this._assignValue(value);\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n      this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this._changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n      return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n      return this.multiple ? this._selectionModel?.selected || [] : this._selectionModel?.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n      if (this.empty) {\n        return '';\n      }\n      if (this._multiple) {\n        const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n        if (this._isRtl()) {\n          selectedOptions.reverse();\n        }\n        // TODO(crisbeto): delimiter should be configurable for proper localization.\n        return selectedOptions.join(', ');\n      }\n      return this._selectionModel.selected[0].viewValue;\n    }\n    /** Refreshes the error state of the select. */\n    updateErrorState() {\n      this._errorStateTracker.updateErrorState();\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n      return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n      if (!this.disabled) {\n        this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n      }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n      const keyCode = event.keyCode;\n      const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW || keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n      const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n      const manager = this._keyManager;\n      // Open the select on ALT + arrow key to match the native <select>\n      if (!manager.isTyping() && isOpenKey && !hasModifierKey(event) || (this.multiple || event.altKey) && isArrowKey) {\n        event.preventDefault(); // prevents the page from scrolling down when pressing space\n        this.open();\n      } else if (!this.multiple) {\n        const previouslySelectedOption = this.selected;\n        manager.onKeydown(event);\n        const selectedOption = this.selected;\n        // Since the value has changed, we need to announce it ourselves.\n        if (selectedOption && previouslySelectedOption !== selectedOption) {\n          // We set a duration on the live announcement, because we want the live element to be\n          // cleared after a while so that users can't navigate to it using the arrow keys.\n          this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n        }\n      }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n      const manager = this._keyManager;\n      const keyCode = event.keyCode;\n      const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n      const isTyping = manager.isTyping();\n      if (isArrowKey && event.altKey) {\n        // Close the select on ALT + arrow key to match the native <select>\n        event.preventDefault();\n        this.close();\n        // Don't do anything in this case if the user is typing,\n        // because the typing sequence can include the space key.\n      } else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem && !hasModifierKey(event)) {\n        event.preventDefault();\n        manager.activeItem._selectViaInteraction();\n      } else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n        event.preventDefault();\n        const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n        this.options.forEach(option => {\n          if (!option.disabled) {\n            hasDeselectedOptions ? option.select() : option.deselect();\n          }\n        });\n      } else {\n        const previouslyFocusedIndex = manager.activeItemIndex;\n        manager.onKeydown(event);\n        if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem && manager.activeItemIndex !== previouslyFocusedIndex) {\n          manager.activeItem._selectViaInteraction();\n        }\n      }\n    }\n    _onFocus() {\n      if (!this.disabled) {\n        this._focused = true;\n        this.stateChanges.next();\n      }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n      this._focused = false;\n      this._keyManager?.cancelTypeahead();\n      if (!this.disabled && !this.panelOpen) {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n      }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n      this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n        this._changeDetectorRef.detectChanges();\n        this._positioningSettled();\n      });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n      return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n      return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n      // Defer setting the value in order to avoid the \"Expression\n      // has changed after it was checked\" errors from Angular.\n      Promise.resolve().then(() => {\n        if (this.ngControl) {\n          this._value = this.ngControl.value;\n        }\n        this._setSelectionByValue(this._value);\n        this.stateChanges.next();\n      });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n      this.options.forEach(option => option.setInactiveStyles());\n      this._selectionModel.clear();\n      if (this.multiple && value) {\n        if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw getMatSelectNonArrayValueError();\n        }\n        value.forEach(currentValue => this._selectOptionByValue(currentValue));\n        this._sortValues();\n      } else {\n        const correspondingOption = this._selectOptionByValue(value);\n        // Shift focus to the active item. Note that we shouldn't do this in multiple\n        // mode, because we don't know what option the user interacted with last.\n        if (correspondingOption) {\n          this._keyManager.updateActiveItem(correspondingOption);\n        } else if (!this.panelOpen) {\n          // Otherwise reset the highlighted option. Note that we only want to do this while\n          // closed, because doing it while open can shift the user's focus unnecessarily.\n          this._keyManager.updateActiveItem(-1);\n        }\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectOptionByValue(value) {\n      const correspondingOption = this.options.find(option => {\n        // Skip options that are already in the model. This allows us to handle cases\n        // where the same primitive value is selected multiple times.\n        if (this._selectionModel.isSelected(option)) {\n          return false;\n        }\n        try {\n          // Treat null as a special reset value.\n          return option.value != null && this._compareWith(option.value, value);\n        } catch (error) {\n          if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Notify developers of errors in their comparator.\n            console.warn(error);\n          }\n          return false;\n        }\n      });\n      if (correspondingOption) {\n        this._selectionModel.select(correspondingOption);\n      }\n      return correspondingOption;\n    }\n    /** Assigns a specific value to the select. Returns whether the value has changed. */\n    _assignValue(newValue) {\n      // Always re-assign an array, because it might have been mutated.\n      if (newValue !== this._value || this._multiple && Array.isArray(newValue)) {\n        if (this.options) {\n          this._setSelectionByValue(newValue);\n        }\n        this._value = newValue;\n        return true;\n      }\n      return false;\n    }\n    /** Gets how wide the overlay panel should be. */\n    _getOverlayWidth(preferredOrigin) {\n      if (this.panelWidth === 'auto') {\n        const refToMeasure = preferredOrigin instanceof CdkOverlayOrigin ? preferredOrigin.elementRef : preferredOrigin || this._elementRef;\n        return refToMeasure.nativeElement.getBoundingClientRect().width;\n      }\n      return this.panelWidth === null ? '' : this.panelWidth;\n    }\n    /** Syncs the parent state with the individual options. */\n    _syncParentProperties() {\n      if (this.options) {\n        for (const option of this.options) {\n          option._changeDetectorRef.markForCheck();\n        }\n      }\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n      this._keyManager = new ActiveDescendantKeyManager(this.options).withTypeAhead(this.typeaheadDebounceInterval).withVerticalOrientation().withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr').withHomeAndEnd().withPageUpDown().withAllowedModifierKeys(['shiftKey']).skipPredicate(this._skipPredicate);\n      this._keyManager.tabOut.subscribe(() => {\n        if (this.panelOpen) {\n          // Select the active item when tabbing away. This is consistent with how the native\n          // select behaves. Note that we only want to do this in single selection mode.\n          if (!this.multiple && this._keyManager.activeItem) {\n            this._keyManager.activeItem._selectViaInteraction();\n          }\n          // Restore focus to the trigger before closing. Ensures that the focus\n          // position won't be lost if the user got focus into the overlay.\n          this.focus();\n          this.close();\n        }\n      });\n      this._keyManager.change.subscribe(() => {\n        if (this._panelOpen && this.panel) {\n          this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n        } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n          this._keyManager.activeItem._selectViaInteraction();\n        }\n      });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n      const changedOrDestroyed = merge(this.options.changes, this._destroy);\n      this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n        this._onSelect(event.source, event.isUserInput);\n        if (event.isUserInput && !this.multiple && this._panelOpen) {\n          this.close();\n          this.focus();\n        }\n      });\n      // Listen to changes in the internal state of the options and react accordingly.\n      // Handles cases like the labels of the selected options changing.\n      merge(...this.options.map(option => option._stateChanges)).pipe(takeUntil(changedOrDestroyed)).subscribe(() => {\n        // `_stateChanges` can fire as a result of a change in the label's DOM value which may\n        // be the result of an expression changing. We have to use `detectChanges` in order\n        // to avoid \"changed after checked\" errors (see #14793).\n        this._changeDetectorRef.detectChanges();\n        this.stateChanges.next();\n      });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n      const wasSelected = this._selectionModel.isSelected(option);\n      if (option.value == null && !this._multiple) {\n        option.deselect();\n        this._selectionModel.clear();\n        if (this.value != null) {\n          this._propagateChanges(option.value);\n        }\n      } else {\n        if (wasSelected !== option.selected) {\n          option.selected ? this._selectionModel.select(option) : this._selectionModel.deselect(option);\n        }\n        if (isUserInput) {\n          this._keyManager.setActiveItem(option);\n        }\n        if (this.multiple) {\n          this._sortValues();\n          if (isUserInput) {\n            // In case the user selected the option with their mouse, we\n            // want to restore focus back to the trigger, in order to\n            // prevent the select keyboard controls from clashing with\n            // the ones from `mat-option`.\n            this.focus();\n          }\n        }\n      }\n      if (wasSelected !== this._selectionModel.isSelected(option)) {\n        this._propagateChanges();\n      }\n      this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n      if (this.multiple) {\n        const options = this.options.toArray();\n        this._selectionModel.sort((a, b) => {\n          return this.sortComparator ? this.sortComparator(a, b, options) : options.indexOf(a) - options.indexOf(b);\n        });\n        this.stateChanges.next();\n      }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n      let valueToEmit;\n      if (this.multiple) {\n        valueToEmit = this.selected.map(option => option.value);\n      } else {\n        valueToEmit = this.selected ? this.selected.value : fallbackValue;\n      }\n      this._value = valueToEmit;\n      this.valueChange.emit(valueToEmit);\n      this._onChange(valueToEmit);\n      this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first *enabled* option.\n     */\n    _highlightCorrectOption() {\n      if (this._keyManager) {\n        if (this.empty) {\n          // Find the index of the first *enabled* option. Avoid calling `_keyManager.setActiveItem`\n          // because it activates the first option that passes the skip predicate, rather than the\n          // first *enabled* option.\n          let firstEnabledOptionIndex = -1;\n          for (let index = 0; index < this.options.length; index++) {\n            const option = this.options.get(index);\n            if (!option.disabled) {\n              firstEnabledOptionIndex = index;\n              break;\n            }\n          }\n          this._keyManager.setActiveItem(firstEnabledOptionIndex);\n        } else {\n          this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n        }\n      }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n      return !this._panelOpen && !this.disabled && this.options?.length > 0;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n      this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n      if (this.ariaLabel) {\n        return null;\n      }\n      const labelId = this._parentFormField?.getLabelId();\n      const labelExpression = labelId ? labelId + ' ' : '';\n      return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n      if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n        return this._keyManager.activeItem.id;\n      }\n      return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n      if (this.ariaLabel) {\n        return null;\n      }\n      const labelId = this._parentFormField?.getLabelId();\n      let value = (labelId ? labelId + ' ' : '') + this._valueId;\n      if (this.ariaLabelledby) {\n        value += ' ' + this.ariaLabelledby;\n      }\n      return value;\n    }\n    /** Called when the overlay panel is done animating. */\n    _panelDoneAnimating(isOpen) {\n      this.openedChange.emit(isOpen);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n      if (ids.length) {\n        this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n      } else {\n        this._elementRef.nativeElement.removeAttribute('aria-describedby');\n      }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n      this.focus();\n      this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n      // Since the panel doesn't overlap the trigger, we\n      // want the label to only float when there's a value.\n      return this.panelOpen || !this.empty || this.focused && !!this.placeholder;\n    }\n    static {\n      this.ɵfac = function MatSelect_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatSelect)(i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.ErrorStateMatcher), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.Directionality, 8), i0.ɵɵdirectiveInject(i4.NgForm, 8), i0.ɵɵdirectiveInject(i4.FormGroupDirective, 8), i0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), i0.ɵɵdirectiveInject(i4.NgControl, 10), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), i0.ɵɵdirectiveInject(i5.LiveAnnouncer), i0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatSelect,\n        selectors: [[\"mat-select\"]],\n        contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MAT_SELECT_TRIGGER, 5);\n            i0.ɵɵcontentQuery(dirIndex, MatOption, 5);\n            i0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.options = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n          }\n        },\n        viewQuery: function MatSelect_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n            i0.ɵɵviewQuery(_c1, 5);\n            i0.ɵɵviewQuery(CdkConnectedOverlay, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._overlayDir = _t.first);\n          }\n        },\n        hostAttrs: [\"role\", \"combobox\", \"aria-haspopup\", \"listbox\", 1, \"mat-mdc-select\"],\n        hostVars: 19,\n        hostBindings: function MatSelect_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) {\n              return ctx._handleKeydown($event);\n            })(\"focus\", function MatSelect_focus_HostBindingHandler() {\n              return ctx._onFocus();\n            })(\"blur\", function MatSelect_blur_HostBindingHandler() {\n              return ctx._onBlur();\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex)(\"aria-controls\", ctx.panelOpen ? ctx.id + \"-panel\" : null)(\"aria-expanded\", ctx.panelOpen)(\"aria-label\", ctx.ariaLabel || null)(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n            i0.ɵɵclassProp(\"mat-mdc-select-disabled\", ctx.disabled)(\"mat-mdc-select-invalid\", ctx.errorState)(\"mat-mdc-select-required\", ctx.required)(\"mat-mdc-select-empty\", ctx.empty)(\"mat-mdc-select-multiple\", ctx.multiple);\n          }\n        },\n        inputs: {\n          userAriaDescribedBy: [0, \"aria-describedby\", \"userAriaDescribedBy\"],\n          panelClass: \"panelClass\",\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n          tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n          hideSingleSelectionIndicator: [2, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute],\n          placeholder: \"placeholder\",\n          required: [2, \"required\", \"required\", booleanAttribute],\n          multiple: [2, \"multiple\", \"multiple\", booleanAttribute],\n          disableOptionCentering: [2, \"disableOptionCentering\", \"disableOptionCentering\", booleanAttribute],\n          compareWith: \"compareWith\",\n          value: \"value\",\n          ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n          ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n          errorStateMatcher: \"errorStateMatcher\",\n          typeaheadDebounceInterval: [2, \"typeaheadDebounceInterval\", \"typeaheadDebounceInterval\", numberAttribute],\n          sortComparator: \"sortComparator\",\n          id: \"id\",\n          panelWidth: \"panelWidth\"\n        },\n        outputs: {\n          openedChange: \"openedChange\",\n          _openedStream: \"opened\",\n          _closedStream: \"closed\",\n          selectionChange: \"selectionChange\",\n          valueChange: \"valueChange\"\n        },\n        exportAs: [\"matSelect\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MatFormFieldControl,\n          useExisting: MatSelect\n        }, {\n          provide: MAT_OPTION_PARENT_COMPONENT,\n          useExisting: MatSelect\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c3,\n        decls: 11,\n        vars: 8,\n        consts: [[\"fallbackOverlayOrigin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [\"panel\", \"\"], [\"cdk-overlay-origin\", \"\", 1, \"mat-mdc-select-trigger\", 3, \"click\"], [1, \"mat-mdc-select-value\"], [1, \"mat-mdc-select-placeholder\", \"mat-mdc-select-min-line\"], [1, \"mat-mdc-select-value-text\"], [1, \"mat-mdc-select-arrow-wrapper\"], [1, \"mat-mdc-select-arrow\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"focusable\", \"false\", \"aria-hidden\", \"true\"], [\"d\", \"M7 10l5 5 5-5z\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"backdropClick\", \"attach\", \"detach\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayWidth\"], [1, \"mat-mdc-select-min-line\"], [\"role\", \"listbox\", \"tabindex\", \"-1\", 3, \"keydown\", \"ngClass\"]],\n        template: function MatSelect_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef(_c2);\n            i0.ɵɵelementStart(0, \"div\", 2, 0);\n            i0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.open());\n            });\n            i0.ɵɵelementStart(3, \"div\", 3);\n            i0.ɵɵtemplate(4, MatSelect_Conditional_4_Template, 2, 1, \"span\", 4)(5, MatSelect_Conditional_5_Template, 3, 1, \"span\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\", 7);\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(8, \"svg\", 8);\n            i0.ɵɵelement(9, \"path\", 9);\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵtemplate(10, MatSelect_ng_template_10_Template, 3, 9, \"ng-template\", 10);\n            i0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_10_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.close());\n            })(\"attach\", function MatSelect_Template_ng_template_attach_10_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._onAttached());\n            })(\"detach\", function MatSelect_Template_ng_template_detach_10_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.close());\n            });\n          }\n          if (rf & 2) {\n            const fallbackOverlayOrigin_r4 = i0.ɵɵreference(1);\n            i0.ɵɵadvance(3);\n            i0.ɵɵattribute(\"id\", ctx._valueId);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.empty ? 4 : 5);\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"cdkConnectedOverlayPanelClass\", ctx._overlayPanelClass)(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", ctx._preferredOverlayOrigin || fallbackOverlayOrigin_r4)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayWidth\", ctx._overlayWidth);\n          }\n        },\n        dependencies: [CdkOverlayOrigin, CdkConnectedOverlay, NgClass],\n        styles: [\".mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color, var(--mat-app-on-surface));font-family:var(--mat-select-trigger-text-font, var(--mat-app-body-large-font));line-height:var(--mat-select-trigger-text-line-height, var(--mat-app-body-large-line-height));font-size:var(--mat-select-trigger-text-size, var(--mat-app-body-large-size));font-weight:var(--mat-select-trigger-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mat-select-trigger-text-tracking, var(--mat-app-body-large-tracking))}div.mat-mdc-select-panel{box-shadow:var(--mat-select-container-elevation-shadow)}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color)}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow,.mat-form-field-invalid:not(.mat-form-field-disabled) .mat-mdc-form-field-infix::after{color:var(--mat-select-invalid-arrow-color, var(--mat-app-error))}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color, var(--mat-app-on-surface-variant))}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color, var(--mat-app-primary))}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color)}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}div.mat-mdc-select-panel{width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:static;background-color:var(--mat-select-panel-background-color, var(--mat-app-surface-container))}.cdk-high-contrast-active div.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}div.mat-mdc-select-panel .mat-mdc-option{--mdc-list-list-item-container-color: var(--mat-select-panel-background-color)}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color, var(--mat-app-on-surface-variant))}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:var(--mat-select-arrow-transform)}\"],\n        encapsulation: 2,\n        data: {\n          animation: [matSelectAnimations.transformPanel]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return MatSelect;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nlet MatSelectTrigger = /*#__PURE__*/(() => {\n  class MatSelectTrigger {\n    static {\n      this.ɵfac = function MatSelectTrigger_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatSelectTrigger)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatSelectTrigger,\n        selectors: [[\"mat-select-trigger\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_SELECT_TRIGGER,\n          useExisting: MatSelectTrigger\n        }])]\n      });\n    }\n  }\n  return MatSelectTrigger;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSelectModule = /*#__PURE__*/(() => {\n  class MatSelectModule {\n    static {\n      this.ɵfac = function MatSelectModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatSelectModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatSelectModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],\n        imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule, CdkScrollableModule, MatFormFieldModule, MatOptionModule, MatCommonModule]\n      });\n    }\n  }\n  return MatSelectModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, matSelectAnimations };\n","import * as i1 from '@angular/cdk/bidi';\nimport { Platform } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, ViewChild, ANIMATION_MODULE_TYPE, booleanAttribute, numberAttribute, Optional, ViewChildren, ContentChild, ContentChildren, forwardRef, EventEmitter, signal, Directive, Output, NgModule } from '@angular/core';\nimport { RippleState, MatRipple, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\n/**\n * Thumb types: range slider has two thumbs (START, END) whereas single point\n * slider only has one thumb (END).\n */\nconst _c0 = [\"knob\"];\nconst _c1 = [\"valueIndicatorContainer\"];\nfunction MatSliderVisualThumb_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2, 1)(2, \"div\", 5)(3, \"span\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.valueIndicatorText);\n  }\n}\nconst _c2 = [\"trackActive\"];\nconst _c3 = [\"*\"];\nfunction MatSlider_Conditional_6_Conditional_2_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n  if (rf & 2) {\n    const tickMark_r1 = ctx.$implicit;\n    const ɵ$index_14_r2 = ctx.$index;\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(tickMark_r1 === 0 ? \"mdc-slider__tick-mark--active\" : \"mdc-slider__tick-mark--inactive\");\n    i0.ɵɵstyleProp(\"transform\", ctx_r2._calcTickMarkTransform(ɵ$index_14_r2));\n  }\n}\nfunction MatSlider_Conditional_6_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵrepeaterCreate(0, MatSlider_Conditional_6_Conditional_2_For_1_Template, 1, 4, \"div\", 8, i0.ɵɵrepeaterTrackByIndex);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵrepeater(ctx_r2._tickMarks);\n  }\n}\nfunction MatSlider_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6, 1);\n    i0.ɵɵtemplate(2, MatSlider_Conditional_6_Conditional_2_Template, 2, 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵconditional(ctx_r2._cachedWidth ? 2 : -1);\n  }\n}\nfunction MatSlider_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-slider-visual-thumb\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"discrete\", ctx_r2.discrete)(\"thumbPosition\", 1)(\"valueIndicatorText\", ctx_r2.startValueIndicatorText);\n  }\n}\nvar _MatThumb = /*#__PURE__*/function (_MatThumb) {\n  _MatThumb[_MatThumb[\"START\"] = 1] = \"START\";\n  _MatThumb[_MatThumb[\"END\"] = 2] = \"END\";\n  return _MatThumb;\n}(_MatThumb || {});\n/** Tick mark enum, for discrete sliders. */\nvar _MatTickMark = /*#__PURE__*/function (_MatTickMark) {\n  _MatTickMark[_MatTickMark[\"ACTIVE\"] = 0] = \"ACTIVE\";\n  _MatTickMark[_MatTickMark[\"INACTIVE\"] = 1] = \"INACTIVE\";\n  return _MatTickMark;\n}(_MatTickMark || {});\n/**\n * Injection token that can be used for a `MatSlider` to provide itself as a\n * parent to the `MatSliderThumb` and `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER = /*#__PURE__*/new InjectionToken('_MatSlider');\n/**\n * Injection token that can be used to query for a `MatSliderThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB = /*#__PURE__*/new InjectionToken('_MatSliderThumb');\n/**\n * Injection token that can be used to query for a `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB = /*#__PURE__*/new InjectionToken('_MatSliderRangeThumb');\n/**\n * Injection token that can be used to query for a `MatSliderVisualThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_VISUAL_THUMB = /*#__PURE__*/new InjectionToken('_MatSliderVisualThumb');\n/**\n * A simple change event emitted by the MatSlider component.\n * @deprecated Use event bindings directly on the MatSliderThumbs for `change` and `input` events. See https://v17.material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatSliderChange {}\n\n/**\n * The visual slider thumb.\n *\n * Handles the slider thumb ripple states (hover, focus, and active),\n * and displaying the value tooltip on discrete sliders.\n * @docs-private\n */\nlet MatSliderVisualThumb = /*#__PURE__*/(() => {\n  class MatSliderVisualThumb {\n    constructor(_cdr, _ngZone, _elementRef, _slider) {\n      this._cdr = _cdr;\n      this._ngZone = _ngZone;\n      this._slider = _slider;\n      /** Whether the slider thumb is currently being hovered. */\n      this._isHovered = false;\n      /** Whether the slider thumb is currently being pressed. */\n      this._isActive = false;\n      /** Whether the value indicator tooltip is visible. */\n      this._isValueIndicatorVisible = false;\n      this._platform = inject(Platform);\n      this._onPointerMove = event => {\n        if (this._sliderInput._isFocused) {\n          return;\n        }\n        const rect = this._hostElement.getBoundingClientRect();\n        const isHovered = this._slider._isCursorOnSliderThumb(event, rect);\n        this._isHovered = isHovered;\n        if (isHovered) {\n          this._showHoverRipple();\n        } else {\n          this._hideRipple(this._hoverRippleRef);\n        }\n      };\n      this._onMouseLeave = () => {\n        this._isHovered = false;\n        this._hideRipple(this._hoverRippleRef);\n      };\n      this._onFocus = () => {\n        // We don't want to show the hover ripple on top of the focus ripple.\n        // Happen when the users cursor is over a thumb and then the user tabs to it.\n        this._hideRipple(this._hoverRippleRef);\n        this._showFocusRipple();\n        this._hostElement.classList.add('mdc-slider__thumb--focused');\n      };\n      this._onBlur = () => {\n        // Happens when the user tabs away while still dragging a thumb.\n        if (!this._isActive) {\n          this._hideRipple(this._focusRippleRef);\n        }\n        // Happens when the user tabs away from a thumb but their cursor is still over it.\n        if (this._isHovered) {\n          this._showHoverRipple();\n        }\n        this._hostElement.classList.remove('mdc-slider__thumb--focused');\n      };\n      this._onDragStart = event => {\n        if (event.button !== 0) {\n          return;\n        }\n        this._isActive = true;\n        this._showActiveRipple();\n      };\n      this._onDragEnd = () => {\n        this._isActive = false;\n        this._hideRipple(this._activeRippleRef);\n        // Happens when the user starts dragging a thumb, tabs away, and then stops dragging.\n        if (!this._sliderInput._isFocused) {\n          this._hideRipple(this._focusRippleRef);\n        }\n        // On Safari we need to immediately re-show the hover ripple because\n        // sliders do not retain focus from pointer events on that platform.\n        if (this._platform.SAFARI) {\n          this._showHoverRipple();\n        }\n      };\n      this._hostElement = _elementRef.nativeElement;\n    }\n    ngAfterViewInit() {\n      const sliderInput = this._slider._getInput(this.thumbPosition);\n      // No-op if the slider isn't configured properly. `MatSlider` will\n      // throw an error instructing the user how to set up the slider.\n      if (!sliderInput) {\n        return;\n      }\n      this._ripple.radius = 24;\n      this._sliderInput = sliderInput;\n      this._sliderInputEl = this._sliderInput._hostElement;\n      // These listeners don't update any data bindings so we bind them outside\n      // of the NgZone to prevent Angular from needlessly running change detection.\n      this._ngZone.runOutsideAngular(() => {\n        const input = this._sliderInputEl;\n        input.addEventListener('pointermove', this._onPointerMove);\n        input.addEventListener('pointerdown', this._onDragStart);\n        input.addEventListener('pointerup', this._onDragEnd);\n        input.addEventListener('pointerleave', this._onMouseLeave);\n        input.addEventListener('focus', this._onFocus);\n        input.addEventListener('blur', this._onBlur);\n      });\n    }\n    ngOnDestroy() {\n      const input = this._sliderInputEl;\n      if (input) {\n        input.removeEventListener('pointermove', this._onPointerMove);\n        input.removeEventListener('pointerdown', this._onDragStart);\n        input.removeEventListener('pointerup', this._onDragEnd);\n        input.removeEventListener('pointerleave', this._onMouseLeave);\n        input.removeEventListener('focus', this._onFocus);\n        input.removeEventListener('blur', this._onBlur);\n      }\n    }\n    /** Handles displaying the hover ripple. */\n    _showHoverRipple() {\n      if (!this._isShowingRipple(this._hoverRippleRef)) {\n        this._hoverRippleRef = this._showRipple({\n          enterDuration: 0,\n          exitDuration: 0\n        });\n        this._hoverRippleRef?.element.classList.add('mat-mdc-slider-hover-ripple');\n      }\n    }\n    /** Handles displaying the focus ripple. */\n    _showFocusRipple() {\n      // Show the focus ripple event if noop animations are enabled.\n      if (!this._isShowingRipple(this._focusRippleRef)) {\n        this._focusRippleRef = this._showRipple({\n          enterDuration: 0,\n          exitDuration: 0\n        }, true);\n        this._focusRippleRef?.element.classList.add('mat-mdc-slider-focus-ripple');\n      }\n    }\n    /** Handles displaying the active ripple. */\n    _showActiveRipple() {\n      if (!this._isShowingRipple(this._activeRippleRef)) {\n        this._activeRippleRef = this._showRipple({\n          enterDuration: 225,\n          exitDuration: 400\n        });\n        this._activeRippleRef?.element.classList.add('mat-mdc-slider-active-ripple');\n      }\n    }\n    /** Whether the given rippleRef is currently fading in or visible. */\n    _isShowingRipple(rippleRef) {\n      return rippleRef?.state === RippleState.FADING_IN || rippleRef?.state === RippleState.VISIBLE;\n    }\n    /** Manually launches the slider thumb ripple using the specified ripple animation config. */\n    _showRipple(animation, ignoreGlobalRippleConfig) {\n      if (this._slider.disabled) {\n        return;\n      }\n      this._showValueIndicator();\n      if (this._slider._isRange) {\n        const sibling = this._slider._getThumb(this.thumbPosition === _MatThumb.START ? _MatThumb.END : _MatThumb.START);\n        sibling._showValueIndicator();\n      }\n      if (this._slider._globalRippleOptions?.disabled && !ignoreGlobalRippleConfig) {\n        return;\n      }\n      return this._ripple.launch({\n        animation: this._slider._noopAnimations ? {\n          enterDuration: 0,\n          exitDuration: 0\n        } : animation,\n        centered: true,\n        persistent: true\n      });\n    }\n    /**\n     * Fades out the given ripple.\n     * Also hides the value indicator if no ripple is showing.\n     */\n    _hideRipple(rippleRef) {\n      rippleRef?.fadeOut();\n      if (this._isShowingAnyRipple()) {\n        return;\n      }\n      if (!this._slider._isRange) {\n        this._hideValueIndicator();\n      }\n      const sibling = this._getSibling();\n      if (!sibling._isShowingAnyRipple()) {\n        this._hideValueIndicator();\n        sibling._hideValueIndicator();\n      }\n    }\n    /** Shows the value indicator ui. */\n    _showValueIndicator() {\n      this._hostElement.classList.add('mdc-slider__thumb--with-indicator');\n    }\n    /** Hides the value indicator ui. */\n    _hideValueIndicator() {\n      this._hostElement.classList.remove('mdc-slider__thumb--with-indicator');\n    }\n    _getSibling() {\n      return this._slider._getThumb(this.thumbPosition === _MatThumb.START ? _MatThumb.END : _MatThumb.START);\n    }\n    /** Gets the value indicator container's native HTML element. */\n    _getValueIndicatorContainer() {\n      return this._valueIndicatorContainer?.nativeElement;\n    }\n    /** Gets the native HTML element of the slider thumb knob. */\n    _getKnob() {\n      return this._knob.nativeElement;\n    }\n    _isShowingAnyRipple() {\n      return this._isShowingRipple(this._hoverRippleRef) || this._isShowingRipple(this._focusRippleRef) || this._isShowingRipple(this._activeRippleRef);\n    }\n    static {\n      this.ɵfac = function MatSliderVisualThumb_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatSliderVisualThumb)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_SLIDER));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatSliderVisualThumb,\n        selectors: [[\"mat-slider-visual-thumb\"]],\n        viewQuery: function MatSliderVisualThumb_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(MatRipple, 5);\n            i0.ɵɵviewQuery(_c0, 5);\n            i0.ɵɵviewQuery(_c1, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._ripple = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._knob = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._valueIndicatorContainer = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mdc-slider__thumb\", \"mat-mdc-slider-visual-thumb\"],\n        inputs: {\n          discrete: \"discrete\",\n          thumbPosition: \"thumbPosition\",\n          valueIndicatorText: \"valueIndicatorText\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_SLIDER_VISUAL_THUMB,\n          useExisting: MatSliderVisualThumb\n        }]), i0.ɵɵStandaloneFeature],\n        decls: 4,\n        vars: 2,\n        consts: [[\"knob\", \"\"], [\"valueIndicatorContainer\", \"\"], [1, \"mdc-slider__value-indicator-container\"], [1, \"mdc-slider__thumb-knob\"], [\"matRipple\", \"\", 1, \"mat-mdc-focus-indicator\", 3, \"matRippleDisabled\"], [1, \"mdc-slider__value-indicator\"], [1, \"mdc-slider__value-indicator-text\"]],\n        template: function MatSliderVisualThumb_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, MatSliderVisualThumb_Conditional_0_Template, 5, 1, \"div\", 2);\n            i0.ɵɵelement(1, \"div\", 3, 0)(3, \"div\", 4);\n          }\n          if (rf & 2) {\n            i0.ɵɵconditional(ctx.discrete ? 0 : -1);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"matRippleDisabled\", true);\n          }\n        },\n        dependencies: [MatRipple],\n        styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatSliderVisualThumb;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// TODO(wagnermaciel): maybe handle the following edge case:\n// 1. start dragging discrete slider\n// 2. tab to disable checkbox\n// 3. without ending drag, disable the slider\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nlet MatSlider = /*#__PURE__*/(() => {\n  class MatSlider {\n    /** Whether the slider is disabled. */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(v) {\n      this._disabled = v;\n      const endInput = this._getInput(_MatThumb.END);\n      const startInput = this._getInput(_MatThumb.START);\n      if (endInput) {\n        endInput.disabled = this._disabled;\n      }\n      if (startInput) {\n        startInput.disabled = this._disabled;\n      }\n    }\n    /** Whether the slider displays a numeric value label upon pressing the thumb. */\n    get discrete() {\n      return this._discrete;\n    }\n    set discrete(v) {\n      this._discrete = v;\n      this._updateValueIndicatorUIs();\n    }\n    /** The minimum value that the slider can have. */\n    get min() {\n      return this._min;\n    }\n    set min(v) {\n      const min = isNaN(v) ? this._min : v;\n      if (this._min !== min) {\n        this._updateMin(min);\n      }\n    }\n    _updateMin(min) {\n      const prevMin = this._min;\n      this._min = min;\n      this._isRange ? this._updateMinRange({\n        old: prevMin,\n        new: min\n      }) : this._updateMinNonRange(min);\n      this._onMinMaxOrStepChange();\n    }\n    _updateMinRange(min) {\n      const endInput = this._getInput(_MatThumb.END);\n      const startInput = this._getInput(_MatThumb.START);\n      const oldEndValue = endInput.value;\n      const oldStartValue = startInput.value;\n      startInput.min = min.new;\n      endInput.min = Math.max(min.new, startInput.value);\n      startInput.max = Math.min(endInput.max, endInput.value);\n      startInput._updateWidthInactive();\n      endInput._updateWidthInactive();\n      min.new < min.old ? this._onTranslateXChangeBySideEffect(endInput, startInput) : this._onTranslateXChangeBySideEffect(startInput, endInput);\n      if (oldEndValue !== endInput.value) {\n        this._onValueChange(endInput);\n      }\n      if (oldStartValue !== startInput.value) {\n        this._onValueChange(startInput);\n      }\n    }\n    _updateMinNonRange(min) {\n      const input = this._getInput(_MatThumb.END);\n      if (input) {\n        const oldValue = input.value;\n        input.min = min;\n        input._updateThumbUIByValue();\n        this._updateTrackUI(input);\n        if (oldValue !== input.value) {\n          this._onValueChange(input);\n        }\n      }\n    }\n    /** The maximum value that the slider can have. */\n    get max() {\n      return this._max;\n    }\n    set max(v) {\n      const max = isNaN(v) ? this._max : v;\n      if (this._max !== max) {\n        this._updateMax(max);\n      }\n    }\n    _updateMax(max) {\n      const prevMax = this._max;\n      this._max = max;\n      this._isRange ? this._updateMaxRange({\n        old: prevMax,\n        new: max\n      }) : this._updateMaxNonRange(max);\n      this._onMinMaxOrStepChange();\n    }\n    _updateMaxRange(max) {\n      const endInput = this._getInput(_MatThumb.END);\n      const startInput = this._getInput(_MatThumb.START);\n      const oldEndValue = endInput.value;\n      const oldStartValue = startInput.value;\n      endInput.max = max.new;\n      startInput.max = Math.min(max.new, endInput.value);\n      endInput.min = startInput.value;\n      endInput._updateWidthInactive();\n      startInput._updateWidthInactive();\n      max.new > max.old ? this._onTranslateXChangeBySideEffect(startInput, endInput) : this._onTranslateXChangeBySideEffect(endInput, startInput);\n      if (oldEndValue !== endInput.value) {\n        this._onValueChange(endInput);\n      }\n      if (oldStartValue !== startInput.value) {\n        this._onValueChange(startInput);\n      }\n    }\n    _updateMaxNonRange(max) {\n      const input = this._getInput(_MatThumb.END);\n      if (input) {\n        const oldValue = input.value;\n        input.max = max;\n        input._updateThumbUIByValue();\n        this._updateTrackUI(input);\n        if (oldValue !== input.value) {\n          this._onValueChange(input);\n        }\n      }\n    }\n    /** The values at which the thumb will snap. */\n    get step() {\n      return this._step;\n    }\n    set step(v) {\n      const step = isNaN(v) ? this._step : v;\n      if (this._step !== step) {\n        this._updateStep(step);\n      }\n    }\n    _updateStep(step) {\n      this._step = step;\n      this._isRange ? this._updateStepRange() : this._updateStepNonRange();\n      this._onMinMaxOrStepChange();\n    }\n    _updateStepRange() {\n      const endInput = this._getInput(_MatThumb.END);\n      const startInput = this._getInput(_MatThumb.START);\n      const oldEndValue = endInput.value;\n      const oldStartValue = startInput.value;\n      const prevStartValue = startInput.value;\n      endInput.min = this._min;\n      startInput.max = this._max;\n      endInput.step = this._step;\n      startInput.step = this._step;\n      if (this._platform.SAFARI) {\n        endInput.value = endInput.value;\n        startInput.value = startInput.value;\n      }\n      endInput.min = Math.max(this._min, startInput.value);\n      startInput.max = Math.min(this._max, endInput.value);\n      startInput._updateWidthInactive();\n      endInput._updateWidthInactive();\n      endInput.value < prevStartValue ? this._onTranslateXChangeBySideEffect(startInput, endInput) : this._onTranslateXChangeBySideEffect(endInput, startInput);\n      if (oldEndValue !== endInput.value) {\n        this._onValueChange(endInput);\n      }\n      if (oldStartValue !== startInput.value) {\n        this._onValueChange(startInput);\n      }\n    }\n    _updateStepNonRange() {\n      const input = this._getInput(_MatThumb.END);\n      if (input) {\n        const oldValue = input.value;\n        input.step = this._step;\n        if (this._platform.SAFARI) {\n          input.value = input.value;\n        }\n        input._updateThumbUIByValue();\n        if (oldValue !== input.value) {\n          this._onValueChange(input);\n        }\n      }\n    }\n    constructor(_ngZone, _cdr, _elementRef, _dir, _globalRippleOptions, animationMode) {\n      this._ngZone = _ngZone;\n      this._cdr = _cdr;\n      this._elementRef = _elementRef;\n      this._dir = _dir;\n      this._globalRippleOptions = _globalRippleOptions;\n      this._disabled = false;\n      this._discrete = false;\n      /** Whether the slider displays tick marks along the slider track. */\n      this.showTickMarks = false;\n      this._min = 0;\n      /** Whether ripples are disabled in the slider. */\n      this.disableRipple = false;\n      this._max = 100;\n      this._step = 1;\n      /**\n       * Function that will be used to format the value before it is displayed\n       * in the thumb label. Can be used to format very large number in order\n       * for them to fit into the slider thumb.\n       */\n      this.displayWith = value => `${value}`;\n      this._rippleRadius = 24;\n      // The value indicator tooltip text for the visual slider thumb(s).\n      /** @docs-private */\n      this.startValueIndicatorText = '';\n      /** @docs-private */\n      this.endValueIndicatorText = '';\n      this._isRange = false;\n      /** Whether the slider is rtl. */\n      this._isRtl = false;\n      this._hasViewInitialized = false;\n      /**\n       * The width of the tick mark track.\n       * The tick mark track width is different from full track width\n       */\n      this._tickMarkTrackWidth = 0;\n      this._hasAnimation = false;\n      this._resizeTimer = null;\n      this._platform = inject(Platform);\n      /** The radius of the native slider's knob. AFAIK there is no way to avoid hardcoding this. */\n      this._knobRadius = 8;\n      /** Whether or not the slider thumbs overlap. */\n      this._thumbsOverlap = false;\n      this._noopAnimations = animationMode === 'NoopAnimations';\n      this._dirChangeSubscription = this._dir.change.subscribe(() => this._onDirChange());\n      this._isRtl = this._dir.value === 'rtl';\n    }\n    ngAfterViewInit() {\n      if (this._platform.isBrowser) {\n        this._updateDimensions();\n      }\n      const eInput = this._getInput(_MatThumb.END);\n      const sInput = this._getInput(_MatThumb.START);\n      this._isRange = !!eInput && !!sInput;\n      this._cdr.detectChanges();\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        _validateInputs(this._isRange, this._getInput(_MatThumb.END), this._getInput(_MatThumb.START));\n      }\n      const thumb = this._getThumb(_MatThumb.END);\n      this._rippleRadius = thumb._ripple.radius;\n      this._inputPadding = this._rippleRadius - this._knobRadius;\n      this._isRange ? this._initUIRange(eInput, sInput) : this._initUINonRange(eInput);\n      this._updateTrackUI(eInput);\n      this._updateTickMarkUI();\n      this._updateTickMarkTrackUI();\n      this._observeHostResize();\n      this._cdr.detectChanges();\n    }\n    _initUINonRange(eInput) {\n      eInput.initProps();\n      eInput.initUI();\n      this._updateValueIndicatorUI(eInput);\n      this._hasViewInitialized = true;\n      eInput._updateThumbUIByValue();\n    }\n    _initUIRange(eInput, sInput) {\n      eInput.initProps();\n      eInput.initUI();\n      sInput.initProps();\n      sInput.initUI();\n      eInput._updateMinMax();\n      sInput._updateMinMax();\n      eInput._updateStaticStyles();\n      sInput._updateStaticStyles();\n      this._updateValueIndicatorUIs();\n      this._hasViewInitialized = true;\n      eInput._updateThumbUIByValue();\n      sInput._updateThumbUIByValue();\n    }\n    ngOnDestroy() {\n      this._dirChangeSubscription.unsubscribe();\n      this._resizeObserver?.disconnect();\n      this._resizeObserver = null;\n    }\n    /** Handles updating the slider ui after a dir change. */\n    _onDirChange() {\n      this._isRtl = this._dir.value === 'rtl';\n      this._isRange ? this._onDirChangeRange() : this._onDirChangeNonRange();\n      this._updateTickMarkUI();\n    }\n    _onDirChangeRange() {\n      const endInput = this._getInput(_MatThumb.END);\n      const startInput = this._getInput(_MatThumb.START);\n      endInput._setIsLeftThumb();\n      startInput._setIsLeftThumb();\n      endInput.translateX = endInput._calcTranslateXByValue();\n      startInput.translateX = startInput._calcTranslateXByValue();\n      endInput._updateStaticStyles();\n      startInput._updateStaticStyles();\n      endInput._updateWidthInactive();\n      startInput._updateWidthInactive();\n      endInput._updateThumbUIByValue();\n      startInput._updateThumbUIByValue();\n    }\n    _onDirChangeNonRange() {\n      const input = this._getInput(_MatThumb.END);\n      input._updateThumbUIByValue();\n    }\n    /** Starts observing and updating the slider if the host changes its size. */\n    _observeHostResize() {\n      if (typeof ResizeObserver === 'undefined' || !ResizeObserver) {\n        return;\n      }\n      this._ngZone.runOutsideAngular(() => {\n        this._resizeObserver = new ResizeObserver(() => {\n          if (this._isActive()) {\n            return;\n          }\n          if (this._resizeTimer) {\n            clearTimeout(this._resizeTimer);\n          }\n          this._onResize();\n        });\n        this._resizeObserver.observe(this._elementRef.nativeElement);\n      });\n    }\n    /** Whether any of the thumbs are currently active. */\n    _isActive() {\n      return this._getThumb(_MatThumb.START)._isActive || this._getThumb(_MatThumb.END)._isActive;\n    }\n    _getValue(thumbPosition = _MatThumb.END) {\n      const input = this._getInput(thumbPosition);\n      if (!input) {\n        return this.min;\n      }\n      return input.value;\n    }\n    _skipUpdate() {\n      return !!(this._getInput(_MatThumb.START)?._skipUIUpdate || this._getInput(_MatThumb.END)?._skipUIUpdate);\n    }\n    /** Stores the slider dimensions. */\n    _updateDimensions() {\n      this._cachedWidth = this._elementRef.nativeElement.offsetWidth;\n      this._cachedLeft = this._elementRef.nativeElement.getBoundingClientRect().left;\n    }\n    /** Sets the styles for the active portion of the track. */\n    _setTrackActiveStyles(styles) {\n      const trackStyle = this._trackActive.nativeElement.style;\n      trackStyle.left = styles.left;\n      trackStyle.right = styles.right;\n      trackStyle.transformOrigin = styles.transformOrigin;\n      trackStyle.transform = styles.transform;\n    }\n    /** Returns the translateX positioning for a tick mark based on it's index. */\n    _calcTickMarkTransform(index) {\n      // TODO(wagnermaciel): See if we can avoid doing this and just using flex to position these.\n      const translateX = index * (this._tickMarkTrackWidth / (this._tickMarks.length - 1));\n      return `translateX(${translateX}px`;\n    }\n    // Handlers for updating the slider ui.\n    _onTranslateXChange(source) {\n      if (!this._hasViewInitialized) {\n        return;\n      }\n      this._updateThumbUI(source);\n      this._updateTrackUI(source);\n      this._updateOverlappingThumbUI(source);\n    }\n    _onTranslateXChangeBySideEffect(input1, input2) {\n      if (!this._hasViewInitialized) {\n        return;\n      }\n      input1._updateThumbUIByValue();\n      input2._updateThumbUIByValue();\n    }\n    _onValueChange(source) {\n      if (!this._hasViewInitialized) {\n        return;\n      }\n      this._updateValueIndicatorUI(source);\n      this._updateTickMarkUI();\n      this._cdr.detectChanges();\n    }\n    _onMinMaxOrStepChange() {\n      if (!this._hasViewInitialized) {\n        return;\n      }\n      this._updateTickMarkUI();\n      this._updateTickMarkTrackUI();\n      this._cdr.markForCheck();\n    }\n    _onResize() {\n      if (!this._hasViewInitialized) {\n        return;\n      }\n      this._updateDimensions();\n      if (this._isRange) {\n        const eInput = this._getInput(_MatThumb.END);\n        const sInput = this._getInput(_MatThumb.START);\n        eInput._updateThumbUIByValue();\n        sInput._updateThumbUIByValue();\n        eInput._updateStaticStyles();\n        sInput._updateStaticStyles();\n        eInput._updateMinMax();\n        sInput._updateMinMax();\n        eInput._updateWidthInactive();\n        sInput._updateWidthInactive();\n      } else {\n        const eInput = this._getInput(_MatThumb.END);\n        if (eInput) {\n          eInput._updateThumbUIByValue();\n        }\n      }\n      this._updateTickMarkUI();\n      this._updateTickMarkTrackUI();\n      this._cdr.detectChanges();\n    }\n    /** Returns true if the slider knobs are overlapping one another. */\n    _areThumbsOverlapping() {\n      const startInput = this._getInput(_MatThumb.START);\n      const endInput = this._getInput(_MatThumb.END);\n      if (!startInput || !endInput) {\n        return false;\n      }\n      return endInput.translateX - startInput.translateX < 20;\n    }\n    /**\n     * Updates the class names of overlapping slider thumbs so\n     * that the current active thumb is styled to be on \"top\".\n     */\n    _updateOverlappingThumbClassNames(source) {\n      const sibling = source.getSibling();\n      const sourceThumb = this._getThumb(source.thumbPosition);\n      const siblingThumb = this._getThumb(sibling.thumbPosition);\n      siblingThumb._hostElement.classList.remove('mdc-slider__thumb--top');\n      sourceThumb._hostElement.classList.toggle('mdc-slider__thumb--top', this._thumbsOverlap);\n    }\n    /** Updates the UI of slider thumbs when they begin or stop overlapping. */\n    _updateOverlappingThumbUI(source) {\n      if (!this._isRange || this._skipUpdate()) {\n        return;\n      }\n      if (this._thumbsOverlap !== this._areThumbsOverlapping()) {\n        this._thumbsOverlap = !this._thumbsOverlap;\n        this._updateOverlappingThumbClassNames(source);\n      }\n    }\n    // _MatThumb styles update conditions\n    //\n    // 1. TranslateX, resize, or dir change\n    //    - Reason: The thumb styles need to be updated according to the new translateX.\n    // 2. Min, max, or step\n    //    - Reason: The value may have silently changed.\n    /** Updates the translateX of the given thumb. */\n    _updateThumbUI(source) {\n      if (this._skipUpdate()) {\n        return;\n      }\n      const thumb = this._getThumb(source.thumbPosition === _MatThumb.END ? _MatThumb.END : _MatThumb.START);\n      thumb._hostElement.style.transform = `translateX(${source.translateX}px)`;\n    }\n    // Value indicator text update conditions\n    //\n    // 1. Value\n    //    - Reason: The value displayed needs to be updated.\n    // 2. Min, max, or step\n    //    - Reason: The value may have silently changed.\n    /** Updates the value indicator tooltip ui for the given thumb. */\n    _updateValueIndicatorUI(source) {\n      if (this._skipUpdate()) {\n        return;\n      }\n      const valuetext = this.displayWith(source.value);\n      this._hasViewInitialized ? source._valuetext.set(valuetext) : source._hostElement.setAttribute('aria-valuetext', valuetext);\n      if (this.discrete) {\n        source.thumbPosition === _MatThumb.START ? this.startValueIndicatorText = valuetext : this.endValueIndicatorText = valuetext;\n        const visualThumb = this._getThumb(source.thumbPosition);\n        valuetext.length < 3 ? visualThumb._hostElement.classList.add('mdc-slider__thumb--short-value') : visualThumb._hostElement.classList.remove('mdc-slider__thumb--short-value');\n      }\n    }\n    /** Updates all value indicator UIs in the slider. */\n    _updateValueIndicatorUIs() {\n      const eInput = this._getInput(_MatThumb.END);\n      const sInput = this._getInput(_MatThumb.START);\n      if (eInput) {\n        this._updateValueIndicatorUI(eInput);\n      }\n      if (sInput) {\n        this._updateValueIndicatorUI(sInput);\n      }\n    }\n    // Update Tick Mark Track Width\n    //\n    // 1. Min, max, or step\n    //    - Reason: The maximum reachable value may have changed.\n    //    - Side note: The maximum reachable value is different from the maximum value set by the\n    //      user. For example, a slider with [min: 5, max: 100, step: 10] would have a maximum\n    //      reachable value of 95.\n    // 2. Resize\n    //    - Reason: The position for the maximum reachable value needs to be recalculated.\n    /** Updates the width of the tick mark track. */\n    _updateTickMarkTrackUI() {\n      if (!this.showTickMarks || this._skipUpdate()) {\n        return;\n      }\n      const step = this._step && this._step > 0 ? this._step : 1;\n      const maxValue = Math.floor(this.max / step) * step;\n      const percentage = (maxValue - this.min) / (this.max - this.min);\n      this._tickMarkTrackWidth = this._cachedWidth * percentage - 6;\n    }\n    // Track active update conditions\n    //\n    // 1. TranslateX\n    //    - Reason: The track active should line up with the new thumb position.\n    // 2. Min or max\n    //    - Reason #1: The 'active' percentage needs to be recalculated.\n    //    - Reason #2: The value may have silently changed.\n    // 3. Step\n    //    - Reason: The value may have silently changed causing the thumb(s) to shift.\n    // 4. Dir change\n    //    - Reason: The track active will need to be updated according to the new thumb position(s).\n    // 5. Resize\n    //    - Reason: The total width the 'active' tracks translateX is based on has changed.\n    /** Updates the scale on the active portion of the track. */\n    _updateTrackUI(source) {\n      if (this._skipUpdate()) {\n        return;\n      }\n      this._isRange ? this._updateTrackUIRange(source) : this._updateTrackUINonRange(source);\n    }\n    _updateTrackUIRange(source) {\n      const sibling = source.getSibling();\n      if (!sibling || !this._cachedWidth) {\n        return;\n      }\n      const activePercentage = Math.abs(sibling.translateX - source.translateX) / this._cachedWidth;\n      if (source._isLeftThumb && this._cachedWidth) {\n        this._setTrackActiveStyles({\n          left: 'auto',\n          right: `${this._cachedWidth - sibling.translateX}px`,\n          transformOrigin: 'right',\n          transform: `scaleX(${activePercentage})`\n        });\n      } else {\n        this._setTrackActiveStyles({\n          left: `${sibling.translateX}px`,\n          right: 'auto',\n          transformOrigin: 'left',\n          transform: `scaleX(${activePercentage})`\n        });\n      }\n    }\n    _updateTrackUINonRange(source) {\n      this._isRtl ? this._setTrackActiveStyles({\n        left: 'auto',\n        right: '0px',\n        transformOrigin: 'right',\n        transform: `scaleX(${1 - source.fillPercentage})`\n      }) : this._setTrackActiveStyles({\n        left: '0px',\n        right: 'auto',\n        transformOrigin: 'left',\n        transform: `scaleX(${source.fillPercentage})`\n      });\n    }\n    // Tick mark update conditions\n    //\n    // 1. Value\n    //    - Reason: a tick mark which was once active might now be inactive or vice versa.\n    // 2. Min, max, or step\n    //    - Reason #1: the number of tick marks may have changed.\n    //    - Reason #2: The value may have silently changed.\n    /** Updates the dots along the slider track. */\n    _updateTickMarkUI() {\n      if (!this.showTickMarks || this.step === undefined || this.min === undefined || this.max === undefined) {\n        return;\n      }\n      const step = this.step > 0 ? this.step : 1;\n      this._isRange ? this._updateTickMarkUIRange(step) : this._updateTickMarkUINonRange(step);\n      if (this._isRtl) {\n        this._tickMarks.reverse();\n      }\n    }\n    _updateTickMarkUINonRange(step) {\n      const value = this._getValue();\n      let numActive = Math.max(Math.round((value - this.min) / step), 0);\n      let numInactive = Math.max(Math.round((this.max - value) / step), 0);\n      this._isRtl ? numActive++ : numInactive++;\n      this._tickMarks = Array(numActive).fill(_MatTickMark.ACTIVE).concat(Array(numInactive).fill(_MatTickMark.INACTIVE));\n    }\n    _updateTickMarkUIRange(step) {\n      const endValue = this._getValue();\n      const startValue = this._getValue(_MatThumb.START);\n      const numInactiveBeforeStartThumb = Math.max(Math.round((startValue - this.min) / step), 0);\n      const numActive = Math.max(Math.round((endValue - startValue) / step) + 1, 0);\n      const numInactiveAfterEndThumb = Math.max(Math.round((this.max - endValue) / step), 0);\n      this._tickMarks = Array(numInactiveBeforeStartThumb).fill(_MatTickMark.INACTIVE).concat(Array(numActive).fill(_MatTickMark.ACTIVE), Array(numInactiveAfterEndThumb).fill(_MatTickMark.INACTIVE));\n    }\n    /** Gets the slider thumb input of the given thumb position. */\n    _getInput(thumbPosition) {\n      if (thumbPosition === _MatThumb.END && this._input) {\n        return this._input;\n      }\n      if (this._inputs?.length) {\n        return thumbPosition === _MatThumb.START ? this._inputs.first : this._inputs.last;\n      }\n      return;\n    }\n    /** Gets the slider thumb HTML input element of the given thumb position. */\n    _getThumb(thumbPosition) {\n      return thumbPosition === _MatThumb.END ? this._thumbs?.last : this._thumbs?.first;\n    }\n    _setTransition(withAnimation) {\n      this._hasAnimation = !this._platform.IOS && withAnimation && !this._noopAnimations;\n      this._elementRef.nativeElement.classList.toggle('mat-mdc-slider-with-animation', this._hasAnimation);\n    }\n    /** Whether the given pointer event occurred within the bounds of the slider pointer's DOM Rect. */\n    _isCursorOnSliderThumb(event, rect) {\n      const radius = rect.width / 2;\n      const centerX = rect.x + radius;\n      const centerY = rect.y + radius;\n      const dx = event.clientX - centerX;\n      const dy = event.clientY - centerY;\n      return Math.pow(dx, 2) + Math.pow(dy, 2) < Math.pow(radius, 2);\n    }\n    static {\n      this.ɵfac = function MatSlider_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatSlider)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatSlider,\n        selectors: [[\"mat-slider\"]],\n        contentQueries: function MatSlider_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MAT_SLIDER_THUMB, 5);\n            i0.ɵɵcontentQuery(dirIndex, MAT_SLIDER_RANGE_THUMB, 4);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._input = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inputs = _t);\n          }\n        },\n        viewQuery: function MatSlider_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c2, 5);\n            i0.ɵɵviewQuery(MAT_SLIDER_VISUAL_THUMB, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._trackActive = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._thumbs = _t);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-slider\", \"mdc-slider\"],\n        hostVars: 12,\n        hostBindings: function MatSlider_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n            i0.ɵɵclassProp(\"mdc-slider--range\", ctx._isRange)(\"mdc-slider--disabled\", ctx.disabled)(\"mdc-slider--discrete\", ctx.discrete)(\"mdc-slider--tick-marks\", ctx.showTickMarks)(\"_mat-animation-noopable\", ctx._noopAnimations);\n          }\n        },\n        inputs: {\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          discrete: [2, \"discrete\", \"discrete\", booleanAttribute],\n          showTickMarks: [2, \"showTickMarks\", \"showTickMarks\", booleanAttribute],\n          min: [2, \"min\", \"min\", numberAttribute],\n          color: \"color\",\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n          max: [2, \"max\", \"max\", numberAttribute],\n          step: [2, \"step\", \"step\", numberAttribute],\n          displayWith: \"displayWith\"\n        },\n        exportAs: [\"matSlider\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_SLIDER,\n          useExisting: MatSlider\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c3,\n        decls: 9,\n        vars: 5,\n        consts: [[\"trackActive\", \"\"], [\"tickMarkContainer\", \"\"], [1, \"mdc-slider__track\"], [1, \"mdc-slider__track--inactive\"], [1, \"mdc-slider__track--active\"], [1, \"mdc-slider__track--active_fill\"], [1, \"mdc-slider__tick-marks\"], [3, \"discrete\", \"thumbPosition\", \"valueIndicatorText\"], [3, \"class\", \"transform\"]],\n        template: function MatSlider_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n            i0.ɵɵelementStart(1, \"div\", 2);\n            i0.ɵɵelement(2, \"div\", 3);\n            i0.ɵɵelementStart(3, \"div\", 4);\n            i0.ɵɵelement(4, \"div\", 5, 0);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(6, MatSlider_Conditional_6_Template, 3, 1, \"div\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(7, MatSlider_Conditional_7_Template, 1, 3, \"mat-slider-visual-thumb\", 7);\n            i0.ɵɵelement(8, \"mat-slider-visual-thumb\", 7);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(6);\n            i0.ɵɵconditional(ctx.showTickMarks ? 6 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx._isRange ? 7 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"discrete\", ctx.discrete)(\"thumbPosition\", 2)(\"valueIndicatorText\", ctx.endValueIndicatorText);\n          }\n        },\n        dependencies: [MatSliderVisualThumb],\n        styles: [\".mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%;pointer-events:none;height:var(--mdc-slider-inactive-track-height)}.mdc-slider__track--active,.mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider__track--active{overflow:hidden;border-radius:var(--mdc-slider-active-track-shape, var(--mat-app-corner-full));height:var(--mdc-slider-active-track-height);top:calc((var(--mdc-slider-inactive-track-height) - var(--mdc-slider-active-track-height))/2)}.mdc-slider__track--active_fill{border-top-style:solid;box-sizing:border-box;height:100%;width:100%;position:relative;transform-origin:left;transition:transform 80ms ease;border-color:var(--mdc-slider-active-track-color, var(--mat-app-primary));border-top-width:var(--mdc-slider-active-track-height)}.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mat-app-on-surface))}[dir=rtl] .mdc-slider__track--active_fill{-webkit-transform-origin:right;transform-origin:right}.mdc-slider__track--inactive{left:0;top:0;opacity:.24;background-color:var(--mdc-slider-inactive-track-color, var(--mat-app-surface-variant));height:var(--mdc-slider-inactive-track-height);border-radius:var(--mdc-slider-inactive-track-shape, var(--mat-app-corner-full))}.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mat-app-on-surface));opacity:.24}.mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-slider__track--inactive::before{border-color:CanvasText}.mdc-slider__value-indicator-container{bottom:44px;left:50%;pointer-events:none;position:absolute;transform:translateX(-50%);transform:var(--mat-slider-value-indicator-container-transform)}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider__value-indicator{display:flex;align-items:center;border-radius:4px;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom;opacity:1;transition:transform 100ms cubic-bezier(0.4, 0, 1, 1);word-break:normal;background-color:var(--mdc-slider-label-container-color, var(--mat-app-primary));color:var(--mdc-slider-label-label-text-color, var(--mat-app-on-primary));width:var(--mat-slider-value-indicator-width);height:var(--mat-slider-value-indicator-height);padding:var(--mat-slider-value-indicator-padding);opacity:var(--mat-slider-value-indicator-opacity);border-radius:var(--mat-slider-value-indicator-border-radius)}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}.mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:50%;position:absolute;transform:translateX(-50%);width:0;display:var(--mat-slider-value-indicator-caret-display);border-top-color:var(--mdc-slider-label-container-color, var(--mat-app-primary))}.mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-slider__value-indicator::after{border-color:CanvasText}.mdc-slider__value-indicator-text{text-align:center;width:var(--mat-slider-value-indicator-width);transform:var(--mat-slider-value-indicator-text-transform);font-family:var(--mdc-slider-label-label-text-font, var(--mat-app-label-medium-font));font-size:var(--mdc-slider-label-label-text-size, var(--mat-app-label-medium-size));font-weight:var(--mdc-slider-label-label-text-weight, var(--mat-app-label-medium-weight));line-height:var(--mdc-slider-label-label-text-line-height, var(--mat-app-label-medium-line-height));letter-spacing:var(--mdc-slider-label-label-text-tracking, var(--mat-app-label-medium-tracking))}.mdc-slider__thumb{-webkit-user-select:none;user-select:none;display:flex;left:-24px;outline:none;position:absolute;height:48px;width:48px;pointer-events:none}.mdc-slider--discrete .mdc-slider__thumb{transition:transform 80ms ease}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__thumb--top{z-index:1}.mdc-slider__thumb-knob{position:absolute;box-sizing:border-box;left:50%;top:50%;transform:translate(-50%, -50%);border-style:solid;width:var(--mdc-slider-handle-width);height:var(--mdc-slider-handle-height);border-width:calc(var(--mdc-slider-handle-height)/2) calc(var(--mdc-slider-handle-width)/2);box-shadow:var(--mdc-slider-handle-elevation, var(--mat-app-level1));background-color:var(--mdc-slider-handle-color, var(--mat-app-primary));border-color:var(--mdc-slider-handle-color, var(--mat-app-primary));border-radius:var(--mdc-slider-handle-shape, var(--mat-app-corner-full))}.mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mat-app-primary));border-color:var(--mdc-slider-hover-handle-color, var(--mat-app-primary))}.mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mat-app-primary));border-color:var(--mdc-slider-focus-handle-color, var(--mat-app-primary))}.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mat-app-on-surface));border-color:var(--mdc-slider-disabled-handle-color, var(--mat-app-on-surface))}.mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border:solid 1px #fff;box-sizing:content-box;border-color:var(--mdc-slider-with-overlap-handle-outline-color, var(--mat-app-on-primary));border-width:var(--mdc-slider-with-overlap-handle-outline-width)}.mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider__tick-mark--active,.mdc-slider__tick-mark--inactive{width:var(--mdc-slider-with-tick-marks-container-size);height:var(--mdc-slider-with-tick-marks-container-size);border-radius:var(--mdc-slider-with-tick-marks-container-shape, var(--mat-app-corner-full))}.mdc-slider__tick-mark--inactive{opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity);background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mat-app-on-surface-variant))}.mdc-slider--disabled .mdc-slider__tick-mark--inactive{opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity);background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mat-app-on-surface))}.mdc-slider__tick-mark--active{opacity:var(--mdc-slider-with-tick-marks-active-container-opacity);background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mat-app-on-primary))}.mdc-slider__input{cursor:pointer;left:2px;margin:0;height:44px;opacity:0;position:absolute;top:2px;width:44px;box-sizing:content-box}.mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;cursor:pointer;height:48px;margin:0 8px;position:relative;touch-action:pan-y;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider.mdc-slider--disabled{cursor:auto;opacity:.38}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-slider-ripple-color, var(--mat-app-primary))}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-slider-hover-state-layer-color)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-slider-focus-state-layer-color)}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-mdc-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatSlider;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Ensures that there is not an invalid configuration for the slider thumb inputs. */\nfunction _validateInputs(isRange, endInputElement, startInputElement) {\n  const startValid = !isRange || startInputElement?._hostElement.hasAttribute('matSliderStartThumb');\n  const endValid = endInputElement?._hostElement.hasAttribute(isRange ? 'matSliderEndThumb' : 'matSliderThumb');\n  if (!startValid || !endValid) {\n    _throwInvalidInputConfigurationError();\n  }\n}\nfunction _throwInvalidInputConfigurationError() {\n  throw Error(`Invalid slider thumb input configuration!\n\n   Valid configurations are as follows:\n\n     <mat-slider>\n       <input matSliderThumb>\n     </mat-slider>\n\n     or\n\n     <mat-slider>\n       <input matSliderStartThumb>\n       <input matSliderEndThumb>\n     </mat-slider>\n   `);\n}\n\n/**\n * Provider that allows the slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatSliderThumb),\n  multi: true\n};\n/**\n * Provider that allows the range slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatSliderRangeThumb),\n  multi: true\n};\n/**\n * Directive that adds slider-specific behaviors to an input element inside `<mat-slider>`.\n * Up to two may be placed inside of a `<mat-slider>`.\n *\n * If one is used, the selector `matSliderThumb` must be used, and the outcome will be a normal\n * slider. If two are used, the selectors `matSliderStartThumb` and `matSliderEndThumb` must be\n * used, and the outcome will be a range slider with two slider thumbs.\n */\nlet MatSliderThumb = /*#__PURE__*/(() => {\n  class MatSliderThumb {\n    get value() {\n      return numberAttribute(this._hostElement.value, 0);\n    }\n    set value(value) {\n      value = isNaN(value) ? 0 : value;\n      const stringValue = value + '';\n      if (!this._hasSetInitialValue) {\n        this._initialValue = stringValue;\n        return;\n      }\n      if (this._isActive) {\n        return;\n      }\n      this._setValue(stringValue);\n    }\n    /**\n     * Handles programmatic value setting. This has been split out to\n     * allow the range thumb to override it and add additional necessary logic.\n     */\n    _setValue(value) {\n      this._hostElement.value = value;\n      this._updateThumbUIByValue();\n      this._slider._onValueChange(this);\n      this._cdr.detectChanges();\n      this._slider._cdr.markForCheck();\n    }\n    /**\n     * The current translateX in px of the slider visual thumb.\n     * @docs-private\n     */\n    get translateX() {\n      if (this._slider.min >= this._slider.max) {\n        this._translateX = this._tickMarkOffset;\n        return this._translateX;\n      }\n      if (this._translateX === undefined) {\n        this._translateX = this._calcTranslateXByValue();\n      }\n      return this._translateX;\n    }\n    set translateX(v) {\n      this._translateX = v;\n    }\n    /** @docs-private */\n    get min() {\n      return numberAttribute(this._hostElement.min, 0);\n    }\n    set min(v) {\n      this._hostElement.min = v + '';\n      this._cdr.detectChanges();\n    }\n    /** @docs-private */\n    get max() {\n      return numberAttribute(this._hostElement.max, 0);\n    }\n    set max(v) {\n      this._hostElement.max = v + '';\n      this._cdr.detectChanges();\n    }\n    get step() {\n      return numberAttribute(this._hostElement.step, 0);\n    }\n    set step(v) {\n      this._hostElement.step = v + '';\n      this._cdr.detectChanges();\n    }\n    /** @docs-private */\n    get disabled() {\n      return booleanAttribute(this._hostElement.disabled);\n    }\n    set disabled(v) {\n      this._hostElement.disabled = v;\n      this._cdr.detectChanges();\n      if (this._slider.disabled !== this.disabled) {\n        this._slider.disabled = this.disabled;\n      }\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percentage() {\n      if (this._slider.min >= this._slider.max) {\n        return this._slider._isRtl ? 1 : 0;\n      }\n      return (this.value - this._slider.min) / (this._slider.max - this._slider.min);\n    }\n    /** @docs-private */\n    get fillPercentage() {\n      if (!this._slider._cachedWidth) {\n        return this._slider._isRtl ? 1 : 0;\n      }\n      if (this._translateX === 0) {\n        return 0;\n      }\n      return this.translateX / this._slider._cachedWidth;\n    }\n    /** Used to relay updates to _isFocused to the slider visual thumbs. */\n    _setIsFocused(v) {\n      this._isFocused = v;\n    }\n    constructor(_ngZone, _elementRef, _cdr, _slider) {\n      this._ngZone = _ngZone;\n      this._elementRef = _elementRef;\n      this._cdr = _cdr;\n      this._slider = _slider;\n      /** Event emitted when the `value` is changed. */\n      this.valueChange = new EventEmitter();\n      /** Event emitted when the slider thumb starts being dragged. */\n      this.dragStart = new EventEmitter();\n      /** Event emitted when the slider thumb stops being dragged. */\n      this.dragEnd = new EventEmitter();\n      /**\n       * Indicates whether this thumb is the start or end thumb.\n       * @docs-private\n       */\n      this.thumbPosition = _MatThumb.END;\n      /** The aria-valuetext string representation of the input's value. */\n      this._valuetext = signal('');\n      /** The radius of a native html slider's knob. */\n      this._knobRadius = 8;\n      /** The distance in px from the start of the slider track to the first tick mark. */\n      this._tickMarkOffset = 3;\n      /** Whether user's cursor is currently in a mouse down state on the input. */\n      this._isActive = false;\n      /** Whether the input is currently focused (either by tab or after clicking). */\n      this._isFocused = false;\n      /**\n       * Whether the initial value has been set.\n       * This exists because the initial value cannot be immediately set because the min and max\n       * must first be relayed from the parent MatSlider component, which can only happen later\n       * in the component lifecycle.\n       */\n      this._hasSetInitialValue = false;\n      /** Emits when the component is destroyed. */\n      this._destroyed = new Subject();\n      /**\n       * Indicates whether UI updates should be skipped.\n       *\n       * This flag is used to avoid flickering\n       * when correcting values on pointer up/down.\n       */\n      this._skipUIUpdate = false;\n      /** Callback called when the slider input has been touched. */\n      this._onTouchedFn = () => {};\n      /**\n       * Whether the NgModel has been initialized.\n       *\n       * This flag is used to ignore ghost null calls to\n       * writeValue which can break slider initialization.\n       *\n       * See https://github.com/angular/angular/issues/14988.\n       */\n      this._isControlInitialized = false;\n      this._platform = inject(Platform);\n      this._hostElement = _elementRef.nativeElement;\n      this._ngZone.runOutsideAngular(() => {\n        this._hostElement.addEventListener('pointerdown', this._onPointerDown.bind(this));\n        this._hostElement.addEventListener('pointermove', this._onPointerMove.bind(this));\n        this._hostElement.addEventListener('pointerup', this._onPointerUp.bind(this));\n      });\n    }\n    ngOnDestroy() {\n      this._hostElement.removeEventListener('pointerdown', this._onPointerDown);\n      this._hostElement.removeEventListener('pointermove', this._onPointerMove);\n      this._hostElement.removeEventListener('pointerup', this._onPointerUp);\n      this._destroyed.next();\n      this._destroyed.complete();\n      this.dragStart.complete();\n      this.dragEnd.complete();\n    }\n    /** @docs-private */\n    initProps() {\n      this._updateWidthInactive();\n      // If this or the parent slider is disabled, just make everything disabled.\n      if (this.disabled !== this._slider.disabled) {\n        // The MatSlider setter for disabled will relay this and disable both inputs.\n        this._slider.disabled = true;\n      }\n      this.step = this._slider.step;\n      this.min = this._slider.min;\n      this.max = this._slider.max;\n      this._initValue();\n    }\n    /** @docs-private */\n    initUI() {\n      this._updateThumbUIByValue();\n    }\n    _initValue() {\n      this._hasSetInitialValue = true;\n      if (this._initialValue === undefined) {\n        this.value = this._getDefaultValue();\n      } else {\n        this._hostElement.value = this._initialValue;\n        this._updateThumbUIByValue();\n        this._slider._onValueChange(this);\n        this._cdr.detectChanges();\n      }\n    }\n    _getDefaultValue() {\n      return this.min;\n    }\n    _onBlur() {\n      this._setIsFocused(false);\n      this._onTouchedFn();\n    }\n    _onFocus() {\n      this._slider._setTransition(false);\n      this._slider._updateTrackUI(this);\n      this._setIsFocused(true);\n    }\n    _onChange() {\n      this.valueChange.emit(this.value);\n      // only used to handle the edge case where user\n      // mousedown on the slider then uses arrow keys.\n      if (this._isActive) {\n        this._updateThumbUIByValue({\n          withAnimation: true\n        });\n      }\n    }\n    _onInput() {\n      this._onChangeFn?.(this.value);\n      // handles arrowing and updating the value when\n      // a step is defined.\n      if (this._slider.step || !this._isActive) {\n        this._updateThumbUIByValue({\n          withAnimation: true\n        });\n      }\n      this._slider._onValueChange(this);\n    }\n    _onNgControlValueChange() {\n      // only used to handle when the value change\n      // originates outside of the slider.\n      if (!this._isActive || !this._isFocused) {\n        this._slider._onValueChange(this);\n        this._updateThumbUIByValue();\n      }\n      this._slider.disabled = this._formControl.disabled;\n    }\n    _onPointerDown(event) {\n      if (this.disabled || event.button !== 0) {\n        return;\n      }\n      // On IOS, dragging only works if the pointer down happens on the\n      // slider thumb and the slider does not receive focus from pointer events.\n      if (this._platform.IOS) {\n        const isCursorOnSliderThumb = this._slider._isCursorOnSliderThumb(event, this._slider._getThumb(this.thumbPosition)._hostElement.getBoundingClientRect());\n        this._isActive = isCursorOnSliderThumb;\n        this._updateWidthActive();\n        this._slider._updateDimensions();\n        return;\n      }\n      this._isActive = true;\n      this._setIsFocused(true);\n      this._updateWidthActive();\n      this._slider._updateDimensions();\n      // Does nothing if a step is defined because we\n      // want the value to snap to the values on input.\n      if (!this._slider.step) {\n        this._updateThumbUIByPointerEvent(event, {\n          withAnimation: true\n        });\n      }\n      if (!this.disabled) {\n        this._handleValueCorrection(event);\n        this.dragStart.emit({\n          source: this,\n          parent: this._slider,\n          value: this.value\n        });\n      }\n    }\n    /**\n     * Corrects the value of the slider on pointer up/down.\n     *\n     * Called on pointer down and up because the value is set based\n     * on the inactive width instead of the active width.\n     */\n    _handleValueCorrection(event) {\n      // Don't update the UI with the current value! The value on pointerdown\n      // and pointerup is calculated in the split second before the input(s)\n      // resize. See _updateWidthInactive() and _updateWidthActive() for more\n      // details.\n      this._skipUIUpdate = true;\n      // Note that this function gets triggered before the actual value of the\n      // slider is updated. This means if we were to set the value here, it\n      // would immediately be overwritten. Using setTimeout ensures the setting\n      // of the value happens after the value has been updated by the\n      // pointerdown event.\n      setTimeout(() => {\n        this._skipUIUpdate = false;\n        this._fixValue(event);\n      }, 0);\n    }\n    /** Corrects the value of the slider based on the pointer event's position. */\n    _fixValue(event) {\n      const xPos = event.clientX - this._slider._cachedLeft;\n      const width = this._slider._cachedWidth;\n      const step = this._slider.step === 0 ? 1 : this._slider.step;\n      const numSteps = Math.floor((this._slider.max - this._slider.min) / step);\n      const percentage = this._slider._isRtl ? 1 - xPos / width : xPos / width;\n      // To ensure the percentage is rounded to the necessary number of decimals.\n      const fixedPercentage = Math.round(percentage * numSteps) / numSteps;\n      const impreciseValue = fixedPercentage * (this._slider.max - this._slider.min) + this._slider.min;\n      const value = Math.round(impreciseValue / step) * step;\n      const prevValue = this.value;\n      if (value === prevValue) {\n        // Because we prevented UI updates, if it turns out that the race\n        // condition didn't happen and the value is already correct, we\n        // have to apply the ui updates now.\n        this._slider._onValueChange(this);\n        this._slider.step > 0 ? this._updateThumbUIByValue() : this._updateThumbUIByPointerEvent(event, {\n          withAnimation: this._slider._hasAnimation\n        });\n        return;\n      }\n      this.value = value;\n      this.valueChange.emit(this.value);\n      this._onChangeFn?.(this.value);\n      this._slider._onValueChange(this);\n      this._slider.step > 0 ? this._updateThumbUIByValue() : this._updateThumbUIByPointerEvent(event, {\n        withAnimation: this._slider._hasAnimation\n      });\n    }\n    _onPointerMove(event) {\n      // Again, does nothing if a step is defined because\n      // we want the value to snap to the values on input.\n      if (!this._slider.step && this._isActive) {\n        this._updateThumbUIByPointerEvent(event);\n      }\n    }\n    _onPointerUp() {\n      if (this._isActive) {\n        this._isActive = false;\n        if (this._platform.SAFARI) {\n          this._setIsFocused(false);\n        }\n        this.dragEnd.emit({\n          source: this,\n          parent: this._slider,\n          value: this.value\n        });\n        // This setTimeout is to prevent the pointerup from triggering a value\n        // change on the input based on the inactive width. It's not clear why\n        // but for some reason on IOS this race condition is even more common so\n        // the timeout needs to be increased.\n        setTimeout(() => this._updateWidthInactive(), this._platform.IOS ? 10 : 0);\n      }\n    }\n    _clamp(v) {\n      const min = this._tickMarkOffset;\n      const max = this._slider._cachedWidth - this._tickMarkOffset;\n      return Math.max(Math.min(v, max), min);\n    }\n    _calcTranslateXByValue() {\n      if (this._slider._isRtl) {\n        return (1 - this.percentage) * (this._slider._cachedWidth - this._tickMarkOffset * 2) + this._tickMarkOffset;\n      }\n      return this.percentage * (this._slider._cachedWidth - this._tickMarkOffset * 2) + this._tickMarkOffset;\n    }\n    _calcTranslateXByPointerEvent(event) {\n      return event.clientX - this._slider._cachedLeft;\n    }\n    /**\n     * Used to set the slider width to the correct\n     * dimensions while the user is dragging.\n     */\n    _updateWidthActive() {}\n    /**\n     * Sets the slider input to disproportionate dimensions to allow for touch\n     * events to be captured on touch devices.\n     */\n    _updateWidthInactive() {\n      this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n      this._hostElement.style.width = `calc(100% + ${this._slider._inputPadding - this._tickMarkOffset * 2}px)`;\n      this._hostElement.style.left = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n    }\n    _updateThumbUIByValue(options) {\n      this.translateX = this._clamp(this._calcTranslateXByValue());\n      this._updateThumbUI(options);\n    }\n    _updateThumbUIByPointerEvent(event, options) {\n      this.translateX = this._clamp(this._calcTranslateXByPointerEvent(event));\n      this._updateThumbUI(options);\n    }\n    _updateThumbUI(options) {\n      this._slider._setTransition(!!options?.withAnimation);\n      this._slider._onTranslateXChange(this);\n    }\n    /**\n     * Sets the input's value.\n     * @param value The new value of the input\n     * @docs-private\n     */\n    writeValue(value) {\n      if (this._isControlInitialized || value !== null) {\n        this.value = value;\n      }\n    }\n    /**\n     * Registers a callback to be invoked when the input's value changes from user input.\n     * @param fn The callback to register\n     * @docs-private\n     */\n    registerOnChange(fn) {\n      this._onChangeFn = fn;\n      this._isControlInitialized = true;\n    }\n    /**\n     * Registers a callback to be invoked when the input is blurred by the user.\n     * @param fn The callback to register\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n      this._onTouchedFn = fn;\n    }\n    /**\n     * Sets the disabled state of the slider.\n     * @param isDisabled The new disabled state\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    focus() {\n      this._hostElement.focus();\n    }\n    blur() {\n      this._hostElement.blur();\n    }\n    static {\n      this.ɵfac = function MatSliderThumb_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatSliderThumb)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_SLIDER));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatSliderThumb,\n        selectors: [[\"input\", \"matSliderThumb\", \"\"]],\n        hostAttrs: [\"type\", \"range\", 1, \"mdc-slider__input\"],\n        hostVars: 1,\n        hostBindings: function MatSliderThumb_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"change\", function MatSliderThumb_change_HostBindingHandler() {\n              return ctx._onChange();\n            })(\"input\", function MatSliderThumb_input_HostBindingHandler() {\n              return ctx._onInput();\n            })(\"blur\", function MatSliderThumb_blur_HostBindingHandler() {\n              return ctx._onBlur();\n            })(\"focus\", function MatSliderThumb_focus_HostBindingHandler() {\n              return ctx._onFocus();\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-valuetext\", ctx._valuetext());\n          }\n        },\n        inputs: {\n          value: [2, \"value\", \"value\", numberAttribute]\n        },\n        outputs: {\n          valueChange: \"valueChange\",\n          dragStart: \"dragStart\",\n          dragEnd: \"dragEnd\"\n        },\n        exportAs: [\"matSliderThumb\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_SLIDER_THUMB_VALUE_ACCESSOR, {\n          provide: MAT_SLIDER_THUMB,\n          useExisting: MatSliderThumb\n        }]), i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return MatSliderThumb;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSliderRangeThumb = /*#__PURE__*/(() => {\n  class MatSliderRangeThumb extends MatSliderThumb {\n    /** @docs-private */\n    getSibling() {\n      if (!this._sibling) {\n        this._sibling = this._slider._getInput(this._isEndThumb ? _MatThumb.START : _MatThumb.END);\n      }\n      return this._sibling;\n    }\n    /**\n     * Returns the minimum translateX position allowed for this slider input's visual thumb.\n     * @docs-private\n     */\n    getMinPos() {\n      const sibling = this.getSibling();\n      if (!this._isLeftThumb && sibling) {\n        return sibling.translateX;\n      }\n      return this._tickMarkOffset;\n    }\n    /**\n     * Returns the maximum translateX position allowed for this slider input's visual thumb.\n     * @docs-private\n     */\n    getMaxPos() {\n      const sibling = this.getSibling();\n      if (this._isLeftThumb && sibling) {\n        return sibling.translateX;\n      }\n      return this._slider._cachedWidth - this._tickMarkOffset;\n    }\n    _setIsLeftThumb() {\n      this._isLeftThumb = this._isEndThumb && this._slider._isRtl || !this._isEndThumb && !this._slider._isRtl;\n    }\n    constructor(_ngZone, _slider, _elementRef, _cdr) {\n      super(_ngZone, _elementRef, _cdr, _slider);\n      this._cdr = _cdr;\n      this._isEndThumb = this._hostElement.hasAttribute('matSliderEndThumb');\n      this._setIsLeftThumb();\n      this.thumbPosition = this._isEndThumb ? _MatThumb.END : _MatThumb.START;\n    }\n    _getDefaultValue() {\n      return this._isEndThumb && this._slider._isRange ? this.max : this.min;\n    }\n    _onInput() {\n      super._onInput();\n      this._updateSibling();\n      if (!this._isActive) {\n        this._updateWidthInactive();\n      }\n    }\n    _onNgControlValueChange() {\n      super._onNgControlValueChange();\n      this.getSibling()?._updateMinMax();\n    }\n    _onPointerDown(event) {\n      if (this.disabled || event.button !== 0) {\n        return;\n      }\n      if (this._sibling) {\n        this._sibling._updateWidthActive();\n        this._sibling._hostElement.classList.add('mat-mdc-slider-input-no-pointer-events');\n      }\n      super._onPointerDown(event);\n    }\n    _onPointerUp() {\n      super._onPointerUp();\n      if (this._sibling) {\n        setTimeout(() => {\n          this._sibling._updateWidthInactive();\n          this._sibling._hostElement.classList.remove('mat-mdc-slider-input-no-pointer-events');\n        });\n      }\n    }\n    _onPointerMove(event) {\n      super._onPointerMove(event);\n      if (!this._slider.step && this._isActive) {\n        this._updateSibling();\n      }\n    }\n    _fixValue(event) {\n      super._fixValue(event);\n      this._sibling?._updateMinMax();\n    }\n    _clamp(v) {\n      return Math.max(Math.min(v, this.getMaxPos()), this.getMinPos());\n    }\n    _updateMinMax() {\n      const sibling = this.getSibling();\n      if (!sibling) {\n        return;\n      }\n      if (this._isEndThumb) {\n        this.min = Math.max(this._slider.min, sibling.value);\n        this.max = this._slider.max;\n      } else {\n        this.min = this._slider.min;\n        this.max = Math.min(this._slider.max, sibling.value);\n      }\n    }\n    _updateWidthActive() {\n      const minWidth = this._slider._rippleRadius * 2 - this._slider._inputPadding * 2;\n      const maxWidth = this._slider._cachedWidth + this._slider._inputPadding - minWidth - this._tickMarkOffset * 2;\n      const percentage = this._slider.min < this._slider.max ? (this.max - this.min) / (this._slider.max - this._slider.min) : 1;\n      const width = maxWidth * percentage + minWidth;\n      this._hostElement.style.width = `${width}px`;\n      this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n    }\n    _updateWidthInactive() {\n      const sibling = this.getSibling();\n      if (!sibling) {\n        return;\n      }\n      const maxWidth = this._slider._cachedWidth - this._tickMarkOffset * 2;\n      const midValue = this._isEndThumb ? this.value - (this.value - sibling.value) / 2 : this.value + (sibling.value - this.value) / 2;\n      const _percentage = this._isEndThumb ? (this.max - midValue) / (this._slider.max - this._slider.min) : (midValue - this.min) / (this._slider.max - this._slider.min);\n      const percentage = this._slider.min < this._slider.max ? _percentage : 1;\n      // Extend the native input width by the radius of the ripple\n      let ripplePadding = this._slider._rippleRadius;\n      // If one of the inputs is maximally sized (the value of both thumbs is\n      // equal to the min or max), make that input take up all of the width and\n      // make the other unselectable.\n      if (percentage === 1) {\n        ripplePadding = 48;\n      } else if (percentage === 0) {\n        ripplePadding = 0;\n      }\n      const width = maxWidth * percentage + ripplePadding;\n      this._hostElement.style.width = `${width}px`;\n      this._hostElement.style.padding = '0px';\n      if (this._isLeftThumb) {\n        this._hostElement.style.left = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n        this._hostElement.style.right = 'auto';\n      } else {\n        this._hostElement.style.left = 'auto';\n        this._hostElement.style.right = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n      }\n    }\n    _updateStaticStyles() {\n      this._hostElement.classList.toggle('mat-slider__right-input', !this._isLeftThumb);\n    }\n    _updateSibling() {\n      const sibling = this.getSibling();\n      if (!sibling) {\n        return;\n      }\n      sibling._updateMinMax();\n      if (this._isActive) {\n        sibling._updateWidthActive();\n      } else {\n        sibling._updateWidthInactive();\n      }\n    }\n    /**\n     * Sets the input's value.\n     * @param value The new value of the input\n     * @docs-private\n     */\n    writeValue(value) {\n      if (this._isControlInitialized || value !== null) {\n        this.value = value;\n        this._updateWidthInactive();\n        this._updateSibling();\n      }\n    }\n    _setValue(value) {\n      super._setValue(value);\n      this._updateWidthInactive();\n      this._updateSibling();\n    }\n    static {\n      this.ɵfac = function MatSliderRangeThumb_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatSliderRangeThumb)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(MAT_SLIDER), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatSliderRangeThumb,\n        selectors: [[\"input\", \"matSliderStartThumb\", \"\"], [\"input\", \"matSliderEndThumb\", \"\"]],\n        exportAs: [\"matSliderRangeThumb\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR, {\n          provide: MAT_SLIDER_RANGE_THUMB,\n          useExisting: MatSliderRangeThumb\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatSliderRangeThumb;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSliderModule = /*#__PURE__*/(() => {\n  class MatSliderModule {\n    static {\n      this.ɵfac = function MatSliderModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatSliderModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatSliderModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, MatRippleModule]\n      });\n    }\n  }\n  return MatSliderModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatSlider, MatSliderChange, MatSliderModule, MatSliderRangeThumb, MatSliderThumb, MatSliderVisualThumb };\n","import nls from \"../resources/nls/generic\";\nimport { FormFields } from \"./form.interfaces\";\n\nexport const addFieldFormFields: FormFields[] = [\n  {\n    name: \"fieldName\",\n    label: nls.fieldName,\n    required: true,\n    type: \"text\",\n    pattern: '^(?=.{1,18}$)[A-Za-z][A-Za-z\\' \\\\-]*[A-Za-z]$',\n    maxlength: 20,\n    errorMessage: [\n      {\n        type: 'pattern',\n        message: nls.FieldNameInvlaid\n      }\n    ]\n  }, {\n    name: \"fieldType\",\n    label: nls.fieldType,\n    required: true,\n    type: 'select',\n    options: [\n      {\n        label: 'TEXT',\n        value: 'text',\n      },\n      {\n        label: 'NUMBER',\n        value: 'number',\n      },\n    ],\n  }]","import { CdkMonitorFocus, CdkTrapFocus, A11yModule } from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/overlay';\nimport { Overlay, FlexibleConnectedPositionStrategy, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal, CdkPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { NgClass, DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, EventEmitter, Injector, afterNextRender, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, Optional, SkipSelf, InjectionToken, Inject, ViewChild, forwardRef, ChangeDetectorRef, booleanAttribute, Directive, signal, Attribute, ContentChild, Self, TemplateRef, NgModule } from '@angular/core';\nimport { MatButton, MatIconButton, MatButtonModule } from '@angular/material/button';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i1 from '@angular/material/core';\nimport { DateAdapter, MAT_DATE_FORMATS, _ErrorStateTracker, MatCommonModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey, SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, BACKSPACE } from '@angular/cdk/keycodes';\nimport * as i2 from '@angular/cdk/bidi';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { normalizePassiveListenerOptions, Platform, _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { startWith, take, filter } from 'rxjs/operators';\nimport { coerceStringArray } from '@angular/cdk/coercion';\nimport { trigger, transition, animate, keyframes, style, state } from '@angular/animations';\nimport * as i2$1 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators, NgControl } from '@angular/forms';\nimport { MAT_FORM_FIELD, MatFormFieldControl } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\n\n/** @docs-private */\nconst _c0 = [\"mat-calendar-body\", \"\"];\nfunction _forTrack0($index, $item) {\n  return this._trackRow($item);\n}\nconst _forTrack1 = ($index, $item) => $item.id;\nfunction MatCalendarBody_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 0)(1, \"td\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    i0.ɵɵattribute(\"colspan\", ctx_r0.numCols);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.label, \" \");\n  }\n}\nfunction MatCalendarBody_For_2_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    i0.ɵɵattribute(\"colspan\", ctx_r0._firstRowOffset);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0._firstRowOffset >= ctx_r0.labelMinRequiredCells ? ctx_r0.label : \"\", \" \");\n  }\n}\nfunction MatCalendarBody_For_2_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 6)(1, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function MatCalendarBody_For_2_For_3_Template_button_click_1_listener($event) {\n      const item_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0._cellClicked(item_r3, $event));\n    })(\"focus\", function MatCalendarBody_For_2_For_3_Template_button_focus_1_listener($event) {\n      const item_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0._emitActiveDateChange(item_r3, $event));\n    });\n    i0.ɵɵelementStart(2, \"span\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"span\", 9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ɵ$index_14_r4 = ctx.$index;\n    const ɵ$index_7_r5 = i0.ɵɵnextContext().$index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"width\", ctx_r0._cellWidth)(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    i0.ɵɵattribute(\"data-mat-row\", ɵ$index_7_r5)(\"data-mat-col\", ɵ$index_14_r4);\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r3.enabled)(\"mat-calendar-body-active\", ctx_r0._isActiveCell(ɵ$index_7_r5, ɵ$index_14_r4))(\"mat-calendar-body-range-start\", ctx_r0._isRangeStart(item_r3.compareValue))(\"mat-calendar-body-range-end\", ctx_r0._isRangeEnd(item_r3.compareValue))(\"mat-calendar-body-in-range\", ctx_r0._isInRange(item_r3.compareValue))(\"mat-calendar-body-comparison-bridge-start\", ctx_r0._isComparisonBridgeStart(item_r3.compareValue, ɵ$index_7_r5, ɵ$index_14_r4))(\"mat-calendar-body-comparison-bridge-end\", ctx_r0._isComparisonBridgeEnd(item_r3.compareValue, ɵ$index_7_r5, ɵ$index_14_r4))(\"mat-calendar-body-comparison-start\", ctx_r0._isComparisonStart(item_r3.compareValue))(\"mat-calendar-body-comparison-end\", ctx_r0._isComparisonEnd(item_r3.compareValue))(\"mat-calendar-body-in-comparison-range\", ctx_r0._isInComparisonRange(item_r3.compareValue))(\"mat-calendar-body-preview-start\", ctx_r0._isPreviewStart(item_r3.compareValue))(\"mat-calendar-body-preview-end\", ctx_r0._isPreviewEnd(item_r3.compareValue))(\"mat-calendar-body-in-preview\", ctx_r0._isInPreview(item_r3.compareValue));\n    i0.ɵɵproperty(\"ngClass\", item_r3.cssClasses)(\"tabindex\", ctx_r0._isActiveCell(ɵ$index_7_r5, ɵ$index_14_r4) ? 0 : -1);\n    i0.ɵɵattribute(\"aria-label\", item_r3.ariaLabel)(\"aria-disabled\", !item_r3.enabled || null)(\"aria-pressed\", ctx_r0._isSelected(item_r3.compareValue))(\"aria-current\", ctx_r0.todayValue === item_r3.compareValue ? \"date\" : null)(\"aria-describedby\", ctx_r0._getDescribedby(item_r3.compareValue));\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r0._isSelected(item_r3.compareValue))(\"mat-calendar-body-comparison-identical\", ctx_r0._isComparisonIdentical(item_r3.compareValue))(\"mat-calendar-body-today\", ctx_r0.todayValue === item_r3.compareValue);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", item_r3.displayValue, \" \");\n  }\n}\nfunction MatCalendarBody_For_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 1);\n    i0.ɵɵtemplate(1, MatCalendarBody_For_2_Conditional_1_Template, 2, 6, \"td\", 4);\n    i0.ɵɵrepeaterCreate(2, MatCalendarBody_For_2_For_3_Template, 5, 48, \"td\", 5, _forTrack1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r6 = ctx.$implicit;\n    const ɵ$index_7_r5 = ctx.$index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ɵ$index_7_r5 === 0 && ctx_r0._firstRowOffset ? 1 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵrepeater(row_r6);\n  }\n}\nfunction MatMonthView_For_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 2)(1, \"span\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 3);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const day_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(day_r1.long);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(day_r1.narrow);\n  }\n}\nconst _c1 = [\"*\"];\nfunction MatCalendar_ng_template_0_Template(rf, ctx) {}\nfunction MatCalendar_Case_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-month-view\", 4);\n    i0.ɵɵtwoWayListener(\"activeDateChange\", function MatCalendar_Case_2_Template_mat_month_view_activeDateChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.activeDate, $event) || (ctx_r1.activeDate = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"_userSelection\", function MatCalendar_Case_2_Template_mat_month_view__userSelection_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._dateSelected($event));\n    })(\"dragStarted\", function MatCalendar_Case_2_Template_mat_month_view_dragStarted_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._dragStarted($event));\n    })(\"dragEnded\", function MatCalendar_Case_2_Template_mat_month_view_dragEnded_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._dragEnded($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtwoWayProperty(\"activeDate\", ctx_r1.activeDate);\n    i0.ɵɵproperty(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass)(\"comparisonStart\", ctx_r1.comparisonStart)(\"comparisonEnd\", ctx_r1.comparisonEnd)(\"startDateAccessibleName\", ctx_r1.startDateAccessibleName)(\"endDateAccessibleName\", ctx_r1.endDateAccessibleName)(\"activeDrag\", ctx_r1._activeDrag);\n  }\n}\nfunction MatCalendar_Case_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-year-view\", 5);\n    i0.ɵɵtwoWayListener(\"activeDateChange\", function MatCalendar_Case_3_Template_mat_year_view_activeDateChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.activeDate, $event) || (ctx_r1.activeDate = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"monthSelected\", function MatCalendar_Case_3_Template_mat_year_view_monthSelected_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._monthSelectedInYearView($event));\n    })(\"selectedChange\", function MatCalendar_Case_3_Template_mat_year_view_selectedChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._goToDateInView($event, \"month\"));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtwoWayProperty(\"activeDate\", ctx_r1.activeDate);\n    i0.ɵɵproperty(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass);\n  }\n}\nfunction MatCalendar_Case_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-multi-year-view\", 6);\n    i0.ɵɵtwoWayListener(\"activeDateChange\", function MatCalendar_Case_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.activeDate, $event) || (ctx_r1.activeDate = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"yearSelected\", function MatCalendar_Case_4_Template_mat_multi_year_view_yearSelected_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._yearSelectedInMultiYearView($event));\n    })(\"selectedChange\", function MatCalendar_Case_4_Template_mat_multi_year_view_selectedChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._goToDateInView($event, \"year\"));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtwoWayProperty(\"activeDate\", ctx_r1.activeDate);\n    i0.ɵɵproperty(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass);\n  }\n}\nfunction MatDatepickerContent_ng_template_2_Template(rf, ctx) {}\nconst _c2 = [\"button\"];\nconst _c3 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c4 = [\"[matDatepickerToggleIcon]\"];\nfunction MatDatepickerToggle_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 2);\n    i0.ɵɵelement(1, \"path\", 3);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c5 = [[[\"input\", \"matStartDate\", \"\"]], [[\"input\", \"matEndDate\", \"\"]]];\nconst _c6 = [\"input[matStartDate]\", \"input[matEndDate]\"];\nfunction MatDatepickerActions_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction createMissingDateImplError(provider) {\n  return Error(`MatDatepicker: No provider found for ${provider}. You must add one of the following ` + `to your app config: provideNativeDateAdapter, provideDateFnsAdapter, ` + `provideLuxonDateAdapter, provideMomentDateAdapter, or provide a custom implementation.`);\n}\n\n/** Datepicker data that requires internationalization. */\nlet MatDatepickerIntl = /*#__PURE__*/(() => {\n  class MatDatepickerIntl {\n    constructor() {\n      /**\n       * Stream that emits whenever the labels here are changed. Use this to notify\n       * components if the labels have changed after initialization.\n       */\n      this.changes = new Subject();\n      /** A label for the calendar popup (used by screen readers). */\n      this.calendarLabel = 'Calendar';\n      /** A label for the button used to open the calendar popup (used by screen readers). */\n      this.openCalendarLabel = 'Open calendar';\n      /** Label for the button used to close the calendar popup. */\n      this.closeCalendarLabel = 'Close calendar';\n      /** A label for the previous month button (used by screen readers). */\n      this.prevMonthLabel = 'Previous month';\n      /** A label for the next month button (used by screen readers). */\n      this.nextMonthLabel = 'Next month';\n      /** A label for the previous year button (used by screen readers). */\n      this.prevYearLabel = 'Previous year';\n      /** A label for the next year button (used by screen readers). */\n      this.nextYearLabel = 'Next year';\n      /** A label for the previous multi-year button (used by screen readers). */\n      this.prevMultiYearLabel = 'Previous 24 years';\n      /** A label for the next multi-year button (used by screen readers). */\n      this.nextMultiYearLabel = 'Next 24 years';\n      /** A label for the 'switch to month view' button (used by screen readers). */\n      this.switchToMonthViewLabel = 'Choose date';\n      /** A label for the 'switch to year view' button (used by screen readers). */\n      this.switchToMultiYearViewLabel = 'Choose month and year';\n      /**\n       * A label for the first date of a range of dates (used by screen readers).\n       * @deprecated Provide your own internationalization string.\n       * @breaking-change 17.0.0\n       */\n      this.startDateLabel = 'Start date';\n      /**\n       * A label for the last date of a range of dates (used by screen readers).\n       * @deprecated Provide your own internationalization string.\n       * @breaking-change 17.0.0\n       */\n      this.endDateLabel = 'End date';\n    }\n    /** Formats a range of years (used for visuals). */\n    formatYearRange(start, end) {\n      return `${start} \\u2013 ${end}`;\n    }\n    /** Formats a label for a range of years (used by screen readers). */\n    formatYearRangeLabel(start, end) {\n      return `${start} to ${end}`;\n    }\n    static {\n      this.ɵfac = function MatDatepickerIntl_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatDatepickerIntl)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MatDatepickerIntl,\n        factory: MatDatepickerIntl.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return MatDatepickerIntl;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet uniqueIdCounter$1 = 0;\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nclass MatCalendarCell {\n  constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}, compareValue = value, rawValue) {\n    this.value = value;\n    this.displayValue = displayValue;\n    this.ariaLabel = ariaLabel;\n    this.enabled = enabled;\n    this.cssClasses = cssClasses;\n    this.compareValue = compareValue;\n    this.rawValue = rawValue;\n    this.id = uniqueIdCounter$1++;\n  }\n}\nlet calendarBodyId = 1;\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: false,\n  capture: true\n});\n/** Event options that can be used to bind a passive, capturing event. */\nconst passiveCapturingEventOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/** Event options that can be used to bind a passive, non-capturing event. */\nconst passiveEventOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\nlet MatCalendarBody = /*#__PURE__*/(() => {\n  class MatCalendarBody {\n    ngAfterViewChecked() {\n      if (this._focusActiveCellAfterViewChecked) {\n        this._focusActiveCell();\n        this._focusActiveCellAfterViewChecked = false;\n      }\n    }\n    constructor(_elementRef, _ngZone) {\n      this._elementRef = _elementRef;\n      this._ngZone = _ngZone;\n      this._platform = inject(Platform);\n      /**\n       * Used to focus the active cell after change detection has run.\n       */\n      this._focusActiveCellAfterViewChecked = false;\n      /** The number of columns in the table. */\n      this.numCols = 7;\n      /** The cell number of the active cell in the table. */\n      this.activeCell = 0;\n      /** Whether a range is being selected. */\n      this.isRange = false;\n      /**\n       * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n       * maintained even as the table resizes.\n       */\n      this.cellAspectRatio = 1;\n      /** Start of the preview range. */\n      this.previewStart = null;\n      /** End of the preview range. */\n      this.previewEnd = null;\n      /** Emits when a new value is selected. */\n      this.selectedValueChange = new EventEmitter();\n      /** Emits when the preview has changed as a result of a user action. */\n      this.previewChange = new EventEmitter();\n      this.activeDateChange = new EventEmitter();\n      /** Emits the date at the possible start of a drag event. */\n      this.dragStarted = new EventEmitter();\n      /** Emits the date at the conclusion of a drag, or null if mouse was not released on a date. */\n      this.dragEnded = new EventEmitter();\n      this._didDragSinceMouseDown = false;\n      this._injector = inject(Injector);\n      /**\n       * Tracking function for rows based on their identity. Ideally we would use some sort of\n       * key on the row, but that would require a breaking change for the `rows` input. We don't\n       * use the built-in identity tracking, because it logs warnings.\n       */\n      this._trackRow = row => row;\n      /**\n       * Event handler for when the user enters an element\n       * inside the calendar body (e.g. by hovering in or focus).\n       */\n      this._enterHandler = event => {\n        if (this._skipNextFocus && event.type === 'focus') {\n          this._skipNextFocus = false;\n          return;\n        }\n        // We only need to hit the zone when we're selecting a range.\n        if (event.target && this.isRange) {\n          const cell = this._getCellFromElement(event.target);\n          if (cell) {\n            this._ngZone.run(() => this.previewChange.emit({\n              value: cell.enabled ? cell : null,\n              event\n            }));\n          }\n        }\n      };\n      this._touchmoveHandler = event => {\n        if (!this.isRange) return;\n        const target = getActualTouchTarget(event);\n        const cell = target ? this._getCellFromElement(target) : null;\n        if (target !== event.target) {\n          this._didDragSinceMouseDown = true;\n        }\n        // If the initial target of the touch is a date cell, prevent default so\n        // that the move is not handled as a scroll.\n        if (getCellElement(event.target)) {\n          event.preventDefault();\n        }\n        this._ngZone.run(() => this.previewChange.emit({\n          value: cell?.enabled ? cell : null,\n          event\n        }));\n      };\n      /**\n       * Event handler for when the user's pointer leaves an element\n       * inside the calendar body (e.g. by hovering out or blurring).\n       */\n      this._leaveHandler = event => {\n        // We only need to hit the zone when we're selecting a range.\n        if (this.previewEnd !== null && this.isRange) {\n          if (event.type !== 'blur') {\n            this._didDragSinceMouseDown = true;\n          }\n          // Only reset the preview end value when leaving cells. This looks better, because\n          // we have a gap between the cells and the rows and we don't want to remove the\n          // range just for it to show up again when the user moves a few pixels to the side.\n          if (event.target && this._getCellFromElement(event.target) && !(event.relatedTarget && this._getCellFromElement(event.relatedTarget))) {\n            this._ngZone.run(() => this.previewChange.emit({\n              value: null,\n              event\n            }));\n          }\n        }\n      };\n      /**\n       * Triggered on mousedown or touchstart on a date cell.\n       * Respsonsible for starting a drag sequence.\n       */\n      this._mousedownHandler = event => {\n        if (!this.isRange) return;\n        this._didDragSinceMouseDown = false;\n        // Begin a drag if a cell within the current range was targeted.\n        const cell = event.target && this._getCellFromElement(event.target);\n        if (!cell || !this._isInRange(cell.compareValue)) {\n          return;\n        }\n        this._ngZone.run(() => {\n          this.dragStarted.emit({\n            value: cell.rawValue,\n            event\n          });\n        });\n      };\n      /** Triggered on mouseup anywhere. Respsonsible for ending a drag sequence. */\n      this._mouseupHandler = event => {\n        if (!this.isRange) return;\n        const cellElement = getCellElement(event.target);\n        if (!cellElement) {\n          // Mouseup happened outside of datepicker. Cancel drag.\n          this._ngZone.run(() => {\n            this.dragEnded.emit({\n              value: null,\n              event\n            });\n          });\n          return;\n        }\n        if (cellElement.closest('.mat-calendar-body') !== this._elementRef.nativeElement) {\n          // Mouseup happened inside a different month instance.\n          // Allow it to handle the event.\n          return;\n        }\n        this._ngZone.run(() => {\n          const cell = this._getCellFromElement(cellElement);\n          this.dragEnded.emit({\n            value: cell?.rawValue ?? null,\n            event\n          });\n        });\n      };\n      /** Triggered on touchend anywhere. Respsonsible for ending a drag sequence. */\n      this._touchendHandler = event => {\n        const target = getActualTouchTarget(event);\n        if (target) {\n          this._mouseupHandler({\n            target\n          });\n        }\n      };\n      this._id = `mat-calendar-body-${calendarBodyId++}`;\n      this._startDateLabelId = `${this._id}-start-date`;\n      this._endDateLabelId = `${this._id}-end-date`;\n      _ngZone.runOutsideAngular(() => {\n        const element = _elementRef.nativeElement;\n        // `touchmove` is active since we need to call `preventDefault`.\n        element.addEventListener('touchmove', this._touchmoveHandler, activeCapturingEventOptions);\n        element.addEventListener('mouseenter', this._enterHandler, passiveCapturingEventOptions);\n        element.addEventListener('focus', this._enterHandler, passiveCapturingEventOptions);\n        element.addEventListener('mouseleave', this._leaveHandler, passiveCapturingEventOptions);\n        element.addEventListener('blur', this._leaveHandler, passiveCapturingEventOptions);\n        element.addEventListener('mousedown', this._mousedownHandler, passiveEventOptions);\n        element.addEventListener('touchstart', this._mousedownHandler, passiveEventOptions);\n        if (this._platform.isBrowser) {\n          window.addEventListener('mouseup', this._mouseupHandler);\n          window.addEventListener('touchend', this._touchendHandler);\n        }\n      });\n    }\n    /** Called when a cell is clicked. */\n    _cellClicked(cell, event) {\n      // Ignore \"clicks\" that are actually canceled drags (eg the user dragged\n      // off and then went back to this cell to undo).\n      if (this._didDragSinceMouseDown) {\n        return;\n      }\n      if (cell.enabled) {\n        this.selectedValueChange.emit({\n          value: cell.value,\n          event\n        });\n      }\n    }\n    _emitActiveDateChange(cell, event) {\n      if (cell.enabled) {\n        this.activeDateChange.emit({\n          value: cell.value,\n          event\n        });\n      }\n    }\n    /** Returns whether a cell should be marked as selected. */\n    _isSelected(value) {\n      return this.startValue === value || this.endValue === value;\n    }\n    ngOnChanges(changes) {\n      const columnChanges = changes['numCols'];\n      const {\n        rows,\n        numCols\n      } = this;\n      if (changes['rows'] || columnChanges) {\n        this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n      }\n      if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n        this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n      }\n      if (columnChanges || !this._cellWidth) {\n        this._cellWidth = `${100 / numCols}%`;\n      }\n    }\n    ngOnDestroy() {\n      const element = this._elementRef.nativeElement;\n      element.removeEventListener('touchmove', this._touchmoveHandler, activeCapturingEventOptions);\n      element.removeEventListener('mouseenter', this._enterHandler, passiveCapturingEventOptions);\n      element.removeEventListener('focus', this._enterHandler, passiveCapturingEventOptions);\n      element.removeEventListener('mouseleave', this._leaveHandler, passiveCapturingEventOptions);\n      element.removeEventListener('blur', this._leaveHandler, passiveCapturingEventOptions);\n      element.removeEventListener('mousedown', this._mousedownHandler, passiveEventOptions);\n      element.removeEventListener('touchstart', this._mousedownHandler, passiveEventOptions);\n      if (this._platform.isBrowser) {\n        window.removeEventListener('mouseup', this._mouseupHandler);\n        window.removeEventListener('touchend', this._touchendHandler);\n      }\n    }\n    /** Returns whether a cell is active. */\n    _isActiveCell(rowIndex, colIndex) {\n      let cellNumber = rowIndex * this.numCols + colIndex;\n      // Account for the fact that the first row may not have as many cells.\n      if (rowIndex) {\n        cellNumber -= this._firstRowOffset;\n      }\n      return cellNumber == this.activeCell;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     *\n     * Adding a 0ms setTimeout seems to fix Voiceover losing focus when pressing PageUp/PageDown\n     * (issue #24330).\n     *\n     * Determined a 0ms by gradually increasing duration from 0 and testing two use cases with screen\n     * reader enabled:\n     *\n     * 1. Pressing PageUp/PageDown repeatedly with pausing between each key press.\n     * 2. Pressing and holding the PageDown key with repeated keys enabled.\n     *\n     * Test 1 worked roughly 95-99% of the time with 0ms and got a little bit better as the duration\n     * increased. Test 2 got slightly better until the duration was long enough to interfere with\n     * repeated keys. If the repeated key speed was faster than the timeout duration, then pressing\n     * and holding pagedown caused the entire page to scroll.\n     *\n     * Since repeated key speed can verify across machines, determined that any duration could\n     * potentially interfere with repeated keys. 0ms would be best because it almost entirely\n     * eliminates the focus being lost in Voiceover (#24330) without causing unintended side effects.\n     * Adding delay also complicates writing tests.\n     */\n    _focusActiveCell(movePreview = true) {\n      afterNextRender(() => {\n        setTimeout(() => {\n          const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n          if (activeCell) {\n            if (!movePreview) {\n              this._skipNextFocus = true;\n            }\n            activeCell.focus();\n          }\n        });\n      }, {\n        injector: this._injector\n      });\n    }\n    /** Focuses the active cell after change detection has run and the microtask queue is empty. */\n    _scheduleFocusActiveCellAfterViewChecked() {\n      this._focusActiveCellAfterViewChecked = true;\n    }\n    /** Gets whether a value is the start of the main range. */\n    _isRangeStart(value) {\n      return isStart(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is the end of the main range. */\n    _isRangeEnd(value) {\n      return isEnd(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is within the currently-selected range. */\n    _isInRange(value) {\n      return isInRange(value, this.startValue, this.endValue, this.isRange);\n    }\n    /** Gets whether a value is the start of the comparison range. */\n    _isComparisonStart(value) {\n      return isStart(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Whether the cell is a start bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeStart(value, rowIndex, colIndex) {\n      if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {\n        return false;\n      }\n      let previousCell = this.rows[rowIndex][colIndex - 1];\n      if (!previousCell) {\n        const previousRow = this.rows[rowIndex - 1];\n        previousCell = previousRow && previousRow[previousRow.length - 1];\n      }\n      return previousCell && !this._isRangeEnd(previousCell.compareValue);\n    }\n    /** Whether the cell is an end bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeEnd(value, rowIndex, colIndex) {\n      if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {\n        return false;\n      }\n      let nextCell = this.rows[rowIndex][colIndex + 1];\n      if (!nextCell) {\n        const nextRow = this.rows[rowIndex + 1];\n        nextCell = nextRow && nextRow[0];\n      }\n      return nextCell && !this._isRangeStart(nextCell.compareValue);\n    }\n    /** Gets whether a value is the end of the comparison range. */\n    _isComparisonEnd(value) {\n      return isEnd(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Gets whether a value is within the current comparison range. */\n    _isInComparisonRange(value) {\n      return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);\n    }\n    /**\n     * Gets whether a value is the same as the start and end of the comparison range.\n     * For context, the functions that we use to determine whether something is the start/end of\n     * a range don't allow for the start and end to be on the same day, because we'd have to use\n     * much more specific CSS selectors to style them correctly in all scenarios. This is fine for\n     * the regular range, because when it happens, the selected styles take over and still show where\n     * the range would've been, however we don't have these selected styles for a comparison range.\n     * This function is used to apply a class that serves the same purpose as the one for selected\n     * dates, but it only applies in the context of a comparison range.\n     */\n    _isComparisonIdentical(value) {\n      // Note that we don't need to null check the start/end\n      // here, because the `value` will always be defined.\n      return this.comparisonStart === this.comparisonEnd && value === this.comparisonStart;\n    }\n    /** Gets whether a value is the start of the preview range. */\n    _isPreviewStart(value) {\n      return isStart(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is the end of the preview range. */\n    _isPreviewEnd(value) {\n      return isEnd(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is inside the preview range. */\n    _isInPreview(value) {\n      return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\n    }\n    /** Gets ids of aria descriptions for the start and end of a date range. */\n    _getDescribedby(value) {\n      if (!this.isRange) {\n        return null;\n      }\n      if (this.startValue === value && this.endValue === value) {\n        return `${this._startDateLabelId} ${this._endDateLabelId}`;\n      } else if (this.startValue === value) {\n        return this._startDateLabelId;\n      } else if (this.endValue === value) {\n        return this._endDateLabelId;\n      }\n      return null;\n    }\n    /** Finds the MatCalendarCell that corresponds to a DOM node. */\n    _getCellFromElement(element) {\n      const cell = getCellElement(element);\n      if (cell) {\n        const row = cell.getAttribute('data-mat-row');\n        const col = cell.getAttribute('data-mat-col');\n        if (row && col) {\n          return this.rows[parseInt(row)][parseInt(col)];\n        }\n      }\n      return null;\n    }\n    static {\n      this.ɵfac = function MatCalendarBody_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatCalendarBody)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatCalendarBody,\n        selectors: [[\"\", \"mat-calendar-body\", \"\"]],\n        hostAttrs: [1, \"mat-calendar-body\"],\n        inputs: {\n          label: \"label\",\n          rows: \"rows\",\n          todayValue: \"todayValue\",\n          startValue: \"startValue\",\n          endValue: \"endValue\",\n          labelMinRequiredCells: \"labelMinRequiredCells\",\n          numCols: \"numCols\",\n          activeCell: \"activeCell\",\n          isRange: \"isRange\",\n          cellAspectRatio: \"cellAspectRatio\",\n          comparisonStart: \"comparisonStart\",\n          comparisonEnd: \"comparisonEnd\",\n          previewStart: \"previewStart\",\n          previewEnd: \"previewEnd\",\n          startDateAccessibleName: \"startDateAccessibleName\",\n          endDateAccessibleName: \"endDateAccessibleName\"\n        },\n        outputs: {\n          selectedValueChange: \"selectedValueChange\",\n          previewChange: \"previewChange\",\n          activeDateChange: \"activeDateChange\",\n          dragStarted: \"dragStarted\",\n          dragEnded: \"dragEnded\"\n        },\n        exportAs: [\"matCalendarBody\"],\n        standalone: true,\n        features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        attrs: _c0,\n        decls: 7,\n        vars: 5,\n        consts: [[\"aria-hidden\", \"true\"], [\"role\", \"row\"], [1, \"mat-calendar-body-hidden-label\", 3, \"id\"], [1, \"mat-calendar-body-label\"], [1, \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\"], [\"role\", \"gridcell\", 1, \"mat-calendar-body-cell-container\", 3, \"width\", \"paddingTop\", \"paddingBottom\"], [\"role\", \"gridcell\", 1, \"mat-calendar-body-cell-container\"], [\"type\", \"button\", 1, \"mat-calendar-body-cell\", 3, \"click\", \"focus\", \"ngClass\", \"tabindex\"], [1, \"mat-calendar-body-cell-content\", \"mat-focus-indicator\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-cell-preview\"]],\n        template: function MatCalendarBody_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, MatCalendarBody_Conditional_0_Template, 3, 6, \"tr\", 0);\n            i0.ɵɵrepeaterCreate(1, MatCalendarBody_For_2_Template, 4, 1, \"tr\", 1, _forTrack0, true);\n            i0.ɵɵelementStart(3, \"span\", 2);\n            i0.ɵɵtext(4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"span\", 2);\n            i0.ɵɵtext(6);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵconditional(ctx._firstRowOffset < ctx.labelMinRequiredCells ? 0 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵrepeater(ctx.rows);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"id\", ctx._startDateLabelId);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.startDateAccessibleName, \"\\n\");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"id\", ctx._endDateLabelId);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.endDateAccessibleName, \"\\n\");\n          }\n        },\n        dependencies: [NgClass],\n        styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-outline-color, var(--mat-app-primary))}.mat-calendar-body-label{height:0;line-height:0;text-align:start;padding-left:4.7142857143%;padding-right:4.7142857143%;font-size:var(--mat-datepicker-calendar-body-label-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-body-label-text-weight, var(--mat-app-title-small-weight));color:var(--mat-datepicker-calendar-body-label-text-color, var(--mat-app-on-surface))}.mat-calendar-body-hidden-label{display:none}.mat-calendar-body-cell-container{position:relative;height:0;line-height:0}.mat-calendar-body-cell{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);position:absolute;top:0;left:0;width:100%;height:100%;background:none;text-align:center;outline:none;font-family:inherit;margin:0;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-app-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-app-body-medium-size))}.mat-calendar-body-cell::-moz-focus-inner{border:0}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;display:block;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview{color:var(--mat-datepicker-calendar-date-preview-state-outline-color, var(--mat-app-primary))}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-disabled>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){color:var(--mat-datepicker-calendar-date-disabled-state-text-color)}.mat-calendar-body-disabled>.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:var(--mat-datepicker-calendar-date-today-disabled-state-outline-color)}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px;color:var(--mat-datepicker-calendar-date-text-color, var(--mat-app-on-surface));border-color:var(--mat-datepicker-calendar-date-outline-color)}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-focus-state-background-color)}@media(hover: hover){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:var(--mat-datepicker-calendar-date-hover-state-background-color)}}.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-state-background-color, var(--mat-app-primary));color:var(--mat-datepicker-calendar-date-selected-state-text-color, var(--mat-app-on-primary))}.mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:var(--mat-datepicker-calendar-date-selected-disabled-state-background-color)}.mat-calendar-body-selected.mat-calendar-body-today{box-shadow:inset 0 0 0 1px var(--mat-datepicker-calendar-date-today-selected-state-outline-color, var(--mat-app-primary))}.mat-calendar-body-in-range::before{background:var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container))}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container))}.mat-calendar-body-comparison-bridge-start::before,[dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container)) 50%)}.mat-calendar-body-comparison-bridge-end::before,[dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, var(--mat-datepicker-calendar-date-in-range-state-background-color, var(--mat-app-primary-container)) 50%, var(--mat-datepicker-calendar-date-in-comparison-range-state-background-color, var(--mat-app-tertiary-container)) 50%)}.mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:var(--mat-datepicker-calendar-date-in-overlap-range-state-background-color, var(--mat-app-secondary-container))}.mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:var(--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color, var(--mat-app-secondary))}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatCalendarBody;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Checks whether a node is a table cell element. */\nfunction isTableCell(node) {\n  return node?.nodeName === 'TD';\n}\n/**\n * Gets the date table cell element that is or contains the specified element.\n * Or returns null if element is not part of a date cell.\n */\nfunction getCellElement(element) {\n  let cell;\n  if (isTableCell(element)) {\n    cell = element;\n  } else if (isTableCell(element.parentNode)) {\n    cell = element.parentNode;\n  } else if (isTableCell(element.parentNode?.parentNode)) {\n    cell = element.parentNode.parentNode;\n  }\n  return cell?.getAttribute('data-mat-row') != null ? cell : null;\n}\n/** Checks whether a value is the start of a range. */\nfunction isStart(value, start, end) {\n  return end !== null && start !== end && value < end && value === start;\n}\n/** Checks whether a value is the end of a range. */\nfunction isEnd(value, start, end) {\n  return start !== null && start !== end && value >= start && value === end;\n}\n/** Checks whether a value is inside of a range. */\nfunction isInRange(value, start, end, rangeEnabled) {\n  return rangeEnabled && start !== null && end !== null && start !== end && value >= start && value <= end;\n}\n/**\n * Extracts the element that actually corresponds to a touch event's location\n * (rather than the element that initiated the sequence of touch events).\n */\nfunction getActualTouchTarget(event) {\n  const touchLocation = event.changedTouches[0];\n  return document.elementFromPoint(touchLocation.clientX, touchLocation.clientY);\n}\n\n/** A class representing a range of dates. */\nclass DateRange {\n  constructor( /** The start date of the range. */\n  start, /** The end date of the range. */\n  end) {\n    this.start = start;\n    this.end = end;\n  }\n}\n/**\n * A selection model containing a date selection.\n * @docs-private\n */\nlet MatDateSelectionModel = /*#__PURE__*/(() => {\n  class MatDateSelectionModel {\n    constructor( /** The current selection. */\n    selection, _adapter) {\n      this.selection = selection;\n      this._adapter = _adapter;\n      this._selectionChanged = new Subject();\n      /** Emits when the selection has changed. */\n      this.selectionChanged = this._selectionChanged;\n      this.selection = selection;\n    }\n    /**\n     * Updates the current selection in the model.\n     * @param value New selection that should be assigned.\n     * @param source Object that triggered the selection change.\n     */\n    updateSelection(value, source) {\n      const oldValue = this.selection;\n      this.selection = value;\n      this._selectionChanged.next({\n        selection: value,\n        source,\n        oldValue\n      });\n    }\n    ngOnDestroy() {\n      this._selectionChanged.complete();\n    }\n    _isValidDateInstance(date) {\n      return this._adapter.isDateInstance(date) && this._adapter.isValid(date);\n    }\n    static {\n      this.ɵfac = function MatDateSelectionModel_Factory(__ngFactoryType__) {\n        i0.ɵɵinvalidFactory();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MatDateSelectionModel,\n        factory: MatDateSelectionModel.ɵfac\n      });\n    }\n  }\n  return MatDateSelectionModel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A selection model that contains a single date.\n * @docs-private\n */\nlet MatSingleDateSelectionModel = /*#__PURE__*/(() => {\n  class MatSingleDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n      super(null, adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a single date selection, the added date\n     * simply overwrites the previous selection\n     */\n    add(date) {\n      super.updateSelection(date, this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n      return this.selection != null && this._isValidDateInstance(this.selection);\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a single date selection, this\n     * is true if the current selection is not null.\n     */\n    isComplete() {\n      return this.selection != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n      const clone = new MatSingleDateSelectionModel(this._adapter);\n      clone.updateSelection(this.selection, this);\n      return clone;\n    }\n    static {\n      this.ɵfac = function MatSingleDateSelectionModel_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatSingleDateSelectionModel)(i0.ɵɵinject(i1.DateAdapter));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MatSingleDateSelectionModel,\n        factory: MatSingleDateSelectionModel.ɵfac\n      });\n    }\n  }\n  return MatSingleDateSelectionModel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A selection model that contains a date range.\n * @docs-private\n */\nlet MatRangeDateSelectionModel = /*#__PURE__*/(() => {\n  class MatRangeDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n      super(new DateRange(null, null), adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a date range selection, the added date\n     * fills in the next `null` value in the range. If both the start and the end already have a date,\n     * the selection is reset so that the given date is the new `start` and the `end` is null.\n     */\n    add(date) {\n      let {\n        start,\n        end\n      } = this.selection;\n      if (start == null) {\n        start = date;\n      } else if (end == null) {\n        end = date;\n      } else {\n        start = date;\n        end = null;\n      }\n      super.updateSelection(new DateRange(start, end), this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n      const {\n        start,\n        end\n      } = this.selection;\n      // Empty ranges are valid.\n      if (start == null && end == null) {\n        return true;\n      }\n      // Complete ranges are only valid if both dates are valid and the start is before the end.\n      if (start != null && end != null) {\n        return this._isValidDateInstance(start) && this._isValidDateInstance(end) && this._adapter.compareDate(start, end) <= 0;\n      }\n      // Partial ranges are valid if the start/end is valid.\n      return (start == null || this._isValidDateInstance(start)) && (end == null || this._isValidDateInstance(end));\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a date range selection, this\n     * is true if the current selection has a non-null `start` and `end`.\n     */\n    isComplete() {\n      return this.selection.start != null && this.selection.end != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n      const clone = new MatRangeDateSelectionModel(this._adapter);\n      clone.updateSelection(this.selection, this);\n      return clone;\n    }\n    static {\n      this.ɵfac = function MatRangeDateSelectionModel_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatRangeDateSelectionModel)(i0.ɵɵinject(i1.DateAdapter));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MatRangeDateSelectionModel,\n        factory: MatRangeDateSelectionModel.ɵfac\n      });\n    }\n  }\n  return MatRangeDateSelectionModel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** @docs-private */\nfunction MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n  return parent || new MatSingleDateSelectionModel(adapter);\n}\n/**\n * Used to provide a single selection model to a component.\n * @docs-private\n */\nconst MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER = {\n  provide: MatDateSelectionModel,\n  deps: [[/*#__PURE__*/new Optional(), /*#__PURE__*/new SkipSelf(), MatDateSelectionModel], DateAdapter],\n  useFactory: MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY\n};\n/** @docs-private */\nfunction MAT_RANGE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n  return parent || new MatRangeDateSelectionModel(adapter);\n}\n/**\n * Used to provide a range selection model to a component.\n * @docs-private\n */\nconst MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER = {\n  provide: MatDateSelectionModel,\n  deps: [[/*#__PURE__*/new Optional(), /*#__PURE__*/new SkipSelf(), MatDateSelectionModel], DateAdapter],\n  useFactory: MAT_RANGE_DATE_SELECTION_MODEL_FACTORY\n};\n\n/** Injection token used to customize the date range selection behavior. */\nconst MAT_DATE_RANGE_SELECTION_STRATEGY = /*#__PURE__*/new InjectionToken('MAT_DATE_RANGE_SELECTION_STRATEGY');\n/** Provides the default date range selection behavior. */\nlet DefaultMatCalendarRangeStrategy = /*#__PURE__*/(() => {\n  class DefaultMatCalendarRangeStrategy {\n    constructor(_dateAdapter) {\n      this._dateAdapter = _dateAdapter;\n    }\n    selectionFinished(date, currentRange) {\n      let {\n        start,\n        end\n      } = currentRange;\n      if (start == null) {\n        start = date;\n      } else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {\n        end = date;\n      } else {\n        start = date;\n        end = null;\n      }\n      return new DateRange(start, end);\n    }\n    createPreview(activeDate, currentRange) {\n      let start = null;\n      let end = null;\n      if (currentRange.start && !currentRange.end && activeDate) {\n        start = currentRange.start;\n        end = activeDate;\n      }\n      return new DateRange(start, end);\n    }\n    createDrag(dragOrigin, originalRange, newDate) {\n      let start = originalRange.start;\n      let end = originalRange.end;\n      if (!start || !end) {\n        // Can't drag from an incomplete range.\n        return null;\n      }\n      const adapter = this._dateAdapter;\n      const isRange = adapter.compareDate(start, end) !== 0;\n      const diffYears = adapter.getYear(newDate) - adapter.getYear(dragOrigin);\n      const diffMonths = adapter.getMonth(newDate) - adapter.getMonth(dragOrigin);\n      const diffDays = adapter.getDate(newDate) - adapter.getDate(dragOrigin);\n      if (isRange && adapter.sameDate(dragOrigin, originalRange.start)) {\n        start = newDate;\n        if (adapter.compareDate(newDate, end) > 0) {\n          end = adapter.addCalendarYears(end, diffYears);\n          end = adapter.addCalendarMonths(end, diffMonths);\n          end = adapter.addCalendarDays(end, diffDays);\n        }\n      } else if (isRange && adapter.sameDate(dragOrigin, originalRange.end)) {\n        end = newDate;\n        if (adapter.compareDate(newDate, start) < 0) {\n          start = adapter.addCalendarYears(start, diffYears);\n          start = adapter.addCalendarMonths(start, diffMonths);\n          start = adapter.addCalendarDays(start, diffDays);\n        }\n      } else {\n        start = adapter.addCalendarYears(start, diffYears);\n        start = adapter.addCalendarMonths(start, diffMonths);\n        start = adapter.addCalendarDays(start, diffDays);\n        end = adapter.addCalendarYears(end, diffYears);\n        end = adapter.addCalendarMonths(end, diffMonths);\n        end = adapter.addCalendarDays(end, diffDays);\n      }\n      return new DateRange(start, end);\n    }\n    static {\n      this.ɵfac = function DefaultMatCalendarRangeStrategy_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || DefaultMatCalendarRangeStrategy)(i0.ɵɵinject(i1.DateAdapter));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: DefaultMatCalendarRangeStrategy,\n        factory: DefaultMatCalendarRangeStrategy.ɵfac\n      });\n    }\n  }\n  return DefaultMatCalendarRangeStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** @docs-private */\nfunction MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(parent, adapter) {\n  return parent || new DefaultMatCalendarRangeStrategy(adapter);\n}\n/** @docs-private */\nconst MAT_CALENDAR_RANGE_STRATEGY_PROVIDER = {\n  provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\n  deps: [[/*#__PURE__*/new Optional(), /*#__PURE__*/new SkipSelf(), MAT_DATE_RANGE_SELECTION_STRATEGY], DateAdapter],\n  useFactory: MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY\n};\nconst DAYS_PER_WEEK = 7;\nlet uniqueIdCounter = 0;\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\nlet MatMonthView = /*#__PURE__*/(() => {\n  class MatMonthView {\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    get activeDate() {\n      return this._activeDate;\n    }\n    set activeDate(value) {\n      const oldActiveDate = this._activeDate;\n      const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n      this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n      if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n        this._init();\n      }\n    }\n    /** The currently selected date. */\n    get selected() {\n      return this._selected;\n    }\n    set selected(value) {\n      if (value instanceof DateRange) {\n        this._selected = value;\n      } else {\n        this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n      }\n      this._setRanges(this._selected);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n      return this._minDate;\n    }\n    set minDate(value) {\n      this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n      return this._maxDate;\n    }\n    set maxDate(value) {\n      this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir, _rangeStrategy) {\n      this._changeDetectorRef = _changeDetectorRef;\n      this._dateFormats = _dateFormats;\n      this._dateAdapter = _dateAdapter;\n      this._dir = _dir;\n      this._rangeStrategy = _rangeStrategy;\n      this._rerenderSubscription = Subscription.EMPTY;\n      /** Origin of active drag, or null when dragging is not active. */\n      this.activeDrag = null;\n      /** Emits when a new date is selected. */\n      this.selectedChange = new EventEmitter();\n      /** Emits when any date is selected. */\n      this._userSelection = new EventEmitter();\n      /** Emits when the user initiates a date range drag via mouse or touch. */\n      this.dragStarted = new EventEmitter();\n      /**\n       * Emits when the user completes or cancels a date range drag.\n       * Emits null when the drag was canceled or the newly selected date range if completed.\n       */\n      this.dragEnded = new EventEmitter();\n      /** Emits when any date is activated. */\n      this.activeDateChange = new EventEmitter();\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._dateAdapter) {\n          throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n          throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n      }\n      this._activeDate = this._dateAdapter.today();\n    }\n    ngAfterContentInit() {\n      this._rerenderSubscription = this._dateAdapter.localeChanges.pipe(startWith(null)).subscribe(() => this._init());\n    }\n    ngOnChanges(changes) {\n      const comparisonChange = changes['comparisonStart'] || changes['comparisonEnd'];\n      if (comparisonChange && !comparisonChange.firstChange) {\n        this._setRanges(this.selected);\n      }\n      if (changes['activeDrag'] && !this.activeDrag) {\n        this._clearPreview();\n      }\n    }\n    ngOnDestroy() {\n      this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new date is selected. */\n    _dateSelected(event) {\n      const date = event.value;\n      const selectedDate = this._getDateFromDayOfMonth(date);\n      let rangeStartDate;\n      let rangeEndDate;\n      if (this._selected instanceof DateRange) {\n        rangeStartDate = this._getDateInCurrentMonth(this._selected.start);\n        rangeEndDate = this._getDateInCurrentMonth(this._selected.end);\n      } else {\n        rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);\n      }\n      if (rangeStartDate !== date || rangeEndDate !== date) {\n        this.selectedChange.emit(selectedDate);\n      }\n      this._userSelection.emit({\n        value: selectedDate,\n        event: event.event\n      });\n      this._clearPreview();\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Takes the index of a calendar body cell wrapped in an event as argument. For the date that\n     * corresponds to the given cell, set `activeDate` to that date and fire `activeDateChange` with\n     * that date.\n     *\n     * This function is used to match each component's model of the active date with the calendar\n     * body cell that was focused. It updates its value of `activeDate` synchronously and updates the\n     * parent's value asynchronously via the `activeDateChange` event. The child component receives an\n     * updated value asynchronously via the `activeCell` Input.\n     */\n    _updateActiveDate(event) {\n      const month = event.value;\n      const oldActiveDate = this._activeDate;\n      this.activeDate = this._getDateFromDayOfMonth(month);\n      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n        this.activeDateChange.emit(this._activeDate);\n      }\n    }\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeydown(event) {\n      // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n      // disabled ones from being selected. This may not be ideal, we should look into whether\n      // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n      const oldActiveDate = this._activeDate;\n      const isRtl = this._isRtl();\n      switch (event.keyCode) {\n        case LEFT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n          break;\n        case RIGHT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n          break;\n        case UP_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n          break;\n        case DOWN_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n          break;\n        case HOME:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n          break;\n        case END:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, this._dateAdapter.getNumDaysInMonth(this._activeDate) - this._dateAdapter.getDate(this._activeDate));\n          break;\n        case PAGE_UP:\n          this.activeDate = event.altKey ? this._dateAdapter.addCalendarYears(this._activeDate, -1) : this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n          break;\n        case PAGE_DOWN:\n          this.activeDate = event.altKey ? this._dateAdapter.addCalendarYears(this._activeDate, 1) : this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n          break;\n        case ENTER:\n        case SPACE:\n          this._selectionKeyPressed = true;\n          if (this._canSelect(this._activeDate)) {\n            // Prevent unexpected default actions such as form submission.\n            // Note that we only prevent the default action here while the selection happens in\n            // `keyup` below. We can't do the selection here, because it can cause the calendar to\n            // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n            // because it's too late (see #23305).\n            event.preventDefault();\n          }\n          return;\n        case ESCAPE:\n          // Abort the current range selection if the user presses escape mid-selection.\n          if (this._previewEnd != null && !hasModifierKey(event)) {\n            this._clearPreview();\n            // If a drag is in progress, cancel the drag without changing the\n            // current selection.\n            if (this.activeDrag) {\n              this.dragEnded.emit({\n                value: null,\n                event\n              });\n            } else {\n              this.selectedChange.emit(null);\n              this._userSelection.emit({\n                value: null,\n                event\n              });\n            }\n            event.preventDefault();\n            event.stopPropagation(); // Prevents the overlay from closing.\n          }\n          return;\n        default:\n          // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n          return;\n      }\n      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n        this.activeDateChange.emit(this.activeDate);\n        this._focusActiveCellAfterViewChecked();\n      }\n      // Prevent unexpected default actions such as form submission.\n      event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeyup(event) {\n      if (event.keyCode === SPACE || event.keyCode === ENTER) {\n        if (this._selectionKeyPressed && this._canSelect(this._activeDate)) {\n          this._dateSelected({\n            value: this._dateAdapter.getDate(this._activeDate),\n            event\n          });\n        }\n        this._selectionKeyPressed = false;\n      }\n    }\n    /** Initializes this month view. */\n    _init() {\n      this._setRanges(this.selected);\n      this._todayDate = this._getCellCompareValue(this._dateAdapter.today());\n      this._monthLabel = this._dateFormats.display.monthLabel ? this._dateAdapter.format(this.activeDate, this._dateFormats.display.monthLabel) : this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)].toLocaleUpperCase();\n      let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n      this._firstWeekOffset = (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) - this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n      this._initWeekdays();\n      this._createWeekCells();\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview) {\n      this._matCalendarBody._focusActiveCell(movePreview);\n    }\n    /** Focuses the active cell after change detection has run and the microtask queue is empty. */\n    _focusActiveCellAfterViewChecked() {\n      this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();\n    }\n    /** Called when the user has activated a new cell and the preview needs to be updated. */\n    _previewChanged({\n      event,\n      value: cell\n    }) {\n      if (this._rangeStrategy) {\n        // We can assume that this will be a range, because preview\n        // events aren't fired for single date selections.\n        const value = cell ? cell.rawValue : null;\n        const previewRange = this._rangeStrategy.createPreview(value, this.selected, event);\n        this._previewStart = this._getCellCompareValue(previewRange.start);\n        this._previewEnd = this._getCellCompareValue(previewRange.end);\n        if (this.activeDrag && value) {\n          const dragRange = this._rangeStrategy.createDrag?.(this.activeDrag.value, this.selected, value, event);\n          if (dragRange) {\n            this._previewStart = this._getCellCompareValue(dragRange.start);\n            this._previewEnd = this._getCellCompareValue(dragRange.end);\n          }\n        }\n        // Note that here we need to use `detectChanges`, rather than `markForCheck`, because\n        // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time\n        // when navigating one month back using the keyboard which will cause this handler\n        // to throw a \"changed after checked\" error when updating the preview state.\n        this._changeDetectorRef.detectChanges();\n      }\n    }\n    /**\n     * Called when the user has ended a drag. If the drag/drop was successful,\n     * computes and emits the new range selection.\n     */\n    _dragEnded(event) {\n      if (!this.activeDrag) return;\n      if (event.value) {\n        // Propagate drag effect\n        const dragDropResult = this._rangeStrategy?.createDrag?.(this.activeDrag.value, this.selected, event.value, event.event);\n        this.dragEnded.emit({\n          value: dragDropResult ?? null,\n          event: event.event\n        });\n      } else {\n        this.dragEnded.emit({\n          value: null,\n          event: event.event\n        });\n      }\n    }\n    /**\n     * Takes a day of the month and returns a new date in the same month and year as the currently\n     *  active date. The returned date will have the same day of the month as the argument date.\n     */\n    _getDateFromDayOfMonth(dayOfMonth) {\n      return this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), dayOfMonth);\n    }\n    /** Initializes the weekdays. */\n    _initWeekdays() {\n      const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n      const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n      const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n      // Rotate the labels for days of the week based on the configured first day of the week.\n      let weekdays = longWeekdays.map((long, i) => {\n        return {\n          long,\n          narrow: narrowWeekdays[i],\n          id: uniqueIdCounter++\n        };\n      });\n      this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /** Creates MatCalendarCells for the dates in this month. */\n    _createWeekCells() {\n      const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n      const dateNames = this._dateAdapter.getDateNames();\n      this._weeks = [[]];\n      for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n        if (cell == DAYS_PER_WEEK) {\n          this._weeks.push([]);\n          cell = 0;\n        }\n        const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n        const enabled = this._shouldEnableDate(date);\n        const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'month') : undefined;\n        this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses, this._getCellCompareValue(date), date));\n      }\n    }\n    /** Date filter for the month */\n    _shouldEnableDate(date) {\n      return !!date && (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) && (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) && (!this.dateFilter || this.dateFilter(date));\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    _getDateInCurrentMonth(date) {\n      return date && this._hasSameMonthAndYear(date, this.activeDate) ? this._dateAdapter.getDate(date) : null;\n    }\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    _hasSameMonthAndYear(d1, d2) {\n      return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) && this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /** Gets the value that will be used to one cell to another. */\n    _getCellCompareValue(date) {\n      if (date) {\n        // We use the time since the Unix epoch to compare dates in this view, rather than the\n        // cell values, because we need to support ranges that span across multiple months/years.\n        const year = this._dateAdapter.getYear(date);\n        const month = this._dateAdapter.getMonth(date);\n        const day = this._dateAdapter.getDate(date);\n        return new Date(year, month, day).getTime();\n      }\n      return null;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n      return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the current range based on a model value. */\n    _setRanges(selectedValue) {\n      if (selectedValue instanceof DateRange) {\n        this._rangeStart = this._getCellCompareValue(selectedValue.start);\n        this._rangeEnd = this._getCellCompareValue(selectedValue.end);\n        this._isRange = true;\n      } else {\n        this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);\n        this._isRange = false;\n      }\n      this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);\n      this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\n    }\n    /** Gets whether a date can be selected in the month view. */\n    _canSelect(date) {\n      return !this.dateFilter || this.dateFilter(date);\n    }\n    /** Clears out preview state. */\n    _clearPreview() {\n      this._previewStart = this._previewEnd = null;\n    }\n    static {\n      this.ɵfac = function MatMonthView_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatMonthView)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(MAT_DATE_RANGE_SELECTION_STRATEGY, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatMonthView,\n        selectors: [[\"mat-month-view\"]],\n        viewQuery: function MatMonthView_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(MatCalendarBody, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n          }\n        },\n        inputs: {\n          activeDate: \"activeDate\",\n          selected: \"selected\",\n          minDate: \"minDate\",\n          maxDate: \"maxDate\",\n          dateFilter: \"dateFilter\",\n          dateClass: \"dateClass\",\n          comparisonStart: \"comparisonStart\",\n          comparisonEnd: \"comparisonEnd\",\n          startDateAccessibleName: \"startDateAccessibleName\",\n          endDateAccessibleName: \"endDateAccessibleName\",\n          activeDrag: \"activeDrag\"\n        },\n        outputs: {\n          selectedChange: \"selectedChange\",\n          _userSelection: \"_userSelection\",\n          dragStarted: \"dragStarted\",\n          dragEnded: \"dragEnded\",\n          activeDateChange: \"activeDateChange\"\n        },\n        exportAs: [\"matMonthView\"],\n        standalone: true,\n        features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        decls: 8,\n        vars: 14,\n        consts: [[\"role\", \"grid\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"scope\", \"col\"], [\"aria-hidden\", \"true\"], [\"colspan\", \"7\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"selectedValueChange\", \"activeDateChange\", \"previewChange\", \"dragStarted\", \"dragEnded\", \"keyup\", \"keydown\", \"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\", \"isRange\", \"labelMinRequiredCells\", \"activeCell\", \"startDateAccessibleName\", \"endDateAccessibleName\"], [1, \"cdk-visually-hidden\"]],\n        template: function MatMonthView_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n            i0.ɵɵrepeaterCreate(3, MatMonthView_For_4_Template, 5, 2, \"th\", 2, _forTrack1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"tr\", 3);\n            i0.ɵɵelement(6, \"th\", 4);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(7, \"tbody\", 5);\n            i0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_7_listener($event) {\n              return ctx._dateSelected($event);\n            })(\"activeDateChange\", function MatMonthView_Template_tbody_activeDateChange_7_listener($event) {\n              return ctx._updateActiveDate($event);\n            })(\"previewChange\", function MatMonthView_Template_tbody_previewChange_7_listener($event) {\n              return ctx._previewChanged($event);\n            })(\"dragStarted\", function MatMonthView_Template_tbody_dragStarted_7_listener($event) {\n              return ctx.dragStarted.emit($event);\n            })(\"dragEnded\", function MatMonthView_Template_tbody_dragEnded_7_listener($event) {\n              return ctx._dragEnded($event);\n            })(\"keyup\", function MatMonthView_Template_tbody_keyup_7_listener($event) {\n              return ctx._handleCalendarBodyKeyup($event);\n            })(\"keydown\", function MatMonthView_Template_tbody_keydown_7_listener($event) {\n              return ctx._handleCalendarBodyKeydown($event);\n            });\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵrepeater(ctx._weekdays);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"startValue\", ctx._rangeStart)(\"endValue\", ctx._rangeEnd)(\"comparisonStart\", ctx._comparisonRangeStart)(\"comparisonEnd\", ctx._comparisonRangeEnd)(\"previewStart\", ctx._previewStart)(\"previewEnd\", ctx._previewEnd)(\"isRange\", ctx._isRange)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1)(\"startDateAccessibleName\", ctx.startDateAccessibleName)(\"endDateAccessibleName\", ctx.endDateAccessibleName);\n          }\n        },\n        dependencies: [MatCalendarBody],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatMonthView;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst yearsPerPage = 24;\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\nlet MatMultiYearView = /*#__PURE__*/(() => {\n  class MatMultiYearView {\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    get activeDate() {\n      return this._activeDate;\n    }\n    set activeDate(value) {\n      let oldActiveDate = this._activeDate;\n      const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n      this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n      if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n        this._init();\n      }\n    }\n    /** The currently selected date. */\n    get selected() {\n      return this._selected;\n    }\n    set selected(value) {\n      if (value instanceof DateRange) {\n        this._selected = value;\n      } else {\n        this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n      }\n      this._setSelectedYear(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n      return this._minDate;\n    }\n    set minDate(value) {\n      this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n      return this._maxDate;\n    }\n    set maxDate(value) {\n      this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n      this._changeDetectorRef = _changeDetectorRef;\n      this._dateAdapter = _dateAdapter;\n      this._dir = _dir;\n      this._rerenderSubscription = Subscription.EMPTY;\n      /** Emits when a new year is selected. */\n      this.selectedChange = new EventEmitter();\n      /** Emits the selected year. This doesn't imply a change on the selected date */\n      this.yearSelected = new EventEmitter();\n      /** Emits when any date is activated. */\n      this.activeDateChange = new EventEmitter();\n      if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n      this._activeDate = this._dateAdapter.today();\n    }\n    ngAfterContentInit() {\n      this._rerenderSubscription = this._dateAdapter.localeChanges.pipe(startWith(null)).subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n      this._rerenderSubscription.unsubscribe();\n    }\n    /** Initializes this multi-year view. */\n    _init() {\n      this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n      // We want a range years such that we maximize the number of\n      // enabled dates visible at once. This prevents issues where the minimum year\n      // is the last item of a page OR the maximum year is the first item of a page.\n      // The offset from the active year to the \"slot\" for the starting year is the\n      // *actual* first rendered year in the multi-year view.\n      const activeYear = this._dateAdapter.getYear(this._activeDate);\n      const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n      this._years = [];\n      for (let i = 0, row = []; i < yearsPerPage; i++) {\n        row.push(minYearOfPage + i);\n        if (row.length == yearsPerRow) {\n          this._years.push(row.map(year => this._createCellForYear(year)));\n          row = [];\n        }\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Handles when a new year is selected. */\n    _yearSelected(event) {\n      const year = event.value;\n      const selectedYear = this._dateAdapter.createDate(year, 0, 1);\n      const selectedDate = this._getDateFromYear(year);\n      this.yearSelected.emit(selectedYear);\n      this.selectedChange.emit(selectedDate);\n    }\n    /**\n     * Takes the index of a calendar body cell wrapped in an event as argument. For the date that\n     * corresponds to the given cell, set `activeDate` to that date and fire `activeDateChange` with\n     * that date.\n     *\n     * This function is used to match each component's model of the active date with the calendar\n     * body cell that was focused. It updates its value of `activeDate` synchronously and updates the\n     * parent's value asynchronously via the `activeDateChange` event. The child component receives an\n     * updated value asynchronously via the `activeCell` Input.\n     */\n    _updateActiveDate(event) {\n      const year = event.value;\n      const oldActiveDate = this._activeDate;\n      this.activeDate = this._getDateFromYear(year);\n      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n        this.activeDateChange.emit(this.activeDate);\n      }\n    }\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeydown(event) {\n      const oldActiveDate = this._activeDate;\n      const isRtl = this._isRtl();\n      switch (event.keyCode) {\n        case LEFT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n          break;\n        case RIGHT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n          break;\n        case UP_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n          break;\n        case DOWN_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n          break;\n        case HOME:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n          break;\n        case END:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n          break;\n        case PAGE_UP:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n          break;\n        case PAGE_DOWN:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n          break;\n        case ENTER:\n        case SPACE:\n          // Note that we only prevent the default action here while the selection happens in\n          // `keyup` below. We can't do the selection here, because it can cause the calendar to\n          // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n          // because it's too late (see #23305).\n          this._selectionKeyPressed = true;\n          break;\n        default:\n          // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n          return;\n      }\n      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n        this.activeDateChange.emit(this.activeDate);\n      }\n      this._focusActiveCellAfterViewChecked();\n      // Prevent unexpected default actions such as form submission.\n      event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeyup(event) {\n      if (event.keyCode === SPACE || event.keyCode === ENTER) {\n        if (this._selectionKeyPressed) {\n          this._yearSelected({\n            value: this._dateAdapter.getYear(this._activeDate),\n            event\n          });\n        }\n        this._selectionKeyPressed = false;\n      }\n    }\n    _getActiveCell() {\n      return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n      this._matCalendarBody._focusActiveCell();\n    }\n    /** Focuses the active cell after change detection has run and the microtask queue is empty. */\n    _focusActiveCellAfterViewChecked() {\n      this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();\n    }\n    /**\n     * Takes a year and returns a new date on the same day and month as the currently active date\n     *  The returned date will have the same year as the argument date.\n     */\n    _getDateFromYear(year) {\n      const activeMonth = this._dateAdapter.getMonth(this.activeDate);\n      const daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, activeMonth, 1));\n      const normalizedDate = this._dateAdapter.createDate(year, activeMonth, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth));\n      return normalizedDate;\n    }\n    /** Creates an MatCalendarCell for the given year. */\n    _createCellForYear(year) {\n      const date = this._dateAdapter.createDate(year, 0, 1);\n      const yearName = this._dateAdapter.getYearName(date);\n      const cellClasses = this.dateClass ? this.dateClass(date, 'multi-year') : undefined;\n      return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year), cellClasses);\n    }\n    /** Whether the given year is enabled. */\n    _shouldEnableYear(year) {\n      // disable if the year is greater than maxDate lower than minDate\n      if (year === undefined || year === null || this.maxDate && year > this._dateAdapter.getYear(this.maxDate) || this.minDate && year < this._dateAdapter.getYear(this.minDate)) {\n        return false;\n      }\n      // enable if it reaches here and there's no filter defined\n      if (!this.dateFilter) {\n        return true;\n      }\n      const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n      // If any date in the year is enabled count the year as enabled.\n      for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n        if (this.dateFilter(date)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n      return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-highlighted year based on a model value. */\n    _setSelectedYear(value) {\n      this._selectedYear = null;\n      if (value instanceof DateRange) {\n        const displayValue = value.start || value.end;\n        if (displayValue) {\n          this._selectedYear = this._dateAdapter.getYear(displayValue);\n        }\n      } else if (value) {\n        this._selectedYear = this._dateAdapter.getYear(value);\n      }\n    }\n    static {\n      this.ɵfac = function MatMultiYearView_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatMultiYearView)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatMultiYearView,\n        selectors: [[\"mat-multi-year-view\"]],\n        viewQuery: function MatMultiYearView_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(MatCalendarBody, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n          }\n        },\n        inputs: {\n          activeDate: \"activeDate\",\n          selected: \"selected\",\n          minDate: \"minDate\",\n          maxDate: \"maxDate\",\n          dateFilter: \"dateFilter\",\n          dateClass: \"dateClass\"\n        },\n        outputs: {\n          selectedChange: \"selectedChange\",\n          yearSelected: \"yearSelected\",\n          activeDateChange: \"activeDateChange\"\n        },\n        exportAs: [\"matMultiYearView\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 5,\n        vars: 7,\n        consts: [[\"role\", \"grid\", 1, \"mat-calendar-table\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"selectedValueChange\", \"activeDateChange\", \"keyup\", \"keydown\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\"]],\n        template: function MatMultiYearView_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n            i0.ɵɵelement(3, \"th\", 2);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(4, \"tbody\", 3);\n            i0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) {\n              return ctx._yearSelected($event);\n            })(\"activeDateChange\", function MatMultiYearView_Template_tbody_activeDateChange_4_listener($event) {\n              return ctx._updateActiveDate($event);\n            })(\"keyup\", function MatMultiYearView_Template_tbody_keyup_4_listener($event) {\n              return ctx._handleCalendarBodyKeyup($event);\n            })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) {\n              return ctx._handleCalendarBodyKeydown($event);\n            });\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"startValue\", ctx._selectedYear)(\"endValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n          }\n        },\n        dependencies: [MatCalendarBody],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatMultiYearView;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n  const year1 = dateAdapter.getYear(date1);\n  const year2 = dateAdapter.getYear(date2);\n  const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n  return Math.floor((year1 - startingYear) / yearsPerPage) === Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n  const activeYear = dateAdapter.getYear(activeDate);\n  return euclideanModulo(activeYear - getStartingYear(dateAdapter, minDate, maxDate), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n  let startingYear = 0;\n  if (maxDate) {\n    const maxYear = dateAdapter.getYear(maxDate);\n    startingYear = maxYear - yearsPerPage + 1;\n  } else if (minDate) {\n    startingYear = dateAdapter.getYear(minDate);\n  }\n  return startingYear;\n}\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo(a, b) {\n  return (a % b + b) % b;\n}\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\nlet MatYearView = /*#__PURE__*/(() => {\n  class MatYearView {\n    /** The date to display in this year view (everything other than the year is ignored). */\n    get activeDate() {\n      return this._activeDate;\n    }\n    set activeDate(value) {\n      let oldActiveDate = this._activeDate;\n      const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n      this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n      if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n        this._init();\n      }\n    }\n    /** The currently selected date. */\n    get selected() {\n      return this._selected;\n    }\n    set selected(value) {\n      if (value instanceof DateRange) {\n        this._selected = value;\n      } else {\n        this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n      }\n      this._setSelectedMonth(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n      return this._minDate;\n    }\n    set minDate(value) {\n      this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n      return this._maxDate;\n    }\n    set maxDate(value) {\n      this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n      this._changeDetectorRef = _changeDetectorRef;\n      this._dateFormats = _dateFormats;\n      this._dateAdapter = _dateAdapter;\n      this._dir = _dir;\n      this._rerenderSubscription = Subscription.EMPTY;\n      /** Emits when a new month is selected. */\n      this.selectedChange = new EventEmitter();\n      /** Emits the selected month. This doesn't imply a change on the selected date */\n      this.monthSelected = new EventEmitter();\n      /** Emits when any date is activated. */\n      this.activeDateChange = new EventEmitter();\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._dateAdapter) {\n          throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n          throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n      }\n      this._activeDate = this._dateAdapter.today();\n    }\n    ngAfterContentInit() {\n      this._rerenderSubscription = this._dateAdapter.localeChanges.pipe(startWith(null)).subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n      this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new month is selected. */\n    _monthSelected(event) {\n      const month = event.value;\n      const selectedMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n      this.monthSelected.emit(selectedMonth);\n      const selectedDate = this._getDateFromMonth(month);\n      this.selectedChange.emit(selectedDate);\n    }\n    /**\n     * Takes the index of a calendar body cell wrapped in an event as argument. For the date that\n     * corresponds to the given cell, set `activeDate` to that date and fire `activeDateChange` with\n     * that date.\n     *\n     * This function is used to match each component's model of the active date with the calendar\n     * body cell that was focused. It updates its value of `activeDate` synchronously and updates the\n     * parent's value asynchronously via the `activeDateChange` event. The child component receives an\n     * updated value asynchronously via the `activeCell` Input.\n     */\n    _updateActiveDate(event) {\n      const month = event.value;\n      const oldActiveDate = this._activeDate;\n      this.activeDate = this._getDateFromMonth(month);\n      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n        this.activeDateChange.emit(this.activeDate);\n      }\n    }\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeydown(event) {\n      // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n      // disabled ones from being selected. This may not be ideal, we should look into whether\n      // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n      const oldActiveDate = this._activeDate;\n      const isRtl = this._isRtl();\n      switch (event.keyCode) {\n        case LEFT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n          break;\n        case RIGHT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n          break;\n        case UP_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n          break;\n        case DOWN_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n          break;\n        case HOME:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n          break;\n        case END:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n          break;\n        case PAGE_UP:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n          break;\n        case PAGE_DOWN:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n          break;\n        case ENTER:\n        case SPACE:\n          // Note that we only prevent the default action here while the selection happens in\n          // `keyup` below. We can't do the selection here, because it can cause the calendar to\n          // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n          // because it's too late (see #23305).\n          this._selectionKeyPressed = true;\n          break;\n        default:\n          // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n          return;\n      }\n      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n        this.activeDateChange.emit(this.activeDate);\n        this._focusActiveCellAfterViewChecked();\n      }\n      // Prevent unexpected default actions such as form submission.\n      event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeyup(event) {\n      if (event.keyCode === SPACE || event.keyCode === ENTER) {\n        if (this._selectionKeyPressed) {\n          this._monthSelected({\n            value: this._dateAdapter.getMonth(this._activeDate),\n            event\n          });\n        }\n        this._selectionKeyPressed = false;\n      }\n    }\n    /** Initializes this year view. */\n    _init() {\n      this._setSelectedMonth(this.selected);\n      this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n      this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n      let monthNames = this._dateAdapter.getMonthNames('short');\n      // First row of months only contains 5 elements so we can fit the year label on the same row.\n      this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n      this._matCalendarBody._focusActiveCell();\n    }\n    /** Schedules the matCalendarBody to focus the active cell after change detection has run */\n    _focusActiveCellAfterViewChecked() {\n      this._matCalendarBody._scheduleFocusActiveCellAfterViewChecked();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    _getMonthInCurrentYear(date) {\n      return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ? this._dateAdapter.getMonth(date) : null;\n    }\n    /**\n     * Takes a month and returns a new date in the same day and year as the currently active date.\n     *  The returned date will have the same month as the argument date.\n     */\n    _getDateFromMonth(month) {\n      const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n      const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n      return this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth));\n    }\n    /** Creates an MatCalendarCell for the given month. */\n    _createCellForMonth(month, monthName) {\n      const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n      const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.monthYearA11yLabel);\n      const cellClasses = this.dateClass ? this.dateClass(date, 'year') : undefined;\n      return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month), cellClasses);\n    }\n    /** Whether the given month is enabled. */\n    _shouldEnableMonth(month) {\n      const activeYear = this._dateAdapter.getYear(this.activeDate);\n      if (month === undefined || month === null || this._isYearAndMonthAfterMaxDate(activeYear, month) || this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n        return false;\n      }\n      if (!this.dateFilter) {\n        return true;\n      }\n      const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n      // If any date in the month is enabled count the month as enabled.\n      for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n        if (this.dateFilter(date)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n      if (this.maxDate) {\n        const maxYear = this._dateAdapter.getYear(this.maxDate);\n        const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n        return year > maxYear || year === maxYear && month > maxMonth;\n      }\n      return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n      if (this.minDate) {\n        const minYear = this._dateAdapter.getYear(this.minDate);\n        const minMonth = this._dateAdapter.getMonth(this.minDate);\n        return year < minYear || year === minYear && month < minMonth;\n      }\n      return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n      return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-selected month based on a model value. */\n    _setSelectedMonth(value) {\n      if (value instanceof DateRange) {\n        this._selectedMonth = this._getMonthInCurrentYear(value.start) || this._getMonthInCurrentYear(value.end);\n      } else {\n        this._selectedMonth = this._getMonthInCurrentYear(value);\n      }\n    }\n    static {\n      this.ɵfac = function MatYearView_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatYearView)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatYearView,\n        selectors: [[\"mat-year-view\"]],\n        viewQuery: function MatYearView_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(MatCalendarBody, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n          }\n        },\n        inputs: {\n          activeDate: \"activeDate\",\n          selected: \"selected\",\n          minDate: \"minDate\",\n          maxDate: \"maxDate\",\n          dateFilter: \"dateFilter\",\n          dateClass: \"dateClass\"\n        },\n        outputs: {\n          selectedChange: \"selectedChange\",\n          monthSelected: \"monthSelected\",\n          activeDateChange: \"activeDateChange\"\n        },\n        exportAs: [\"matYearView\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 5,\n        vars: 9,\n        consts: [[\"role\", \"grid\", 1, \"mat-calendar-table\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"selectedValueChange\", \"activeDateChange\", \"keyup\", \"keydown\", \"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\"]],\n        template: function MatYearView_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n            i0.ɵɵelement(3, \"th\", 2);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(4, \"tbody\", 3);\n            i0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) {\n              return ctx._monthSelected($event);\n            })(\"activeDateChange\", function MatYearView_Template_tbody_activeDateChange_4_listener($event) {\n              return ctx._updateActiveDate($event);\n            })(\"keyup\", function MatYearView_Template_tbody_keyup_4_listener($event) {\n              return ctx._handleCalendarBodyKeyup($event);\n            })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) {\n              return ctx._handleCalendarBodyKeydown($event);\n            });\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"startValue\", ctx._selectedMonth)(\"endValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n          }\n        },\n        dependencies: [MatCalendarBody],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatYearView;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet calendarHeaderId = 1;\n/** Default header for MatCalendar */\nlet MatCalendarHeader = /*#__PURE__*/(() => {\n  class MatCalendarHeader {\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n      this._intl = _intl;\n      this.calendar = calendar;\n      this._dateAdapter = _dateAdapter;\n      this._dateFormats = _dateFormats;\n      this._id = `mat-calendar-header-${calendarHeaderId++}`;\n      this._periodButtonLabelId = `${this._id}-period-label`;\n      this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    /** The display text for the current calendar view. */\n    get periodButtonText() {\n      if (this.calendar.currentView == 'month') {\n        return this._dateAdapter.format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel).toLocaleUpperCase();\n      }\n      if (this.calendar.currentView == 'year') {\n        return this._dateAdapter.getYearName(this.calendar.activeDate);\n      }\n      return this._intl.formatYearRange(...this._formatMinAndMaxYearLabels());\n    }\n    /** The aria description for the current calendar view. */\n    get periodButtonDescription() {\n      if (this.calendar.currentView == 'month') {\n        return this._dateAdapter.format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel).toLocaleUpperCase();\n      }\n      if (this.calendar.currentView == 'year') {\n        return this._dateAdapter.getYearName(this.calendar.activeDate);\n      }\n      // Format a label for the window of years displayed in the multi-year calendar view. Use\n      // `formatYearRangeLabel` because it is TTS friendly.\n      return this._intl.formatYearRangeLabel(...this._formatMinAndMaxYearLabels());\n    }\n    /** The `aria-label` for changing the calendar view. */\n    get periodButtonLabel() {\n      return this.calendar.currentView == 'month' ? this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /** The label for the previous button. */\n    get prevButtonLabel() {\n      return {\n        'month': this._intl.prevMonthLabel,\n        'year': this._intl.prevYearLabel,\n        'multi-year': this._intl.prevMultiYearLabel\n      }[this.calendar.currentView];\n    }\n    /** The label for the next button. */\n    get nextButtonLabel() {\n      return {\n        'month': this._intl.nextMonthLabel,\n        'year': this._intl.nextYearLabel,\n        'multi-year': this._intl.nextMultiYearLabel\n      }[this.calendar.currentView];\n    }\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked() {\n      this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /** Handles user clicks on the previous button. */\n    previousClicked() {\n      this.calendar.activeDate = this.calendar.currentView == 'month' ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /** Handles user clicks on the next button. */\n    nextClicked() {\n      this.calendar.activeDate = this.calendar.currentView == 'month' ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /** Whether the previous period button is enabled. */\n    previousEnabled() {\n      if (!this.calendar.minDate) {\n        return true;\n      }\n      return !this.calendar.minDate || !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /** Whether the next period button is enabled. */\n    nextEnabled() {\n      return !this.calendar.maxDate || !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    _isSameView(date1, date2) {\n      if (this.calendar.currentView == 'month') {\n        return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) && this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n      }\n      if (this.calendar.currentView == 'year') {\n        return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n      }\n      // Otherwise we are in 'multi-year' view.\n      return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n    /**\n     * Format two individual labels for the minimum year and maximum year available in the multi-year\n     * calendar view. Returns an array of two strings where the first string is the formatted label\n     * for the minimum year, and the second string is the formatted label for the maximum year.\n     */\n    _formatMinAndMaxYearLabels() {\n      // The offset from the active year to the \"slot\" for the starting year is the\n      // *actual* first rendered year in the multi-year view, and the last year is\n      // just yearsPerPage - 1 away.\n      const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n      const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n      const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n      const minYearLabel = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n      const maxYearLabel = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n      return [minYearLabel, maxYearLabel];\n    }\n    static {\n      this.ɵfac = function MatCalendarHeader_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatCalendarHeader)(i0.ɵɵdirectiveInject(MatDatepickerIntl), i0.ɵɵdirectiveInject(forwardRef(() => MatCalendar)), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatCalendarHeader,\n        selectors: [[\"mat-calendar-header\"]],\n        exportAs: [\"matCalendarHeader\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c1,\n        decls: 13,\n        vars: 11,\n        consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"aria-live\", \"polite\", 1, \"cdk-visually-hidden\", 3, \"id\"], [\"mat-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-period-button\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"viewBox\", \"0 0 10 5\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mat-calendar-arrow\"], [\"points\", \"0,0 5,5 10,0\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"click\", \"disabled\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"click\", \"disabled\"]],\n        template: function MatCalendarHeader_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\", 2);\n            i0.ɵɵtext(3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"button\", 3);\n            i0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_4_listener() {\n              return ctx.currentPeriodClicked();\n            });\n            i0.ɵɵelementStart(5, \"span\", 4);\n            i0.ɵɵtext(6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(7, \"svg\", 5);\n            i0.ɵɵelement(8, \"polygon\", 6);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵnamespaceHTML();\n            i0.ɵɵelement(9, \"div\", 7);\n            i0.ɵɵprojection(10);\n            i0.ɵɵelementStart(11, \"button\", 8);\n            i0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_11_listener() {\n              return ctx.previousClicked();\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"button\", 9);\n            i0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_12_listener() {\n              return ctx.nextClicked();\n            });\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"id\", ctx._periodButtonLabelId);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate(ctx.periodButtonDescription);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel)(\"aria-describedby\", ctx._periodButtonLabelId);\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate(ctx.periodButtonText);\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView !== \"month\");\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n            i0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n            i0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n          }\n        },\n        dependencies: [MatButton, MatIconButton],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatCalendarHeader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** A calendar that is used as part of the datepicker. */\nlet MatCalendar = /*#__PURE__*/(() => {\n  class MatCalendar {\n    /** A date representing the period (month or year) to start the calendar in. */\n    get startAt() {\n      return this._startAt;\n    }\n    set startAt(value) {\n      this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The currently selected date. */\n    get selected() {\n      return this._selected;\n    }\n    set selected(value) {\n      if (value instanceof DateRange) {\n        this._selected = value;\n      } else {\n        this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n      }\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n      return this._minDate;\n    }\n    set minDate(value) {\n      this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n      return this._maxDate;\n    }\n    set maxDate(value) {\n      this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate() {\n      return this._clampedActiveDate;\n    }\n    set activeDate(value) {\n      this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n      this.stateChanges.next();\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Whether the calendar is in month view. */\n    get currentView() {\n      return this._currentView;\n    }\n    set currentView(value) {\n      const viewChangedResult = this._currentView !== value ? value : null;\n      this._currentView = value;\n      this._moveFocusOnNextTick = true;\n      this._changeDetectorRef.markForCheck();\n      if (viewChangedResult) {\n        this.viewChanged.emit(viewChangedResult);\n      }\n    }\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n      this._dateAdapter = _dateAdapter;\n      this._dateFormats = _dateFormats;\n      this._changeDetectorRef = _changeDetectorRef;\n      /**\n       * Used for scheduling that focus should be moved to the active cell on the next tick.\n       * We need to schedule it, rather than do it immediately, because we have to wait\n       * for Angular to re-evaluate the view children.\n       */\n      this._moveFocusOnNextTick = false;\n      /** Whether the calendar should be started in month or year view. */\n      this.startView = 'month';\n      /** Emits when the currently selected date changes. */\n      this.selectedChange = new EventEmitter();\n      /**\n       * Emits the year chosen in multiyear view.\n       * This doesn't imply a change on the selected date.\n       */\n      this.yearSelected = new EventEmitter();\n      /**\n       * Emits the month chosen in year view.\n       * This doesn't imply a change on the selected date.\n       */\n      this.monthSelected = new EventEmitter();\n      /**\n       * Emits when the current view changes.\n       */\n      this.viewChanged = new EventEmitter(true);\n      /** Emits when any date is selected. */\n      this._userSelection = new EventEmitter();\n      /** Emits a new date range value when the user completes a drag drop operation. */\n      this._userDragDrop = new EventEmitter();\n      /** Origin of active drag, or null when dragging is not active. */\n      this._activeDrag = null;\n      /**\n       * Emits whenever there is a state change that the header may need to respond to.\n       */\n      this.stateChanges = new Subject();\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._dateAdapter) {\n          throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n          throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n      }\n      this._intlChanges = _intl.changes.subscribe(() => {\n        _changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n      });\n    }\n    ngAfterContentInit() {\n      this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n      this.activeDate = this.startAt || this._dateAdapter.today();\n      // Assign to the private property since we don't want to move focus on init.\n      this._currentView = this.startView;\n    }\n    ngAfterViewChecked() {\n      if (this._moveFocusOnNextTick) {\n        this._moveFocusOnNextTick = false;\n        this.focusActiveCell();\n      }\n    }\n    ngOnDestroy() {\n      this._intlChanges.unsubscribe();\n      this.stateChanges.complete();\n    }\n    ngOnChanges(changes) {\n      // Ignore date changes that are at a different time on the same day. This fixes issues where\n      // the calendar re-renders when there is no meaningful change to [minDate] or [maxDate]\n      // (#24435).\n      const minDateChange = changes['minDate'] && !this._dateAdapter.sameDate(changes['minDate'].previousValue, changes['minDate'].currentValue) ? changes['minDate'] : undefined;\n      const maxDateChange = changes['maxDate'] && !this._dateAdapter.sameDate(changes['maxDate'].previousValue, changes['maxDate'].currentValue) ? changes['maxDate'] : undefined;\n      const changeRequiringRerender = minDateChange || maxDateChange || changes['dateFilter'];\n      if (changeRequiringRerender && !changeRequiringRerender.firstChange) {\n        const view = this._getCurrentViewComponent();\n        if (view) {\n          // Schedule focus to be moved to the active date since re-rendering\n          // can blur the active cell. See #29265.\n          this._moveFocusOnNextTick = true;\n          // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n          // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n          this._changeDetectorRef.detectChanges();\n          view._init();\n        }\n      }\n      this.stateChanges.next();\n    }\n    /** Focuses the active date. */\n    focusActiveCell() {\n      this._getCurrentViewComponent()._focusActiveCell(false);\n    }\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n      this._getCurrentViewComponent()._init();\n    }\n    /** Handles date selection in the month view. */\n    _dateSelected(event) {\n      const date = event.value;\n      if (this.selected instanceof DateRange || date && !this._dateAdapter.sameDate(date, this.selected)) {\n        this.selectedChange.emit(date);\n      }\n      this._userSelection.emit(event);\n    }\n    /** Handles year selection in the multiyear view. */\n    _yearSelectedInMultiYearView(normalizedYear) {\n      this.yearSelected.emit(normalizedYear);\n    }\n    /** Handles month selection in the year view. */\n    _monthSelectedInYearView(normalizedMonth) {\n      this.monthSelected.emit(normalizedMonth);\n    }\n    /** Handles year/month selection in the multi-year/year views. */\n    _goToDateInView(date, view) {\n      this.activeDate = date;\n      this.currentView = view;\n    }\n    /** Called when the user starts dragging to change a date range. */\n    _dragStarted(event) {\n      this._activeDrag = event;\n    }\n    /**\n     * Called when a drag completes. It may end in cancelation or in the selection\n     * of a new range.\n     */\n    _dragEnded(event) {\n      if (!this._activeDrag) return;\n      if (event.value) {\n        this._userDragDrop.emit(event);\n      }\n      this._activeDrag = null;\n    }\n    /** Returns the component instance that corresponds to the current calendar view. */\n    _getCurrentViewComponent() {\n      // The return type is explicitly written as a union to ensure that the Closure compiler does\n      // not optimize calls to _init(). Without the explicit return type, TypeScript narrows it to\n      // only the first component type. See https://github.com/angular/components/issues/22996.\n      return this.monthView || this.yearView || this.multiYearView;\n    }\n    static {\n      this.ɵfac = function MatCalendar_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatCalendar)(i0.ɵɵdirectiveInject(MatDatepickerIntl), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatCalendar,\n        selectors: [[\"mat-calendar\"]],\n        viewQuery: function MatCalendar_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(MatMonthView, 5);\n            i0.ɵɵviewQuery(MatYearView, 5);\n            i0.ɵɵviewQuery(MatMultiYearView, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-calendar\"],\n        inputs: {\n          headerComponent: \"headerComponent\",\n          startAt: \"startAt\",\n          startView: \"startView\",\n          selected: \"selected\",\n          minDate: \"minDate\",\n          maxDate: \"maxDate\",\n          dateFilter: \"dateFilter\",\n          dateClass: \"dateClass\",\n          comparisonStart: \"comparisonStart\",\n          comparisonEnd: \"comparisonEnd\",\n          startDateAccessibleName: \"startDateAccessibleName\",\n          endDateAccessibleName: \"endDateAccessibleName\"\n        },\n        outputs: {\n          selectedChange: \"selectedChange\",\n          yearSelected: \"yearSelected\",\n          monthSelected: \"monthSelected\",\n          viewChanged: \"viewChanged\",\n          _userSelection: \"_userSelection\",\n          _userDragDrop: \"_userDragDrop\"\n        },\n        exportAs: [\"matCalendar\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]), i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        decls: 5,\n        vars: 2,\n        consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"startDateAccessibleName\", \"endDateAccessibleName\", \"activeDrag\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\"], [3, \"activeDateChange\", \"_userSelection\", \"dragStarted\", \"dragEnded\", \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"startDateAccessibleName\", \"endDateAccessibleName\", \"activeDrag\"], [3, \"activeDateChange\", \"monthSelected\", \"selectedChange\", \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\"], [3, \"activeDateChange\", \"yearSelected\", \"selectedChange\", \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\"]],\n        template: function MatCalendar_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n            i0.ɵɵelementStart(1, \"div\", 1);\n            i0.ɵɵtemplate(2, MatCalendar_Case_2_Template, 1, 11, \"mat-month-view\", 2)(3, MatCalendar_Case_3_Template, 1, 6, \"mat-year-view\", 3)(4, MatCalendar_Case_4_Template, 1, 6, \"mat-multi-year-view\", 3);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            let tmp_1_0;\n            i0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional((tmp_1_0 = ctx.currentView) === \"month\" ? 2 : tmp_1_0 === \"year\" ? 3 : tmp_1_0 === \"multi-year\" ? 4 : -1);\n          }\n        },\n        dependencies: [CdkPortalOutlet, CdkMonitorFocus, MatMonthView, MatYearView, MatMultiYearView],\n        styles: [\".mat-calendar{display:block;font-family:var(--mat-datepicker-calendar-text-font, var(--mat-app-body-medium-font));font-size:var(--mat-datepicker-calendar-text-size, var(--mat-app-body-medium-size))}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;align-items:center;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0;margin:0 8px;font-size:var(--mat-datepicker-calendar-period-button-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-period-button-text-weight, var(--mat-app-title-small-weight));--mdc-text-button-label-text-color:var(--mat-datepicker-calendar-period-button-text-color, var(--mat-app-on-surface-variant))}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle;fill:var(--mat-datepicker-calendar-period-button-icon-color, var(--mat-app-on-surface-variant))}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-datepicker-content .mat-calendar-previous-button:not(.mat-mdc-button-disabled),.mat-datepicker-content .mat-calendar-next-button:not(.mat-mdc-button-disabled){color:var(--mat-datepicker-calendar-navigation-button-icon-color, var(--mat-app-on-surface-variant))}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0;color:var(--mat-datepicker-calendar-header-text-color, var(--mat-app-on-surface-variant));font-size:var(--mat-datepicker-calendar-header-text-size, var(--mat-app-title-small-size));font-weight:var(--mat-datepicker-calendar-header-text-weight, var(--mat-app-title-small-weight))}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px;background:var(--mat-datepicker-calendar-header-divider-color)}.mat-calendar-body-cell-content::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 3px)*-1)}.mat-calendar-body-cell:focus .mat-focus-indicator::before{content:\\\"\\\"}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatCalendar;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nconst matDatepickerAnimations = {\n  /** Transforms the height of the datepicker's calendar. */\n  transformPanel: /*#__PURE__*/trigger('transformPanel', [/*#__PURE__*/transition('void => enter-dropdown', /*#__PURE__*/animate('120ms cubic-bezier(0, 0, 0.2, 1)', /*#__PURE__*/keyframes([/*#__PURE__*/style({\n    opacity: 0,\n    transform: 'scale(1, 0.8)'\n  }), /*#__PURE__*/style({\n    opacity: 1,\n    transform: 'scale(1, 1)'\n  })]))), /*#__PURE__*/transition('void => enter-dialog', /*#__PURE__*/animate('150ms cubic-bezier(0, 0, 0.2, 1)', /*#__PURE__*/keyframes([/*#__PURE__*/style({\n    opacity: 0,\n    transform: 'scale(0.7)'\n  }), /*#__PURE__*/style({\n    transform: 'none',\n    opacity: 1\n  })]))), /*#__PURE__*/transition('* => void', /*#__PURE__*/animate('100ms linear', /*#__PURE__*/style({\n    opacity: 0\n  })))]),\n  /** Fades in the content of the calendar. */\n  fadeInCalendar: /*#__PURE__*/trigger('fadeInCalendar', [/*#__PURE__*/state('void', /*#__PURE__*/style({\n    opacity: 0\n  })), /*#__PURE__*/state('enter', /*#__PURE__*/style({\n    opacity: 1\n  })),\n  /*#__PURE__*/\n  // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n  // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n  transition('void => *', /*#__PURE__*/animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))])\n};\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n/** Injection token that determines the scroll handling while the calendar is open. */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = /*#__PURE__*/new InjectionToken('mat-datepicker-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\n/** @docs-private */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY\n};\n/**\n * Component used as the content for the datepicker overlay. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the overlay that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\nlet MatDatepickerContent = /*#__PURE__*/(() => {\n  class MatDatepickerContent {\n    constructor(_elementRef, _changeDetectorRef, _globalModel, _dateAdapter, _rangeSelectionStrategy, intl) {\n      this._elementRef = _elementRef;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._globalModel = _globalModel;\n      this._dateAdapter = _dateAdapter;\n      this._rangeSelectionStrategy = _rangeSelectionStrategy;\n      this._subscriptions = new Subscription();\n      /** Emits when an animation has finished. */\n      this._animationDone = new Subject();\n      /** Whether there is an in-progress animation. */\n      this._isAnimating = false;\n      /** Portal with projected action buttons. */\n      this._actionsPortal = null;\n      this._closeButtonText = intl.closeCalendarLabel;\n    }\n    ngOnInit() {\n      this._animationState = this.datepicker.touchUi ? 'enter-dialog' : 'enter-dropdown';\n    }\n    ngAfterViewInit() {\n      this._subscriptions.add(this.datepicker.stateChanges.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      }));\n      this._calendar.focusActiveCell();\n    }\n    ngOnDestroy() {\n      this._subscriptions.unsubscribe();\n      this._animationDone.complete();\n    }\n    _handleUserSelection(event) {\n      const selection = this._model.selection;\n      const value = event.value;\n      const isRange = selection instanceof DateRange;\n      // If we're selecting a range and we have a selection strategy, always pass the value through\n      // there. Otherwise don't assign null values to the model, unless we're selecting a range.\n      // A null value when picking a range means that the user cancelled the selection (e.g. by\n      // pressing escape), whereas when selecting a single value it means that the value didn't\n      // change. This isn't very intuitive, but it's here for backwards-compatibility.\n      if (isRange && this._rangeSelectionStrategy) {\n        const newSelection = this._rangeSelectionStrategy.selectionFinished(value, selection, event.event);\n        this._model.updateSelection(newSelection, this);\n      } else if (value && (isRange || !this._dateAdapter.sameDate(value, selection))) {\n        this._model.add(value);\n      }\n      // Delegate closing the overlay to the actions.\n      if ((!this._model || this._model.isComplete()) && !this._actionsPortal) {\n        this.datepicker.close();\n      }\n    }\n    _handleUserDragDrop(event) {\n      this._model.updateSelection(event.value, this);\n    }\n    _startExitAnimation() {\n      this._animationState = 'void';\n      this._changeDetectorRef.markForCheck();\n    }\n    _handleAnimationEvent(event) {\n      this._isAnimating = event.phaseName === 'start';\n      if (!this._isAnimating) {\n        this._animationDone.next();\n      }\n    }\n    _getSelected() {\n      return this._model.selection;\n    }\n    /** Applies the current pending selection to the global model. */\n    _applyPendingSelection() {\n      if (this._model !== this._globalModel) {\n        this._globalModel.updateSelection(this._model.selection, this);\n      }\n    }\n    /**\n     * Assigns a new portal containing the datepicker actions.\n     * @param portal Portal with the actions to be assigned.\n     * @param forceRerender Whether a re-render of the portal should be triggered. This isn't\n     * necessary if the portal is assigned during initialization, but it may be required if it's\n     * added at a later point.\n     */\n    _assignActions(portal, forceRerender) {\n      // If we have actions, clone the model so that we have the ability to cancel the selection,\n      // otherwise update the global model directly. Note that we want to assign this as soon as\n      // possible, but `_actionsPortal` isn't available in the constructor so we do it in `ngOnInit`.\n      this._model = portal ? this._globalModel.clone() : this._globalModel;\n      this._actionsPortal = portal;\n      if (forceRerender) {\n        this._changeDetectorRef.detectChanges();\n      }\n    }\n    static {\n      this.ɵfac = function MatDatepickerContent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatDatepickerContent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MatDateSelectionModel), i0.ɵɵdirectiveInject(i1.DateAdapter), i0.ɵɵdirectiveInject(MAT_DATE_RANGE_SELECTION_STRATEGY, 8), i0.ɵɵdirectiveInject(MatDatepickerIntl));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatDatepickerContent,\n        selectors: [[\"mat-datepicker-content\"]],\n        viewQuery: function MatDatepickerContent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(MatCalendar, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-datepicker-content\"],\n        hostVars: 5,\n        hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵsyntheticHostListener(\"@transformPanel.start\", function MatDatepickerContent_animation_transformPanel_start_HostBindingHandler($event) {\n              return ctx._handleAnimationEvent($event);\n            })(\"@transformPanel.done\", function MatDatepickerContent_animation_transformPanel_done_HostBindingHandler($event) {\n              return ctx._handleAnimationEvent($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵsyntheticHostProperty(\"@transformPanel\", ctx._animationState);\n            i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n            i0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n          }\n        },\n        inputs: {\n          color: \"color\"\n        },\n        exportAs: [\"matDatepickerContent\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 5,\n        vars: 27,\n        consts: [[\"cdkTrapFocus\", \"\", \"role\", \"dialog\", 1, \"mat-datepicker-content-container\"], [3, \"yearSelected\", \"monthSelected\", \"viewChanged\", \"_userSelection\", \"_userDragDrop\", \"id\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"startDateAccessibleName\", \"endDateAccessibleName\"], [3, \"cdkPortalOutlet\"], [\"type\", \"button\", \"mat-raised-button\", \"\", 1, \"mat-datepicker-close-button\", 3, \"focus\", \"blur\", \"click\", \"color\"]],\n        template: function MatDatepickerContent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-calendar\", 1);\n            i0.ɵɵlistener(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_1_listener($event) {\n              return ctx.datepicker._selectYear($event);\n            })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_1_listener($event) {\n              return ctx.datepicker._selectMonth($event);\n            })(\"viewChanged\", function MatDatepickerContent_Template_mat_calendar_viewChanged_1_listener($event) {\n              return ctx.datepicker._viewChanged($event);\n            })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_1_listener($event) {\n              return ctx._handleUserSelection($event);\n            })(\"_userDragDrop\", function MatDatepickerContent_Template_mat_calendar__userDragDrop_1_listener($event) {\n              return ctx._handleUserDragDrop($event);\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(2, MatDatepickerContent_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n            i0.ɵɵelementStart(3, \"button\", 3);\n            i0.ɵɵlistener(\"focus\", function MatDatepickerContent_Template_button_focus_3_listener() {\n              return ctx._closeButtonFocused = true;\n            })(\"blur\", function MatDatepickerContent_Template_button_blur_3_listener() {\n              return ctx._closeButtonFocused = false;\n            })(\"click\", function MatDatepickerContent_Template_button_click_3_listener() {\n              return ctx.datepicker.close();\n            });\n            i0.ɵɵtext(4);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            let tmp_3_0;\n            i0.ɵɵclassProp(\"mat-datepicker-content-container-with-custom-header\", ctx.datepicker.calendarHeaderComponent)(\"mat-datepicker-content-container-with-actions\", ctx._actionsPortal);\n            i0.ɵɵattribute(\"aria-modal\", true)(\"aria-labelledby\", (tmp_3_0 = ctx._dialogLabelId) !== null && tmp_3_0 !== undefined ? tmp_3_0 : undefined);\n            i0.ɵɵadvance();\n            i0.ɵɵclassMap(ctx.datepicker.panelClass);\n            i0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._getMinDate())(\"maxDate\", ctx.datepicker._getMaxDate())(\"dateFilter\", ctx.datepicker._getDateFilter())(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx._getSelected())(\"dateClass\", ctx.datepicker.dateClass)(\"comparisonStart\", ctx.comparisonStart)(\"comparisonEnd\", ctx.comparisonEnd)(\"@fadeInCalendar\", \"enter\")(\"startDateAccessibleName\", ctx.startDateAccessibleName)(\"endDateAccessibleName\", ctx.endDateAccessibleName);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"cdkPortalOutlet\", ctx._actionsPortal);\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"cdk-visually-hidden\", !ctx._closeButtonFocused);\n            i0.ɵɵproperty(\"color\", ctx.color || \"primary\");\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate(ctx._closeButtonText);\n          }\n        },\n        dependencies: [CdkTrapFocus, MatCalendar, CdkPortalOutlet, MatButton],\n        styles: [\".mat-datepicker-content{display:block;border-radius:4px;background-color:var(--mat-datepicker-calendar-container-background-color, var(--mat-app-surface-container-high));color:var(--mat-datepicker-calendar-container-text-color, var(--mat-app-on-surface));box-shadow:var(--mat-datepicker-calendar-container-elevation-shadow);border-radius:var(--mat-datepicker-calendar-container-shape, var(--mat-app-corner-large))}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-content-container-with-custom-header .mat-calendar{height:auto}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;box-shadow:var(--mat-datepicker-calendar-container-touch-elevation-shadow);border-radius:var(--mat-datepicker-calendar-container-touch-shape, var(--mat-app-corner-extra-large));position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\"],\n        encapsulation: 2,\n        data: {\n          animation: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return MatDatepickerContent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Base class for a datepicker. */\nlet MatDatepickerBase = /*#__PURE__*/(() => {\n  class MatDatepickerBase {\n    /** The date to open the calendar to initially. */\n    get startAt() {\n      // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n      // selected value is.\n      return this._startAt || (this.datepickerInput ? this.datepickerInput.getStartValue() : null);\n    }\n    set startAt(value) {\n      this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * Theme color of the datepicker's calendar. This API is supported in M2 themes only, it\n     * has no effect in M3 themes.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/theming#using-component-color-variants.\n     */\n    get color() {\n      return this._color || (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n    }\n    set color(value) {\n      this._color = value;\n    }\n    /** Whether the datepicker pop-up should be disabled. */\n    get disabled() {\n      return this._disabled === undefined && this.datepickerInput ? this.datepickerInput.disabled : !!this._disabled;\n    }\n    set disabled(value) {\n      if (value !== this._disabled) {\n        this._disabled = value;\n        this.stateChanges.next(undefined);\n      }\n    }\n    /** Classes to be passed to the date picker panel. */\n    get panelClass() {\n      return this._panelClass;\n    }\n    set panelClass(value) {\n      this._panelClass = coerceStringArray(value);\n    }\n    /** Whether the calendar is open. */\n    get opened() {\n      return this._opened;\n    }\n    set opened(value) {\n      if (value) {\n        this.open();\n      } else {\n        this.close();\n      }\n    }\n    /** The minimum selectable date. */\n    _getMinDate() {\n      return this.datepickerInput && this.datepickerInput.min;\n    }\n    /** The maximum selectable date. */\n    _getMaxDate() {\n      return this.datepickerInput && this.datepickerInput.max;\n    }\n    _getDateFilter() {\n      return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n    constructor(_overlay,\n    /**\n     * @deprecated parameter is unused and will be removed\n     * @breaking-change 19.0.0\n     */\n    _unusedNgZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _model) {\n      this._overlay = _overlay;\n      this._viewContainerRef = _viewContainerRef;\n      this._dateAdapter = _dateAdapter;\n      this._dir = _dir;\n      this._model = _model;\n      this._inputStateChanges = Subscription.EMPTY;\n      this._document = inject(DOCUMENT);\n      /** The view that the calendar should start in. */\n      this.startView = 'month';\n      /**\n       * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n       * than a dropdown and elements have more padding to allow for bigger touch targets.\n       */\n      this.touchUi = false;\n      /** Preferred position of the datepicker in the X axis. */\n      this.xPosition = 'start';\n      /** Preferred position of the datepicker in the Y axis. */\n      this.yPosition = 'below';\n      /**\n       * Whether to restore focus to the previously-focused element when the calendar is closed.\n       * Note that automatic focus restoration is an accessibility feature and it is recommended that\n       * you provide your own equivalent, if you decide to turn it off.\n       */\n      this.restoreFocus = true;\n      /**\n       * Emits selected year in multiyear view.\n       * This doesn't imply a change on the selected date.\n       */\n      this.yearSelected = new EventEmitter();\n      /**\n       * Emits selected month in year view.\n       * This doesn't imply a change on the selected date.\n       */\n      this.monthSelected = new EventEmitter();\n      /**\n       * Emits when the current view changes.\n       */\n      this.viewChanged = new EventEmitter(true);\n      /** Emits when the datepicker has been opened. */\n      this.openedStream = new EventEmitter();\n      /** Emits when the datepicker has been closed. */\n      this.closedStream = new EventEmitter();\n      this._opened = false;\n      /** The id for the datepicker calendar. */\n      this.id = `mat-datepicker-${datepickerUid++}`;\n      /** The element that was focused before the datepicker was opened. */\n      this._focusedElementBeforeOpen = null;\n      /** Unique class that will be added to the backdrop so that the test harnesses can look it up. */\n      this._backdropHarnessClass = `${this.id}-backdrop`;\n      /** Emits when the datepicker's state changes. */\n      this.stateChanges = new Subject();\n      this._injector = inject(Injector);\n      this._changeDetectorRef = inject(ChangeDetectorRef);\n      if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n      this._scrollStrategy = scrollStrategy;\n      this._model.selectionChanged.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n    ngOnChanges(changes) {\n      const positionChange = changes['xPosition'] || changes['yPosition'];\n      if (positionChange && !positionChange.firstChange && this._overlayRef) {\n        const positionStrategy = this._overlayRef.getConfig().positionStrategy;\n        if (positionStrategy instanceof FlexibleConnectedPositionStrategy) {\n          this._setConnectedPositions(positionStrategy);\n          if (this.opened) {\n            this._overlayRef.updatePosition();\n          }\n        }\n      }\n      this.stateChanges.next(undefined);\n    }\n    ngOnDestroy() {\n      this._destroyOverlay();\n      this.close();\n      this._inputStateChanges.unsubscribe();\n      this.stateChanges.complete();\n    }\n    /** Selects the given date */\n    select(date) {\n      this._model.add(date);\n    }\n    /** Emits the selected year in multiyear view */\n    _selectYear(normalizedYear) {\n      this.yearSelected.emit(normalizedYear);\n    }\n    /** Emits selected month in year view */\n    _selectMonth(normalizedMonth) {\n      this.monthSelected.emit(normalizedMonth);\n    }\n    /** Emits changed view */\n    _viewChanged(view) {\n      this.viewChanged.emit(view);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     * @returns Selection model that the input should hook itself up to.\n     */\n    registerInput(input) {\n      if (this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('A MatDatepicker can only be associated with a single input.');\n      }\n      this._inputStateChanges.unsubscribe();\n      this.datepickerInput = input;\n      this._inputStateChanges = input.stateChanges.subscribe(() => this.stateChanges.next(undefined));\n      return this._model;\n    }\n    /**\n     * Registers a portal containing action buttons with the datepicker.\n     * @param portal Portal to be registered.\n     */\n    registerActions(portal) {\n      if (this._actionsPortal && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('A MatDatepicker can only be associated with a single actions row.');\n      }\n      this._actionsPortal = portal;\n      this._componentRef?.instance._assignActions(portal, true);\n    }\n    /**\n     * Removes a portal containing action buttons from the datepicker.\n     * @param portal Portal to be removed.\n     */\n    removeActions(portal) {\n      if (portal === this._actionsPortal) {\n        this._actionsPortal = null;\n        this._componentRef?.instance._assignActions(null, true);\n      }\n    }\n    /** Open the calendar. */\n    open() {\n      // Skip reopening if there's an in-progress animation to avoid overlapping\n      // sequences which can cause \"changed after checked\" errors. See #25837.\n      if (this._opened || this.disabled || this._componentRef?.instance._isAnimating) {\n        return;\n      }\n      if (!this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Attempted to open an MatDatepicker with no associated input.');\n      }\n      this._focusedElementBeforeOpen = _getFocusedElementPierceShadowDom();\n      this._openOverlay();\n      this._opened = true;\n      this.openedStream.emit();\n    }\n    /** Close the calendar. */\n    close() {\n      // Skip reopening if there's an in-progress animation to avoid overlapping\n      // sequences which can cause \"changed after checked\" errors. See #25837.\n      if (!this._opened || this._componentRef?.instance._isAnimating) {\n        return;\n      }\n      const canRestoreFocus = this.restoreFocus && this._focusedElementBeforeOpen && typeof this._focusedElementBeforeOpen.focus === 'function';\n      const completeClose = () => {\n        // The `_opened` could've been reset already if\n        // we got two events in quick succession.\n        if (this._opened) {\n          this._opened = false;\n          this.closedStream.emit();\n        }\n      };\n      if (this._componentRef) {\n        const {\n          instance,\n          location\n        } = this._componentRef;\n        instance._startExitAnimation();\n        instance._animationDone.pipe(take(1)).subscribe(() => {\n          const activeElement = this._document.activeElement;\n          // Since we restore focus after the exit animation, we have to check that\n          // the user didn't move focus themselves inside the `close` handler.\n          if (canRestoreFocus && (!activeElement || activeElement === this._document.activeElement || location.nativeElement.contains(activeElement))) {\n            this._focusedElementBeforeOpen.focus();\n          }\n          this._focusedElementBeforeOpen = null;\n          this._destroyOverlay();\n        });\n      }\n      if (canRestoreFocus) {\n        // Because IE moves focus asynchronously, we can't count on it being restored before we've\n        // marked the datepicker as closed. If the event fires out of sequence and the element that\n        // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n        // able to close the calendar at all. We work around it by making the logic, that marks\n        // the datepicker as closed, async as well.\n        setTimeout(completeClose);\n      } else {\n        completeClose();\n      }\n    }\n    /** Applies the current pending selection on the overlay to the model. */\n    _applyPendingSelection() {\n      this._componentRef?.instance?._applyPendingSelection();\n    }\n    /** Forwards relevant values from the datepicker to the datepicker content inside the overlay. */\n    _forwardContentValues(instance) {\n      instance.datepicker = this;\n      instance.color = this.color;\n      instance._dialogLabelId = this.datepickerInput.getOverlayLabelId();\n      instance._assignActions(this._actionsPortal, false);\n    }\n    /** Opens the overlay with the calendar. */\n    _openOverlay() {\n      this._destroyOverlay();\n      const isDialog = this.touchUi;\n      const portal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n      const overlayRef = this._overlayRef = this._overlay.create(new OverlayConfig({\n        positionStrategy: isDialog ? this._getDialogStrategy() : this._getDropdownStrategy(),\n        hasBackdrop: true,\n        backdropClass: [isDialog ? 'cdk-overlay-dark-backdrop' : 'mat-overlay-transparent-backdrop', this._backdropHarnessClass],\n        direction: this._dir,\n        scrollStrategy: isDialog ? this._overlay.scrollStrategies.block() : this._scrollStrategy(),\n        panelClass: `mat-datepicker-${isDialog ? 'dialog' : 'popup'}`\n      }));\n      this._getCloseStream(overlayRef).subscribe(event => {\n        if (event) {\n          event.preventDefault();\n        }\n        this.close();\n      });\n      // The `preventDefault` call happens inside the calendar as well, however focus moves into\n      // it inside a timeout which can give browsers a chance to fire off a keyboard event in-between\n      // that can scroll the page (see #24969). Always block default actions of arrow keys for the\n      // entire overlay so the page doesn't get scrolled by accident.\n      overlayRef.keydownEvents().subscribe(event => {\n        const keyCode = event.keyCode;\n        if (keyCode === UP_ARROW || keyCode === DOWN_ARROW || keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW || keyCode === PAGE_UP || keyCode === PAGE_DOWN) {\n          event.preventDefault();\n        }\n      });\n      this._componentRef = overlayRef.attach(portal);\n      this._forwardContentValues(this._componentRef.instance);\n      // Update the position once the calendar has rendered. Only relevant in dropdown mode.\n      if (!isDialog) {\n        afterNextRender(() => {\n          overlayRef.updatePosition();\n        }, {\n          injector: this._injector\n        });\n      }\n    }\n    /** Destroys the current overlay. */\n    _destroyOverlay() {\n      if (this._overlayRef) {\n        this._overlayRef.dispose();\n        this._overlayRef = this._componentRef = null;\n      }\n    }\n    /** Gets a position strategy that will open the calendar as a dropdown. */\n    _getDialogStrategy() {\n      return this._overlay.position().global().centerHorizontally().centerVertically();\n    }\n    /** Gets a position strategy that will open the calendar as a dropdown. */\n    _getDropdownStrategy() {\n      const strategy = this._overlay.position().flexibleConnectedTo(this.datepickerInput.getConnectedOverlayOrigin()).withTransformOriginOn('.mat-datepicker-content').withFlexibleDimensions(false).withViewportMargin(8).withLockedPosition();\n      return this._setConnectedPositions(strategy);\n    }\n    /** Sets the positions of the datepicker in dropdown mode based on the current configuration. */\n    _setConnectedPositions(strategy) {\n      const primaryX = this.xPosition === 'end' ? 'end' : 'start';\n      const secondaryX = primaryX === 'start' ? 'end' : 'start';\n      const primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n      const secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n      return strategy.withPositions([{\n        originX: primaryX,\n        originY: secondaryY,\n        overlayX: primaryX,\n        overlayY: primaryY\n      }, {\n        originX: primaryX,\n        originY: primaryY,\n        overlayX: primaryX,\n        overlayY: secondaryY\n      }, {\n        originX: secondaryX,\n        originY: secondaryY,\n        overlayX: secondaryX,\n        overlayY: primaryY\n      }, {\n        originX: secondaryX,\n        originY: primaryY,\n        overlayX: secondaryX,\n        overlayY: secondaryY\n      }]);\n    }\n    /** Gets an observable that will emit when the overlay is supposed to be closed. */\n    _getCloseStream(overlayRef) {\n      const ctrlShiftMetaModifiers = ['ctrlKey', 'shiftKey', 'metaKey'];\n      return merge(overlayRef.backdropClick(), overlayRef.detachments(), overlayRef.keydownEvents().pipe(filter(event => {\n        // Closing on alt + up is only valid when there's an input associated with the datepicker.\n        return event.keyCode === ESCAPE && !hasModifierKey(event) || this.datepickerInput && hasModifierKey(event, 'altKey') && event.keyCode === UP_ARROW && ctrlShiftMetaModifiers.every(modifier => !hasModifierKey(event, modifier));\n      })));\n    }\n    static {\n      this.ɵfac = function MatDatepickerBase_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatDatepickerBase)(i0.ɵɵdirectiveInject(i4.Overlay), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(MatDateSelectionModel));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatDatepickerBase,\n        inputs: {\n          calendarHeaderComponent: \"calendarHeaderComponent\",\n          startAt: \"startAt\",\n          startView: \"startView\",\n          color: \"color\",\n          touchUi: [2, \"touchUi\", \"touchUi\", booleanAttribute],\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          xPosition: \"xPosition\",\n          yPosition: \"yPosition\",\n          restoreFocus: [2, \"restoreFocus\", \"restoreFocus\", booleanAttribute],\n          dateClass: \"dateClass\",\n          panelClass: \"panelClass\",\n          opened: [2, \"opened\", \"opened\", booleanAttribute]\n        },\n        outputs: {\n          yearSelected: \"yearSelected\",\n          monthSelected: \"monthSelected\",\n          viewChanged: \"viewChanged\",\n          openedStream: \"opened\",\n          closedStream: \"closed\"\n        },\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return MatDatepickerBase;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\nlet MatDatepicker = /*#__PURE__*/(() => {\n  class MatDatepicker extends MatDatepickerBase {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatDatepicker_BaseFactory;\n        return function MatDatepicker_Factory(__ngFactoryType__) {\n          return (ɵMatDatepicker_BaseFactory || (ɵMatDatepicker_BaseFactory = i0.ɵɵgetInheritedFactory(MatDatepicker)))(__ngFactoryType__ || MatDatepicker);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatDatepicker,\n        selectors: [[\"mat-datepicker\"]],\n        exportAs: [\"matDatepicker\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, {\n          provide: MatDatepickerBase,\n          useExisting: MatDatepicker\n        }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        decls: 0,\n        vars: 0,\n        template: function MatDatepicker_Template(rf, ctx) {},\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatDatepicker;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nclass MatDatepickerInputEvent {\n  constructor( /** Reference to the datepicker input component that emitted the event. */\n  target, /** Reference to the native input element associated with the datepicker input. */\n  targetElement) {\n    this.target = target;\n    this.targetElement = targetElement;\n    this.value = this.target.value;\n  }\n}\n/** Base class for datepicker inputs. */\nlet MatDatepickerInputBase = /*#__PURE__*/(() => {\n  class MatDatepickerInputBase {\n    /** The value of the input. */\n    get value() {\n      return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue;\n    }\n    set value(value) {\n      this._assignValueProgrammatically(value);\n    }\n    /** Whether the datepicker-input is disabled. */\n    get disabled() {\n      return !!this._disabled || this._parentDisabled();\n    }\n    set disabled(value) {\n      const newValue = value;\n      const element = this._elementRef.nativeElement;\n      if (this._disabled !== newValue) {\n        this._disabled = newValue;\n        this.stateChanges.next(undefined);\n      }\n      // We need to null check the `blur` method, because it's undefined during SSR.\n      // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n      // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n      // element has been inserted.\n      if (newValue && this._isInitialized && element.blur) {\n        // Normally, native input elements automatically blur if they turn disabled. This behavior\n        // is problematic, because it would mean that it triggers another change detection cycle,\n        // which then causes a changed after checked error if the input element was focused before.\n        element.blur();\n      }\n    }\n    /** Gets the base validator functions. */\n    _getValidators() {\n      return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator];\n    }\n    /** Registers a date selection model with the input. */\n    _registerModel(model) {\n      this._model = model;\n      this._valueChangesSubscription.unsubscribe();\n      if (this._pendingValue) {\n        this._assignValue(this._pendingValue);\n      }\n      this._valueChangesSubscription = this._model.selectionChanged.subscribe(event => {\n        if (this._shouldHandleChangeEvent(event)) {\n          const value = this._getValueFromModel(event.selection);\n          this._lastValueValid = this._isValidValue(value);\n          this._cvaOnChange(value);\n          this._onTouched();\n          this._formatValue(value);\n          this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n          this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n      });\n    }\n    constructor(_elementRef, _dateAdapter, _dateFormats) {\n      this._elementRef = _elementRef;\n      this._dateAdapter = _dateAdapter;\n      this._dateFormats = _dateFormats;\n      /** Emits when a `change` event is fired on this `<input>`. */\n      this.dateChange = new EventEmitter();\n      /** Emits when an `input` event is fired on this `<input>`. */\n      this.dateInput = new EventEmitter();\n      /** Emits when the internal state has changed */\n      this.stateChanges = new Subject();\n      this._onTouched = () => {};\n      this._validatorOnChange = () => {};\n      this._cvaOnChange = () => {};\n      this._valueChangesSubscription = Subscription.EMPTY;\n      this._localeSubscription = Subscription.EMPTY;\n      /** The form control validator for whether the input parses. */\n      this._parseValidator = () => {\n        return this._lastValueValid ? null : {\n          'matDatepickerParse': {\n            'text': this._elementRef.nativeElement.value\n          }\n        };\n      };\n      /** The form control validator for the date filter. */\n      this._filterValidator = control => {\n        const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n        return !controlValue || this._matchesFilter(controlValue) ? null : {\n          'matDatepickerFilter': true\n        };\n      };\n      /** The form control validator for the min date. */\n      this._minValidator = control => {\n        const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n        const min = this._getMinDate();\n        return !min || !controlValue || this._dateAdapter.compareDate(min, controlValue) <= 0 ? null : {\n          'matDatepickerMin': {\n            'min': min,\n            'actual': controlValue\n          }\n        };\n      };\n      /** The form control validator for the max date. */\n      this._maxValidator = control => {\n        const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n        const max = this._getMaxDate();\n        return !max || !controlValue || this._dateAdapter.compareDate(max, controlValue) >= 0 ? null : {\n          'matDatepickerMax': {\n            'max': max,\n            'actual': controlValue\n          }\n        };\n      };\n      /** Whether the last value set on the input was valid. */\n      this._lastValueValid = false;\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._dateAdapter) {\n          throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n          throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n      }\n      // Update the displayed date when the locale changes.\n      this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n        this._assignValueProgrammatically(this.value);\n      });\n    }\n    ngAfterViewInit() {\n      this._isInitialized = true;\n    }\n    ngOnChanges(changes) {\n      if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n        this.stateChanges.next(undefined);\n      }\n    }\n    ngOnDestroy() {\n      this._valueChangesSubscription.unsubscribe();\n      this._localeSubscription.unsubscribe();\n      this.stateChanges.complete();\n    }\n    /** @docs-private */\n    registerOnValidatorChange(fn) {\n      this._validatorOnChange = fn;\n    }\n    /** @docs-private */\n    validate(c) {\n      return this._validator ? this._validator(c) : null;\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n      this._assignValueProgrammatically(value);\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n      this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    _onKeydown(event) {\n      const ctrlShiftMetaModifiers = ['ctrlKey', 'shiftKey', 'metaKey'];\n      const isAltDownArrow = hasModifierKey(event, 'altKey') && event.keyCode === DOWN_ARROW && ctrlShiftMetaModifiers.every(modifier => !hasModifierKey(event, modifier));\n      if (isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n        this._openPopup();\n        event.preventDefault();\n      }\n    }\n    _onInput(value) {\n      const lastValueWasValid = this._lastValueValid;\n      let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n      this._lastValueValid = this._isValidValue(date);\n      date = this._dateAdapter.getValidDateOrNull(date);\n      const hasChanged = !this._dateAdapter.sameDate(date, this.value);\n      // We need to fire the CVA change event for all\n      // nulls, otherwise the validators won't run.\n      if (!date || hasChanged) {\n        this._cvaOnChange(date);\n      } else {\n        // Call the CVA change handler for invalid values\n        // since this is what marks the control as dirty.\n        if (value && !this.value) {\n          this._cvaOnChange(date);\n        }\n        if (lastValueWasValid !== this._lastValueValid) {\n          this._validatorOnChange();\n        }\n      }\n      if (hasChanged) {\n        this._assignValue(date);\n        this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n      }\n    }\n    _onChange() {\n      this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /** Handles blur events on the input. */\n    _onBlur() {\n      // Reformat the input only if we have a valid value.\n      if (this.value) {\n        this._formatValue(this.value);\n      }\n      this._onTouched();\n    }\n    /** Formats a value and sets it on the input element. */\n    _formatValue(value) {\n      this._elementRef.nativeElement.value = value != null ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /** Assigns a value to the model. */\n    _assignValue(value) {\n      // We may get some incoming values before the model was\n      // assigned. Save the value so that we can assign it later.\n      if (this._model) {\n        this._assignValueToModel(value);\n        this._pendingValue = null;\n      } else {\n        this._pendingValue = value;\n      }\n    }\n    /** Whether a value is considered valid. */\n    _isValidValue(value) {\n      return !value || this._dateAdapter.isValid(value);\n    }\n    /**\n     * Checks whether a parent control is disabled. This is in place so that it can be overridden\n     * by inputs extending this one which can be placed inside of a group that can be disabled.\n     */\n    _parentDisabled() {\n      return false;\n    }\n    /** Programmatically assigns a value to the input. */\n    _assignValueProgrammatically(value) {\n      value = this._dateAdapter.deserialize(value);\n      this._lastValueValid = this._isValidValue(value);\n      value = this._dateAdapter.getValidDateOrNull(value);\n      this._assignValue(value);\n      this._formatValue(value);\n    }\n    /** Gets whether a value matches the current date filter. */\n    _matchesFilter(value) {\n      const filter = this._getDateFilter();\n      return !filter || filter(value);\n    }\n    static {\n      this.ɵfac = function MatDatepickerInputBase_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatDatepickerInputBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatDatepickerInputBase,\n        inputs: {\n          value: \"value\",\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n        },\n        outputs: {\n          dateChange: \"dateChange\",\n          dateInput: \"dateInput\"\n        },\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return MatDatepickerInputBase;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Checks whether the `SimpleChanges` object from an `ngOnChanges`\n * callback has any changes, accounting for date objects.\n */\nfunction dateInputsHaveChanged(changes, adapter) {\n  const keys = Object.keys(changes);\n  for (let key of keys) {\n    const {\n      previousValue,\n      currentValue\n    } = changes[key];\n    if (adapter.isDateInstance(previousValue) && adapter.isDateInstance(currentValue)) {\n      if (!adapter.sameDate(previousValue, currentValue)) {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\n/** @docs-private */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n/** @docs-private */\nconst MAT_DATEPICKER_VALIDATORS = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n/** Directive used to connect an input to a MatDatepicker. */\nlet MatDatepickerInput = /*#__PURE__*/(() => {\n  class MatDatepickerInput extends MatDatepickerInputBase {\n    /** The datepicker that this input is associated with. */\n    set matDatepicker(datepicker) {\n      if (datepicker) {\n        this._datepicker = datepicker;\n        this._ariaOwns.set(datepicker.opened ? datepicker.id : null);\n        this._closedSubscription = datepicker.closedStream.subscribe(() => {\n          this._onTouched();\n          this._ariaOwns.set(null);\n        });\n        this._openedSubscription = datepicker.openedStream.subscribe(() => {\n          this._ariaOwns.set(datepicker.id);\n        });\n        this._registerModel(datepicker.registerInput(this));\n      }\n    }\n    /** The minimum valid date. */\n    get min() {\n      return this._min;\n    }\n    set min(value) {\n      const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n      if (!this._dateAdapter.sameDate(validValue, this._min)) {\n        this._min = validValue;\n        this._validatorOnChange();\n      }\n    }\n    /** The maximum valid date. */\n    get max() {\n      return this._max;\n    }\n    set max(value) {\n      const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n      if (!this._dateAdapter.sameDate(validValue, this._max)) {\n        this._max = validValue;\n        this._validatorOnChange();\n      }\n    }\n    /** Function that can be used to filter out dates within the datepicker. */\n    get dateFilter() {\n      return this._dateFilter;\n    }\n    set dateFilter(value) {\n      const wasMatchingValue = this._matchesFilter(this.value);\n      this._dateFilter = value;\n      if (this._matchesFilter(this.value) !== wasMatchingValue) {\n        this._validatorOnChange();\n      }\n    }\n    constructor(elementRef, dateAdapter, dateFormats, _formField) {\n      super(elementRef, dateAdapter, dateFormats);\n      this._formField = _formField;\n      this._closedSubscription = Subscription.EMPTY;\n      this._openedSubscription = Subscription.EMPTY;\n      /** The id of the panel owned by this input. */\n      this._ariaOwns = signal(null);\n      this._validator = Validators.compose(super._getValidators());\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n      return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the ID of an element that should be used a description for the calendar overlay. */\n    getOverlayLabelId() {\n      if (this._formField) {\n        return this._formField.getLabelId();\n      }\n      return this._elementRef.nativeElement.getAttribute('aria-labelledby');\n    }\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette() {\n      return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the value at which the calendar should start. */\n    getStartValue() {\n      return this.value;\n    }\n    ngOnDestroy() {\n      super.ngOnDestroy();\n      this._closedSubscription.unsubscribe();\n      this._openedSubscription.unsubscribe();\n    }\n    /** Opens the associated datepicker. */\n    _openPopup() {\n      if (this._datepicker) {\n        this._datepicker.open();\n      }\n    }\n    _getValueFromModel(modelValue) {\n      return modelValue;\n    }\n    _assignValueToModel(value) {\n      if (this._model) {\n        this._model.updateSelection(value, this);\n      }\n    }\n    /** Gets the input's minimum date. */\n    _getMinDate() {\n      return this._min;\n    }\n    /** Gets the input's maximum date. */\n    _getMaxDate() {\n      return this._max;\n    }\n    /** Gets the input's date filtering function. */\n    _getDateFilter() {\n      return this._dateFilter;\n    }\n    _shouldHandleChangeEvent(event) {\n      return event.source !== this;\n    }\n    static {\n      this.ɵfac = function MatDatepickerInput_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatDatepickerInput)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), i0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatDatepickerInput,\n        selectors: [[\"input\", \"matDatepicker\", \"\"]],\n        hostAttrs: [1, \"mat-datepicker-input\"],\n        hostVars: 6,\n        hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) {\n              return ctx._onInput($event.target.value);\n            })(\"change\", function MatDatepickerInput_change_HostBindingHandler() {\n              return ctx._onChange();\n            })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() {\n              return ctx._onBlur();\n            })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) {\n              return ctx._onKeydown($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n            i0.ɵɵattribute(\"aria-haspopup\", ctx._datepicker ? \"dialog\" : null)(\"aria-owns\", ctx._ariaOwns())(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null)(\"data-mat-calendar\", ctx._datepicker ? ctx._datepicker.id : null);\n          }\n        },\n        inputs: {\n          matDatepicker: \"matDatepicker\",\n          min: \"min\",\n          max: \"max\",\n          dateFilter: [0, \"matDatepickerFilter\", \"dateFilter\"]\n        },\n        exportAs: [\"matDatepickerInput\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, {\n          provide: MAT_INPUT_VALUE_ACCESSOR,\n          useExisting: MatDatepickerInput\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatDatepickerInput;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Can be used to override the icon of a `matDatepickerToggle`. */\nlet MatDatepickerToggleIcon = /*#__PURE__*/(() => {\n  class MatDatepickerToggleIcon {\n    static {\n      this.ɵfac = function MatDatepickerToggleIcon_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatDatepickerToggleIcon)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatDatepickerToggleIcon,\n        selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]],\n        standalone: true\n      });\n    }\n  }\n  return MatDatepickerToggleIcon;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatDatepickerToggle = /*#__PURE__*/(() => {\n  class MatDatepickerToggle {\n    /** Whether the toggle button is disabled. */\n    get disabled() {\n      if (this._disabled === undefined && this.datepicker) {\n        return this.datepicker.disabled;\n      }\n      return !!this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n    }\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n      this._intl = _intl;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._stateChanges = Subscription.EMPTY;\n      const parsedTabIndex = Number(defaultTabIndex);\n      this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n    }\n    ngOnChanges(changes) {\n      if (changes['datepicker']) {\n        this._watchStateChanges();\n      }\n    }\n    ngOnDestroy() {\n      this._stateChanges.unsubscribe();\n    }\n    ngAfterContentInit() {\n      this._watchStateChanges();\n    }\n    _open(event) {\n      if (this.datepicker && !this.disabled) {\n        this.datepicker.open();\n        event.stopPropagation();\n      }\n    }\n    _watchStateChanges() {\n      const datepickerStateChanged = this.datepicker ? this.datepicker.stateChanges : of();\n      const inputStateChanged = this.datepicker && this.datepicker.datepickerInput ? this.datepicker.datepickerInput.stateChanges : of();\n      const datepickerToggled = this.datepicker ? merge(this.datepicker.openedStream, this.datepicker.closedStream) : of();\n      this._stateChanges.unsubscribe();\n      this._stateChanges = merge(this._intl.changes, datepickerStateChanged, inputStateChanged, datepickerToggled).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    static {\n      this.ɵfac = function MatDatepickerToggle_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatDatepickerToggle)(i0.ɵɵdirectiveInject(MatDatepickerIntl), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵinjectAttribute('tabindex'));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatDatepickerToggle,\n        selectors: [[\"mat-datepicker-toggle\"]],\n        contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n          }\n        },\n        viewQuery: function MatDatepickerToggle_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c2, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._button = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-datepicker-toggle\"],\n        hostVars: 8,\n        hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"click\", function MatDatepickerToggle_click_HostBindingHandler($event) {\n              return ctx._open($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"tabindex\", null)(\"data-mat-calendar\", ctx.datepicker ? ctx.datepicker.id : null);\n            i0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n          }\n        },\n        inputs: {\n          datepicker: [0, \"for\", \"datepicker\"],\n          tabIndex: \"tabIndex\",\n          ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          disableRipple: \"disableRipple\"\n        },\n        exportAs: [\"matDatepickerToggle\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c4,\n        decls: 4,\n        vars: 6,\n        consts: [[\"button\", \"\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"disabled\", \"disableRipple\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]],\n        template: function MatDatepickerToggle_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c3);\n            i0.ɵɵelementStart(0, \"button\", 1, 0);\n            i0.ɵɵtemplate(2, MatDatepickerToggle_Conditional_2_Template, 2, 0, \":svg:svg\", 2);\n            i0.ɵɵprojection(3);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n            i0.ɵɵattribute(\"aria-haspopup\", ctx.datepicker ? \"dialog\" : null)(\"aria-label\", ctx.ariaLabel || ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(!ctx._customIcon ? 2 : -1);\n          }\n        },\n        dependencies: [MatIconButton],\n        styles: [\".mat-datepicker-toggle{pointer-events:auto;color:var(--mat-datepicker-toggle-icon-color, var(--mat-app-on-surface-variant))}.mat-datepicker-toggle-active{color:var(--mat-datepicker-toggle-active-state-icon-color, var(--mat-app-on-surface-variant))}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatDatepickerToggle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// This file contains the `_computeAriaAccessibleName` function, which computes what the *expected*\n// ARIA accessible name would be for a given element. Implements a subset of ARIA specification\n// [Accessible Name and Description Computation 1.2](https://www.w3.org/TR/accname-1.2/).\n//\n// Specification accname-1.2 can be summarized by returning the result of the first method\n// available.\n//\n//  1. `aria-labelledby` attribute\n//     ```\n//       <!-- example using aria-labelledby-->\n//       <label id='label-id'>Start Date</label>\n//       <input aria-labelledby='label-id'/>\n//     ```\n//  2. `aria-label` attribute (e.g. `<input aria-label=\"Departure\"/>`)\n//  3. Label with `for`/`id`\n//     ```\n//       <!-- example using for/id -->\n//       <label for=\"current-node\">Label</label>\n//       <input id=\"current-node\"/>\n//     ```\n//  4. `placeholder` attribute (e.g. `<input placeholder=\"06/03/1990\"/>`)\n//  5. `title` attribute (e.g. `<input title=\"Check-In\"/>`)\n//  6. text content\n//     ```\n//       <!-- example using text content -->\n//       <label for=\"current-node\"><span>Departure</span> Date</label>\n//       <input id=\"current-node\"/>\n//     ```\n/**\n * Computes the *expected* ARIA accessible name for argument element based on [accname-1.2\n * specification](https://www.w3.org/TR/accname-1.2/). Implements a subset of accname-1.2,\n * and should only be used for the Datepicker's specific use case.\n *\n * Intended use:\n * This is not a general use implementation. Only implements the parts of accname-1.2 that are\n * required for the Datepicker's specific use case. This function is not intended for any other\n * use.\n *\n * Limitations:\n *  - Only covers the needs of `matStartDate` and `matEndDate`. Does not support other use cases.\n *  - See NOTES's in implementation for specific details on what parts of the accname-1.2\n *  specification are not implemented.\n *\n *  @param element {HTMLInputElement} native &lt;input/&gt; element of `matStartDate` or\n *  `matEndDate` component. Corresponds to the 'Root Element' from accname-1.2\n *\n *  @return expected ARIA accessible name of argument &lt;input/&gt;\n */\nfunction _computeAriaAccessibleName(element) {\n  return _computeAriaAccessibleNameInternal(element, true);\n}\n/**\n * Determine if argument node is an Element based on `nodeType` property. This function is safe to\n * use with server-side rendering.\n */\nfunction ssrSafeIsElement(node) {\n  return node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Determine if argument node is an HTMLInputElement based on `nodeName` property. This funciton is\n * safe to use with server-side rendering.\n */\nfunction ssrSafeIsHTMLInputElement(node) {\n  return node.nodeName === 'INPUT';\n}\n/**\n * Determine if argument node is an HTMLTextAreaElement based on `nodeName` property. This\n * funciton is safe to use with server-side rendering.\n */\nfunction ssrSafeIsHTMLTextAreaElement(node) {\n  return node.nodeName === 'TEXTAREA';\n}\n/**\n * Calculate the expected ARIA accessible name for given DOM Node. Given DOM Node may be either the\n * \"Root node\" passed to `_computeAriaAccessibleName` or \"Current node\" as result of recursion.\n *\n * @return the accessible name of argument DOM Node\n *\n * @param currentNode node to determine accessible name of\n * @param isDirectlyReferenced true if `currentNode` is the root node to calculate ARIA accessible\n * name of. False if it is a result of recursion.\n */\nfunction _computeAriaAccessibleNameInternal(currentNode, isDirectlyReferenced) {\n  // NOTE: this differs from accname-1.2 specification.\n  //  - Does not implement Step 1. of accname-1.2: '''If `currentNode`'s role prohibits naming,\n  //    return the empty string (\"\")'''.\n  //  - Does not implement Step 2.A. of accname-1.2: '''if current node is hidden and not directly\n  //    referenced by aria-labelledby... return the empty string.'''\n  // acc-name-1.2 Step 2.B.: aria-labelledby\n  if (ssrSafeIsElement(currentNode) && isDirectlyReferenced) {\n    const labelledbyIds = currentNode.getAttribute?.('aria-labelledby')?.split(/\\s+/g) || [];\n    const validIdRefs = labelledbyIds.reduce((validIds, id) => {\n      const elem = document.getElementById(id);\n      if (elem) {\n        validIds.push(elem);\n      }\n      return validIds;\n    }, []);\n    if (validIdRefs.length) {\n      return validIdRefs.map(idRef => {\n        return _computeAriaAccessibleNameInternal(idRef, false);\n      }).join(' ');\n    }\n  }\n  // acc-name-1.2 Step 2.C.: aria-label\n  if (ssrSafeIsElement(currentNode)) {\n    const ariaLabel = currentNode.getAttribute('aria-label')?.trim();\n    if (ariaLabel) {\n      return ariaLabel;\n    }\n  }\n  // acc-name-1.2 Step 2.D. attribute or element that defines a text alternative\n  //\n  // NOTE: this differs from accname-1.2 specification.\n  // Only implements Step 2.D. for `<label>`,`<input/>`, and `<textarea/>` element. Does not\n  // implement other elements that have an attribute or element that defines a text alternative.\n  if (ssrSafeIsHTMLInputElement(currentNode) || ssrSafeIsHTMLTextAreaElement(currentNode)) {\n    // use label with a `for` attribute referencing the current node\n    if (currentNode.labels?.length) {\n      return Array.from(currentNode.labels).map(x => _computeAriaAccessibleNameInternal(x, false)).join(' ');\n    }\n    // use placeholder if available\n    const placeholder = currentNode.getAttribute('placeholder')?.trim();\n    if (placeholder) {\n      return placeholder;\n    }\n    // use title if available\n    const title = currentNode.getAttribute('title')?.trim();\n    if (title) {\n      return title;\n    }\n  }\n  // NOTE: this differs from accname-1.2 specification.\n  //  - does not implement acc-name-1.2 Step 2.E.: '''if the current node is a control embedded\n  //     within the label... then include the embedded control as part of the text alternative in\n  //     the following manner...'''. Step 2E applies to embedded controls such as textbox, listbox,\n  //     range, etc.\n  //  - does not implement acc-name-1.2 step 2.F.: check that '''role allows name from content''',\n  //    which applies to `currentNode` and its children.\n  //  - does not implement acc-name-1.2 Step 2.F.ii.: '''Check for CSS generated textual content'''\n  //    (e.g. :before and :after).\n  //  - does not implement acc-name-1.2 Step 2.I.: '''if the current node has a Tooltip attribute,\n  //    return its value'''\n  // Return text content with whitespace collapsed into a single space character. Accomplish\n  // acc-name-1.2 steps 2F, 2G, and 2H.\n  return (currentNode.textContent || '').replace(/\\s+/g, ' ').trim();\n}\n\n/**\n * Used to provide the date range input wrapper component\n * to the parts without circular dependencies.\n */\nconst MAT_DATE_RANGE_INPUT_PARENT = /*#__PURE__*/new InjectionToken('MAT_DATE_RANGE_INPUT_PARENT');\n/**\n * Base class for the individual inputs that can be projected inside a `mat-date-range-input`.\n */\nlet MatDateRangeInputPartBase = /*#__PURE__*/(() => {\n  class MatDateRangeInputPartBase extends MatDatepickerInputBase {\n    /** Object used to control when error messages are shown. */\n    get errorStateMatcher() {\n      return this._errorStateTracker.matcher;\n    }\n    set errorStateMatcher(value) {\n      this._errorStateTracker.matcher = value;\n    }\n    /** Whether the input is in an error state. */\n    get errorState() {\n      return this._errorStateTracker.errorState;\n    }\n    set errorState(value) {\n      this._errorStateTracker.errorState = value;\n    }\n    constructor(_rangeInput, _elementRef, _defaultErrorStateMatcher, _injector, _parentForm, _parentFormGroup, dateAdapter, dateFormats) {\n      super(_elementRef, dateAdapter, dateFormats);\n      this._rangeInput = _rangeInput;\n      this._elementRef = _elementRef;\n      this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n      this._injector = _injector;\n      this._parentForm = _parentForm;\n      this._parentFormGroup = _parentFormGroup;\n      this._dir = inject(Directionality, {\n        optional: true\n      });\n      this._errorStateTracker = new _ErrorStateTracker(this._defaultErrorStateMatcher, null, this._parentFormGroup, this._parentForm, this.stateChanges);\n    }\n    ngOnInit() {\n      // We need the date input to provide itself as a `ControlValueAccessor` and a `Validator`, while\n      // injecting its `NgControl` so that the error state is handled correctly. This introduces a\n      // circular dependency, because both `ControlValueAccessor` and `Validator` depend on the input\n      // itself. Usually we can work around it for the CVA, but there's no API to do it for the\n      // validator. We work around it here by injecting the `NgControl` in `ngOnInit`, after\n      // everything has been resolved.\n      const ngControl = this._injector.get(NgControl, null, {\n        optional: true,\n        self: true\n      });\n      if (ngControl) {\n        this.ngControl = ngControl;\n        this._errorStateTracker.ngControl = ngControl;\n      }\n    }\n    ngDoCheck() {\n      if (this.ngControl) {\n        // We need to re-evaluate this on every change detection cycle, because there are some\n        // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n        // that whatever logic is in here has to be super lean or we risk destroying the performance.\n        this.updateErrorState();\n      }\n    }\n    /** Gets whether the input is empty. */\n    isEmpty() {\n      return this._elementRef.nativeElement.value.length === 0;\n    }\n    /** Gets the placeholder of the input. */\n    _getPlaceholder() {\n      return this._elementRef.nativeElement.placeholder;\n    }\n    /** Focuses the input. */\n    focus() {\n      this._elementRef.nativeElement.focus();\n    }\n    /** Gets the value that should be used when mirroring the input's size. */\n    getMirrorValue() {\n      const element = this._elementRef.nativeElement;\n      const value = element.value;\n      return value.length > 0 ? value : element.placeholder;\n    }\n    /** Refreshes the error state of the input. */\n    updateErrorState() {\n      this._errorStateTracker.updateErrorState();\n    }\n    /** Handles `input` events on the input element. */\n    _onInput(value) {\n      super._onInput(value);\n      this._rangeInput._handleChildValueChange();\n    }\n    /** Opens the datepicker associated with the input. */\n    _openPopup() {\n      this._rangeInput._openDatepicker();\n    }\n    /** Gets the minimum date from the range input. */\n    _getMinDate() {\n      return this._rangeInput.min;\n    }\n    /** Gets the maximum date from the range input. */\n    _getMaxDate() {\n      return this._rangeInput.max;\n    }\n    /** Gets the date filter function from the range input. */\n    _getDateFilter() {\n      return this._rangeInput.dateFilter;\n    }\n    _parentDisabled() {\n      return this._rangeInput._groupDisabled;\n    }\n    _shouldHandleChangeEvent({\n      source\n    }) {\n      return source !== this._rangeInput._startInput && source !== this._rangeInput._endInput;\n    }\n    _assignValueProgrammatically(value) {\n      super._assignValueProgrammatically(value);\n      const opposite = this === this._rangeInput._startInput ? this._rangeInput._endInput : this._rangeInput._startInput;\n      opposite?._validatorOnChange();\n    }\n    /** return the ARIA accessible name of the input element */\n    _getAccessibleName() {\n      return _computeAriaAccessibleName(this._elementRef.nativeElement);\n    }\n    static {\n      this.ɵfac = function MatDateRangeInputPartBase_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatDateRangeInputPartBase)(i0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ErrorStateMatcher), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i2$1.NgForm, 8), i0.ɵɵdirectiveInject(i2$1.FormGroupDirective, 8), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatDateRangeInputPartBase,\n        inputs: {\n          errorStateMatcher: \"errorStateMatcher\"\n        },\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatDateRangeInputPartBase;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Input for entering the start date in a `mat-date-range-input`. */\nlet MatStartDate = /*#__PURE__*/(() => {\n  class MatStartDate extends MatDateRangeInputPartBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n      super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n      /** Validator that checks that the start date isn't after the end date. */\n      this._startValidator = control => {\n        const start = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n        const end = this._model ? this._model.selection.end : null;\n        return !start || !end || this._dateAdapter.compareDate(start, end) <= 0 ? null : {\n          'matStartDateInvalid': {\n            'end': end,\n            'actual': start\n          }\n        };\n      };\n      this._validator = Validators.compose([...super._getValidators(), this._startValidator]);\n    }\n    _getValueFromModel(modelValue) {\n      return modelValue.start;\n    }\n    _shouldHandleChangeEvent(change) {\n      if (!super._shouldHandleChangeEvent(change)) {\n        return false;\n      } else {\n        return !change.oldValue?.start ? !!change.selection.start : !change.selection.start || !!this._dateAdapter.compareDate(change.oldValue.start, change.selection.start);\n      }\n    }\n    _assignValueToModel(value) {\n      if (this._model) {\n        const range = new DateRange(value, this._model.selection.end);\n        this._model.updateSelection(range, this);\n      }\n    }\n    _formatValue(value) {\n      super._formatValue(value);\n      // Any time the input value is reformatted we need to tell the parent.\n      this._rangeInput._handleChildValueChange();\n    }\n    _onKeydown(event) {\n      const endInput = this._rangeInput._endInput;\n      const element = this._elementRef.nativeElement;\n      const isLtr = this._dir?.value !== 'rtl';\n      // If the user hits RIGHT (LTR) when at the end of the input (and no\n      // selection), move the cursor to the start of the end input.\n      if ((event.keyCode === RIGHT_ARROW && isLtr || event.keyCode === LEFT_ARROW && !isLtr) && element.selectionStart === element.value.length && element.selectionEnd === element.value.length) {\n        event.preventDefault();\n        endInput._elementRef.nativeElement.setSelectionRange(0, 0);\n        endInput.focus();\n      } else {\n        super._onKeydown(event);\n      }\n    }\n    static {\n      this.ɵfac = function MatStartDate_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatStartDate)(i0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ErrorStateMatcher), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i2$1.NgForm, 8), i0.ɵɵdirectiveInject(i2$1.FormGroupDirective, 8), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatStartDate,\n        selectors: [[\"input\", \"matStartDate\", \"\"]],\n        hostAttrs: [\"type\", \"text\", 1, \"mat-start-date\", \"mat-date-range-input-inner\"],\n        hostVars: 5,\n        hostBindings: function MatStartDate_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"input\", function MatStartDate_input_HostBindingHandler($event) {\n              return ctx._onInput($event.target.value);\n            })(\"change\", function MatStartDate_change_HostBindingHandler() {\n              return ctx._onChange();\n            })(\"keydown\", function MatStartDate_keydown_HostBindingHandler($event) {\n              return ctx._onKeydown($event);\n            })(\"blur\", function MatStartDate_blur_HostBindingHandler() {\n              return ctx._onBlur();\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n            i0.ɵɵattribute(\"aria-haspopup\", ctx._rangeInput.rangePicker ? \"dialog\" : null)(\"aria-owns\", ctx._rangeInput._ariaOwns ? ctx._rangeInput._ariaOwns() : (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)(\"min\", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)(\"max\", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);\n          }\n        },\n        outputs: {\n          dateChange: \"dateChange\",\n          dateInput: \"dateInput\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: NG_VALUE_ACCESSOR,\n          useExisting: MatStartDate,\n          multi: true\n        }, {\n          provide: NG_VALIDATORS,\n          useExisting: MatStartDate,\n          multi: true\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatStartDate;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Input for entering the end date in a `mat-date-range-input`. */\nlet MatEndDate = /*#__PURE__*/(() => {\n  class MatEndDate extends MatDateRangeInputPartBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n      super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n      /** Validator that checks that the end date isn't before the start date. */\n      this._endValidator = control => {\n        const end = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n        const start = this._model ? this._model.selection.start : null;\n        return !end || !start || this._dateAdapter.compareDate(end, start) >= 0 ? null : {\n          'matEndDateInvalid': {\n            'start': start,\n            'actual': end\n          }\n        };\n      };\n      this._validator = Validators.compose([...super._getValidators(), this._endValidator]);\n    }\n    _getValueFromModel(modelValue) {\n      return modelValue.end;\n    }\n    _shouldHandleChangeEvent(change) {\n      if (!super._shouldHandleChangeEvent(change)) {\n        return false;\n      } else {\n        return !change.oldValue?.end ? !!change.selection.end : !change.selection.end || !!this._dateAdapter.compareDate(change.oldValue.end, change.selection.end);\n      }\n    }\n    _assignValueToModel(value) {\n      if (this._model) {\n        const range = new DateRange(this._model.selection.start, value);\n        this._model.updateSelection(range, this);\n      }\n    }\n    _moveCaretToEndOfStartInput() {\n      const startInput = this._rangeInput._startInput._elementRef.nativeElement;\n      const value = startInput.value;\n      if (value.length > 0) {\n        startInput.setSelectionRange(value.length, value.length);\n      }\n      startInput.focus();\n    }\n    _onKeydown(event) {\n      const element = this._elementRef.nativeElement;\n      const isLtr = this._dir?.value !== 'rtl';\n      // If the user is pressing backspace on an empty end input, move focus back to the start.\n      if (event.keyCode === BACKSPACE && !element.value) {\n        this._moveCaretToEndOfStartInput();\n      }\n      // If the user hits LEFT (LTR) when at the start of the input (and no\n      // selection), move the cursor to the end of the start input.\n      else if ((event.keyCode === LEFT_ARROW && isLtr || event.keyCode === RIGHT_ARROW && !isLtr) && element.selectionStart === 0 && element.selectionEnd === 0) {\n        event.preventDefault();\n        this._moveCaretToEndOfStartInput();\n      } else {\n        super._onKeydown(event);\n      }\n    }\n    static {\n      this.ɵfac = function MatEndDate_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatEndDate)(i0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ErrorStateMatcher), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i2$1.NgForm, 8), i0.ɵɵdirectiveInject(i2$1.FormGroupDirective, 8), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatEndDate,\n        selectors: [[\"input\", \"matEndDate\", \"\"]],\n        hostAttrs: [\"type\", \"text\", 1, \"mat-end-date\", \"mat-date-range-input-inner\"],\n        hostVars: 5,\n        hostBindings: function MatEndDate_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"input\", function MatEndDate_input_HostBindingHandler($event) {\n              return ctx._onInput($event.target.value);\n            })(\"change\", function MatEndDate_change_HostBindingHandler() {\n              return ctx._onChange();\n            })(\"keydown\", function MatEndDate_keydown_HostBindingHandler($event) {\n              return ctx._onKeydown($event);\n            })(\"blur\", function MatEndDate_blur_HostBindingHandler() {\n              return ctx._onBlur();\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n            i0.ɵɵattribute(\"aria-haspopup\", ctx._rangeInput.rangePicker ? \"dialog\" : null)(\"aria-owns\", ctx._rangeInput._ariaOwns ? ctx._rangeInput._ariaOwns() : (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)(\"min\", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)(\"max\", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);\n          }\n        },\n        outputs: {\n          dateChange: \"dateChange\",\n          dateInput: \"dateInput\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: NG_VALUE_ACCESSOR,\n          useExisting: MatEndDate,\n          multi: true\n        }, {\n          provide: NG_VALIDATORS,\n          useExisting: MatEndDate,\n          multi: true\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatEndDate;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet nextUniqueId = 0;\nlet MatDateRangeInput = /*#__PURE__*/(() => {\n  class MatDateRangeInput {\n    /** Current value of the range input. */\n    get value() {\n      return this._model ? this._model.selection : null;\n    }\n    /** Whether the control's label should float. */\n    get shouldLabelFloat() {\n      return this.focused || !this.empty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * Set the placeholder attribute on `matStartDate` and `matEndDate`.\n     * @docs-private\n     */\n    get placeholder() {\n      const start = this._startInput?._getPlaceholder() || '';\n      const end = this._endInput?._getPlaceholder() || '';\n      return start || end ? `${start} ${this.separator} ${end}` : '';\n    }\n    /** The range picker that this input is associated with. */\n    get rangePicker() {\n      return this._rangePicker;\n    }\n    set rangePicker(rangePicker) {\n      if (rangePicker) {\n        this._model = rangePicker.registerInput(this);\n        this._rangePicker = rangePicker;\n        this._closedSubscription.unsubscribe();\n        this._openedSubscription.unsubscribe();\n        this._ariaOwns.set(this.rangePicker.opened ? rangePicker.id : null);\n        this._closedSubscription = rangePicker.closedStream.subscribe(() => {\n          this._startInput?._onTouched();\n          this._endInput?._onTouched();\n          this._ariaOwns.set(null);\n        });\n        this._openedSubscription = rangePicker.openedStream.subscribe(() => {\n          this._ariaOwns.set(rangePicker.id);\n        });\n        this._registerModel(this._model);\n      }\n    }\n    /** Whether the input is required. */\n    get required() {\n      return this._required ?? (this._isTargetRequired(this) || this._isTargetRequired(this._startInput) || this._isTargetRequired(this._endInput)) ?? false;\n    }\n    set required(value) {\n      this._required = value;\n    }\n    /** Function that can be used to filter out dates within the date range picker. */\n    get dateFilter() {\n      return this._dateFilter;\n    }\n    set dateFilter(value) {\n      const start = this._startInput;\n      const end = this._endInput;\n      const wasMatchingStart = start && start._matchesFilter(start.value);\n      const wasMatchingEnd = end && end._matchesFilter(start.value);\n      this._dateFilter = value;\n      if (start && start._matchesFilter(start.value) !== wasMatchingStart) {\n        start._validatorOnChange();\n      }\n      if (end && end._matchesFilter(end.value) !== wasMatchingEnd) {\n        end._validatorOnChange();\n      }\n    }\n    /** The minimum valid date. */\n    get min() {\n      return this._min;\n    }\n    set min(value) {\n      const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n      if (!this._dateAdapter.sameDate(validValue, this._min)) {\n        this._min = validValue;\n        this._revalidate();\n      }\n    }\n    /** The maximum valid date. */\n    get max() {\n      return this._max;\n    }\n    set max(value) {\n      const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n      if (!this._dateAdapter.sameDate(validValue, this._max)) {\n        this._max = validValue;\n        this._revalidate();\n      }\n    }\n    /** Whether the input is disabled. */\n    get disabled() {\n      return this._startInput && this._endInput ? this._startInput.disabled && this._endInput.disabled : this._groupDisabled;\n    }\n    set disabled(value) {\n      if (value !== this._groupDisabled) {\n        this._groupDisabled = value;\n        this.stateChanges.next(undefined);\n      }\n    }\n    /** Whether the input is in an error state. */\n    get errorState() {\n      if (this._startInput && this._endInput) {\n        return this._startInput.errorState || this._endInput.errorState;\n      }\n      return false;\n    }\n    /** Whether the datepicker input is empty. */\n    get empty() {\n      const startEmpty = this._startInput ? this._startInput.isEmpty() : false;\n      const endEmpty = this._endInput ? this._endInput.isEmpty() : false;\n      return startEmpty && endEmpty;\n    }\n    constructor(_changeDetectorRef, _elementRef, control, _dateAdapter, _formField) {\n      this._changeDetectorRef = _changeDetectorRef;\n      this._elementRef = _elementRef;\n      this._dateAdapter = _dateAdapter;\n      this._formField = _formField;\n      this._closedSubscription = Subscription.EMPTY;\n      this._openedSubscription = Subscription.EMPTY;\n      /** Unique ID for the group. */\n      this.id = `mat-date-range-input-${nextUniqueId++}`;\n      /** Whether the control is focused. */\n      this.focused = false;\n      /** Name of the form control. */\n      this.controlType = 'mat-date-range-input';\n      /** The id of the panel owned by this input. */\n      this._ariaOwns = signal(null);\n      this._groupDisabled = false;\n      /** Value for the `aria-describedby` attribute of the inputs. */\n      this._ariaDescribedBy = null;\n      /** Separator text to be shown between the inputs. */\n      this.separator = '–';\n      /** Start of the comparison range that should be shown in the calendar. */\n      this.comparisonStart = null;\n      /** End of the comparison range that should be shown in the calendar. */\n      this.comparisonEnd = null;\n      /** Emits when the input's state has changed. */\n      this.stateChanges = new Subject();\n      /**\n       * Disable the automatic labeling to avoid issues like #27241.\n       * @docs-private\n       */\n      this.disableAutomaticLabeling = true;\n      if (!_dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n      // The datepicker module can be used both with MDC and non-MDC form fields. We have\n      // to conditionally add the MDC input class so that the range picker looks correctly.\n      if (_formField?._elementRef.nativeElement.classList.contains('mat-mdc-form-field')) {\n        _elementRef.nativeElement.classList.add('mat-mdc-input-element', 'mat-mdc-form-field-input-control', 'mdc-text-field__input');\n      }\n      // TODO(crisbeto): remove `as any` after #18206 lands.\n      this.ngControl = control;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n      this._ariaDescribedBy = ids.length ? ids.join(' ') : null;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    onContainerClick() {\n      if (!this.focused && !this.disabled) {\n        if (!this._model || !this._model.selection.start) {\n          this._startInput.focus();\n        } else {\n          this._endInput.focus();\n        }\n      }\n    }\n    ngAfterContentInit() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._startInput) {\n          throw Error('mat-date-range-input must contain a matStartDate input');\n        }\n        if (!this._endInput) {\n          throw Error('mat-date-range-input must contain a matEndDate input');\n        }\n      }\n      if (this._model) {\n        this._registerModel(this._model);\n      }\n      // We don't need to unsubscribe from this, because we\n      // know that the input streams will be completed on destroy.\n      merge(this._startInput.stateChanges, this._endInput.stateChanges).subscribe(() => {\n        this.stateChanges.next(undefined);\n      });\n    }\n    ngOnChanges(changes) {\n      if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n        this.stateChanges.next(undefined);\n      }\n    }\n    ngOnDestroy() {\n      this._closedSubscription.unsubscribe();\n      this._openedSubscription.unsubscribe();\n      this.stateChanges.complete();\n    }\n    /** Gets the date at which the calendar should start. */\n    getStartValue() {\n      return this.value ? this.value.start : null;\n    }\n    /** Gets the input's theme palette. */\n    getThemePalette() {\n      return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the element to which the calendar overlay should be attached. */\n    getConnectedOverlayOrigin() {\n      return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the ID of an element that should be used a description for the calendar overlay. */\n    getOverlayLabelId() {\n      return this._formField ? this._formField.getLabelId() : null;\n    }\n    /** Gets the value that is used to mirror the state input. */\n    _getInputMirrorValue(part) {\n      const input = part === 'start' ? this._startInput : this._endInput;\n      return input ? input.getMirrorValue() : '';\n    }\n    /** Whether the input placeholders should be hidden. */\n    _shouldHidePlaceholders() {\n      return this._startInput ? !this._startInput.isEmpty() : false;\n    }\n    /** Handles the value in one of the child inputs changing. */\n    _handleChildValueChange() {\n      this.stateChanges.next(undefined);\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Opens the date range picker associated with the input. */\n    _openDatepicker() {\n      if (this._rangePicker) {\n        this._rangePicker.open();\n      }\n    }\n    /** Whether the separate text should be hidden. */\n    _shouldHideSeparator() {\n      return (!this._formField || this._formField.getLabelId() && !this._formField._shouldLabelFloat()) && this.empty;\n    }\n    /** Gets the value for the `aria-labelledby` attribute of the inputs. */\n    _getAriaLabelledby() {\n      const formField = this._formField;\n      return formField && formField._hasFloatingLabel() ? formField._labelId : null;\n    }\n    _getStartDateAccessibleName() {\n      return this._startInput._getAccessibleName();\n    }\n    _getEndDateAccessibleName() {\n      return this._endInput._getAccessibleName();\n    }\n    /** Updates the focused state of the range input. */\n    _updateFocus(origin) {\n      this.focused = origin !== null;\n      this.stateChanges.next();\n    }\n    /** Re-runs the validators on the start/end inputs. */\n    _revalidate() {\n      if (this._startInput) {\n        this._startInput._validatorOnChange();\n      }\n      if (this._endInput) {\n        this._endInput._validatorOnChange();\n      }\n    }\n    /** Registers the current date selection model with the start/end inputs. */\n    _registerModel(model) {\n      if (this._startInput) {\n        this._startInput._registerModel(model);\n      }\n      if (this._endInput) {\n        this._endInput._registerModel(model);\n      }\n    }\n    /** Checks whether a specific range input directive is required. */\n    _isTargetRequired(target) {\n      return target?.ngControl?.control?.hasValidator(Validators.required);\n    }\n    static {\n      this.ɵfac = function MatDateRangeInput_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatDateRangeInput)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2$1.ControlContainer, 10), i0.ɵɵdirectiveInject(i1.DateAdapter, 8), i0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatDateRangeInput,\n        selectors: [[\"mat-date-range-input\"]],\n        contentQueries: function MatDateRangeInput_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatStartDate, 5);\n            i0.ɵɵcontentQuery(dirIndex, MatEndDate, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._startInput = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._endInput = _t.first);\n          }\n        },\n        hostAttrs: [\"role\", \"group\", 1, \"mat-date-range-input\"],\n        hostVars: 8,\n        hostBindings: function MatDateRangeInput_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"id\", ctx.id)(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-describedby\", ctx._ariaDescribedBy)(\"data-mat-calendar\", ctx.rangePicker ? ctx.rangePicker.id : null);\n            i0.ɵɵclassProp(\"mat-date-range-input-hide-placeholders\", ctx._shouldHidePlaceholders())(\"mat-date-range-input-required\", ctx.required);\n          }\n        },\n        inputs: {\n          rangePicker: \"rangePicker\",\n          required: [2, \"required\", \"required\", booleanAttribute],\n          dateFilter: \"dateFilter\",\n          min: \"min\",\n          max: \"max\",\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          separator: \"separator\",\n          comparisonStart: \"comparisonStart\",\n          comparisonEnd: \"comparisonEnd\"\n        },\n        exportAs: [\"matDateRangeInput\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MatFormFieldControl,\n          useExisting: MatDateRangeInput\n        }, {\n          provide: MAT_DATE_RANGE_INPUT_PARENT,\n          useExisting: MatDateRangeInput\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c6,\n        decls: 11,\n        vars: 5,\n        consts: [[\"cdkMonitorSubtreeFocus\", \"\", 1, \"mat-date-range-input-container\", 3, \"cdkFocusChange\"], [1, \"mat-date-range-input-wrapper\"], [\"aria-hidden\", \"true\", 1, \"mat-date-range-input-mirror\"], [1, \"mat-date-range-input-separator\"], [1, \"mat-date-range-input-wrapper\", \"mat-date-range-input-end-wrapper\"]],\n        template: function MatDateRangeInput_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c5);\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵlistener(\"cdkFocusChange\", function MatDateRangeInput_Template_div_cdkFocusChange_0_listener($event) {\n              return ctx._updateFocus($event);\n            });\n            i0.ɵɵelementStart(1, \"div\", 1);\n            i0.ɵɵprojection(2);\n            i0.ɵɵelementStart(3, \"span\", 2);\n            i0.ɵɵtext(4);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(5, \"span\", 3);\n            i0.ɵɵtext(6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"div\", 4);\n            i0.ɵɵprojection(8, 1);\n            i0.ɵɵelementStart(9, \"span\", 2);\n            i0.ɵɵtext(10);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate(ctx._getInputMirrorValue(\"start\"));\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"mat-date-range-input-separator-hidden\", ctx._shouldHideSeparator());\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate(ctx.separator);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate(ctx._getInputMirrorValue(\"end\"));\n          }\n        },\n        dependencies: [CdkMonitorFocus],\n        styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px;color:var(--mat-datepicker-range-input-separator-color, var(--mat-app-on-surface))}.mat-form-field-disabled .mat-date-range-input-separator{color:var(--mat-datepicker-range-input-disabled-state-separator-color)}._mat-animation-noopable .mat-date-range-input-separator{transition:none}.mat-date-range-input-separator-hidden{-webkit-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-end-wrapper{flex-grow:1}.mat-date-range-input-inner{position:absolute;top:0;left:0;font:inherit;background:rgba(0,0,0,0);color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%;height:100%}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner[disabled]{color:var(--mat-datepicker-range-input-disabled-state-text-color)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;user-select:none;color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{opacity:0}._mat-animation-noopable .mat-date-range-input-inner::placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner::-moz-placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner::-webkit-input-placeholder{transition:none}._mat-animation-noopable .mat-date-range-input-inner:-ms-input-placeholder{transition:none}.mat-date-range-input-mirror{-webkit-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-mdc-form-field-type-mat-date-range-input .mat-mdc-form-field-infix{width:200px}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatDateRangeInput;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDateRangePicker\"). We can change this to a\n// directive if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the date range picker popup/dialog. */\nlet MatDateRangePicker = /*#__PURE__*/(() => {\n  class MatDateRangePicker extends MatDatepickerBase {\n    _forwardContentValues(instance) {\n      super._forwardContentValues(instance);\n      const input = this.datepickerInput;\n      if (input) {\n        instance.comparisonStart = input.comparisonStart;\n        instance.comparisonEnd = input.comparisonEnd;\n        instance.startDateAccessibleName = input._getStartDateAccessibleName();\n        instance.endDateAccessibleName = input._getEndDateAccessibleName();\n      }\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatDateRangePicker_BaseFactory;\n        return function MatDateRangePicker_Factory(__ngFactoryType__) {\n          return (ɵMatDateRangePicker_BaseFactory || (ɵMatDateRangePicker_BaseFactory = i0.ɵɵgetInheritedFactory(MatDateRangePicker)))(__ngFactoryType__ || MatDateRangePicker);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatDateRangePicker,\n        selectors: [[\"mat-date-range-picker\"]],\n        exportAs: [\"matDateRangePicker\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER, {\n          provide: MatDatepickerBase,\n          useExisting: MatDateRangePicker\n        }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        decls: 0,\n        vars: 0,\n        template: function MatDateRangePicker_Template(rf, ctx) {},\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatDateRangePicker;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Button that will close the datepicker and assign the current selection to the data model. */\nlet MatDatepickerApply = /*#__PURE__*/(() => {\n  class MatDatepickerApply {\n    constructor(_datepicker) {\n      this._datepicker = _datepicker;\n    }\n    _applySelection() {\n      this._datepicker._applyPendingSelection();\n      this._datepicker.close();\n    }\n    static {\n      this.ɵfac = function MatDatepickerApply_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatDatepickerApply)(i0.ɵɵdirectiveInject(MatDatepickerBase));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatDatepickerApply,\n        selectors: [[\"\", \"matDatepickerApply\", \"\"], [\"\", \"matDateRangePickerApply\", \"\"]],\n        hostBindings: function MatDatepickerApply_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"click\", function MatDatepickerApply_click_HostBindingHandler() {\n              return ctx._applySelection();\n            });\n          }\n        },\n        standalone: true\n      });\n    }\n  }\n  return MatDatepickerApply;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Button that will close the datepicker and discard the current selection. */\nlet MatDatepickerCancel = /*#__PURE__*/(() => {\n  class MatDatepickerCancel {\n    constructor(_datepicker) {\n      this._datepicker = _datepicker;\n    }\n    static {\n      this.ɵfac = function MatDatepickerCancel_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatDatepickerCancel)(i0.ɵɵdirectiveInject(MatDatepickerBase));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatDatepickerCancel,\n        selectors: [[\"\", \"matDatepickerCancel\", \"\"], [\"\", \"matDateRangePickerCancel\", \"\"]],\n        hostBindings: function MatDatepickerCancel_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"click\", function MatDatepickerCancel_click_HostBindingHandler() {\n              return ctx._datepicker.close();\n            });\n          }\n        },\n        standalone: true\n      });\n    }\n  }\n  return MatDatepickerCancel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Container that can be used to project a row of action buttons\n * to the bottom of a datepicker or date range picker.\n */\nlet MatDatepickerActions = /*#__PURE__*/(() => {\n  class MatDatepickerActions {\n    constructor(_datepicker, _viewContainerRef) {\n      this._datepicker = _datepicker;\n      this._viewContainerRef = _viewContainerRef;\n    }\n    ngAfterViewInit() {\n      this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n      this._datepicker.registerActions(this._portal);\n    }\n    ngOnDestroy() {\n      this._datepicker.removeActions(this._portal);\n      // Needs to be null checked since we initialize it in `ngAfterViewInit`.\n      if (this._portal && this._portal.isAttached) {\n        this._portal?.detach();\n      }\n    }\n    static {\n      this.ɵfac = function MatDatepickerActions_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatDatepickerActions)(i0.ɵɵdirectiveInject(MatDatepickerBase), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatDatepickerActions,\n        selectors: [[\"mat-datepicker-actions\"], [\"mat-date-range-picker-actions\"]],\n        viewQuery: function MatDatepickerActions_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(TemplateRef, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._template = _t.first);\n          }\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c1,\n        decls: 1,\n        vars: 0,\n        consts: [[1, \"mat-datepicker-actions\"]],\n        template: function MatDatepickerActions_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵtemplate(0, MatDatepickerActions_ng_template_0_Template, 2, 0, \"ng-template\");\n          }\n        },\n        styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatDatepickerActions;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatDatepickerModule = /*#__PURE__*/(() => {\n  class MatDatepickerModule {\n    static {\n      this.ɵfac = function MatDatepickerModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatDatepickerModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatDatepickerModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],\n        imports: [CommonModule, MatButtonModule, OverlayModule, A11yModule, PortalModule, MatCommonModule, MatDatepickerContent, MatDatepickerToggle, MatCalendarHeader, CdkScrollableModule]\n      });\n    }\n  }\n  return MatDatepickerModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DateRange, DefaultMatCalendarRangeStrategy, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATE_RANGE_SELECTION_STRATEGY, MAT_RANGE_DATE_SELECTION_MODEL_FACTORY, MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY, MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDateRangeInput, MatDateRangePicker, MatDateSelectionModel, MatDatepicker, MatDatepickerActions, MatDatepickerApply, MatDatepickerCancel, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatEndDate, MatMonthView, MatMultiYearView, MatRangeDateSelectionModel, MatSingleDateSelectionModel, MatStartDate, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow };\n","import { ChangeDetectorRef, Component, EventEmitter, inject, Input, OnInit, Output, signal, WritableSignal } from '@angular/core';\nimport { FormFields } from './form.interfaces';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { BehaviorSubject } from 'rxjs';\nimport { ModalWindowComponent } from \"../modal-window/modal-window.component\";\nimport nls from '../resources/nls/generic';\nimport { addFieldFormFields } from './form.resources';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRippleModule } from '@angular/material/core';\nimport {provideNativeDateAdapter} from '@angular/material/core';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\n\n@Component({\n  selector: 'app-form',\n  standalone: true,\n  imports: [\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatSliderModule,\n    ModalWindowComponent,\n    MatIconModule,\n    MatRippleModule,\n    MatDatepickerModule\n  ],\n  templateUrl: './form.component.html',\n  styleUrl: './form.component.scss',\n  providers:[provideNativeDateAdapter()]\n})\nexport class FormComponent implements OnInit {\n  private fb: FormBuilder = inject(FormBuilder);\n  private cdRef: ChangeDetectorRef = inject(ChangeDetectorRef);\n\n  @Input('form-fields') formFields: FormFields[] = [];\n  @Input('dynamic-form-fields') dynamicFormFields = new BehaviorSubject<FormFields[]>([]);\n  @Output('on-submit') onSubmit = new EventEmitter();\n  @Output('on-cancel') onCancel = new EventEmitter();\n  @Input('submit-button-title') subButtonTitle!: string;\n  @Input('cancel-button-title') canButtonTitle!: string;\n  @Output('on-change') onChange = new EventEmitter();\n  @Input('type') formType: 'dynamic' | 'static' = 'static';\n  @Input('submittable') submittable: boolean = true;\n\n  inputFileField: any = {};\n  inputFileMaxSizeError: any = {};\n  appForm!: FormGroup;\n  appAddFormFieldForm!: FormGroup;\n  uploadedFile: any = {};\n  isModalOpen: WritableSignal<boolean> = signal(false);\n  nls = nls;\n  addFieldFormFields: FormFields[] = addFieldFormFields;\n\n  ngOnInit(): void {\n    this.subscribeDynamicForm();\n    this.buildAddFormFieldForm();\n    this.cdRef.detectChanges();\n    this.subscribeValueChanges();\n  }\n  thumbLabel(value: number): string {\n    return `${value}%`;\n  }\n  getSelectedOption(item: FormFields): any[] {\n    const controlValue = this.appForm.controls[item.name]?.value || [];\n    return item.options?.filter((option: any) => controlValue.includes(option.value)) || [];\n  }\n  buildAddFormFieldForm() {\n    let formGroupItems: any = {};\n    addFieldFormFields.forEach((item) => {\n      formGroupItems[item.name] = item.defaultValue ? item.defaultValue : '';\n    });\n\n    this.appAddFormFieldForm = this.fb.group(formGroupItems);\n  }\n  subscribeDynamicForm() {\n    if (this.formFields.length) {\n      this.buildForm(this.formFields);\n      return;\n    }\n    this.dynamicFormFields.subscribe((value) => {\n      this.formFields = value;\n      this.buildForm(value);\n      return;\n    })\n  }\n  buildForm(formFields: FormFields[]) {\n    let formGroupItems: any = {};\n    formFields.forEach((item) => {\n      if (item.type === 'file') {\n        formGroupItems[item.name] = '';\n        this.uploadedFile[item.name] = item.defaultValue;\n      } else {\n        formGroupItems[item.name] = [{ value: item.defaultValue ? item.defaultValue : '', disabled: item.disabled ? true : false }];\n      }\n      if (item.type === 'file') {\n        this.inputFileField[item.name] = item;\n      }\n      if (item.type === 'file') {\n        this.inputFileField[item.name] = item;\n      }\n    });\n\n    this.appForm = this.fb.group(formGroupItems);\n  }\n  subscribeValueChanges() {\n    this.onChange.emit({ ...this.appForm.value, ...this.uploadedFile });\n    // console.log(this.appForm)\n    this.appForm.valueChanges.subscribe((value) => {\n      if (value.password && value.confirmpassword) {\n        this.passwordMatching(value.password, value.confirmpassword)\n      }\n      this.onChange.emit({ ...value, ...this.uploadedFile });\n    });\n  }\n  passwordMatching(password: string, confirmpassword: string) {\n    // console.log(this.appForm.controls['confirmpassword'])\n    if (password === confirmpassword) {\n      this.appForm.controls['confirmpassword'].setErrors(null);\n    } else {\n      this.appForm.controls['confirmpassword'].setErrors({ required: true });\n    }\n  }\n  onFileSelected(event: Event): void {\n    let inputFile = this.inputFileField[(event as any).target.name];\n\n    const input = event.target as HTMLInputElement;\n    if (inputFile && input.files && input.files.length) {\n      const file = input.files[0];\n      // console.log(file);\n      if (inputFile?.maxSize) {\n        if (file.size <= inputFile?.maxSize) {\n          this.uploadedFile[inputFile.name] = file;\n          this.appForm.controls[inputFile.name].updateValueAndValidity();\n          this.inputFileMaxSizeError[inputFile.name] = '';\n\n        } else {\n          this.appForm.controls[inputFile.name].setValue('');\n          let errMsg = inputFile.errorMessage.find((item: any) => item.type === 'maxSize').message;\n          this.inputFileMaxSizeError[inputFile.name] = errMsg + (inputFile.maxSize / 1024) + \"kB.\";\n          this.appForm.controls[inputFile.name].setErrors({ maxSize: true });\n        }\n      } else {\n        this.uploadedFile[inputFile.name] = file;\n      }\n    }\n  }\n  submitForm(event: SubmitEvent): void {\n    event.preventDefault();\n    let data = {\n      ...this.appForm.value,\n      ...this.uploadedFile\n    }\n    if (this.dynamicFormFields.getValue().length !== 0) {\n      data = { formData: data, formFields: this.formFields }\n    }\n    this.onSubmit.emit(data);\n  }\n  cancelForm() {\n    this.onCancel.emit(false);\n  }\n  getPasswordStrength(password: string): string[] {\n    // let password = 'Aalok@123';\n\n    const failedCriteria: string[] = [];\n    if (!/(?=.*[a-z])/.test(password)) {\n      failedCriteria.push('At least one lowercase letter (a-z)');\n    }\n    if (!/(?=.*[A-Z])/.test(password)) {\n      failedCriteria.push('At least one uppercase letter (A-Z)');\n    }\n    if (!/(?=.*\\d)/.test(password)) {\n      failedCriteria.push('At least one digit (0-9)');\n    }\n    if (!/(?=.*[^a-zA-Z\\d\\s])/.test(password)) {\n      failedCriteria.push('At least one special character');\n    }\n    if (password.length < 8) {\n      failedCriteria.push('Minimum 8 characters');\n    }\n\n    return failedCriteria;\n  }\n  getPasswordStrengthNum(name: string): number {\n    let failures = this.getPasswordStrength(this.appForm.controls[name].value);\n    return (1 - failures.length / 5) * 100;\n    // if(failures.length){\n    //   return 100/(failures.length+1);\n    // }else{\n    //   return 100;\n    // }\n  }\n  getPasswordProgressColor(name: string): string {\n    let failpercent = this.getPasswordStrengthNum(name);\n    if (failpercent <= 80) return 'warn';\n    else return 'primary';\n  }\n  toggleModal(state: boolean) {\n    this.isModalOpen.set(state);\n    if (state) {\n      this.buildAddFormFieldForm()\n    }\n  }\n  deleteAddedField(data: any) {\n    // console.log(data);\n    let prevFields = this.dynamicFormFields.getValue();\n    let newFields = prevFields.filter((item: any) => {\n      return item.name !== data.name\n    });\n    newFields.map((item: any) => {\n      item.defaultValue = this.appForm.value[item.name]\n      return item;\n    })\n    this.dynamicFormFields.next(newFields);\n  }\n  onSubmitAddField(event: SubmitEvent): void {\n    event.preventDefault();\n    this.toggleModal(false);\n    let data = this.appAddFormFieldForm.value;\n    let prevFields = this.dynamicFormFields.getValue();\n    prevFields.push({\n      name: data.fieldName.replace(' ', '-').toLowerCase().trim(),\n      label: data.fieldName.trim(),\n      type: data.fieldType.toLowerCase(),\n      required: true,\n      deletable: true\n    });\n    prevFields.map((item: any) => {\n      item.defaultValue = this.appForm.value[item.name]\n      return item;\n    })\n    this.dynamicFormFields.next(prevFields);\n  }\n}\n","<form [formGroup]=\"appForm\" (ngSubmit)=\"submitForm($event)\" autocomplete=\"off\">\n\n  <ng-container *ngFor=\"let item of formFields; let i = index\">\n    <div [class.deletable]=\"item.deletable\">\n      <div [class.deletable-item]=\"item.deletable\">\n        <mat-form-field appearance=\"fill\" class=\"w-100\" *ngIf=\"item.type !== 'slider' && item.type !== 'file'\">\n          <mat-label class=\"app-form-label\">{{item.label}}</mat-label>\n          <input [required]=\"item.required\" matInput [name]=\"item.name\" [id]=\"item.id?item.id:'id'+i\" [type]=\"item.type\"\n            [formControlName]=\"item.name\" [pattern]=\"item.pattern?item.pattern:''\"\n            *ngIf=\"item.type !== 'select' && item.type!=='file' && item.type!=='date'\" [min]=\"item.min\" [max]=\"item.max\"\n            [maxlength]=\"item.maxlength || null\" />\n\n          <mat-select [required]=\"item.required\" [formControlName]=\"item.name\" *ngIf=\"item.type==='select'\"\n            [multiple]=\"item.multiple?item.multiple:false\">\n            @if (item.multiple) {\n            <mat-select-trigger>\n              @if ((appForm.controls[item.name].value?.length || 0) >0) {\n\n              <div class=\"multiple-select-container\">\n                <div *ngFor=\"let option of getSelectedOption(item)\" class=\"multiple-select-item\">\n                  <span>{{ option.label }}</span>\n                  <!-- <mat-icon mat-ripple class=\"multiple-select-item-remove\" (click)=\"removeItemMultiSelect()\">close</mat-icon> -->\n                </div>\n\n              </div>\n              }\n            </mat-select-trigger>\n            }\n            @for(option of item.options;track option){\n            <mat-option [value]=\"option.value\">{{option.label}}</mat-option>\n            }\n          </mat-select>\n\n          <div *ngIf=\"item.type==='date'\" class=\"d-flex\">\n            <input matInput [matDatepicker]=\"picker\" [required]=\"item.required\" [name]=\"item.name\"\n              [id]=\"item.id?item.id:'id'+i\" [formControlName]=\"item.name\" [min]=\"item.min\" [max]=\"item.max\">\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n          </div>\n\n          <div *ngIf=\"item.type!=='password' && appForm.controls[item.name]?.touched \">\n            <div *ngFor=\"let message of item.errorMessage\">\n              <span class=\"text-danger error-text\"\n                *ngIf=\"appForm.controls[item.name]?.errors?.[message.type]\">{{message.message}}</span>\n            </div>\n          </div>\n          <div *ngIf=\"item.type==='password' &&item.name==='confirmpassword' && appForm.controls[item.name]?.touched \">\n            <div *ngFor=\"let message of item.errorMessage\">\n              <span class=\"text-danger error-text\"\n                *ngIf=\"appForm.controls[item.name]?.errors?.[message.type]\">{{message.message}}</span>\n            </div>\n          </div>\n          <mat-progress-bar mode=\"determinate\" [value]=\"getPasswordStrengthNum(item.name)\"\n            [color]=\"getPasswordProgressColor(item.name)\"\n            *ngIf=\"item.type==='password' && item.pattern!==''&& appForm.controls[item.name]?.touched \"></mat-progress-bar>\n\n        </mat-form-field>\n\n        <div *ngIf=\"item.type === 'slider'\">\n          <div class=\"form-field-container\">\n            <div class=\"form-field-inner-container\">\n              <label class=\"form-field-label mb-1\">{{item.label}}</label>\n              <mat-slider [min]=\"item.min || 0\" [max]=\"item.max || 100\" [step]=\"item.step || 1\" discrete\n                [displayWith]=\"thumbLabel\">\n                <input matSliderThumb [formControlName]=\"item.name\" />\n              </mat-slider>\n            </div>\n          </div>\n          <div class=\"mat-mdc-form-field-subscript-wrapper mat-mdc-form-field-bottom-align\"></div>\n        </div>\n\n        <div *ngIf=\"item.type === 'file'\">\n          <div class=\"form-field-container\">\n            <div class=\"form-field-inner-container\">\n              <label class=\"form-field-label mb-1\">{{item.label}}{{item.required==true?'*':''}}</label>\n              <div>\n                <input type=\"file\" [accept]=\"item.accept\" (change)=\"onFileSelected($event)\" [required]=\"item.required\"\n                  [formControlName]=\"item.name\" [name]=\"item.name\" />\n              </div>\n              <div *ngIf=\"inputFileMaxSizeError[item.name]\">\n                <span class=\"text-danger error-text\">{{inputFileMaxSizeError[item.name]}}</span>\n              </div>\n            </div>\n          </div>\n          <div class=\"mat-mdc-form-field-subscript-wrapper mat-mdc-form-field-bottom-align\"></div>\n        </div>\n      </div>\n      <div *ngIf=\"item.deletable\" [class.deletable-icon]=\"item.deletable\" mat-ripple (click)=\"deleteAddedField(item)\">\n        <mat-icon>delete</mat-icon>\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"d-flex justify-content-end my-2\" *ngIf=\"dynamicFormFields.getValue().length!==0\">\n    <button color=\"primary\" mat-button (click)=\"toggleModal(true)\"\n      type=\"button\"><mat-icon>add</mat-icon>{{nls.addNewField}}</button>\n  </div>\n  <div class=\"d-flex gap-2 pt-3\" *ngIf=\"submittable\">\n    <button *ngIf=\"canButtonTitle\" type=\"button\" mat-raised-button class=\"w-100\"\n      (click)=\"cancelForm()\">{{canButtonTitle}}</button>\n    <button class=\"w-100\" mat-raised-button color=\"primary\" type=\"submit\"\n      [disabled]=\"!appForm.valid\">{{subButtonTitle}}</button>\n  </div>\n</form>\n\n<app-modal-window [isOpen]=\"isModalOpen()\" (onCancel)=\"toggleModal($event)\" [modal-heading]=\"nls.addField\"\n  [type]=\"'info'\">\n  <ng-template>\n    <form [formGroup]=\"appAddFormFieldForm\" (ngSubmit)=\"onSubmitAddField($event)\" autocomplete=\"off\">\n      <ng-container *ngFor=\"let item of addFieldFormFields; let i = index\">\n        <mat-form-field appearance=\"fill\" class=\"w-100\">\n          <mat-label class=\"app-form-label\">{{item.label}}</mat-label>\n          <input [required]=\"item.required\" matInput [name]=\"item.name\" [id]=\"'id'+i\" [type]=\"item.type\"\n            [formControlName]=\"item.name\" [pattern]=\"item.pattern?item.pattern:''\" *ngIf=\"item.type !== 'select'\"\n            [maxlength]=\"item.maxlength || null\" />\n\n          <mat-select [required]=\"item.required\" [formControlName]=\"item.name\" *ngIf=\"item.type==='select'\">\n            @for(option of item.options;track option){\n            <mat-option [value]=\"option.value\">{{option.label}}</mat-option>\n            }\n          </mat-select>\n\n          <div *ngIf=\"appAddFormFieldForm.controls[item.name]?.touched \">\n            <div *ngFor=\"let message of item.errorMessage\">\n              <span class=\"text-danger error-text\"\n                *ngIf=\"appAddFormFieldForm.controls[item.name]?.errors?.[message.type]\">{{message.message}}</span>\n            </div>\n          </div>\n        </mat-form-field>\n      </ng-container>\n      <div class=\"d-flex gap-2 pt-3\">\n        <button type=\"button\" mat-raised-button class=\"w-100\" (click)=\"toggleModal(false)\">{{nls.cancel}}</button>\n        <button class=\"w-100\" mat-raised-button color=\"primary\" type=\"submit\"\n          [disabled]=\"!appAddFormFieldForm.valid\">{{nls.okay}}</button>\n      </div>\n    </form>\n  </ng-template>\n\n</app-modal-window>","import nls from '../../framework/resources/nls/authentication';\nimport { FormFields } from '../../framework/form/form.interfaces';\n\nexport interface FormAuthType {\n  [key: string]: any;\n  login: FormFields[];\n  signup: FormFields[];\n}\nexport const passwordPattern: string =\n  '^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[^a-zA-Z\\\\d]).{8,}$';\nexport const emailPattern: string = '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$';\nexport const phonePattern: string = '^\\\\(?([0-9]{3})\\\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$';\n\nexport const authFormFields: FormAuthType = {\n  login: [\n    {\n      name: 'email',\n      label: nls.email,\n      options: [],\n      errorMessage: [\n        {\n          type: 'required',\n          message: nls.emailRequired,\n        },\n        {\n          type: 'pattern',\n          message: nls.invalidEmail,\n        },\n      ],\n      required: true,\n      id: 'email',\n      type: 'email',\n      model: 'email',\n      pattern: emailPattern,\n    },\n    {\n      name: 'password',\n      label: nls.password,\n      options: [],\n      errorMessage: [\n        {\n          type: 'required',\n          message: nls.passwordRequired,\n        }\n      ],\n      required: true,\n      id: 'password',\n      type: 'password',\n      model: 'password',\n      pattern: '',\n    },\n  ],\n  signup: [\n    {\n      name: 'first_name',\n      label: nls.fname,\n      options: [],\n      errorMessage: [\n        {\n          type: 'required',\n          message: nls.fnameRequired,\n        },\n      ],\n      required: true,\n      id: 'first_name',\n      type: 'text',\n      model: 'first_name',\n      pattern: '',\n    },\n    {\n      name: 'last_name',\n      label: nls.lname,\n      options: [],\n      errorMessage: [{ type: 'required', message: nls.lnameRequired }],\n      required: true,\n      id: 'last_name',\n      type: 'text',\n      model: 'last_name',\n      pattern: '',\n    },\n    {\n      name: 'email',\n      label: nls.email,\n      options: [],\n      errorMessage: [\n        {\n          type: 'required',\n          message: nls.emailRequired,\n        },\n        {\n          type: 'pattern',\n          message: nls.invalidEmail,\n        },\n      ],\n      required: true,\n      id: 'email',\n      type: 'email',\n      model: 'email',\n      pattern: emailPattern,\n    },\n    {\n      name: 'phone',\n      label: nls.phone,\n      options: [],\n      errorMessage: [\n        {\n          type: 'required',\n          message: nls.phoneRequired,\n        },\n        {\n          type: 'pattern',\n          message: nls.invalidMobileFormat,\n        },\n      ],\n      required: true,\n      id: 'phone',\n      type: 'text',\n      model: 'phone',\n      pattern: phonePattern,\n    },\n\n    {\n      name: 'password',\n      label: nls.password,\n      options: [],\n      errorMessage: [\n        {\n          type: 'required',\n          message: nls.passwordRequired,\n        },\n        {\n          type: 'pattern',\n          message: nls.invalidPassword,\n        },\n      ],\n      required: true,\n      id: 'password',\n      type: 'password',\n      model: 'password',\n      pattern: passwordPattern,\n    },\n    {\n      name: 'confirm_password',\n      label: nls.confirmpassword,\n      options: [],\n      errorMessage: [\n        {\n          type: 'required',\n          message: nls.passwordMatchError,\n        }\n      ],\n      required: true,\n      id: 'confirm_password',\n      type: 'password',\n      model: 'confirm_password',\n      pattern: '',\n      matching: true\n    },\n    // {\n    //   name: 'gender',\n    //   label: nls.gender,\n    //   options: [\n    //     {\n    //       label: 'Male',\n    //       value: 'MALE',\n    //     },\n    //     {\n    //       label: 'Female',\n    //       value: 'FEMALE',\n    //     },\n    //     {\n    //       label: 'Other',\n    //       value: 'OTHER',\n    //     },\n    //   ],\n    //   errorMessage: [{ type: 'required', message: nls.genderRequired }],\n    //   required: true,\n    //   id: 'gender',\n    //   type: 'select',\n    //   model: 'gender',\n    //   pattern: '',\n    // },\n  ],\n};\n","import { FormFields } from \"../../framework/form/form.interfaces\";\nimport nls from \"../../framework/resources/nls/accounts\";\nimport { passwordPattern, phonePattern } from \"../authentication/auth.resources\";\n\nexport const chnagePasswordFields: FormFields[] = [\n  {\n    name: \"old_password\",\n    label: \"Current Password\",\n    errorMessage: [\n      {\n        type: 'required',\n        message: nls.ChangePasswordRequired\n      }\n    ],\n    required: true,\n    id: \"old_password\",\n    type: \"password\",\n    model: \"old_password\",\n    pattern: \"\",\n    options: []\n  }, {\n    name: \"new_password\",\n    label: \"New Password\",\n    errorMessage: [\n      {\n        type: 'required',\n        message: nls.ChangePasswordRequiredNew,\n      },\n      {\n        type: 'pattern',\n        message: nls.invalidPassword,\n      },\n    ],\n    required: true,\n    id: \"new_password\",\n    type: \"password\",\n    model: \"new_password\",\n    pattern: passwordPattern,\n    options: []\n  }\n]\nexport const accountItems = [\n  { id: 'view-profile', label: nls.ViewProfile },\n  { id: 'edit-profile', label: nls.EditProfile },\n  { id: 'change-password', label: nls.ChangePassword },\n  // { id: 'my-plan', label: nls.MyPlan, disabled: true },\n  { id: 'reset-account', label: nls.resetAccount },\n  { id: 'backup-data', label: nls.backupData },\n  { id: 'help', label: nls.HelpSupport },\n  { id: 'about', label: nls.About },\n  { id: 'biometric', label: nls.BiometricSettings },\n  { id: 'theme', label: nls.SwitchTheme },\n]\nexport const editProfileFields: FormFields[] = [\n  {\n    name: \"first_name\",\n    label: nls.fname,\n    errorMessage: [\n      {\n        type: 'required',\n        message: nls.fnameRequired\n      }\n    ],\n    required: true,\n    id: \"first_name\",\n    type: \"text\",\n    model: \"first_name\",\n    pattern: \"\",\n    options: []\n  },\n  {\n    name: \"last_name\",\n    label: nls.lname,\n    errorMessage: [\n      {\n        type: 'required',\n        message: nls.lnameRequired\n      }\n    ],\n    required: true,\n    id: \"last_name\",\n    type: \"text\",\n    model: \"last_name\",\n    pattern: \"\",\n    options: []\n  },\n  {\n    name: \"email\",\n    label: nls.email,\n    errorMessage: [\n      {\n        type: 'required',\n        message: nls.emailRequired\n      }\n    ],\n    disabled: true,\n    required: true,\n    id: \"email\",\n    type: \"email\",\n    model: \"email\",\n    pattern: \"\",\n    options: []\n  },\n  {\n    name: \"phone\",\n    label: nls.phone,\n    errorMessage: [\n      {\n        type: 'required',\n        message: nls.phoneRequired\n      }, {\n        type: 'pattern',\n        message: nls.invlaidPhone\n      }\n    ],\n    disabled: false,\n    required: true,\n    id: \"phone\",\n    type: \"tel\",\n    model: \"phone\",\n    pattern: phonePattern,\n    options: []\n  }\n\n\n]\n\nexport const backupDataFormFields: FormFields[] = [\n  {\n    name: 'backup-file',\n    label: `${nls.backupFile} (${nls.backupFileName})`,\n    options: [],\n    errorMessage: [\n      {\n        type: 'required',\n        message: nls.backupFileIsRequired,\n      }\n    ],\n    required: true,\n    id: 'backup-file',\n    type: 'file',\n    model: 'backup-file',\n    pattern: '',\n    accept: \".bak\",\n  }\n]","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, ANIMATION_MODULE_TYPE, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport * as i1 from '@angular/cdk/a11y';\nimport { MatRipple, _MatInternalFormField, MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nconst _c0 = [\"switch\"];\nconst _c1 = [\"*\"];\nfunction MatSlideToggle_Conditional_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 12);\n    i0.ɵɵelement(2, \"path\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"svg\", 14);\n    i0.ɵɵelement(4, \"path\", 15);\n    i0.ɵɵelementEnd()();\n  }\n}\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('mat-slide-toggle-default-options', {\n  providedIn: 'root',\n  factory: () => ({\n    disableToggleValue: false,\n    hideIcon: false,\n    disabledInteractive: false\n  })\n});\n\n/**\n * @deprecated Will stop being exported.\n * @breaking-change 19.0.0\n */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatSlideToggle),\n  multi: true\n};\n/** Change event object emitted by a slide toggle. */\nclass MatSlideToggleChange {\n  constructor( /** The source slide toggle of the event. */\n  source, /** The new `checked` value of the slide toggle. */\n  checked) {\n    this.source = source;\n    this.checked = checked;\n  }\n}\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\nlet MatSlideToggle = /*#__PURE__*/(() => {\n  class MatSlideToggle {\n    _createChangeEvent(isChecked) {\n      return new MatSlideToggleChange(this, isChecked);\n    }\n    /** Returns the unique id for the visual hidden button. */\n    get buttonId() {\n      return `${this.id || this._uniqueId}-button`;\n    }\n    /** Focuses the slide-toggle. */\n    focus() {\n      this._switchElement.nativeElement.focus();\n    }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() {\n      return this._checked;\n    }\n    set checked(value) {\n      this._checked = value;\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n      return `${this.id || this._uniqueId}-input`;\n    }\n    constructor(_elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, animationMode) {\n      this._elementRef = _elementRef;\n      this._focusMonitor = _focusMonitor;\n      this._changeDetectorRef = _changeDetectorRef;\n      this.defaults = defaults;\n      this._onChange = _ => {};\n      this._onTouched = () => {};\n      this._validatorOnChange = () => {};\n      this._checked = false;\n      /** Name value will be applied to the input element if present. */\n      this.name = null;\n      /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n      this.labelPosition = 'after';\n      /** Used to set the aria-label attribute on the underlying input element. */\n      this.ariaLabel = null;\n      /** Used to set the aria-labelledby attribute on the underlying input element. */\n      this.ariaLabelledby = null;\n      /** Whether the slide toggle is disabled. */\n      this.disabled = false;\n      /** Whether the slide toggle has a ripple. */\n      this.disableRipple = false;\n      /** Tabindex of slide toggle. */\n      this.tabIndex = 0;\n      /** An event will be dispatched each time the slide-toggle changes its value. */\n      this.change = new EventEmitter();\n      /**\n       * An event will be dispatched each time the slide-toggle input is toggled.\n       * This event is always emitted when the user toggles the slide toggle, but this does not mean\n       * the slide toggle's value has changed.\n       */\n      this.toggleChange = new EventEmitter();\n      this.tabIndex = parseInt(tabIndex) || 0;\n      this.color = defaults.color || 'accent';\n      this._noopAnimations = animationMode === 'NoopAnimations';\n      this.id = this._uniqueId = `mat-mdc-slide-toggle-${++nextUniqueId}`;\n      this.hideIcon = defaults.hideIcon ?? false;\n      this.disabledInteractive = defaults.disabledInteractive ?? false;\n      this._labelId = this._uniqueId + '-label';\n    }\n    ngAfterContentInit() {\n      this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n        if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n          this._focused = true;\n          this._changeDetectorRef.markForCheck();\n        } else if (!focusOrigin) {\n          // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n          // Angular does not expect events to be raised during change detection, so any state\n          // change (such as a form control's ng-touched) will cause a changed-after-checked error.\n          // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n          // telling the form control it has been touched until the next tick.\n          Promise.resolve().then(() => {\n            this._focused = false;\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n          });\n        }\n      });\n    }\n    ngOnChanges(changes) {\n      if (changes['required']) {\n        this._validatorOnChange();\n      }\n    }\n    ngOnDestroy() {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n      this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n      this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    /** Implemented as a part of Validator. */\n    validate(control) {\n      return this.required && control.value !== true ? {\n        'required': true\n      } : null;\n    }\n    /** Implemented as a part of Validator. */\n    registerOnValidatorChange(fn) {\n      this._validatorOnChange = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n      this.checked = !this.checked;\n      this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n      this._onChange(this.checked);\n      this.change.emit(this._createChangeEvent(this.checked));\n    }\n    /** Method being called whenever the underlying button is clicked. */\n    _handleClick() {\n      if (!this.disabled) {\n        this.toggleChange.emit();\n        if (!this.defaults.disableToggleValue) {\n          this.checked = !this.checked;\n          this._onChange(this.checked);\n          this.change.emit(new MatSlideToggleChange(this, this.checked));\n        }\n      }\n    }\n    _getAriaLabelledBy() {\n      if (this.ariaLabelledby) {\n        return this.ariaLabelledby;\n      }\n      // Even though we have a `label` element with a `for` pointing to the button, we need the\n      // `aria-labelledby`, because the button gets flagged as not having a label by tools like axe.\n      return this.ariaLabel ? null : this._labelId;\n    }\n    static {\n      this.ɵfac = function MatSlideToggle_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatSlideToggle)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatSlideToggle,\n        selectors: [[\"mat-slide-toggle\"]],\n        viewQuery: function MatSlideToggle_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._switchElement = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-slide-toggle\"],\n        hostVars: 13,\n        hostBindings: function MatSlideToggle_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"id\", ctx.id);\n            i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"name\", null)(\"aria-labelledby\", null);\n            i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n            i0.ɵɵclassProp(\"mat-mdc-slide-toggle-focused\", ctx._focused)(\"mat-mdc-slide-toggle-checked\", ctx.checked)(\"_mat-animation-noopable\", ctx._noopAnimations);\n          }\n        },\n        inputs: {\n          name: \"name\",\n          id: \"id\",\n          labelPosition: \"labelPosition\",\n          ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n          ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n          ariaDescribedby: [0, \"aria-describedby\", \"ariaDescribedby\"],\n          required: [2, \"required\", \"required\", booleanAttribute],\n          color: \"color\",\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n          tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n          checked: [2, \"checked\", \"checked\", booleanAttribute],\n          hideIcon: [2, \"hideIcon\", \"hideIcon\", booleanAttribute],\n          disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute]\n        },\n        outputs: {\n          change: \"change\",\n          toggleChange: \"toggleChange\"\n        },\n        exportAs: [\"matSlideToggle\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, {\n          provide: NG_VALIDATORS,\n          useExisting: MatSlideToggle,\n          multi: true\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c1,\n        decls: 13,\n        vars: 27,\n        consts: [[\"switch\", \"\"], [\"mat-internal-form-field\", \"\", 3, \"labelPosition\"], [\"role\", \"switch\", \"type\", \"button\", 1, \"mdc-switch\", 3, \"click\", \"tabIndex\", \"disabled\"], [1, \"mdc-switch__track\"], [1, \"mdc-switch__handle-track\"], [1, \"mdc-switch__handle\"], [1, \"mdc-switch__shadow\"], [1, \"mdc-elevation-overlay\"], [1, \"mdc-switch__ripple\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-slide-toggle-ripple\", \"mat-mdc-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\"], [1, \"mdc-switch__icons\"], [1, \"mdc-label\", 3, \"click\", \"for\"], [\"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-switch__icon\", \"mdc-switch__icon--on\"], [\"d\", \"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\"], [\"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-switch__icon\", \"mdc-switch__icon--off\"], [\"d\", \"M20 13H4v-2h16v2z\"]],\n        template: function MatSlideToggle_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\", 1)(1, \"button\", 2, 0);\n            i0.ɵɵlistener(\"click\", function MatSlideToggle_Template_button_click_1_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handleClick());\n            });\n            i0.ɵɵelement(3, \"span\", 3);\n            i0.ɵɵelementStart(4, \"span\", 4)(5, \"span\", 5)(6, \"span\", 6);\n            i0.ɵɵelement(7, \"span\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"span\", 8);\n            i0.ɵɵelement(9, \"span\", 9);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(10, MatSlideToggle_Conditional_10_Template, 5, 0, \"span\", 10);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(11, \"label\", 11);\n            i0.ɵɵlistener(\"click\", function MatSlideToggle_Template_label_click_11_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView($event.stopPropagation());\n            });\n            i0.ɵɵprojection(12);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            const switch_r2 = i0.ɵɵreference(2);\n            i0.ɵɵproperty(\"labelPosition\", ctx.labelPosition);\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"mdc-switch--selected\", ctx.checked)(\"mdc-switch--unselected\", !ctx.checked)(\"mdc-switch--checked\", ctx.checked)(\"mdc-switch--disabled\", ctx.disabled)(\"mat-mdc-slide-toggle-disabled-interactive\", ctx.disabledInteractive);\n            i0.ɵɵproperty(\"tabIndex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex)(\"disabled\", ctx.disabled && !ctx.disabledInteractive);\n            i0.ɵɵattribute(\"id\", ctx.buttonId)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx._getAriaLabelledBy())(\"aria-describedby\", ctx.ariaDescribedby)(\"aria-required\", ctx.required || null)(\"aria-checked\", ctx.checked)(\"aria-disabled\", ctx.disabled && ctx.disabledInteractive ? \"true\" : null);\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"matRippleTrigger\", switch_r2)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(!ctx.hideIcon ? 10 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"for\", ctx.buttonId);\n            i0.ɵɵattribute(\"id\", ctx._labelId);\n          }\n        },\n        dependencies: [MatRipple, _MatInternalFormField],\n        styles: [\".mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative;width:var(--mdc-switch-track-width)}.mdc-switch.mdc-switch--disabled{cursor:default;pointer-events:none}.mdc-switch.mat-mdc-slide-toggle-disabled-interactive{pointer-events:auto}.mdc-switch__track{overflow:hidden;position:relative;width:100%;height:var(--mdc-switch-track-height);border-radius:var(--mdc-switch-track-shape, var(--mat-app-corner-full))}.mdc-switch--disabled.mdc-switch .mdc-switch__track{opacity:var(--mdc-switch-disabled-track-opacity)}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;width:100%;border-width:var(--mat-switch-track-outline-width);border-color:var(--mat-switch-track-outline-color, var(--mat-app-outline))}.cdk-high-contrast-active .mdc-switch__track::before,.cdk-high-contrast-active .mdc-switch__track::after{border-color:currentColor}.mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track::after{border-width:var(--mat-switch-selected-track-outline-width);border-color:var(--mat-switch-selected-track-outline-color)}.mdc-switch--disabled .mdc-switch__track::before,.mdc-switch--disabled .mdc-switch__track::after{border-width:var(--mat-switch-disabled-unselected-track-outline-width);border-color:var(--mat-switch-disabled-unselected-track-outline-color, var(--mat-app-on-surface))}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0);background:var(--mdc-switch-unselected-track-color, var(--mat-app-surface-variant))}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch--selected .mdc-switch__track::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::before{opacity:var(--mat-switch-hidden-track-opacity);transition:var(--mat-switch-hidden-track-transition)}.mdc-switch--unselected .mdc-switch__track::before{opacity:var(--mat-switch-visible-track-opacity);transition:var(--mat-switch-visible-track-transition)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-hover-track-color, var(--mat-app-surface-variant))}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-focus-track-color, var(--mat-app-surface-variant))}.mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mdc-switch-unselected-pressed-track-color, var(--mat-app-surface-variant))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__track::before,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__track::before,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__track::before,.mdc-switch.mdc-switch--disabled .mdc-switch__track::before{background:var(--mdc-switch-disabled-unselected-track-color, var(--mat-app-surface-variant))}.mdc-switch__track::after{transform:translateX(-100%);background:var(--mdc-switch-selected-track-color, var(--mat-app-primary))}[dir=rtl] .mdc-switch__track::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::after{transform:translateX(0)}.mdc-switch--selected .mdc-switch__track::after{opacity:var(--mat-switch-visible-track-opacity);transition:var(--mat-switch-visible-track-transition)}.mdc-switch--unselected .mdc-switch__track::after{opacity:var(--mat-switch-hidden-track-opacity);transition:var(--mat-switch-hidden-track-transition)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-hover-track-color, var(--mat-app-primary))}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-focus-track-color, var(--mat-app-primary))}.mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mdc-switch-selected-pressed-track-color, var(--mat-app-primary))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__track::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__track::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__track::after,.mdc-switch.mdc-switch--disabled .mdc-switch__track::after{background:var(--mdc-switch-disabled-selected-track-color, var(--mat-app-on-surface))}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0);width:calc(100% - var(--mdc-switch-handle-width))}[dir=rtl] .mdc-switch__handle-track{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto;transition:width 75ms cubic-bezier(0.4, 0, 0.2, 1),height 75ms cubic-bezier(0.4, 0, 0.2, 1),margin 75ms cubic-bezier(0.4, 0, 0.2, 1);width:var(--mdc-switch-handle-width);height:var(--mdc-switch-handle-height);border-radius:var(--mdc-switch-handle-shape, var(--mat-app-corner-full))}[dir=rtl] .mdc-switch__handle{left:auto;right:0}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle{width:var(--mat-switch-unselected-handle-size);height:var(--mat-switch-unselected-handle-size);margin:var(--mat-switch-unselected-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-switch-unselected-with-icon-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle{width:var(--mat-switch-selected-handle-size);height:var(--mat-switch-selected-handle-size);margin:var(--mat-switch-selected-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-switch-selected-with-icon-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch__handle:has(.mdc-switch__icons){width:var(--mat-switch-with-icon-handle-size);height:var(--mat-switch-with-icon-handle-size)}.mat-mdc-slide-toggle .mdc-switch:active:not(.mdc-switch--disabled) .mdc-switch__handle{width:var(--mat-switch-pressed-handle-size);height:var(--mat-switch-pressed-handle-size)}.mat-mdc-slide-toggle .mdc-switch--selected:active:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-switch-selected-pressed-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--unselected:active:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-switch-unselected-pressed-handle-horizontal-margin)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__handle::after{opacity:var(--mat-switch-disabled-selected-handle-opacity)}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__handle::after{opacity:var(--mat-switch-disabled-unselected-handle-opacity)}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}.cdk-high-contrast-active .mdc-switch__handle::before,.cdk-high-contrast-active .mdc-switch__handle::after{border-color:currentColor}.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-selected-handle-color, var(--mat-app-on-primary))}.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-hover-handle-color, var(--mat-app-primary-container))}.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-focus-handle-color, var(--mat-app-primary-container))}.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-selected-pressed-handle-color, var(--mat-app-primary-container))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:hover:not(:focus):not(:active) .mdc-switch__handle::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:focus:not(:active) .mdc-switch__handle::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:active .mdc-switch__handle::after,.mdc-switch--selected.mdc-switch--disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-selected-handle-color, var(--mat-app-surface))}.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-unselected-handle-color, var(--mat-app-outline))}.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-hover-handle-color, var(--mat-app-on-surface-variant))}.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-focus-handle-color, var(--mat-app-on-surface-variant))}.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-unselected-pressed-handle-color, var(--mat-app-on-surface-variant))}.mdc-switch--unselected.mdc-switch--disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-unselected-handle-color, var(--mat-app-on-surface))}.mdc-switch__handle::before{background:var(--mdc-switch-handle-surface-color)}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation-shadow)}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__shadow,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__shadow,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__shadow,.mdc-switch.mdc-switch--disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation-shadow)}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1;width:var(--mdc-switch-state-layer-size);height:var(--mdc-switch-state-layer-size)}.mdc-switch__ripple::after{content:\\\"\\\";opacity:0}.mdc-switch--disabled .mdc-switch__ripple::after{display:none}.mat-mdc-slide-toggle-disabled-interactive .mdc-switch__ripple::after{display:block}.mdc-switch:hover .mdc-switch__ripple::after{opacity:.04;transition:75ms opacity cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mdc-switch .mdc-switch__ripple::after{opacity:.12}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:focus .mdc-switch__ripple::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:active .mdc-switch__ripple::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:hover:not(:focus) .mdc-switch__ripple::after,.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background:var(--mdc-switch-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background:var(--mdc-switch-unselected-focus-state-layer-color, var(--mat-app-on-surface))}.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background:var(--mdc-switch-unselected-pressed-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));transition:opacity 75ms linear}.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background:var(--mdc-switch-selected-hover-state-layer-color, var(--mat-app-primary))}.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background:var(--mdc-switch-selected-focus-state-layer-color, var(--mat-app-primary))}.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background:var(--mdc-switch-selected-pressed-state-layer-color, var(--mat-app-primary));opacity:var(--mdc-switch-selected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));transition:opacity 75ms linear}.mdc-switch__icons{position:relative;height:100%;width:100%;z-index:1}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__icons{opacity:var(--mdc-switch-disabled-unselected-icon-opacity)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__icons{opacity:var(--mdc-switch-disabled-selected-icon-opacity)}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--unselected .mdc-switch__icon{width:var(--mdc-switch-unselected-icon-size);height:var(--mdc-switch-unselected-icon-size);fill:var(--mdc-switch-unselected-icon-color, var(--mat-app-surface-variant))}.mdc-switch--unselected.mdc-switch--disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-unselected-icon-color, var(--mat-app-surface-variant))}.mdc-switch--selected .mdc-switch__icon{width:var(--mdc-switch-selected-icon-size);height:var(--mdc-switch-selected-icon-size);fill:var(--mdc-switch-selected-icon-color, var(--mat-app-on-primary-container))}.mdc-switch--selected.mdc-switch--disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-selected-icon-color, var(--mat-app-on-surface))}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle{-webkit-user-select:none;user-select:none;display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-slide-toggle .mat-internal-form-field{color:var(--mat-switch-label-text-color, var(--mat-app-on-surface));font-family:var(--mat-switch-label-text-font, var(--mat-app-body-medium-font));line-height:var(--mat-switch-label-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mat-switch-label-text-size, var(--mat-app-body-medium-size));letter-spacing:var(--mat-switch-label-text-tracking, var(--mat-app-body-medium-tracking));font-weight:var(--mat-switch-label-text-weight, var(--mat-app-body-medium-weight))}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-mdc-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}.mat-mdc-slide-toggle .mdc-switch:enabled+.mdc-label{cursor:pointer}.mat-mdc-slide-toggle .mdc-switch--disabled+label{color:var(--mdc-switch-disabled-label-text-color)}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatSlideToggle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MatSlideToggleRequiredValidator),\n  multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n *\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nlet MatSlideToggleRequiredValidator = /*#__PURE__*/(() => {\n  class MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatSlideToggleRequiredValidator_BaseFactory;\n        return function MatSlideToggleRequiredValidator_Factory(__ngFactoryType__) {\n          return (ɵMatSlideToggleRequiredValidator_BaseFactory || (ɵMatSlideToggleRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator)))(__ngFactoryType__ || MatSlideToggleRequiredValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatSlideToggleRequiredValidator,\n        selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatSlideToggleRequiredValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @deprecated No longer used, `MatSlideToggle` implements required validation directly.\n * @breaking-change 19.0.0\n */\nlet _MatSlideToggleRequiredValidatorModule = /*#__PURE__*/(() => {\n  class _MatSlideToggleRequiredValidatorModule {\n    static {\n      this.ɵfac = function _MatSlideToggleRequiredValidatorModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || _MatSlideToggleRequiredValidatorModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: _MatSlideToggleRequiredValidatorModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return _MatSlideToggleRequiredValidatorModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSlideToggleModule = /*#__PURE__*/(() => {\n  class MatSlideToggleModule {\n    static {\n      this.ɵfac = function MatSlideToggleModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatSlideToggleModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatSlideToggleModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatSlideToggle, MatCommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatSlideToggleModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-reports',\n  standalone: true,\n  imports: [],\n  templateUrl: './reports.component.html',\n  styleUrl: './reports.component.scss'\n})\nexport class ReportsComponent {\n\n}\n","<p>reports works!</p>\n","import generic from './generic';\n\nconst nls = {\n    ...generic,\n    trackHealth: \"Your Life, Your Schedule, Your Way\",\n    myWidgets: \"My Activities\",\n    greeting: {\n        morning: \"Good morning\",\n        afternoon: \"Good afternoon\",\n        evening: \"Good evening\"\n    },\n    addWidget: \"New Activity\",\n    reorder: \"Reorder\",\n    title: 'Activity Name',\n    titleRequired: \"Activity Name is required.\",\n    invalidTitle: \"Activity name can have only alphabets without any trailing spaces.\",\n    target: 'Activity Objective',\n    color: \"Activity Color\",\n    transparency: \"Activity Color Transparency(%)\",\n    motivation: \"Activity Image\",\n    maxSizeError: 'File size must be <= ',\n    motivationRequired: \"Activity Image is required.\",\n    preview: \"Activity Card Preview\",\n    cancelWidget: \"You want to cancel this activity action.\",\n    editWidget: \"Edit Activity\",\n    deleteWidget: \"Delete Activity\",\n    deleteWidgetText: \"You want delete this activity.\",\n    addWidgetsUsingPlusButton: \"Create an activity using plus button.\",\n    addWidgetSuccess: \"Activity created successfully.\",\n    updateWidgetSuccess: \"Activity updated successfully.\",\n    deleteWidgetSuccess: \"Activity deleted successfully.\",\n    widgetError: \"Activity action unsuccessful.\",\n    reorderWidgetSuccess: \"Activity order saved successfully.\",\n    widgetType:\"Activity Type\",\n    typeRequired:\"Activity Type is required\"\n}\nexport default nls;","import * as i0 from '@angular/core';\nimport { InjectionToken, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Optional, Input, Directive, QueryList, EventEmitter, inject, Injector, afterNextRender, TemplateRef, ContentChildren, ViewChild, ContentChild, Output, ChangeDetectorRef, Self, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Subject, merge, Subscription, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, takeUntil, filter, take, delay } from 'rxjs/operators';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i3 from '@angular/cdk/bidi';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [[[\"mat-icon\"], [\"\", \"matMenuItemIcon\", \"\"]], \"*\"];\nconst _c2 = [\"mat-icon, [matMenuItemIcon]\", \"*\"];\nfunction MatMenuItem_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 2);\n    i0.ɵɵelement(1, \"polygon\", 3);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c3 = [\"*\"];\nfunction MatMenu_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵlistener(\"keydown\", function MatMenu_ng_template_0_Template_div_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._handleKeydown($event));\n    })(\"click\", function MatMenu_ng_template_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.closed.emit(\"click\"));\n    })(\"@transformMenu.start\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onAnimationStart($event));\n    })(\"@transformMenu.done\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onAnimationDone($event));\n    });\n    i0.ɵɵelementStart(1, \"div\", 1);\n    i0.ɵɵprojection(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1._classList);\n    i0.ɵɵproperty(\"id\", ctx_r1.panelId)(\"@transformMenu\", ctx_r1._panelAnimationState);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.ariaLabel || null)(\"aria-labelledby\", ctx_r1.ariaLabelledby || null)(\"aria-describedby\", ctx_r1.ariaDescribedby || null);\n  }\n}\nconst MAT_MENU_PANEL = /*#__PURE__*/new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * Single item inside a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nlet MatMenuItem = /*#__PURE__*/(() => {\n  class MatMenuItem {\n    constructor(_elementRef, _document, _focusMonitor, _parentMenu, _changeDetectorRef) {\n      this._elementRef = _elementRef;\n      this._document = _document;\n      this._focusMonitor = _focusMonitor;\n      this._parentMenu = _parentMenu;\n      this._changeDetectorRef = _changeDetectorRef;\n      /** ARIA role for the menu item. */\n      this.role = 'menuitem';\n      /** Whether the menu item is disabled. */\n      this.disabled = false;\n      /** Whether ripples are disabled on the menu item. */\n      this.disableRipple = false;\n      /** Stream that emits when the menu item is hovered. */\n      this._hovered = new Subject();\n      /** Stream that emits when the menu item is focused. */\n      this._focused = new Subject();\n      /** Whether the menu item is highlighted. */\n      this._highlighted = false;\n      /** Whether the menu item acts as a trigger for a sub-menu. */\n      this._triggersSubmenu = false;\n      _parentMenu?.addItem?.(this);\n    }\n    /** Focuses the menu item. */\n    focus(origin, options) {\n      if (this._focusMonitor && origin) {\n        this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n      } else {\n        this._getHostElement().focus(options);\n      }\n      this._focused.next(this);\n    }\n    ngAfterViewInit() {\n      if (this._focusMonitor) {\n        // Start monitoring the element, so it gets the appropriate focused classes. We want\n        // to show the focus style for menu items only when the focus was not caused by a\n        // mouse or touch interaction.\n        this._focusMonitor.monitor(this._elementRef, false);\n      }\n    }\n    ngOnDestroy() {\n      if (this._focusMonitor) {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n      }\n      if (this._parentMenu && this._parentMenu.removeItem) {\n        this._parentMenu.removeItem(this);\n      }\n      this._hovered.complete();\n      this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n    _getTabIndex() {\n      return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n    _getHostElement() {\n      return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event) {\n      if (this.disabled) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n    /** Emits to the hover stream. */\n    _handleMouseEnter() {\n      this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n      const clone = this._elementRef.nativeElement.cloneNode(true);\n      const icons = clone.querySelectorAll('mat-icon, .material-icons');\n      // Strip away icons, so they don't show up in the text.\n      for (let i = 0; i < icons.length; i++) {\n        icons[i].remove();\n      }\n      return clone.textContent?.trim() || '';\n    }\n    _setHighlighted(isHighlighted) {\n      // We need to mark this for check for the case where the content is coming from a\n      // `matMenuContent` whose change detection tree is at the declaration position,\n      // not the insertion position. See #23175.\n      // @breaking-change 12.0.0 Remove null check for `_changeDetectorRef`.\n      this._highlighted = isHighlighted;\n      this._changeDetectorRef?.markForCheck();\n    }\n    _setTriggersSubmenu(triggersSubmenu) {\n      // @breaking-change 12.0.0 Remove null check for `_changeDetectorRef`.\n      this._triggersSubmenu = triggersSubmenu;\n      this._changeDetectorRef?.markForCheck();\n    }\n    _hasFocus() {\n      return this._document && this._document.activeElement === this._getHostElement();\n    }\n    static {\n      this.ɵfac = function MatMenuItem_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatMenuItem)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatMenuItem,\n        selectors: [[\"\", \"mat-menu-item\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-menu-item\", \"mat-mdc-focus-indicator\"],\n        hostVars: 8,\n        hostBindings: function MatMenuItem_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) {\n              return ctx._checkDisabled($event);\n            })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() {\n              return ctx._handleMouseEnter();\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled)(\"disabled\", ctx.disabled || null);\n            i0.ɵɵclassProp(\"mat-mdc-menu-item-highlighted\", ctx._highlighted)(\"mat-mdc-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n          }\n        },\n        inputs: {\n          role: \"role\",\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute]\n        },\n        exportAs: [\"matMenuItem\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        attrs: _c0,\n        ngContentSelectors: _c2,\n        decls: 5,\n        vars: 3,\n        consts: [[1, \"mat-mdc-menu-item-text\"], [\"matRipple\", \"\", 1, \"mat-mdc-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"], [\"viewBox\", \"0 0 5 10\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mat-mdc-menu-submenu-icon\"], [\"points\", \"0,0 5,5 0,10\"]],\n        template: function MatMenuItem_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c1);\n            i0.ɵɵprojection(0);\n            i0.ɵɵelementStart(1, \"span\", 0);\n            i0.ɵɵprojection(2, 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(3, \"div\", 1);\n            i0.ɵɵtemplate(4, MatMenuItem_Conditional_4_Template, 2, 0, \":svg:svg\", 2);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx._triggersSubmenu ? 4 : -1);\n          }\n        },\n        dependencies: [MatRipple],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatMenuItem;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n  throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n  throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n  throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` + `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = /*#__PURE__*/new InjectionToken('MatMenuContent');\n/** Menu content that will be rendered lazily once the menu is opened. */\nlet MatMenuContent = /*#__PURE__*/(() => {\n  class MatMenuContent {\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n      this._template = _template;\n      this._componentFactoryResolver = _componentFactoryResolver;\n      this._appRef = _appRef;\n      this._injector = _injector;\n      this._viewContainerRef = _viewContainerRef;\n      this._document = _document;\n      this._changeDetectorRef = _changeDetectorRef;\n      /** Emits when the menu content has been attached. */\n      this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context = {}) {\n      if (!this._portal) {\n        this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n      }\n      this.detach();\n      if (!this._outlet) {\n        this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n      }\n      const element = this._template.elementRef.nativeElement;\n      // Because we support opening the same menu from different triggers (which in turn have their\n      // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n      // risk it staying attached to a pane that's no longer in the DOM.\n      element.parentNode.insertBefore(this._outlet.outletElement, element);\n      // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n      // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n      // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n      // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n      // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n      // @breaking-change 9.0.0 Make change detector ref required\n      this._changeDetectorRef?.markForCheck();\n      this._portal.attach(this._outlet, context);\n      this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n      if (this._portal.isAttached) {\n        this._portal.detach();\n      }\n    }\n    ngOnDestroy() {\n      if (this._outlet) {\n        this._outlet.dispose();\n      }\n    }\n    static {\n      this.ɵfac = function MatMenuContent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatMenuContent)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ApplicationRef), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatMenuContent,\n        selectors: [[\"ng-template\", \"matMenuContent\", \"\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_MENU_CONTENT,\n          useExisting: MatMenuContent\n        }])]\n      });\n    }\n  }\n  return MatMenuContent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nconst matMenuAnimations = {\n  /**\n   * This animation controls the menu panel's entry and exit from the page.\n   *\n   * When the menu panel is added to the DOM, it scales in and fades in its border.\n   *\n   * When the menu panel is removed from the DOM, it simply fades out after a brief\n   * delay to display the ripple.\n   */\n  transformMenu: /*#__PURE__*/trigger('transformMenu', [/*#__PURE__*/state('void', /*#__PURE__*/style({\n    opacity: 0,\n    transform: 'scale(0.8)'\n  })), /*#__PURE__*/transition('void => enter', /*#__PURE__*/animate('120ms cubic-bezier(0, 0, 0.2, 1)', /*#__PURE__*/style({\n    opacity: 1,\n    transform: 'scale(1)'\n  }))), /*#__PURE__*/transition('* => void', /*#__PURE__*/animate('100ms 25ms linear', /*#__PURE__*/style({\n    opacity: 0\n  })))]),\n  /**\n   * This animation fades in the background color and content of the menu panel\n   * after its containing element is scaled in.\n   */\n  fadeInItems: /*#__PURE__*/trigger('fadeInItems', [\n  /*#__PURE__*/\n  // TODO(crisbeto): this is inside the `transformMenu`\n  // now. Remove next time we do breaking changes.\n  state('showing', /*#__PURE__*/style({\n    opacity: 1\n  })), /*#__PURE__*/transition('void => *', [/*#__PURE__*/style({\n    opacity: 0\n  }), /*#__PURE__*/animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')])])\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\nlet menuPanelUid = 0;\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('mat-menu-default-options', {\n  providedIn: 'root',\n  factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    overlapTrigger: false,\n    xPosition: 'after',\n    yPosition: 'below',\n    backdropClass: 'cdk-overlay-transparent-backdrop'\n  };\n}\nlet MatMenu = /*#__PURE__*/(() => {\n  class MatMenu {\n    /** Position of the menu in the X axis. */\n    get xPosition() {\n      return this._xPosition;\n    }\n    set xPosition(value) {\n      if (value !== 'before' && value !== 'after' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwMatMenuInvalidPositionX();\n      }\n      this._xPosition = value;\n      this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n    get yPosition() {\n      return this._yPosition;\n    }\n    set yPosition(value) {\n      if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwMatMenuInvalidPositionY();\n      }\n      this._yPosition = value;\n      this.setPositionClasses();\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes) {\n      const previousPanelClass = this._previousPanelClass;\n      const newClassList = {\n        ...this._classList\n      };\n      if (previousPanelClass && previousPanelClass.length) {\n        previousPanelClass.split(' ').forEach(className => {\n          newClassList[className] = false;\n        });\n      }\n      this._previousPanelClass = classes;\n      if (classes && classes.length) {\n        classes.split(' ').forEach(className => {\n          newClassList[className] = true;\n        });\n        this._elementRef.nativeElement.className = '';\n      }\n      this._classList = newClassList;\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n    get classList() {\n      return this.panelClass;\n    }\n    set classList(classes) {\n      this.panelClass = classes;\n    }\n    constructor(_elementRef,\n    /**\n     * @deprecated Unused param, will be removed.\n     * @breaking-change 19.0.0\n     */\n    _unusedNgZone, defaultOptions,\n    // @breaking-change 15.0.0 `_changeDetectorRef` to become a required parameter.\n    _changeDetectorRef) {\n      this._elementRef = _elementRef;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._elevationPrefix = 'mat-elevation-z';\n      this._baseElevation = null;\n      /** Only the direct descendant menu items. */\n      this._directDescendantItems = new QueryList();\n      /** Classes to be applied to the menu panel. */\n      this._classList = {};\n      /** Current state of the panel animation. */\n      this._panelAnimationState = 'void';\n      /** Emits whenever an animation on the menu completes. */\n      this._animationDone = new Subject();\n      /** Event emitted when the menu is closed. */\n      this.closed = new EventEmitter();\n      /**\n       * Event emitted when the menu is closed.\n       * @deprecated Switch to `closed` instead\n       * @breaking-change 8.0.0\n       */\n      this.close = this.closed;\n      this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n      this._injector = inject(Injector);\n      this.overlayPanelClass = defaultOptions.overlayPanelClass || '';\n      this._xPosition = defaultOptions.xPosition;\n      this._yPosition = defaultOptions.yPosition;\n      this.backdropClass = defaultOptions.backdropClass;\n      this.overlapTrigger = defaultOptions.overlapTrigger;\n      this.hasBackdrop = defaultOptions.hasBackdrop;\n    }\n    ngOnInit() {\n      this.setPositionClasses();\n    }\n    ngAfterContentInit() {\n      this._updateDirectDescendants();\n      this._keyManager = new FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead().withHomeAndEnd();\n      this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n      // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n      // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n      // is internal and we know that it gets completed on destroy.\n      this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map(item => item._focused)))).subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n      this._directDescendantItems.changes.subscribe(itemsList => {\n        // Move focus to another item, if the active item is removed from the list.\n        // We need to debounce the callback, because multiple items might be removed\n        // in quick succession.\n        const manager = this._keyManager;\n        if (this._panelAnimationState === 'enter' && manager.activeItem?._hasFocus()) {\n          const items = itemsList.toArray();\n          const index = Math.max(0, Math.min(items.length - 1, manager.activeItemIndex || 0));\n          if (items[index] && !items[index].disabled) {\n            manager.setActiveItem(index);\n          } else {\n            manager.setNextItemActive();\n          }\n        }\n      });\n    }\n    ngOnDestroy() {\n      this._keyManager?.destroy();\n      this._directDescendantItems.destroy();\n      this.closed.complete();\n      this._firstItemFocusRef?.destroy();\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n    _hovered() {\n      // Coerce the `changes` property because Angular types it as `Observable<any>`\n      const itemChanges = this._directDescendantItems.changes;\n      return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map(item => item._hovered))));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    addItem(_item) {}\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    removeItem(_item) {}\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event) {\n      const keyCode = event.keyCode;\n      const manager = this._keyManager;\n      switch (keyCode) {\n        case ESCAPE:\n          if (!hasModifierKey(event)) {\n            event.preventDefault();\n            this.closed.emit('keydown');\n          }\n          break;\n        case LEFT_ARROW:\n          if (this.parentMenu && this.direction === 'ltr') {\n            this.closed.emit('keydown');\n          }\n          break;\n        case RIGHT_ARROW:\n          if (this.parentMenu && this.direction === 'rtl') {\n            this.closed.emit('keydown');\n          }\n          break;\n        default:\n          if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n            manager.setFocusOrigin('keyboard');\n          }\n          manager.onKeydown(event);\n          return;\n      }\n      // Don't allow the event to propagate if we've already handled it, or it may\n      // end up reaching other overlays that were opened earlier (see #22694).\n      event.stopPropagation();\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin = 'program') {\n      // Wait for `afterNextRender` to ensure iOS VoiceOver screen reader focuses the first item (#24735).\n      this._firstItemFocusRef?.destroy();\n      this._firstItemFocusRef = afterNextRender(() => {\n        let menuPanel = null;\n        if (this._directDescendantItems.length) {\n          // Because the `mat-menuPanel` is at the DOM insertion point, not inside the overlay, we don't\n          // have a nice way of getting a hold of the menuPanel panel. We can't use a `ViewChild` either\n          // because the panel is inside an `ng-template`. We work around it by starting from one of\n          // the items and walking up the DOM.\n          menuPanel = this._directDescendantItems.first._getHostElement().closest('[role=\"menu\"]');\n        }\n        // If an item in the menuPanel is already focused, avoid overriding the focus.\n        if (!menuPanel || !menuPanel.contains(document.activeElement)) {\n          const manager = this._keyManager;\n          manager.setFocusOrigin(origin).setFirstItemActive();\n          // If there's no active item at this point, it means that all the items are disabled.\n          // Move focus to the menuPanel panel so keyboard events like Escape still work. Also this will\n          // give _some_ feedback to screen readers.\n          if (!manager.activeItem && menuPanel) {\n            menuPanel.focus();\n          }\n        }\n      }, {\n        injector: this._injector\n      });\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n      this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    setElevation(depth) {\n      // The base elevation depends on which version of the spec\n      // we're running so we have to resolve it at runtime.\n      if (this._baseElevation === null) {\n        const styles = typeof getComputedStyle === 'function' ? getComputedStyle(this._elementRef.nativeElement) : null;\n        const value = styles?.getPropertyValue('--mat-menu-base-elevation-level') || '8';\n        this._baseElevation = parseInt(value);\n      }\n      // The elevation starts at the base and increases by one for each level.\n      // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n      const elevation = Math.min(this._baseElevation + depth, 24);\n      const newElevation = `${this._elevationPrefix}${elevation}`;\n      const customElevation = Object.keys(this._classList).find(className => {\n        return className.startsWith(this._elevationPrefix);\n      });\n      if (!customElevation || customElevation === this._previousElevation) {\n        const newClassList = {\n          ...this._classList\n        };\n        if (this._previousElevation) {\n          newClassList[this._previousElevation] = false;\n        }\n        newClassList[newElevation] = true;\n        this._previousElevation = newElevation;\n        this._classList = newClassList;\n      }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n      this._classList = {\n        ...this._classList,\n        ['mat-menu-before']: posX === 'before',\n        ['mat-menu-after']: posX === 'after',\n        ['mat-menu-above']: posY === 'above',\n        ['mat-menu-below']: posY === 'below'\n      };\n      // @breaking-change 15.0.0 Remove null check for `_changeDetectorRef`.\n      this._changeDetectorRef?.markForCheck();\n    }\n    /** Starts the enter animation. */\n    _startAnimation() {\n      // @breaking-change 8.0.0 Combine with _resetAnimation.\n      this._panelAnimationState = 'enter';\n    }\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n      // @breaking-change 8.0.0 Combine with _startAnimation.\n      this._panelAnimationState = 'void';\n    }\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event) {\n      this._animationDone.next(event);\n      this._isAnimating = false;\n    }\n    _onAnimationStart(event) {\n      this._isAnimating = true;\n      // Scroll the content element to the top as soon as the animation starts. This is necessary,\n      // because we move focus to the first item while it's still being animated, which can throw\n      // the browser off when it determines the scroll position. Alternatively we can move focus\n      // when the animation is done, however moving focus asynchronously will interrupt screen\n      // readers which are in the process of reading out the menu already. We take the `element`\n      // from the `event` since we can't use a `ViewChild` to access the pane.\n      if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n        event.element.scrollTop = 0;\n      }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _updateDirectDescendants() {\n      this._allItems.changes.pipe(startWith(this._allItems)).subscribe(items => {\n        this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n        this._directDescendantItems.notifyOnChanges();\n      });\n    }\n    static {\n      this.ɵfac = function MatMenu_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatMenu)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatMenu,\n        selectors: [[\"mat-menu\"]],\n        contentQueries: function MatMenu_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MAT_MENU_CONTENT, 5);\n            i0.ɵɵcontentQuery(dirIndex, MatMenuItem, 5);\n            i0.ɵɵcontentQuery(dirIndex, MatMenuItem, 4);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allItems = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n          }\n        },\n        viewQuery: function MatMenu_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(TemplateRef, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n          }\n        },\n        hostVars: 3,\n        hostBindings: function MatMenu_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n          }\n        },\n        inputs: {\n          backdropClass: \"backdropClass\",\n          ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n          ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n          ariaDescribedby: [0, \"aria-describedby\", \"ariaDescribedby\"],\n          xPosition: \"xPosition\",\n          yPosition: \"yPosition\",\n          overlapTrigger: [2, \"overlapTrigger\", \"overlapTrigger\", booleanAttribute],\n          hasBackdrop: [2, \"hasBackdrop\", \"hasBackdrop\", value => value == null ? null : booleanAttribute(value)],\n          panelClass: [0, \"class\", \"panelClass\"],\n          classList: \"classList\"\n        },\n        outputs: {\n          closed: \"closed\",\n          close: \"close\"\n        },\n        exportAs: [\"matMenu\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_MENU_PANEL,\n          useExisting: MatMenu\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c3,\n        decls: 1,\n        vars: 0,\n        consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-mdc-menu-panel\", \"mat-mdc-elevation-specific\", 3, \"keydown\", \"click\", \"id\"], [1, \"mat-mdc-menu-content\"]],\n        template: function MatMenu_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵtemplate(0, MatMenu_ng_template_0_Template, 3, 7, \"ng-template\");\n          }\n        },\n        styles: [\"mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;outline:0}.mat-mdc-menu-content,.mat-mdc-menu-content .mat-mdc-menu-item .mat-mdc-menu-item-text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;flex:1;white-space:normal;font-family:var(--mat-menu-item-label-text-font, var(--mat-app-label-large-font));line-height:var(--mat-menu-item-label-text-line-height, var(--mat-app-label-large-line-height));font-size:var(--mat-menu-item-label-text-size, var(--mat-app-label-large-size));letter-spacing:var(--mat-menu-item-label-text-tracking, var(--mat-app-label-large-tracking));font-weight:var(--mat-menu-item-label-text-weight, var(--mat-app-label-large-weight))}.mat-mdc-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;box-sizing:border-box;outline:0;border-radius:var(--mat-menu-container-shape, var(--mat-app-corner-extra-small));background-color:var(--mat-menu-container-color, var(--mat-app-surface-container));will-change:transform,opacity}.mat-mdc-menu-panel.ng-animating{pointer-events:none}.mat-mdc-menu-panel.ng-animating:has(.mat-mdc-menu-content:empty){display:none}.cdk-high-contrast-active .mat-mdc-menu-panel{outline:solid 1px}.mat-mdc-menu-panel .mat-divider{color:var(--mat-menu-divider-color, var(--mat-app-surface-variant));margin-bottom:var(--mat-menu-divider-bottom-spacing);margin-top:var(--mat-menu-divider-top-spacing)}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:var(--mat-menu-item-leading-spacing);padding-right:var(--mat-menu-item-trailing-spacing);-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;min-height:48px}[dir=rtl] .mat-mdc-menu-item{padding-right:var(--mat-menu-item-leading-spacing);padding-left:var(--mat-menu-item-trailing-spacing)}.mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-left:var(--mat-menu-item-with-icon-leading-spacing);padding-right:var(--mat-menu-item-with-icon-trailing-spacing)}[dir=rtl] .mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-right:var(--mat-menu-item-with-icon-leading-spacing);padding-left:var(--mat-menu-item-with-icon-trailing-spacing)}.mat-mdc-menu-item::-moz-focus-inner{border:0}.mat-mdc-menu-item,.mat-mdc-menu-item:visited,.mat-mdc-menu-item:link{color:var(--mat-menu-item-label-text-color, var(--mat-app-on-surface))}.mat-mdc-menu-item .mat-icon-no-color,.mat-mdc-menu-item .mat-mdc-menu-submenu-icon{color:var(--mat-menu-item-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item:focus{outline:0}.mat-mdc-menu-item .mat-icon{flex-shrink:0;margin-right:var(--mat-menu-item-spacing);height:var(--mat-menu-item-icon-size);width:var(--mat-menu-item-icon-size)}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:var(--mat-menu-item-spacing)}.mat-mdc-menu-item:not([disabled]):hover{background-color:var(--mat-menu-item-hover-state-layer-color)}.mat-mdc-menu-item:not([disabled]).cdk-program-focused,.mat-mdc-menu-item:not([disabled]).cdk-keyboard-focused,.mat-mdc-menu-item:not([disabled]).mat-mdc-menu-item-highlighted{background-color:var(--mat-menu-item-focus-state-layer-color)}.cdk-high-contrast-active .mat-mdc-menu-item{margin-top:1px}.mat-mdc-menu-submenu-icon{width:var(--mat-menu-item-icon-size);height:10px;fill:currentColor;padding-left:var(--mat-menu-item-spacing)}[dir=rtl] .mat-mdc-menu-submenu-icon{padding-right:var(--mat-menu-item-spacing);padding-left:0}[dir=rtl] .mat-mdc-menu-submenu-icon polygon{transform:scaleX(-1);transform-origin:center}.cdk-high-contrast-active .mat-mdc-menu-submenu-icon{fill:CanvasText}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"],\n        encapsulation: 2,\n        data: {\n          animation: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return MatMenu;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = /*#__PURE__*/new InjectionToken('mat-menu-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_MENU_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY\n};\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * Default top padding of the menu panel.\n * @deprecated No longer being used. Will be removed.\n * @breaking-change 15.0.0\n */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Directive applied to an element that should trigger a `mat-menu`. */\nlet MatMenuTrigger = /*#__PURE__*/(() => {\n  class MatMenuTrigger {\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    get _deprecatedMatMenuTriggerFor() {\n      return this.menu;\n    }\n    set _deprecatedMatMenuTriggerFor(v) {\n      this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n    get menu() {\n      return this._menu;\n    }\n    set menu(menu) {\n      if (menu === this._menu) {\n        return;\n      }\n      this._menu = menu;\n      this._menuCloseSubscription.unsubscribe();\n      if (menu) {\n        if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throwMatMenuRecursiveError();\n        }\n        this._menuCloseSubscription = menu.close.subscribe(reason => {\n          this._destroyMenu(reason);\n          // If a click closed the menu, we should close the entire chain of nested menus.\n          if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n            this._parentMaterialMenu.closed.emit(reason);\n          }\n        });\n      }\n      this._menuItemInstance?._setTriggersSubmenu(this.triggersSubmenu());\n    }\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, parentMenu,\n    // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n    // tslint:disable-next-line: lightweight-tokens\n    _menuItemInstance, _dir, _focusMonitor, _ngZone) {\n      this._overlay = _overlay;\n      this._element = _element;\n      this._viewContainerRef = _viewContainerRef;\n      this._menuItemInstance = _menuItemInstance;\n      this._dir = _dir;\n      this._focusMonitor = _focusMonitor;\n      this._ngZone = _ngZone;\n      this._overlayRef = null;\n      this._menuOpen = false;\n      this._closingActionsSubscription = Subscription.EMPTY;\n      this._hoverSubscription = Subscription.EMPTY;\n      this._menuCloseSubscription = Subscription.EMPTY;\n      this._changeDetectorRef = inject(ChangeDetectorRef);\n      /**\n       * Handles touch start events on the trigger.\n       * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n       */\n      this._handleTouchStart = event => {\n        if (!isFakeTouchstartFromScreenReader(event)) {\n          this._openedBy = 'touch';\n        }\n      };\n      // Tracking input type is necessary so it's possible to only auto-focus\n      // the first item of the list when the menu is opened via the keyboard\n      this._openedBy = undefined;\n      /**\n       * Whether focus should be restored when the menu is closed.\n       * Note that disabling this option can have accessibility implications\n       * and it's up to you to manage focus, if you decide to turn it off.\n       */\n      this.restoreFocus = true;\n      /** Event emitted when the associated menu is opened. */\n      this.menuOpened = new EventEmitter();\n      /**\n       * Event emitted when the associated menu is opened.\n       * @deprecated Switch to `menuOpened` instead\n       * @breaking-change 8.0.0\n       */\n      // tslint:disable-next-line:no-output-on-prefix\n      this.onMenuOpen = this.menuOpened;\n      /** Event emitted when the associated menu is closed. */\n      this.menuClosed = new EventEmitter();\n      /**\n       * Event emitted when the associated menu is closed.\n       * @deprecated Switch to `menuClosed` instead\n       * @breaking-change 8.0.0\n       */\n      // tslint:disable-next-line:no-output-on-prefix\n      this.onMenuClose = this.menuClosed;\n      this._scrollStrategy = scrollStrategy;\n      this._parentMaterialMenu = parentMenu instanceof MatMenu ? parentMenu : undefined;\n      _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n    }\n    ngAfterContentInit() {\n      this._handleHover();\n    }\n    ngOnDestroy() {\n      if (this._overlayRef) {\n        this._overlayRef.dispose();\n        this._overlayRef = null;\n      }\n      this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n      this._menuCloseSubscription.unsubscribe();\n      this._closingActionsSubscription.unsubscribe();\n      this._hoverSubscription.unsubscribe();\n    }\n    /** Whether the menu is open. */\n    get menuOpen() {\n      return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n    get dir() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    triggersSubmenu() {\n      return !!(this._menuItemInstance && this._parentMaterialMenu && this.menu);\n    }\n    /** Toggles the menu between the open and closed states. */\n    toggleMenu() {\n      return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n    openMenu() {\n      const menu = this.menu;\n      if (this._menuOpen || !menu) {\n        return;\n      }\n      const overlayRef = this._createOverlay(menu);\n      const overlayConfig = overlayRef.getConfig();\n      const positionStrategy = overlayConfig.positionStrategy;\n      this._setPosition(menu, positionStrategy);\n      overlayConfig.hasBackdrop = menu.hasBackdrop == null ? !this.triggersSubmenu() : menu.hasBackdrop;\n      overlayRef.attach(this._getPortal(menu));\n      if (menu.lazyContent) {\n        menu.lazyContent.attach(this.menuData);\n      }\n      this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n      this._initMenu(menu);\n      if (menu instanceof MatMenu) {\n        menu._startAnimation();\n        menu._directDescendantItems.changes.pipe(takeUntil(menu.close)).subscribe(() => {\n          // Re-adjust the position without locking when the amount of items\n          // changes so that the overlay is allowed to pick a new optimal position.\n          positionStrategy.withLockedPosition(false).reapplyLastPosition();\n          positionStrategy.withLockedPosition(true);\n        });\n      }\n    }\n    /** Closes the menu. */\n    closeMenu() {\n      this.menu?.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    focus(origin, options) {\n      if (this._focusMonitor && origin) {\n        this._focusMonitor.focusVia(this._element, origin, options);\n      } else {\n        this._element.nativeElement.focus(options);\n      }\n    }\n    /**\n     * Updates the position of the menu to ensure that it fits all options within the viewport.\n     */\n    updatePosition() {\n      this._overlayRef?.updatePosition();\n    }\n    /** Closes the menu and does the necessary cleanup. */\n    _destroyMenu(reason) {\n      if (!this._overlayRef || !this.menuOpen) {\n        return;\n      }\n      const menu = this.menu;\n      this._closingActionsSubscription.unsubscribe();\n      this._overlayRef.detach();\n      // Always restore focus if the user is navigating using the keyboard or the menu was opened\n      // programmatically. We don't restore for non-root triggers, because it can prevent focus\n      // from making it back to the root trigger when closing a long chain of menus by clicking\n      // on the backdrop.\n      if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n        this.focus(this._openedBy);\n      }\n      this._openedBy = undefined;\n      if (menu instanceof MatMenu) {\n        menu._resetAnimation();\n        if (menu.lazyContent) {\n          // Wait for the exit animation to finish before detaching the content.\n          menu._animationDone.pipe(filter(event => event.toState === 'void'), take(1),\n          // Interrupt if the content got re-attached.\n          takeUntil(menu.lazyContent._attached)).subscribe({\n            next: () => menu.lazyContent.detach(),\n            // No matter whether the content got re-attached, reset the menu.\n            complete: () => this._setIsMenuOpen(false)\n          });\n        } else {\n          this._setIsMenuOpen(false);\n        }\n      } else {\n        this._setIsMenuOpen(false);\n        menu?.lazyContent?.detach();\n      }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     */\n    _initMenu(menu) {\n      menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n      menu.direction = this.dir;\n      this._setMenuElevation(menu);\n      menu.focusFirstItem(this._openedBy || 'program');\n      this._setIsMenuOpen(true);\n    }\n    /** Updates the menu elevation based on the amount of parent menus that it has. */\n    _setMenuElevation(menu) {\n      if (menu.setElevation) {\n        let depth = 0;\n        let parentMenu = menu.parentMenu;\n        while (parentMenu) {\n          depth++;\n          parentMenu = parentMenu.parentMenu;\n        }\n        menu.setElevation(depth);\n      }\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    _setIsMenuOpen(isOpen) {\n      if (isOpen !== this._menuOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n          this._menuItemInstance._setHighlighted(isOpen);\n        }\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    _createOverlay(menu) {\n      if (!this._overlayRef) {\n        const config = this._getOverlayConfig(menu);\n        this._subscribeToPositions(menu, config.positionStrategy);\n        this._overlayRef = this._overlay.create(config);\n        // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n        // Ideally we'd also have our keyboard event logic in here, however doing so will\n        // break anybody that may have implemented the `MatMenuPanel` themselves.\n        this._overlayRef.keydownEvents().subscribe();\n      }\n      return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    _getOverlayConfig(menu) {\n      return new OverlayConfig({\n        positionStrategy: this._overlay.position().flexibleConnectedTo(this._element).withLockedPosition().withGrowAfterOpen().withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n        backdropClass: menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n        panelClass: menu.overlayPanelClass,\n        scrollStrategy: this._scrollStrategy(),\n        direction: this._dir\n      });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    _subscribeToPositions(menu, position) {\n      if (menu.setPositionClasses) {\n        position.positionChanges.subscribe(change => {\n          const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n          const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n          // @breaking-change 15.0.0 Remove null check for `ngZone`.\n          // `positionChanges` fires outside of the `ngZone` and `setPositionClasses` might be\n          // updating something in the view so we need to bring it back in.\n          if (this._ngZone) {\n            this._ngZone.run(() => menu.setPositionClasses(posX, posY));\n          } else {\n            menu.setPositionClasses(posX, posY);\n          }\n        });\n      }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    _setPosition(menu, positionStrategy) {\n      let [originX, originFallbackX] = menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n      let [overlayY, overlayFallbackY] = menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n      let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n      let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n      let offsetY = 0;\n      if (this.triggersSubmenu()) {\n        // When the menu is a sub-menu, it should always align itself\n        // to the edges of the trigger, instead of overlapping it.\n        overlayFallbackX = originX = menu.xPosition === 'before' ? 'start' : 'end';\n        originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n        if (this._parentMaterialMenu) {\n          if (this._parentInnerPadding == null) {\n            const firstItem = this._parentMaterialMenu.items.first;\n            this._parentInnerPadding = firstItem ? firstItem._getHostElement().offsetTop : 0;\n          }\n          offsetY = overlayY === 'bottom' ? this._parentInnerPadding : -this._parentInnerPadding;\n        }\n      } else if (!menu.overlapTrigger) {\n        originY = overlayY === 'top' ? 'bottom' : 'top';\n        originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n      }\n      positionStrategy.withPositions([{\n        originX,\n        originY,\n        overlayX,\n        overlayY,\n        offsetY\n      }, {\n        originX: originFallbackX,\n        originY,\n        overlayX: overlayFallbackX,\n        overlayY,\n        offsetY\n      }, {\n        originX,\n        originY: originFallbackY,\n        overlayX,\n        overlayY: overlayFallbackY,\n        offsetY: -offsetY\n      }, {\n        originX: originFallbackX,\n        originY: originFallbackY,\n        overlayX: overlayFallbackX,\n        overlayY: overlayFallbackY,\n        offsetY: -offsetY\n      }]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    _menuClosingActions() {\n      const backdrop = this._overlayRef.backdropClick();\n      const detachments = this._overlayRef.detachments();\n      const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n      const hover = this._parentMaterialMenu ? this._parentMaterialMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen)) : of();\n      return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n    _handleMousedown(event) {\n      if (!isFakeMousedownFromScreenReader(event)) {\n        // Since right or middle button clicks won't trigger the `click` event,\n        // we shouldn't consider the menu as opened by mouse in those cases.\n        this._openedBy = event.button === 0 ? 'mouse' : undefined;\n        // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n        // we should prevent focus from moving onto it via click to avoid the\n        // highlight from lingering on the menu item.\n        if (this.triggersSubmenu()) {\n          event.preventDefault();\n        }\n      }\n    }\n    /** Handles key presses on the trigger. */\n    _handleKeydown(event) {\n      const keyCode = event.keyCode;\n      // Pressing enter on the trigger will trigger the click handler later.\n      if (keyCode === ENTER || keyCode === SPACE) {\n        this._openedBy = 'keyboard';\n      }\n      if (this.triggersSubmenu() && (keyCode === RIGHT_ARROW && this.dir === 'ltr' || keyCode === LEFT_ARROW && this.dir === 'rtl')) {\n        this._openedBy = 'keyboard';\n        this.openMenu();\n      }\n    }\n    /** Handles click events on the trigger. */\n    _handleClick(event) {\n      if (this.triggersSubmenu()) {\n        // Stop event propagation to avoid closing the parent menu.\n        event.stopPropagation();\n        this.openMenu();\n      } else {\n        this.toggleMenu();\n      }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n    _handleHover() {\n      // Subscribe to changes in the hovered item in order to toggle the panel.\n      if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\n        return;\n      }\n      this._hoverSubscription = this._parentMaterialMenu._hovered()\n      // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n      // with different data and triggers), we have to delay it by a tick to ensure that\n      // it won't be closed immediately after it is opened.\n      .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler)).subscribe(() => {\n        this._openedBy = 'mouse';\n        // If the same menu is used between multiple triggers, it might still be animating\n        // while the new trigger tries to re-open it. Wait for the animation to finish\n        // before doing so. Also interrupt if the user moves to another item.\n        if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n          // We need the `delay(0)` here in order to avoid\n          // 'changed after checked' errors in some cases. See #12194.\n          this.menu._animationDone.pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMaterialMenu._hovered())).subscribe(() => this.openMenu());\n        } else {\n          this.openMenu();\n        }\n      });\n    }\n    /** Gets the portal that should be attached to the overlay. */\n    _getPortal(menu) {\n      // Note that we can avoid this check by keeping the portal on the menu panel.\n      // While it would be cleaner, we'd have to introduce another required method on\n      // `MatMenuPanel`, making it harder to consume.\n      if (!this._portal || this._portal.templateRef !== menu.templateRef) {\n        this._portal = new TemplatePortal(menu.templateRef, this._viewContainerRef);\n      }\n      return this._portal;\n    }\n    static {\n      this.ɵfac = function MatMenuTrigger_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatMenuTrigger)(i0.ɵɵdirectiveInject(i1$1.Overlay), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), i0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8), i0.ɵɵdirectiveInject(MatMenuItem, 10), i0.ɵɵdirectiveInject(i3.Directionality, 8), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatMenuTrigger,\n        selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-menu-trigger\"],\n        hostVars: 3,\n        hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) {\n              return ctx._handleClick($event);\n            })(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) {\n              return ctx._handleMousedown($event);\n            })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) {\n              return ctx._handleKeydown($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-haspopup\", ctx.menu ? \"menu\" : null)(\"aria-expanded\", ctx.menuOpen)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n          }\n        },\n        inputs: {\n          _deprecatedMatMenuTriggerFor: [0, \"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"],\n          menu: [0, \"matMenuTriggerFor\", \"menu\"],\n          menuData: [0, \"matMenuTriggerData\", \"menuData\"],\n          restoreFocus: [0, \"matMenuTriggerRestoreFocus\", \"restoreFocus\"]\n        },\n        outputs: {\n          menuOpened: \"menuOpened\",\n          onMenuOpen: \"onMenuOpen\",\n          menuClosed: \"menuClosed\",\n          onMenuClose: \"onMenuClose\"\n        },\n        exportAs: [\"matMenuTrigger\"],\n        standalone: true\n      });\n    }\n  }\n  return MatMenuTrigger;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatMenuModule = /*#__PURE__*/(() => {\n  class MatMenuModule {\n    static {\n      this.ɵfac = function MatMenuModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatMenuModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatMenuModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n        imports: [CommonModule, MatRippleModule, MatCommonModule, OverlayModule, CdkScrollableModule, MatCommonModule]\n      });\n    }\n  }\n  return MatMenuModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER, MENU_PANEL_TOP_PADDING, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, fadeInItems, matMenuAnimations, transformMenu };\n","import * as i0 from '@angular/core';\nimport { signal, Component, ViewEncapsulation, ChangeDetectionStrategy, inject, ApplicationRef, EnvironmentInjector, createComponent, Injectable, Inject, InjectionToken, booleanAttribute, Directive, Optional, SkipSelf, Input, EventEmitter, Injector, afterNextRender, numberAttribute, Self, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceElement, coerceNumberProperty, coerceArray } from '@angular/cdk/coercion';\nimport { _getEventTarget, normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge, BehaviorSubject } from 'rxjs';\nimport { takeUntil, map, take, tap, switchMap, startWith } from 'rxjs/operators';\nimport * as i1$1 from '@angular/cdk/bidi';\n\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n  const clone = node.cloneNode(true);\n  const descendantsWithId = clone.querySelectorAll('[id]');\n  const nodeName = node.nodeName.toLowerCase();\n  // Remove the `id` to avoid having multiple elements with the same id on the page.\n  clone.removeAttribute('id');\n  for (let i = 0; i < descendantsWithId.length; i++) {\n    descendantsWithId[i].removeAttribute('id');\n  }\n  if (nodeName === 'canvas') {\n    transferCanvasData(node, clone);\n  } else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n    transferInputData(node, clone);\n  }\n  transferData('canvas', node, clone, transferCanvasData);\n  transferData('input, textarea, select', node, clone, transferInputData);\n  return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n  const descendantElements = node.querySelectorAll(selector);\n  if (descendantElements.length) {\n    const cloneElements = clone.querySelectorAll(selector);\n    for (let i = 0; i < descendantElements.length; i++) {\n      callback(descendantElements[i], cloneElements[i]);\n    }\n  }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n  // Browsers throw an error when assigning the value of a file input programmatically.\n  if (clone.type !== 'file') {\n    clone.value = source.value;\n  }\n  // Radio button `name` attributes must be unique for radio button groups\n  // otherwise original radio buttons can lose their checked state\n  // once the clone is inserted in the DOM.\n  if (clone.type === 'radio' && clone.name) {\n    clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n  }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n  const context = clone.getContext('2d');\n  if (context) {\n    // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n    // We can't do much about it so just ignore the error.\n    try {\n      context.drawImage(source, 0, 0);\n    } catch {}\n  }\n}\n\n/** Gets a mutable version of an element's bounding `DOMRect`. */\nfunction getMutableClientRect(element) {\n  const rect = element.getBoundingClientRect();\n  // We need to clone the `clientRect` here, because all the values on it are readonly\n  // and we need to be able to update them. Also we can't use a spread here, because\n  // the values on a `DOMRect` aren't own properties. See:\n  // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n  return {\n    top: rect.top,\n    right: rect.right,\n    bottom: rect.bottom,\n    left: rect.left,\n    width: rect.width,\n    height: rect.height,\n    x: rect.x,\n    y: rect.y\n  };\n}\n/**\n * Checks whether some coordinates are within a `DOMRect`.\n * @param clientRect DOMRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n  const {\n    top,\n    bottom,\n    left,\n    right\n  } = clientRect;\n  return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `DOMRect`, as well as their bottom/right counterparts.\n * @param domRect `DOMRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustDomRect(domRect, top, left) {\n  domRect.top += top;\n  domRect.bottom = domRect.top + domRect.height;\n  domRect.left += left;\n  domRect.right = domRect.left + domRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a DOMRect.\n * @param rect DOMRect to check against.\n * @param threshold Threshold around the DOMRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearDomRect(rect, threshold, pointerX, pointerY) {\n  const {\n    top,\n    right,\n    bottom,\n    left,\n    width,\n    height\n  } = rect;\n  const xThreshold = width * threshold;\n  const yThreshold = height * threshold;\n  return pointerY > top - yThreshold && pointerY < bottom + yThreshold && pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n  constructor(_document) {\n    this._document = _document;\n    /** Cached positions of the scrollable parent elements. */\n    this.positions = new Map();\n  }\n  /** Clears the cached positions. */\n  clear() {\n    this.positions.clear();\n  }\n  /** Caches the positions. Should be called at the beginning of a drag sequence. */\n  cache(elements) {\n    this.clear();\n    this.positions.set(this._document, {\n      scrollPosition: this.getViewportScrollPosition()\n    });\n    elements.forEach(element => {\n      this.positions.set(element, {\n        scrollPosition: {\n          top: element.scrollTop,\n          left: element.scrollLeft\n        },\n        clientRect: getMutableClientRect(element)\n      });\n    });\n  }\n  /** Handles scrolling while a drag is taking place. */\n  handleScroll(event) {\n    const target = _getEventTarget(event);\n    const cachedPosition = this.positions.get(target);\n    if (!cachedPosition) {\n      return null;\n    }\n    const scrollPosition = cachedPosition.scrollPosition;\n    let newTop;\n    let newLeft;\n    if (target === this._document) {\n      const viewportScrollPosition = this.getViewportScrollPosition();\n      newTop = viewportScrollPosition.top;\n      newLeft = viewportScrollPosition.left;\n    } else {\n      newTop = target.scrollTop;\n      newLeft = target.scrollLeft;\n    }\n    const topDifference = scrollPosition.top - newTop;\n    const leftDifference = scrollPosition.left - newLeft;\n    // Go through and update the cached positions of the scroll\n    // parents that are inside the element that was scrolled.\n    this.positions.forEach((position, node) => {\n      if (position.clientRect && target !== node && target.contains(node)) {\n        adjustDomRect(position.clientRect, topDifference, leftDifference);\n      }\n    });\n    scrollPosition.top = newTop;\n    scrollPosition.left = newLeft;\n    return {\n      top: topDifference,\n      left: leftDifference\n    };\n  }\n  /**\n   * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n   * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n   * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n   * if the element is offset by something like the `BlockScrollStrategy`.\n   */\n  getViewportScrollPosition() {\n    return {\n      top: window.scrollY,\n      left: window.scrollX\n    };\n  }\n}\n\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n  const rootNodes = viewRef.rootNodes;\n  if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n    return rootNodes[0];\n  }\n  const wrapper = _document.createElement('div');\n  rootNodes.forEach(node => wrapper.appendChild(node));\n  return wrapper;\n}\n\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n  for (let key in source) {\n    if (source.hasOwnProperty(key)) {\n      const value = source[key];\n      if (value) {\n        dest.setProperty(key, value, importantProperties?.has(key) ? 'important' : '');\n      } else {\n        dest.removeProperty(key);\n      }\n    }\n  }\n  return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n  const userSelect = enable ? '' : 'none';\n  extendStyles(element.style, {\n    'touch-action': enable ? '' : 'none',\n    '-webkit-user-drag': enable ? '' : 'none',\n    '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n    'user-select': userSelect,\n    '-ms-user-select': userSelect,\n    '-webkit-user-select': userSelect,\n    '-moz-user-select': userSelect\n  });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n  extendStyles(element.style, {\n    position: enable ? '' : 'fixed',\n    top: enable ? '' : '0',\n    opacity: enable ? '' : '0',\n    left: enable ? '' : '-999em'\n  }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n  return initialTransform && initialTransform != 'none' ? transform + ' ' + initialTransform : transform;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n  target.style.width = `${sourceRect.width}px`;\n  target.style.height = `${sourceRect.height}px`;\n  target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n  // Round the transforms since some browsers will\n  // blur the elements for sub-pixel transforms.\n  return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n  // Some browsers will return it in seconds, whereas others will return milliseconds.\n  const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n  return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n  const computedStyle = getComputedStyle(element);\n  const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n  const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n  // If there's no transition for `all` or `transform`, we shouldn't do anything.\n  if (!property) {\n    return 0;\n  }\n  // Get the index of the property that we're interested in and match\n  // it up to the same index in `transition-delay` and `transition-duration`.\n  const propertyIndex = transitionedProperties.indexOf(property);\n  const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n  const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n  return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) + parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n  const value = computedStyle.getPropertyValue(name);\n  return value.split(',').map(part => part.trim());\n}\n\n/** Inline styles to be set as `!important` while dragging. */\nconst importantProperties = /*#__PURE__*/new Set([\n// Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n'position']);\nclass PreviewRef {\n  get element() {\n    return this._preview;\n  }\n  constructor(_document, _rootElement, _direction, _initialDomRect, _previewTemplate, _previewClass, _pickupPositionOnPage, _initialTransform, _zIndex) {\n    this._document = _document;\n    this._rootElement = _rootElement;\n    this._direction = _direction;\n    this._initialDomRect = _initialDomRect;\n    this._previewTemplate = _previewTemplate;\n    this._previewClass = _previewClass;\n    this._pickupPositionOnPage = _pickupPositionOnPage;\n    this._initialTransform = _initialTransform;\n    this._zIndex = _zIndex;\n  }\n  attach(parent) {\n    this._preview = this._createPreview();\n    parent.appendChild(this._preview);\n    // The null check is necessary for browsers that don't support the popover API.\n    // Note that we use a string access for compatibility with Closure.\n    if (supportsPopover(this._preview)) {\n      this._preview['showPopover']();\n    }\n  }\n  destroy() {\n    this._preview.remove();\n    this._previewEmbeddedView?.destroy();\n    this._preview = this._previewEmbeddedView = null;\n  }\n  setTransform(value) {\n    this._preview.style.transform = value;\n  }\n  getBoundingClientRect() {\n    return this._preview.getBoundingClientRect();\n  }\n  addClass(className) {\n    this._preview.classList.add(className);\n  }\n  getTransitionDuration() {\n    return getTransformTransitionDurationInMs(this._preview);\n  }\n  addEventListener(name, handler) {\n    this._preview.addEventListener(name, handler);\n  }\n  removeEventListener(name, handler) {\n    this._preview.removeEventListener(name, handler);\n  }\n  _createPreview() {\n    const previewConfig = this._previewTemplate;\n    const previewClass = this._previewClass;\n    const previewTemplate = previewConfig ? previewConfig.template : null;\n    let preview;\n    if (previewTemplate && previewConfig) {\n      // Measure the element before we've inserted the preview\n      // since the insertion could throw off the measurement.\n      const rootRect = previewConfig.matchSize ? this._initialDomRect : null;\n      const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n      viewRef.detectChanges();\n      preview = getRootNode(viewRef, this._document);\n      this._previewEmbeddedView = viewRef;\n      if (previewConfig.matchSize) {\n        matchElementSize(preview, rootRect);\n      } else {\n        preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n      }\n    } else {\n      preview = deepCloneNode(this._rootElement);\n      matchElementSize(preview, this._initialDomRect);\n      if (this._initialTransform) {\n        preview.style.transform = this._initialTransform;\n      }\n    }\n    extendStyles(preview.style, {\n      // It's important that we disable the pointer events on the preview, because\n      // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n      'pointer-events': 'none',\n      // If the preview has a margin, it can throw off our positioning so we reset it. The reset\n      // value for `margin-right` needs to be `auto` when opened as a popover, because our\n      // positioning is always top/left based, but native popover seems to position itself\n      // to the top/right if `<html>` or `<body>` have `dir=\"rtl\"` (see #29604). Setting it\n      // to `auto` pushed it to the top/left corner in RTL and is a noop in LTR.\n      'margin': supportsPopover(preview) ? '0 auto 0 0' : '0',\n      'position': 'fixed',\n      'top': '0',\n      'left': '0',\n      'z-index': this._zIndex + ''\n    }, importantProperties);\n    toggleNativeDragInteractions(preview, false);\n    preview.classList.add('cdk-drag-preview');\n    preview.setAttribute('popover', 'manual');\n    preview.setAttribute('dir', this._direction);\n    if (previewClass) {\n      if (Array.isArray(previewClass)) {\n        previewClass.forEach(className => preview.classList.add(className));\n      } else {\n        preview.classList.add(previewClass);\n      }\n    }\n    return preview;\n  }\n}\n/** Checks whether a specific element supports the popover API. */\nfunction supportsPopover(element) {\n  return 'showPopover' in element;\n}\n\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true\n});\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: false\n});\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions$1 = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: false,\n  capture: true\n});\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = /*#__PURE__*/new Set([\n// Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n'position']);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n  /** Whether starting to drag this element is disabled. */\n  get disabled() {\n    return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n  }\n  set disabled(value) {\n    if (value !== this._disabled) {\n      this._disabled = value;\n      this._toggleNativeDragInteractions();\n      this._handles.forEach(handle => toggleNativeDragInteractions(handle, value));\n    }\n  }\n  constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n    this._config = _config;\n    this._document = _document;\n    this._ngZone = _ngZone;\n    this._viewportRuler = _viewportRuler;\n    this._dragDropRegistry = _dragDropRegistry;\n    /**\n     * CSS `transform` applied to the element when it isn't being dragged. We need a\n     * passive transform in order for the dragged element to retain its new position\n     * after the user has stopped dragging and because we need to know the relative\n     * position in case they start dragging again. This corresponds to `element.style.transform`.\n     */\n    this._passiveTransform = {\n      x: 0,\n      y: 0\n    };\n    /** CSS `transform` that is applied to the element while it's being dragged. */\n    this._activeTransform = {\n      x: 0,\n      y: 0\n    };\n    /**\n     * Whether the dragging sequence has been started. Doesn't\n     * necessarily mean that the element has been moved.\n     */\n    this._hasStartedDragging = signal(false);\n    /** Emits when the item is being moved. */\n    this._moveEvents = new Subject();\n    /** Subscription to pointer movement events. */\n    this._pointerMoveSubscription = Subscription.EMPTY;\n    /** Subscription to the event that is dispatched when the user lifts their pointer. */\n    this._pointerUpSubscription = Subscription.EMPTY;\n    /** Subscription to the viewport being scrolled. */\n    this._scrollSubscription = Subscription.EMPTY;\n    /** Subscription to the viewport being resized. */\n    this._resizeSubscription = Subscription.EMPTY;\n    /** Cached reference to the boundary element. */\n    this._boundaryElement = null;\n    /** Whether the native dragging interactions have been enabled on the root element. */\n    this._nativeInteractionsEnabled = true;\n    /** Elements that can be used to drag the draggable item. */\n    this._handles = [];\n    /** Registered handles that are currently disabled. */\n    this._disabledHandles = new Set();\n    /** Layout direction of the item. */\n    this._direction = 'ltr';\n    /**\n     * Amount of milliseconds to wait after the user has put their\n     * pointer down before starting to drag the element.\n     */\n    this.dragStartDelay = 0;\n    /**\n     * If the parent of the dragged element has a `scale` transform, it can throw off the\n     * positioning when the user starts dragging. Use this input to notify the CDK of the scale.\n     */\n    this.scale = 1;\n    this._disabled = false;\n    /** Emits as the drag sequence is being prepared. */\n    this.beforeStarted = new Subject();\n    /** Emits when the user starts dragging the item. */\n    this.started = new Subject();\n    /** Emits when the user has released a drag item, before any animations have started. */\n    this.released = new Subject();\n    /** Emits when the user stops dragging an item in the container. */\n    this.ended = new Subject();\n    /** Emits when the user has moved the item into a new container. */\n    this.entered = new Subject();\n    /** Emits when the user removes the item its container by dragging it into another container. */\n    this.exited = new Subject();\n    /** Emits when the user drops the item inside a container. */\n    this.dropped = new Subject();\n    /**\n     * Emits as the user is dragging the item. Use with caution,\n     * because this event will fire for every pixel that the user has dragged.\n     */\n    this.moved = this._moveEvents;\n    /** Handler for the `mousedown`/`touchstart` events. */\n    this._pointerDown = event => {\n      this.beforeStarted.next();\n      // Delegate the event based on whether it started from a handle or the element itself.\n      if (this._handles.length) {\n        const targetHandle = this._getTargetHandle(event);\n        if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n          this._initializeDragSequence(targetHandle, event);\n        }\n      } else if (!this.disabled) {\n        this._initializeDragSequence(this._rootElement, event);\n      }\n    };\n    /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n    this._pointerMove = event => {\n      const pointerPosition = this._getPointerPositionOnPage(event);\n      if (!this._hasStartedDragging()) {\n        const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n        const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n        const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n        // Only start dragging after the user has moved more than the minimum distance in either\n        // direction. Note that this is preferable over doing something like `skip(minimumDistance)`\n        // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n        // per pixel of movement (e.g. if the user moves their pointer quickly).\n        if (isOverThreshold) {\n          const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n          const container = this._dropContainer;\n          if (!isDelayElapsed) {\n            this._endDragSequence(event);\n            return;\n          }\n          // Prevent other drag sequences from starting while something in the container is still\n          // being dragged. This can happen while we're waiting for the drop animation to finish\n          // and can cause errors, because some elements might still be moving around.\n          if (!container || !container.isDragging() && !container.isReceiving()) {\n            // Prevent the default action as soon as the dragging sequence is considered as\n            // \"started\" since waiting for the next event can allow the device to begin scrolling.\n            if (event.cancelable) {\n              event.preventDefault();\n            }\n            this._hasStartedDragging.set(true);\n            this._ngZone.run(() => this._startDragSequence(event));\n          }\n        }\n        return;\n      }\n      // We prevent the default action down here so that we know that dragging has started. This is\n      // important for touch devices where doing this too early can unnecessarily block scrolling,\n      // if there's a dragging delay.\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n      const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n      this._hasMoved = true;\n      this._lastKnownPointerPosition = pointerPosition;\n      this._updatePointerDirectionDelta(constrainedPointerPosition);\n      if (this._dropContainer) {\n        this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n      } else {\n        // If there's a position constraint function, we want the element's top/left to be at the\n        // specific position on the page. Use the initial position as a reference if that's the case.\n        const offset = this.constrainPosition ? this._initialDomRect : this._pickupPositionOnPage;\n        const activeTransform = this._activeTransform;\n        activeTransform.x = constrainedPointerPosition.x - offset.x + this._passiveTransform.x;\n        activeTransform.y = constrainedPointerPosition.y - offset.y + this._passiveTransform.y;\n        this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n      }\n      // Since this event gets fired for every pixel while dragging, we only\n      // want to fire it if the consumer opted into it. Also we have to\n      // re-enter the zone because we run all of the events on the outside.\n      if (this._moveEvents.observers.length) {\n        this._ngZone.run(() => {\n          this._moveEvents.next({\n            source: this,\n            pointerPosition: constrainedPointerPosition,\n            event,\n            distance: this._getDragDistance(constrainedPointerPosition),\n            delta: this._pointerDirectionDelta\n          });\n        });\n      }\n    };\n    /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n    this._pointerUp = event => {\n      this._endDragSequence(event);\n    };\n    /** Handles a native `dragstart` event. */\n    this._nativeDragStart = event => {\n      if (this._handles.length) {\n        const targetHandle = this._getTargetHandle(event);\n        if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n          event.preventDefault();\n        }\n      } else if (!this.disabled) {\n        // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n        // but some cases like dragging of links can slip through (see #24403).\n        event.preventDefault();\n      }\n    };\n    this.withRootElement(element).withParent(_config.parentDragRef || null);\n    this._parentPositions = new ParentPositionTracker(_document);\n    _dragDropRegistry.registerDragItem(this);\n  }\n  /**\n   * Returns the element that is being used as a placeholder\n   * while the current element is being dragged.\n   */\n  getPlaceholderElement() {\n    return this._placeholder;\n  }\n  /** Returns the root draggable element. */\n  getRootElement() {\n    return this._rootElement;\n  }\n  /**\n   * Gets the currently-visible element that represents the drag item.\n   * While dragging this is the placeholder, otherwise it's the root element.\n   */\n  getVisibleElement() {\n    return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n  }\n  /** Registers the handles that can be used to drag the element. */\n  withHandles(handles) {\n    this._handles = handles.map(handle => coerceElement(handle));\n    this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n    this._toggleNativeDragInteractions();\n    // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n    // the set, rather than iterate over it and filter out the destroyed handles, because while\n    // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n    // use an array internally which may throw an error.\n    const disabledHandles = new Set();\n    this._disabledHandles.forEach(handle => {\n      if (this._handles.indexOf(handle) > -1) {\n        disabledHandles.add(handle);\n      }\n    });\n    this._disabledHandles = disabledHandles;\n    return this;\n  }\n  /**\n   * Registers the template that should be used for the drag preview.\n   * @param template Template that from which to stamp out the preview.\n   */\n  withPreviewTemplate(template) {\n    this._previewTemplate = template;\n    return this;\n  }\n  /**\n   * Registers the template that should be used for the drag placeholder.\n   * @param template Template that from which to stamp out the placeholder.\n   */\n  withPlaceholderTemplate(template) {\n    this._placeholderTemplate = template;\n    return this;\n  }\n  /**\n   * Sets an alternate drag root element. The root element is the element that will be moved as\n   * the user is dragging. Passing an alternate root element is useful when trying to enable\n   * dragging on an element that you might not have access to.\n   */\n  withRootElement(rootElement) {\n    const element = coerceElement(rootElement);\n    if (element !== this._rootElement) {\n      if (this._rootElement) {\n        this._removeRootElementListeners(this._rootElement);\n      }\n      this._ngZone.runOutsideAngular(() => {\n        element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n        element.addEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n      });\n      this._initialTransform = undefined;\n      this._rootElement = element;\n    }\n    if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n      this._ownerSVGElement = this._rootElement.ownerSVGElement;\n    }\n    return this;\n  }\n  /**\n   * Element to which the draggable's position will be constrained.\n   */\n  withBoundaryElement(boundaryElement) {\n    this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n    this._resizeSubscription.unsubscribe();\n    if (boundaryElement) {\n      this._resizeSubscription = this._viewportRuler.change(10).subscribe(() => this._containInsideBoundaryOnResize());\n    }\n    return this;\n  }\n  /** Sets the parent ref that the ref is nested in.  */\n  withParent(parent) {\n    this._parentDragRef = parent;\n    return this;\n  }\n  /** Removes the dragging functionality from the DOM element. */\n  dispose() {\n    this._removeRootElementListeners(this._rootElement);\n    // Do this check before removing from the registry since it'll\n    // stop being considered as dragged once it is removed.\n    if (this.isDragging()) {\n      // Since we move out the element to the end of the body while it's being\n      // dragged, we have to make sure that it's removed if it gets destroyed.\n      this._rootElement?.remove();\n    }\n    this._anchor?.remove();\n    this._destroyPreview();\n    this._destroyPlaceholder();\n    this._dragDropRegistry.removeDragItem(this);\n    this._removeListeners();\n    this.beforeStarted.complete();\n    this.started.complete();\n    this.released.complete();\n    this.ended.complete();\n    this.entered.complete();\n    this.exited.complete();\n    this.dropped.complete();\n    this._moveEvents.complete();\n    this._handles = [];\n    this._disabledHandles.clear();\n    this._dropContainer = undefined;\n    this._resizeSubscription.unsubscribe();\n    this._parentPositions.clear();\n    this._boundaryElement = this._rootElement = this._ownerSVGElement = this._placeholderTemplate = this._previewTemplate = this._anchor = this._parentDragRef = null;\n  }\n  /** Checks whether the element is currently being dragged. */\n  isDragging() {\n    return this._hasStartedDragging() && this._dragDropRegistry.isDragging(this);\n  }\n  /** Resets a standalone drag item to its initial position. */\n  reset() {\n    this._rootElement.style.transform = this._initialTransform || '';\n    this._activeTransform = {\n      x: 0,\n      y: 0\n    };\n    this._passiveTransform = {\n      x: 0,\n      y: 0\n    };\n  }\n  /**\n   * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n   * @param handle Handle element that should be disabled.\n   */\n  disableHandle(handle) {\n    if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n      this._disabledHandles.add(handle);\n      toggleNativeDragInteractions(handle, true);\n    }\n  }\n  /**\n   * Enables a handle, if it has been disabled.\n   * @param handle Handle element to be enabled.\n   */\n  enableHandle(handle) {\n    if (this._disabledHandles.has(handle)) {\n      this._disabledHandles.delete(handle);\n      toggleNativeDragInteractions(handle, this.disabled);\n    }\n  }\n  /** Sets the layout direction of the draggable item. */\n  withDirection(direction) {\n    this._direction = direction;\n    return this;\n  }\n  /** Sets the container that the item is part of. */\n  _withDropContainer(container) {\n    this._dropContainer = container;\n  }\n  /**\n   * Gets the current position in pixels the draggable outside of a drop container.\n   */\n  getFreeDragPosition() {\n    const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n    return {\n      x: position.x,\n      y: position.y\n    };\n  }\n  /**\n   * Sets the current position in pixels the draggable outside of a drop container.\n   * @param value New position to be set.\n   */\n  setFreeDragPosition(value) {\n    this._activeTransform = {\n      x: 0,\n      y: 0\n    };\n    this._passiveTransform.x = value.x;\n    this._passiveTransform.y = value.y;\n    if (!this._dropContainer) {\n      this._applyRootElementTransform(value.x, value.y);\n    }\n    return this;\n  }\n  /**\n   * Sets the container into which to insert the preview element.\n   * @param value Container into which to insert the preview.\n   */\n  withPreviewContainer(value) {\n    this._previewContainer = value;\n    return this;\n  }\n  /** Updates the item's sort order based on the last-known pointer position. */\n  _sortFromLastPointerPosition() {\n    const position = this._lastKnownPointerPosition;\n    if (position && this._dropContainer) {\n      this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n    }\n  }\n  /** Unsubscribes from the global subscriptions. */\n  _removeListeners() {\n    this._pointerMoveSubscription.unsubscribe();\n    this._pointerUpSubscription.unsubscribe();\n    this._scrollSubscription.unsubscribe();\n    this._getShadowRoot()?.removeEventListener('selectstart', shadowDomSelectStart, activeCapturingEventOptions$1);\n  }\n  /** Destroys the preview element and its ViewRef. */\n  _destroyPreview() {\n    this._preview?.destroy();\n    this._preview = null;\n  }\n  /** Destroys the placeholder element and its ViewRef. */\n  _destroyPlaceholder() {\n    this._placeholder?.remove();\n    this._placeholderRef?.destroy();\n    this._placeholder = this._placeholderRef = null;\n  }\n  /**\n   * Clears subscriptions and stops the dragging sequence.\n   * @param event Browser event object that ended the sequence.\n   */\n  _endDragSequence(event) {\n    // Note that here we use `isDragging` from the service, rather than from `this`.\n    // The difference is that the one from the service reflects whether a dragging sequence\n    // has been initiated, whereas the one on `this` includes whether the user has passed\n    // the minimum dragging threshold.\n    if (!this._dragDropRegistry.isDragging(this)) {\n      return;\n    }\n    this._removeListeners();\n    this._dragDropRegistry.stopDragging(this);\n    this._toggleNativeDragInteractions();\n    if (this._handles) {\n      this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n    }\n    if (!this._hasStartedDragging()) {\n      return;\n    }\n    this.released.next({\n      source: this,\n      event\n    });\n    if (this._dropContainer) {\n      // Stop scrolling immediately, instead of waiting for the animation to finish.\n      this._dropContainer._stopScrolling();\n      this._animatePreviewToPlaceholder().then(() => {\n        this._cleanupDragArtifacts(event);\n        this._cleanupCachedDimensions();\n        this._dragDropRegistry.stopDragging(this);\n      });\n    } else {\n      // Convert the active transform into a passive one. This means that next time\n      // the user starts dragging the item, its position will be calculated relatively\n      // to the new passive transform.\n      this._passiveTransform.x = this._activeTransform.x;\n      const pointerPosition = this._getPointerPositionOnPage(event);\n      this._passiveTransform.y = this._activeTransform.y;\n      this._ngZone.run(() => {\n        this.ended.next({\n          source: this,\n          distance: this._getDragDistance(pointerPosition),\n          dropPoint: pointerPosition,\n          event\n        });\n      });\n      this._cleanupCachedDimensions();\n      this._dragDropRegistry.stopDragging(this);\n    }\n  }\n  /** Starts the dragging sequence. */\n  _startDragSequence(event) {\n    if (isTouchEvent(event)) {\n      this._lastTouchEventTime = Date.now();\n    }\n    this._toggleNativeDragInteractions();\n    // Needs to happen before the root element is moved.\n    const shadowRoot = this._getShadowRoot();\n    const dropContainer = this._dropContainer;\n    if (shadowRoot) {\n      // In some browsers the global `selectstart` that we maintain in the `DragDropRegistry`\n      // doesn't cross the shadow boundary so we have to prevent it at the shadow root (see #28792).\n      this._ngZone.runOutsideAngular(() => {\n        shadowRoot.addEventListener('selectstart', shadowDomSelectStart, activeCapturingEventOptions$1);\n      });\n    }\n    if (dropContainer) {\n      const element = this._rootElement;\n      const parent = element.parentNode;\n      const placeholder = this._placeholder = this._createPlaceholderElement();\n      const anchor = this._anchor = this._anchor || this._document.createComment(typeof ngDevMode === 'undefined' || ngDevMode ? 'cdk-drag-anchor' : '');\n      // Insert an anchor node so that we can restore the element's position in the DOM.\n      parent.insertBefore(anchor, element);\n      // There's no risk of transforms stacking when inside a drop container so\n      // we can keep the initial transform up to date any time dragging starts.\n      this._initialTransform = element.style.transform || '';\n      // Create the preview after the initial transform has\n      // been cached, because it can be affected by the transform.\n      this._preview = new PreviewRef(this._document, this._rootElement, this._direction, this._initialDomRect, this._previewTemplate || null, this.previewClass || null, this._pickupPositionOnPage, this._initialTransform, this._config.zIndex || 1000);\n      this._preview.attach(this._getPreviewInsertionPoint(parent, shadowRoot));\n      // We move the element out at the end of the body and we make it hidden, because keeping it in\n      // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n      // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n      toggleVisibility(element, false, dragImportantProperties);\n      this._document.body.appendChild(parent.replaceChild(placeholder, element));\n      this.started.next({\n        source: this,\n        event\n      }); // Emit before notifying the container.\n      dropContainer.start();\n      this._initialContainer = dropContainer;\n      this._initialIndex = dropContainer.getItemIndex(this);\n    } else {\n      this.started.next({\n        source: this,\n        event\n      });\n      this._initialContainer = this._initialIndex = undefined;\n    }\n    // Important to run after we've called `start` on the parent container\n    // so that it has had time to resolve its scrollable parents.\n    this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n  }\n  /**\n   * Sets up the different variables and subscriptions\n   * that will be necessary for the dragging sequence.\n   * @param referenceElement Element that started the drag sequence.\n   * @param event Browser event object that started the sequence.\n   */\n  _initializeDragSequence(referenceElement, event) {\n    // Stop propagation if the item is inside another\n    // draggable so we don't start multiple drag sequences.\n    if (this._parentDragRef) {\n      event.stopPropagation();\n    }\n    const isDragging = this.isDragging();\n    const isTouchSequence = isTouchEvent(event);\n    const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n    const rootElement = this._rootElement;\n    const target = _getEventTarget(event);\n    const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime && this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n    const isFakeEvent = isTouchSequence ? isFakeTouchstartFromScreenReader(event) : isFakeMousedownFromScreenReader(event);\n    // If the event started from an element with the native HTML drag&drop, it'll interfere\n    // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n    // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n    // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n    // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n    // events from firing on touch devices.\n    if (target && target.draggable && event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Abort if the user is already dragging or is using a mouse button other than the primary one.\n    if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n      return;\n    }\n    // If we've got handles, we need to disable the tap highlight on the entire root element,\n    // otherwise iOS will still add it, even though all the drag interactions on the handle\n    // are disabled.\n    if (this._handles.length) {\n      const rootStyles = rootElement.style;\n      this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n      rootStyles.webkitTapHighlightColor = 'transparent';\n    }\n    this._hasMoved = false;\n    this._hasStartedDragging.set(this._hasMoved);\n    // Avoid multiple subscriptions and memory leaks when multi touch\n    // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n    this._removeListeners();\n    this._initialDomRect = this._rootElement.getBoundingClientRect();\n    this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n    this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n    this._scrollSubscription = this._dragDropRegistry.scrolled(this._getShadowRoot()).subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n    if (this._boundaryElement) {\n      this._boundaryRect = getMutableClientRect(this._boundaryElement);\n    }\n    // If we have a custom preview we can't know ahead of time how large it'll be so we position\n    // it next to the cursor. The exception is when the consumer has opted into making the preview\n    // the same size as the root element, in which case we do know the size.\n    const previewTemplate = this._previewTemplate;\n    this._pickupPositionInElement = previewTemplate && previewTemplate.template && !previewTemplate.matchSize ? {\n      x: 0,\n      y: 0\n    } : this._getPointerPositionInElement(this._initialDomRect, referenceElement, event);\n    const pointerPosition = this._pickupPositionOnPage = this._lastKnownPointerPosition = this._getPointerPositionOnPage(event);\n    this._pointerDirectionDelta = {\n      x: 0,\n      y: 0\n    };\n    this._pointerPositionAtLastDirectionChange = {\n      x: pointerPosition.x,\n      y: pointerPosition.y\n    };\n    this._dragStartTime = Date.now();\n    this._dragDropRegistry.startDragging(this, event);\n  }\n  /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n  _cleanupDragArtifacts(event) {\n    // Restore the element's visibility and insert it at its old position in the DOM.\n    // It's important that we maintain the position, because moving the element around in the DOM\n    // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n    // while moving the existing elements in all other cases.\n    toggleVisibility(this._rootElement, true, dragImportantProperties);\n    this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n    this._destroyPreview();\n    this._destroyPlaceholder();\n    this._initialDomRect = this._boundaryRect = this._previewRect = this._initialTransform = undefined;\n    // Re-enter the NgZone since we bound `document` events on the outside.\n    this._ngZone.run(() => {\n      const container = this._dropContainer;\n      const currentIndex = container.getItemIndex(this);\n      const pointerPosition = this._getPointerPositionOnPage(event);\n      const distance = this._getDragDistance(pointerPosition);\n      const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n      this.ended.next({\n        source: this,\n        distance,\n        dropPoint: pointerPosition,\n        event\n      });\n      this.dropped.next({\n        item: this,\n        currentIndex,\n        previousIndex: this._initialIndex,\n        container: container,\n        previousContainer: this._initialContainer,\n        isPointerOverContainer,\n        distance,\n        dropPoint: pointerPosition,\n        event\n      });\n      container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition, event);\n      this._dropContainer = this._initialContainer;\n    });\n  }\n  /**\n   * Updates the item's position in its drop container, or moves it\n   * into a new one, depending on its current drag position.\n   */\n  _updateActiveDropContainer({\n    x,\n    y\n  }, {\n    x: rawX,\n    y: rawY\n  }) {\n    // Drop container that draggable has been moved into.\n    let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n    // If we couldn't find a new container to move the item into, and the item has left its\n    // initial container, check whether the it's over the initial container. This handles the\n    // case where two containers are connected one way and the user tries to undo dragging an\n    // item into a new container.\n    if (!newContainer && this._dropContainer !== this._initialContainer && this._initialContainer._isOverContainer(x, y)) {\n      newContainer = this._initialContainer;\n    }\n    if (newContainer && newContainer !== this._dropContainer) {\n      this._ngZone.run(() => {\n        // Notify the old container that the item has left.\n        this.exited.next({\n          item: this,\n          container: this._dropContainer\n        });\n        this._dropContainer.exit(this);\n        // Notify the new container that the item has entered.\n        this._dropContainer = newContainer;\n        this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n        // If we're re-entering the initial container and sorting is disabled,\n        // put item the into its starting index to begin with.\n        newContainer.sortingDisabled ? this._initialIndex : undefined);\n        this.entered.next({\n          item: this,\n          container: newContainer,\n          currentIndex: newContainer.getItemIndex(this)\n        });\n      });\n    }\n    // Dragging may have been interrupted as a result of the events above.\n    if (this.isDragging()) {\n      this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n      this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n      if (this.constrainPosition) {\n        this._applyPreviewTransform(x, y);\n      } else {\n        this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n      }\n    }\n  }\n  /**\n   * Animates the preview element from its current position to the location of the drop placeholder.\n   * @returns Promise that resolves when the animation completes.\n   */\n  _animatePreviewToPlaceholder() {\n    // If the user hasn't moved yet, the transitionend event won't fire.\n    if (!this._hasMoved) {\n      return Promise.resolve();\n    }\n    const placeholderRect = this._placeholder.getBoundingClientRect();\n    // Apply the class that adds a transition to the preview.\n    this._preview.addClass('cdk-drag-animating');\n    // Move the preview to the placeholder position.\n    this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n    // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n    // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n    // apply its style, we take advantage of the available info to figure out whether we need to\n    // bind the event in the first place.\n    const duration = this._preview.getTransitionDuration();\n    if (duration === 0) {\n      return Promise.resolve();\n    }\n    return this._ngZone.runOutsideAngular(() => {\n      return new Promise(resolve => {\n        const handler = event => {\n          if (!event || this._preview && _getEventTarget(event) === this._preview.element && event.propertyName === 'transform') {\n            this._preview?.removeEventListener('transitionend', handler);\n            resolve();\n            clearTimeout(timeout);\n          }\n        };\n        // If a transition is short enough, the browser might not fire the `transitionend` event.\n        // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n        // fire if the transition hasn't completed when it was supposed to.\n        const timeout = setTimeout(handler, duration * 1.5);\n        this._preview.addEventListener('transitionend', handler);\n      });\n    });\n  }\n  /** Creates an element that will be shown instead of the current element while dragging. */\n  _createPlaceholderElement() {\n    const placeholderConfig = this._placeholderTemplate;\n    const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n    let placeholder;\n    if (placeholderTemplate) {\n      this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n      this._placeholderRef.detectChanges();\n      placeholder = getRootNode(this._placeholderRef, this._document);\n    } else {\n      placeholder = deepCloneNode(this._rootElement);\n    }\n    // Stop pointer events on the preview so the user can't\n    // interact with it while the preview is animating.\n    placeholder.style.pointerEvents = 'none';\n    placeholder.classList.add('cdk-drag-placeholder');\n    return placeholder;\n  }\n  /**\n   * Figures out the coordinates at which an element was picked up.\n   * @param referenceElement Element that initiated the dragging.\n   * @param event Event that initiated the dragging.\n   */\n  _getPointerPositionInElement(elementRect, referenceElement, event) {\n    const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n    const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n    const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n    const scrollPosition = this._getViewportScrollPosition();\n    const x = point.pageX - referenceRect.left - scrollPosition.left;\n    const y = point.pageY - referenceRect.top - scrollPosition.top;\n    return {\n      x: referenceRect.left - elementRect.left + x,\n      y: referenceRect.top - elementRect.top + y\n    };\n  }\n  /** Determines the point of the page that was touched by the user. */\n  _getPointerPositionOnPage(event) {\n    const scrollPosition = this._getViewportScrollPosition();\n    const point = isTouchEvent(event) ?\n    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n    // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n    // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n    // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n    // throwing an error. The value returned here will be incorrect, but since this only\n    // breaks inside a developer tool and the value is only used for secondary information,\n    // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n    event.touches[0] || event.changedTouches[0] || {\n      pageX: 0,\n      pageY: 0\n    } : event;\n    const x = point.pageX - scrollPosition.left;\n    const y = point.pageY - scrollPosition.top;\n    // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n    // coordinate system\n    if (this._ownerSVGElement) {\n      const svgMatrix = this._ownerSVGElement.getScreenCTM();\n      if (svgMatrix) {\n        const svgPoint = this._ownerSVGElement.createSVGPoint();\n        svgPoint.x = x;\n        svgPoint.y = y;\n        return svgPoint.matrixTransform(svgMatrix.inverse());\n      }\n    }\n    return {\n      x,\n      y\n    };\n  }\n  /** Gets the pointer position on the page, accounting for any position constraints. */\n  _getConstrainedPointerPosition(point) {\n    const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n    let {\n      x,\n      y\n    } = this.constrainPosition ? this.constrainPosition(point, this, this._initialDomRect, this._pickupPositionInElement) : point;\n    if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n      y = this._pickupPositionOnPage.y - (this.constrainPosition ? this._pickupPositionInElement.y : 0);\n    } else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n      x = this._pickupPositionOnPage.x - (this.constrainPosition ? this._pickupPositionInElement.x : 0);\n    }\n    if (this._boundaryRect) {\n      // If not using a custom constrain we need to account for the pickup position in the element\n      // otherwise we do not need to do this, as it has already been accounted for\n      const {\n        x: pickupX,\n        y: pickupY\n      } = !this.constrainPosition ? this._pickupPositionInElement : {\n        x: 0,\n        y: 0\n      };\n      const boundaryRect = this._boundaryRect;\n      const {\n        width: previewWidth,\n        height: previewHeight\n      } = this._getPreviewRect();\n      const minY = boundaryRect.top + pickupY;\n      const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n      const minX = boundaryRect.left + pickupX;\n      const maxX = boundaryRect.right - (previewWidth - pickupX);\n      x = clamp$1(x, minX, maxX);\n      y = clamp$1(y, minY, maxY);\n    }\n    return {\n      x,\n      y\n    };\n  }\n  /** Updates the current drag delta, based on the user's current pointer position on the page. */\n  _updatePointerDirectionDelta(pointerPositionOnPage) {\n    const {\n      x,\n      y\n    } = pointerPositionOnPage;\n    const delta = this._pointerDirectionDelta;\n    const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n    // Amount of pixels the user has dragged since the last time the direction changed.\n    const changeX = Math.abs(x - positionSinceLastChange.x);\n    const changeY = Math.abs(y - positionSinceLastChange.y);\n    // Because we handle pointer events on a per-pixel basis, we don't want the delta\n    // to change for every pixel, otherwise anything that depends on it can look erratic.\n    // To make the delta more consistent, we track how much the user has moved since the last\n    // delta change and we only update it after it has reached a certain threshold.\n    if (changeX > this._config.pointerDirectionChangeThreshold) {\n      delta.x = x > positionSinceLastChange.x ? 1 : -1;\n      positionSinceLastChange.x = x;\n    }\n    if (changeY > this._config.pointerDirectionChangeThreshold) {\n      delta.y = y > positionSinceLastChange.y ? 1 : -1;\n      positionSinceLastChange.y = y;\n    }\n    return delta;\n  }\n  /** Toggles the native drag interactions, based on how many handles are registered. */\n  _toggleNativeDragInteractions() {\n    if (!this._rootElement || !this._handles) {\n      return;\n    }\n    const shouldEnable = this._handles.length > 0 || !this.isDragging();\n    if (shouldEnable !== this._nativeInteractionsEnabled) {\n      this._nativeInteractionsEnabled = shouldEnable;\n      toggleNativeDragInteractions(this._rootElement, shouldEnable);\n    }\n  }\n  /** Removes the manually-added event listeners from the root element. */\n  _removeRootElementListeners(element) {\n    element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n    element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    element.removeEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n  }\n  /**\n   * Applies a `transform` to the root element, taking into account any existing transforms on it.\n   * @param x New transform value along the X axis.\n   * @param y New transform value along the Y axis.\n   */\n  _applyRootElementTransform(x, y) {\n    const scale = 1 / this.scale;\n    const transform = getTransform(x * scale, y * scale);\n    const styles = this._rootElement.style;\n    // Cache the previous transform amount only after the first drag sequence, because\n    // we don't want our own transforms to stack on top of each other.\n    // Should be excluded none because none + translate3d(x, y, x) is invalid css\n    if (this._initialTransform == null) {\n      this._initialTransform = styles.transform && styles.transform != 'none' ? styles.transform : '';\n    }\n    // Preserve the previous `transform` value, if there was one. Note that we apply our own\n    // transform before the user's, because things like rotation can affect which direction\n    // the element will be translated towards.\n    styles.transform = combineTransforms(transform, this._initialTransform);\n  }\n  /**\n   * Applies a `transform` to the preview, taking into account any existing transforms on it.\n   * @param x New transform value along the X axis.\n   * @param y New transform value along the Y axis.\n   */\n  _applyPreviewTransform(x, y) {\n    // Only apply the initial transform if the preview is a clone of the original element, otherwise\n    // it could be completely different and the transform might not make sense anymore.\n    const initialTransform = this._previewTemplate?.template ? undefined : this._initialTransform;\n    const transform = getTransform(x, y);\n    this._preview.setTransform(combineTransforms(transform, initialTransform));\n  }\n  /**\n   * Gets the distance that the user has dragged during the current drag sequence.\n   * @param currentPosition Current position of the user's pointer.\n   */\n  _getDragDistance(currentPosition) {\n    const pickupPosition = this._pickupPositionOnPage;\n    if (pickupPosition) {\n      return {\n        x: currentPosition.x - pickupPosition.x,\n        y: currentPosition.y - pickupPosition.y\n      };\n    }\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n  _cleanupCachedDimensions() {\n    this._boundaryRect = this._previewRect = undefined;\n    this._parentPositions.clear();\n  }\n  /**\n   * Checks whether the element is still inside its boundary after the viewport has been resized.\n   * If not, the position is adjusted so that the element fits again.\n   */\n  _containInsideBoundaryOnResize() {\n    let {\n      x,\n      y\n    } = this._passiveTransform;\n    if (x === 0 && y === 0 || this.isDragging() || !this._boundaryElement) {\n      return;\n    }\n    // Note: don't use `_clientRectAtStart` here, because we want the latest position.\n    const elementRect = this._rootElement.getBoundingClientRect();\n    const boundaryRect = this._boundaryElement.getBoundingClientRect();\n    // It's possible that the element got hidden away after dragging (e.g. by switching to a\n    // different tab). Don't do anything in this case so we don't clear the user's position.\n    if (boundaryRect.width === 0 && boundaryRect.height === 0 || elementRect.width === 0 && elementRect.height === 0) {\n      return;\n    }\n    const leftOverflow = boundaryRect.left - elementRect.left;\n    const rightOverflow = elementRect.right - boundaryRect.right;\n    const topOverflow = boundaryRect.top - elementRect.top;\n    const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n    // If the element has become wider than the boundary, we can't\n    // do much to make it fit so we just anchor it to the left.\n    if (boundaryRect.width > elementRect.width) {\n      if (leftOverflow > 0) {\n        x += leftOverflow;\n      }\n      if (rightOverflow > 0) {\n        x -= rightOverflow;\n      }\n    } else {\n      x = 0;\n    }\n    // If the element has become taller than the boundary, we can't\n    // do much to make it fit so we just anchor it to the top.\n    if (boundaryRect.height > elementRect.height) {\n      if (topOverflow > 0) {\n        y += topOverflow;\n      }\n      if (bottomOverflow > 0) {\n        y -= bottomOverflow;\n      }\n    } else {\n      y = 0;\n    }\n    if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n      this.setFreeDragPosition({\n        y,\n        x\n      });\n    }\n  }\n  /** Gets the drag start delay, based on the event type. */\n  _getDragStartDelay(event) {\n    const value = this.dragStartDelay;\n    if (typeof value === 'number') {\n      return value;\n    } else if (isTouchEvent(event)) {\n      return value.touch;\n    }\n    return value ? value.mouse : 0;\n  }\n  /** Updates the internal state of the draggable element when scrolling has occurred. */\n  _updateOnScroll(event) {\n    const scrollDifference = this._parentPositions.handleScroll(event);\n    if (scrollDifference) {\n      const target = _getEventTarget(event);\n      // DOMRect dimensions are based on the scroll position of the page and its parent\n      // node so we have to update the cached boundary DOMRect if the user has scrolled.\n      if (this._boundaryRect && target !== this._boundaryElement && target.contains(this._boundaryElement)) {\n        adjustDomRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n      }\n      this._pickupPositionOnPage.x += scrollDifference.left;\n      this._pickupPositionOnPage.y += scrollDifference.top;\n      // If we're in free drag mode, we have to update the active transform, because\n      // it isn't relative to the viewport like the preview inside a drop list.\n      if (!this._dropContainer) {\n        this._activeTransform.x -= scrollDifference.left;\n        this._activeTransform.y -= scrollDifference.top;\n        this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n      }\n    }\n  }\n  /** Gets the scroll position of the viewport. */\n  _getViewportScrollPosition() {\n    return this._parentPositions.positions.get(this._document)?.scrollPosition || this._parentPositions.getViewportScrollPosition();\n  }\n  /**\n   * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n   * than saving it in property directly on init, because we want to resolve it as late as possible\n   * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n   * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n   */\n  _getShadowRoot() {\n    if (this._cachedShadowRoot === undefined) {\n      this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n    }\n    return this._cachedShadowRoot;\n  }\n  /** Gets the element into which the drag preview should be inserted. */\n  _getPreviewInsertionPoint(initialParent, shadowRoot) {\n    const previewContainer = this._previewContainer || 'global';\n    if (previewContainer === 'parent') {\n      return initialParent;\n    }\n    if (previewContainer === 'global') {\n      const documentRef = this._document;\n      // We can't use the body if the user is in fullscreen mode,\n      // because the preview will render under the fullscreen element.\n      // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n      return shadowRoot || documentRef.fullscreenElement || documentRef.webkitFullscreenElement || documentRef.mozFullScreenElement || documentRef.msFullscreenElement || documentRef.body;\n    }\n    return coerceElement(previewContainer);\n  }\n  /** Lazily resolves and returns the dimensions of the preview. */\n  _getPreviewRect() {\n    // Cache the preview element rect if we haven't cached it already or if\n    // we cached it too early before the element dimensions were computed.\n    if (!this._previewRect || !this._previewRect.width && !this._previewRect.height) {\n      this._previewRect = this._preview ? this._preview.getBoundingClientRect() : this._initialDomRect;\n    }\n    return this._previewRect;\n  }\n  /** Gets a handle that is the target of an event. */\n  _getTargetHandle(event) {\n    return this._handles.find(handle => {\n      return event.target && (event.target === handle || handle.contains(event.target));\n    });\n  }\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n  // This function is called for every pixel that the user has dragged so we need it to be\n  // as fast as possible. Since we only bind mouse events and touch events, we can assume\n  // that if the event's name starts with `t`, it's a touch event.\n  return event.type[0] === 't';\n}\n/** Callback invoked for `selectstart` events inside the shadow DOM. */\nfunction shadowDomSelectStart(event) {\n  event.preventDefault();\n}\n\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n  const from = clamp(fromIndex, array.length - 1);\n  const to = clamp(toIndex, array.length - 1);\n  if (from === to) {\n    return;\n  }\n  const target = array[from];\n  const delta = to < from ? -1 : 1;\n  for (let i = from; i !== to; i += delta) {\n    array[i] = array[i + delta];\n  }\n  array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n  const from = clamp(currentIndex, currentArray.length - 1);\n  const to = clamp(targetIndex, targetArray.length);\n  if (currentArray.length) {\n    targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n  }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n  const to = clamp(targetIndex, targetArray.length);\n  if (currentArray.length) {\n    targetArray.splice(to, 0, currentArray[currentIndex]);\n  }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n  return Math.max(0, Math.min(max, value));\n}\n\n/**\n * Strategy that only supports sorting along a single axis.\n * Items are reordered using CSS transforms which allows for sorting to be animated.\n * @docs-private\n */\nclass SingleAxisSortStrategy {\n  constructor(_dragDropRegistry) {\n    this._dragDropRegistry = _dragDropRegistry;\n    /** Cache of the dimensions of all the items inside the container. */\n    this._itemPositions = [];\n    /** Direction in which the list is oriented. */\n    this.orientation = 'vertical';\n    /**\n     * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n     * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n     * overlap with the swapped item after the swapping occurred.\n     */\n    this._previousSwap = {\n      drag: null,\n      delta: 0,\n      overlaps: false\n    };\n  }\n  /**\n   * To be called when the drag sequence starts.\n   * @param items Items that are currently in the list.\n   */\n  start(items) {\n    this.withItems(items);\n  }\n  /**\n   * To be called when an item is being sorted.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  sort(item, pointerX, pointerY, pointerDelta) {\n    const siblings = this._itemPositions;\n    const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n    if (newIndex === -1 && siblings.length > 0) {\n      return null;\n    }\n    const isHorizontal = this.orientation === 'horizontal';\n    const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n    const siblingAtNewPosition = siblings[newIndex];\n    const currentPosition = siblings[currentIndex].clientRect;\n    const newPosition = siblingAtNewPosition.clientRect;\n    const delta = currentIndex > newIndex ? 1 : -1;\n    // How many pixels the item's placeholder should be offset.\n    const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n    // How many pixels all the other items should be offset.\n    const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n    // Save the previous order of the items before moving the item to its new index.\n    // We use this to check whether an item has been moved as a result of the sorting.\n    const oldOrder = siblings.slice();\n    // Shuffle the array in place.\n    moveItemInArray(siblings, currentIndex, newIndex);\n    siblings.forEach((sibling, index) => {\n      // Don't do anything if the position hasn't changed.\n      if (oldOrder[index] === sibling) {\n        return;\n      }\n      const isDraggedItem = sibling.drag === item;\n      const offset = isDraggedItem ? itemOffset : siblingOffset;\n      const elementToOffset = isDraggedItem ? item.getPlaceholderElement() : sibling.drag.getRootElement();\n      // Update the offset to reflect the new position.\n      sibling.offset += offset;\n      const transformAmount = Math.round(sibling.offset * (1 / sibling.drag.scale));\n      // Since we're moving the items with a `transform`, we need to adjust their cached\n      // client rects to reflect their new position, as well as swap their positions in the cache.\n      // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n      // elements may be mid-animation which will give us a wrong result.\n      if (isHorizontal) {\n        // Round the transforms since some browsers will\n        // blur the elements, for sub-pixel transforms.\n        elementToOffset.style.transform = combineTransforms(`translate3d(${transformAmount}px, 0, 0)`, sibling.initialTransform);\n        adjustDomRect(sibling.clientRect, 0, offset);\n      } else {\n        elementToOffset.style.transform = combineTransforms(`translate3d(0, ${transformAmount}px, 0)`, sibling.initialTransform);\n        adjustDomRect(sibling.clientRect, offset, 0);\n      }\n    });\n    // Note that it's important that we do this after the client rects have been adjusted.\n    this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n    this._previousSwap.drag = siblingAtNewPosition.drag;\n    this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n    return {\n      previousIndex: currentIndex,\n      currentIndex: newIndex\n    };\n  }\n  /**\n   * Called when an item is being moved into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item, pointerX, pointerY, index) {\n    const newIndex = index == null || index < 0 ?\n    // We use the coordinates of where the item entered the drop\n    // zone to figure out at which index it should be inserted.\n    this._getItemIndexFromPointerPosition(item, pointerX, pointerY) : index;\n    const activeDraggables = this._activeDraggables;\n    const currentIndex = activeDraggables.indexOf(item);\n    const placeholder = item.getPlaceholderElement();\n    let newPositionReference = activeDraggables[newIndex];\n    // If the item at the new position is the same as the item that is being dragged,\n    // it means that we're trying to restore the item to its initial position. In this\n    // case we should use the next item from the list as the reference.\n    if (newPositionReference === item) {\n      newPositionReference = activeDraggables[newIndex + 1];\n    }\n    // If we didn't find a new position reference, it means that either the item didn't start off\n    // in this container, or that the item requested to be inserted at the end of the list.\n    if (!newPositionReference && (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) && this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n      newPositionReference = activeDraggables[0];\n    }\n    // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n    // into another container and back again), we have to ensure that it isn't duplicated.\n    if (currentIndex > -1) {\n      activeDraggables.splice(currentIndex, 1);\n    }\n    // Don't use items that are being dragged as a reference, because\n    // their element has been moved down to the bottom of the body.\n    if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n      const element = newPositionReference.getRootElement();\n      element.parentElement.insertBefore(placeholder, element);\n      activeDraggables.splice(newIndex, 0, item);\n    } else {\n      this._element.appendChild(placeholder);\n      activeDraggables.push(item);\n    }\n    // The transform needs to be cleared so it doesn't throw off the measurements.\n    placeholder.style.transform = '';\n    // Note that usually `start` is called together with `enter` when an item goes into a new\n    // container. This will cache item positions, but we need to refresh them since the amount\n    // of items has changed.\n    this._cacheItemPositions();\n  }\n  /** Sets the items that are currently part of the list. */\n  withItems(items) {\n    this._activeDraggables = items.slice();\n    this._cacheItemPositions();\n  }\n  /** Assigns a sort predicate to the strategy. */\n  withSortPredicate(predicate) {\n    this._sortPredicate = predicate;\n  }\n  /** Resets the strategy to its initial state before dragging was started. */\n  reset() {\n    // TODO(crisbeto): may have to wait for the animations to finish.\n    this._activeDraggables?.forEach(item => {\n      const rootElement = item.getRootElement();\n      if (rootElement) {\n        const initialTransform = this._itemPositions.find(p => p.drag === item)?.initialTransform;\n        rootElement.style.transform = initialTransform || '';\n      }\n    });\n    this._itemPositions = [];\n    this._activeDraggables = [];\n    this._previousSwap.drag = null;\n    this._previousSwap.delta = 0;\n    this._previousSwap.overlaps = false;\n  }\n  /**\n   * Gets a snapshot of items currently in the list.\n   * Can include items that we dragged in from another list.\n   */\n  getActiveItemsSnapshot() {\n    return this._activeDraggables;\n  }\n  /** Gets the index of a specific item. */\n  getItemIndex(item) {\n    // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n    // The rest of the logic still stands no matter what orientation we're in, however\n    // we need to invert the array when determining the index.\n    const items = this.orientation === 'horizontal' && this.direction === 'rtl' ? this._itemPositions.slice().reverse() : this._itemPositions;\n    return items.findIndex(currentItem => currentItem.drag === item);\n  }\n  /** Used to notify the strategy that the scroll position has changed. */\n  updateOnScroll(topDifference, leftDifference) {\n    // Since we know the amount that the user has scrolled we can shift all of the\n    // client rectangles ourselves. This is cheaper than re-measuring everything and\n    // we can avoid inconsistent behavior where we might be measuring the element before\n    // its position has changed.\n    this._itemPositions.forEach(({\n      clientRect\n    }) => {\n      adjustDomRect(clientRect, topDifference, leftDifference);\n    });\n    // We need two loops for this, because we want all of the cached\n    // positions to be up-to-date before we re-sort the item.\n    this._itemPositions.forEach(({\n      drag\n    }) => {\n      if (this._dragDropRegistry.isDragging(drag)) {\n        // We need to re-sort the item manually, because the pointer move\n        // events won't be dispatched while the user is scrolling.\n        drag._sortFromLastPointerPosition();\n      }\n    });\n  }\n  withElementContainer(container) {\n    this._element = container;\n  }\n  /** Refreshes the position cache of the items and sibling containers. */\n  _cacheItemPositions() {\n    const isHorizontal = this.orientation === 'horizontal';\n    this._itemPositions = this._activeDraggables.map(drag => {\n      const elementToMeasure = drag.getVisibleElement();\n      return {\n        drag,\n        offset: 0,\n        initialTransform: elementToMeasure.style.transform || '',\n        clientRect: getMutableClientRect(elementToMeasure)\n      };\n    }).sort((a, b) => {\n      return isHorizontal ? a.clientRect.left - b.clientRect.left : a.clientRect.top - b.clientRect.top;\n    });\n  }\n  /**\n   * Gets the offset in pixels by which the item that is being dragged should be moved.\n   * @param currentPosition Current position of the item.\n   * @param newPosition Position of the item where the current item should be moved.\n   * @param delta Direction in which the user is moving.\n   */\n  _getItemOffsetPx(currentPosition, newPosition, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    let itemOffset = isHorizontal ? newPosition.left - currentPosition.left : newPosition.top - currentPosition.top;\n    // Account for differences in the item width/height.\n    if (delta === -1) {\n      itemOffset += isHorizontal ? newPosition.width - currentPosition.width : newPosition.height - currentPosition.height;\n    }\n    return itemOffset;\n  }\n  /**\n   * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n   * @param currentIndex Index of the item currently being dragged.\n   * @param siblings All of the items in the list.\n   * @param delta Direction in which the user is moving.\n   */\n  _getSiblingOffsetPx(currentIndex, siblings, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    const currentPosition = siblings[currentIndex].clientRect;\n    const immediateSibling = siblings[currentIndex + delta * -1];\n    let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n    if (immediateSibling) {\n      const start = isHorizontal ? 'left' : 'top';\n      const end = isHorizontal ? 'right' : 'bottom';\n      // Get the spacing between the start of the current item and the end of the one immediately\n      // after it in the direction in which the user is dragging, or vice versa. We add it to the\n      // offset in order to push the element to where it will be when it's inline and is influenced\n      // by the `margin` of its siblings.\n      if (delta === -1) {\n        siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n      } else {\n        siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n      }\n    }\n    return siblingOffset;\n  }\n  /**\n   * Checks if pointer is entering in the first position\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   */\n  _shouldEnterAsFirstChild(pointerX, pointerY) {\n    if (!this._activeDraggables.length) {\n      return false;\n    }\n    const itemPositions = this._itemPositions;\n    const isHorizontal = this.orientation === 'horizontal';\n    // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n    // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n    const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n    if (reversed) {\n      const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n      return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n    } else {\n      const firstItemRect = itemPositions[0].clientRect;\n      return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n    }\n  }\n  /**\n   * Gets the index of an item in the drop container, based on the position of the user's pointer.\n   * @param item Item that is being sorted.\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   * @param delta Direction in which the user is moving their pointer.\n   */\n  _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    const index = this._itemPositions.findIndex(({\n      drag,\n      clientRect\n    }) => {\n      // Skip the item itself.\n      if (drag === item) {\n        return false;\n      }\n      if (delta) {\n        const direction = isHorizontal ? delta.x : delta.y;\n        // If the user is still hovering over the same item as last time, their cursor hasn't left\n        // the item after we made the swap, and they didn't change the direction in which they're\n        // dragging, we don't consider it a direction swap.\n        if (drag === this._previousSwap.drag && this._previousSwap.overlaps && direction === this._previousSwap.delta) {\n          return false;\n        }\n      }\n      return isHorizontal ?\n      // Round these down since most browsers report client rects with\n      // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n      pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right) : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n    });\n    return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n  }\n}\n\n/**\n * Strategy that only supports sorting on a list that might wrap.\n * Items are reordered by moving their DOM nodes around.\n * @docs-private\n */\nclass MixedSortStrategy {\n  constructor(_document, _dragDropRegistry) {\n    this._document = _document;\n    this._dragDropRegistry = _dragDropRegistry;\n    /**\n     * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n     * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n     * overlap with the swapped item after the swapping occurred.\n     */\n    this._previousSwap = {\n      drag: null,\n      deltaX: 0,\n      deltaY: 0,\n      overlaps: false\n    };\n    /**\n     * Keeps track of the relationship between a node and its next sibling. This information\n     * is used to restore the DOM to the order it was in before dragging started.\n     */\n    this._relatedNodes = [];\n  }\n  /**\n   * To be called when the drag sequence starts.\n   * @param items Items that are currently in the list.\n   */\n  start(items) {\n    const childNodes = this._element.childNodes;\n    this._relatedNodes = [];\n    for (let i = 0; i < childNodes.length; i++) {\n      const node = childNodes[i];\n      this._relatedNodes.push([node, node.nextSibling]);\n    }\n    this.withItems(items);\n  }\n  /**\n   * To be called when an item is being sorted.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  sort(item, pointerX, pointerY, pointerDelta) {\n    const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n    const previousSwap = this._previousSwap;\n    if (newIndex === -1 || this._activeItems[newIndex] === item) {\n      return null;\n    }\n    const toSwapWith = this._activeItems[newIndex];\n    // Prevent too many swaps over the same item.\n    if (previousSwap.drag === toSwapWith && previousSwap.overlaps && previousSwap.deltaX === pointerDelta.x && previousSwap.deltaY === pointerDelta.y) {\n      return null;\n    }\n    const previousIndex = this.getItemIndex(item);\n    const current = item.getPlaceholderElement();\n    const overlapElement = toSwapWith.getRootElement();\n    if (newIndex > previousIndex) {\n      overlapElement.after(current);\n    } else {\n      overlapElement.before(current);\n    }\n    moveItemInArray(this._activeItems, previousIndex, newIndex);\n    const newOverlapElement = this._getRootNode().elementFromPoint(pointerX, pointerY);\n    // Note: it's tempting to save the entire `pointerDelta` object here, however that'll\n    // break this functionality, because the same object is passed for all `sort` calls.\n    previousSwap.deltaX = pointerDelta.x;\n    previousSwap.deltaY = pointerDelta.y;\n    previousSwap.drag = toSwapWith;\n    previousSwap.overlaps = overlapElement === newOverlapElement || overlapElement.contains(newOverlapElement);\n    return {\n      previousIndex,\n      currentIndex: newIndex\n    };\n  }\n  /**\n   * Called when an item is being moved into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item, pointerX, pointerY, index) {\n    let enterIndex = index == null || index < 0 ? this._getItemIndexFromPointerPosition(item, pointerX, pointerY) : index;\n    // In some cases (e.g. when the container has padding) we might not be able to figure\n    // out which item to insert the dragged item next to, because the pointer didn't overlap\n    // with anything. In that case we find the item that's closest to the pointer.\n    if (enterIndex === -1) {\n      enterIndex = this._getClosestItemIndexToPointer(item, pointerX, pointerY);\n    }\n    const targetItem = this._activeItems[enterIndex];\n    const currentIndex = this._activeItems.indexOf(item);\n    if (currentIndex > -1) {\n      this._activeItems.splice(currentIndex, 1);\n    }\n    if (targetItem && !this._dragDropRegistry.isDragging(targetItem)) {\n      this._activeItems.splice(enterIndex, 0, item);\n      targetItem.getRootElement().before(item.getPlaceholderElement());\n    } else {\n      this._activeItems.push(item);\n      this._element.appendChild(item.getPlaceholderElement());\n    }\n  }\n  /** Sets the items that are currently part of the list. */\n  withItems(items) {\n    this._activeItems = items.slice();\n  }\n  /** Assigns a sort predicate to the strategy. */\n  withSortPredicate(predicate) {\n    this._sortPredicate = predicate;\n  }\n  /** Resets the strategy to its initial state before dragging was started. */\n  reset() {\n    const root = this._element;\n    const previousSwap = this._previousSwap;\n    // Moving elements around in the DOM can break things like the `@for` loop, because it\n    // uses comment nodes to know where to insert elements. To avoid such issues, we restore\n    // the DOM nodes in the list to their original order when the list is reset.\n    // Note that this could be simpler if we just saved all the nodes, cleared the root\n    // and then appended them in the original order. We don't do it, because it can break\n    // down depending on when the snapshot was taken. E.g. we may end up snapshotting the\n    // placeholder element which is removed after dragging.\n    for (let i = this._relatedNodes.length - 1; i > -1; i--) {\n      const [node, nextSibling] = this._relatedNodes[i];\n      if (node.parentNode === root && node.nextSibling !== nextSibling) {\n        if (nextSibling === null) {\n          root.appendChild(node);\n        } else if (nextSibling.parentNode === root) {\n          root.insertBefore(node, nextSibling);\n        }\n      }\n    }\n    this._relatedNodes = [];\n    this._activeItems = [];\n    previousSwap.drag = null;\n    previousSwap.deltaX = previousSwap.deltaY = 0;\n    previousSwap.overlaps = false;\n  }\n  /**\n   * Gets a snapshot of items currently in the list.\n   * Can include items that we dragged in from another list.\n   */\n  getActiveItemsSnapshot() {\n    return this._activeItems;\n  }\n  /** Gets the index of a specific item. */\n  getItemIndex(item) {\n    return this._activeItems.indexOf(item);\n  }\n  /** Used to notify the strategy that the scroll position has changed. */\n  updateOnScroll() {\n    this._activeItems.forEach(item => {\n      if (this._dragDropRegistry.isDragging(item)) {\n        // We need to re-sort the item manually, because the pointer move\n        // events won't be dispatched while the user is scrolling.\n        item._sortFromLastPointerPosition();\n      }\n    });\n  }\n  withElementContainer(container) {\n    if (container !== this._element) {\n      this._element = container;\n      this._rootNode = undefined;\n    }\n  }\n  /**\n   * Gets the index of an item in the drop container, based on the position of the user's pointer.\n   * @param item Item that is being sorted.\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   * @param delta Direction in which the user is moving their pointer.\n   */\n  _getItemIndexFromPointerPosition(item, pointerX, pointerY) {\n    const elementAtPoint = this._getRootNode().elementFromPoint(Math.floor(pointerX), Math.floor(pointerY));\n    const index = elementAtPoint ? this._activeItems.findIndex(item => {\n      const root = item.getRootElement();\n      return elementAtPoint === root || root.contains(elementAtPoint);\n    }) : -1;\n    return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n  }\n  /** Lazily resolves the list's root node. */\n  _getRootNode() {\n    // Resolve the root node lazily to ensure that the drop list is in its final place in the DOM.\n    if (!this._rootNode) {\n      this._rootNode = _getShadowRoot(this._element) || this._document;\n    }\n    return this._rootNode;\n  }\n  /**\n   * Finds the index of the item that's closest to the item being dragged.\n   * @param item Item being dragged.\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   */\n  _getClosestItemIndexToPointer(item, pointerX, pointerY) {\n    if (this._activeItems.length === 0) {\n      return -1;\n    }\n    if (this._activeItems.length === 1) {\n      return 0;\n    }\n    let minDistance = Infinity;\n    let minIndex = -1;\n    // Find the Euclidean distance (https://en.wikipedia.org/wiki/Euclidean_distance) between each\n    // item and the pointer, and return the smallest one. Note that this is a bit flawed in that DOM\n    // nodes are rectangles, not points, so we use the top/left coordinates. It should be enough\n    // for our purposes.\n    for (let i = 0; i < this._activeItems.length; i++) {\n      const current = this._activeItems[i];\n      if (current !== item) {\n        const {\n          x,\n          y\n        } = current.getRootElement().getBoundingClientRect();\n        const distance = Math.hypot(pointerX - x, pointerY - y);\n        if (distance < minDistance) {\n          minDistance = distance;\n          minIndex = i;\n        }\n      }\n    }\n    return minIndex;\n  }\n}\n\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/** Vertical direction in which we can auto-scroll. */\nvar AutoScrollVerticalDirection = /*#__PURE__*/function (AutoScrollVerticalDirection) {\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"NONE\"] = 0] = \"NONE\";\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"UP\"] = 1] = \"UP\";\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"DOWN\"] = 2] = \"DOWN\";\n  return AutoScrollVerticalDirection;\n}(AutoScrollVerticalDirection || {});\n/** Horizontal direction in which we can auto-scroll. */\nvar AutoScrollHorizontalDirection = /*#__PURE__*/function (AutoScrollHorizontalDirection) {\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"NONE\"] = 0] = \"NONE\";\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"LEFT\"] = 1] = \"LEFT\";\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"RIGHT\"] = 2] = \"RIGHT\";\n  return AutoScrollHorizontalDirection;\n}(AutoScrollHorizontalDirection || {});\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n  constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n    this._dragDropRegistry = _dragDropRegistry;\n    this._ngZone = _ngZone;\n    this._viewportRuler = _viewportRuler;\n    /** Whether starting a dragging sequence from this container is disabled. */\n    this.disabled = false;\n    /** Whether sorting items within the list is disabled. */\n    this.sortingDisabled = false;\n    /**\n     * Whether auto-scrolling the view when the user\n     * moves their pointer close to the edges is disabled.\n     */\n    this.autoScrollDisabled = false;\n    /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n    this.autoScrollStep = 2;\n    /**\n     * Function that is used to determine whether an item\n     * is allowed to be moved into a drop container.\n     */\n    this.enterPredicate = () => true;\n    /** Function that is used to determine whether an item can be sorted into a particular index. */\n    this.sortPredicate = () => true;\n    /** Emits right before dragging has started. */\n    this.beforeStarted = new Subject();\n    /**\n     * Emits when the user has moved a new drag item into this container.\n     */\n    this.entered = new Subject();\n    /**\n     * Emits when the user removes an item from the container\n     * by dragging it into another container.\n     */\n    this.exited = new Subject();\n    /** Emits when the user drops an item inside the container. */\n    this.dropped = new Subject();\n    /** Emits as the user is swapping items while actively dragging. */\n    this.sorted = new Subject();\n    /** Emits when a dragging sequence is started in a list connected to the current one. */\n    this.receivingStarted = new Subject();\n    /** Emits when a dragging sequence is stopped from a list connected to the current one. */\n    this.receivingStopped = new Subject();\n    /** Whether an item in the list is being dragged. */\n    this._isDragging = false;\n    /** Draggable items in the container. */\n    this._draggables = [];\n    /** Drop lists that are connected to the current one. */\n    this._siblings = [];\n    /** Connected siblings that currently have a dragged item. */\n    this._activeSiblings = new Set();\n    /** Subscription to the window being scrolled. */\n    this._viewportScrollSubscription = Subscription.EMPTY;\n    /** Vertical direction in which the list is currently scrolling. */\n    this._verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n    /** Horizontal direction in which the list is currently scrolling. */\n    this._horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n    /** Used to signal to the current auto-scroll sequence when to stop. */\n    this._stopScrollTimers = new Subject();\n    /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n    this._cachedShadowRoot = null;\n    /** Elements that can be scrolled while the user is dragging. */\n    this._scrollableElements = [];\n    /** Direction of the list's layout. */\n    this._direction = 'ltr';\n    /** Starts the interval that'll auto-scroll the element. */\n    this._startScrollInterval = () => {\n      this._stopScrolling();\n      interval(0, animationFrameScheduler).pipe(takeUntil(this._stopScrollTimers)).subscribe(() => {\n        const node = this._scrollNode;\n        const scrollStep = this.autoScrollStep;\n        if (this._verticalScrollDirection === AutoScrollVerticalDirection.UP) {\n          node.scrollBy(0, -scrollStep);\n        } else if (this._verticalScrollDirection === AutoScrollVerticalDirection.DOWN) {\n          node.scrollBy(0, scrollStep);\n        }\n        if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.LEFT) {\n          node.scrollBy(-scrollStep, 0);\n        } else if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.RIGHT) {\n          node.scrollBy(scrollStep, 0);\n        }\n      });\n    };\n    const coercedElement = this.element = coerceElement(element);\n    this._document = _document;\n    this.withOrientation('vertical').withElementContainer(coercedElement);\n    _dragDropRegistry.registerDropContainer(this);\n    this._parentPositions = new ParentPositionTracker(_document);\n  }\n  /** Removes the drop list functionality from the DOM element. */\n  dispose() {\n    this._stopScrolling();\n    this._stopScrollTimers.complete();\n    this._viewportScrollSubscription.unsubscribe();\n    this.beforeStarted.complete();\n    this.entered.complete();\n    this.exited.complete();\n    this.dropped.complete();\n    this.sorted.complete();\n    this.receivingStarted.complete();\n    this.receivingStopped.complete();\n    this._activeSiblings.clear();\n    this._scrollNode = null;\n    this._parentPositions.clear();\n    this._dragDropRegistry.removeDropContainer(this);\n  }\n  /** Whether an item from this list is currently being dragged. */\n  isDragging() {\n    return this._isDragging;\n  }\n  /** Starts dragging an item. */\n  start() {\n    this._draggingStarted();\n    this._notifyReceivingSiblings();\n  }\n  /**\n   * Attempts to move an item into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item, pointerX, pointerY, index) {\n    this._draggingStarted();\n    // If sorting is disabled, we want the item to return to its starting\n    // position if the user is returning it to its initial container.\n    if (index == null && this.sortingDisabled) {\n      index = this._draggables.indexOf(item);\n    }\n    this._sortStrategy.enter(item, pointerX, pointerY, index);\n    // Note that this usually happens inside `_draggingStarted` as well, but the dimensions\n    // can change when the sort strategy moves the item around inside `enter`.\n    this._cacheParentPositions();\n    // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n    this._notifyReceivingSiblings();\n    this.entered.next({\n      item,\n      container: this,\n      currentIndex: this.getItemIndex(item)\n    });\n  }\n  /**\n   * Removes an item from the container after it was dragged into another container by the user.\n   * @param item Item that was dragged out.\n   */\n  exit(item) {\n    this._reset();\n    this.exited.next({\n      item,\n      container: this\n    });\n  }\n  /**\n   * Drops an item into this container.\n   * @param item Item being dropped into the container.\n   * @param currentIndex Index at which the item should be inserted.\n   * @param previousIndex Index of the item when dragging started.\n   * @param previousContainer Container from which the item got dragged in.\n   * @param isPointerOverContainer Whether the user's pointer was over the\n   *    container when the item was dropped.\n   * @param distance Distance the user has dragged since the start of the dragging sequence.\n   * @param event Event that triggered the dropping sequence.\n   *\n   * @breaking-change 15.0.0 `previousIndex` and `event` parameters to become required.\n   */\n  drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint, event = {}) {\n    this._reset();\n    this.dropped.next({\n      item,\n      currentIndex,\n      previousIndex,\n      container: this,\n      previousContainer,\n      isPointerOverContainer,\n      distance,\n      dropPoint,\n      event\n    });\n  }\n  /**\n   * Sets the draggable items that are a part of this list.\n   * @param items Items that are a part of this list.\n   */\n  withItems(items) {\n    const previousItems = this._draggables;\n    this._draggables = items;\n    items.forEach(item => item._withDropContainer(this));\n    if (this.isDragging()) {\n      const draggedItems = previousItems.filter(item => item.isDragging());\n      // If all of the items being dragged were removed\n      // from the list, abort the current drag sequence.\n      if (draggedItems.every(item => items.indexOf(item) === -1)) {\n        this._reset();\n      } else {\n        this._sortStrategy.withItems(this._draggables);\n      }\n    }\n    return this;\n  }\n  /** Sets the layout direction of the drop list. */\n  withDirection(direction) {\n    this._direction = direction;\n    if (this._sortStrategy instanceof SingleAxisSortStrategy) {\n      this._sortStrategy.direction = direction;\n    }\n    return this;\n  }\n  /**\n   * Sets the containers that are connected to this one. When two or more containers are\n   * connected, the user will be allowed to transfer items between them.\n   * @param connectedTo Other containers that the current containers should be connected to.\n   */\n  connectedTo(connectedTo) {\n    this._siblings = connectedTo.slice();\n    return this;\n  }\n  /**\n   * Sets the orientation of the container.\n   * @param orientation New orientation for the container.\n   */\n  withOrientation(orientation) {\n    if (orientation === 'mixed') {\n      this._sortStrategy = new MixedSortStrategy(this._document, this._dragDropRegistry);\n    } else {\n      const strategy = new SingleAxisSortStrategy(this._dragDropRegistry);\n      strategy.direction = this._direction;\n      strategy.orientation = orientation;\n      this._sortStrategy = strategy;\n    }\n    this._sortStrategy.withElementContainer(this._container);\n    this._sortStrategy.withSortPredicate((index, item) => this.sortPredicate(index, item, this));\n    return this;\n  }\n  /**\n   * Sets which parent elements are can be scrolled while the user is dragging.\n   * @param elements Elements that can be scrolled.\n   */\n  withScrollableParents(elements) {\n    const element = this._container;\n    // We always allow the current element to be scrollable\n    // so we need to ensure that it's in the array.\n    this._scrollableElements = elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n    return this;\n  }\n  /**\n   * Configures the drop list so that a different element is used as the container for the\n   * dragged items. This is useful for the cases when one might not have control over the\n   * full DOM that sets up the dragging.\n   * Note that the alternate container needs to be a descendant of the drop list.\n   * @param container New element container to be assigned.\n   */\n  withElementContainer(container) {\n    if (container === this._container) {\n      return this;\n    }\n    const element = coerceElement(this.element);\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && container !== element && !element.contains(container)) {\n      throw new Error('Invalid DOM structure for drop list. Alternate container element must be a descendant of the drop list.');\n    }\n    const oldContainerIndex = this._scrollableElements.indexOf(this._container);\n    const newContainerIndex = this._scrollableElements.indexOf(container);\n    if (oldContainerIndex > -1) {\n      this._scrollableElements.splice(oldContainerIndex, 1);\n    }\n    if (newContainerIndex > -1) {\n      this._scrollableElements.splice(newContainerIndex, 1);\n    }\n    if (this._sortStrategy) {\n      this._sortStrategy.withElementContainer(container);\n    }\n    this._cachedShadowRoot = null;\n    this._scrollableElements.unshift(container);\n    this._container = container;\n    return this;\n  }\n  /** Gets the scrollable parents that are registered with this drop container. */\n  getScrollableParents() {\n    return this._scrollableElements;\n  }\n  /**\n   * Figures out the index of an item in the container.\n   * @param item Item whose index should be determined.\n   */\n  getItemIndex(item) {\n    return this._isDragging ? this._sortStrategy.getItemIndex(item) : this._draggables.indexOf(item);\n  }\n  /**\n   * Whether the list is able to receive the item that\n   * is currently being dragged inside a connected drop list.\n   */\n  isReceiving() {\n    return this._activeSiblings.size > 0;\n  }\n  /**\n   * Sorts an item inside the container based on its position.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  _sortItem(item, pointerX, pointerY, pointerDelta) {\n    // Don't sort the item if sorting is disabled or it's out of range.\n    if (this.sortingDisabled || !this._domRect || !isPointerNearDomRect(this._domRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n      return;\n    }\n    const result = this._sortStrategy.sort(item, pointerX, pointerY, pointerDelta);\n    if (result) {\n      this.sorted.next({\n        previousIndex: result.previousIndex,\n        currentIndex: result.currentIndex,\n        container: this,\n        item\n      });\n    }\n  }\n  /**\n   * Checks whether the user's pointer is close to the edges of either the\n   * viewport or the drop list and starts the auto-scroll sequence.\n   * @param pointerX User's pointer position along the x axis.\n   * @param pointerY User's pointer position along the y axis.\n   */\n  _startScrollingIfNecessary(pointerX, pointerY) {\n    if (this.autoScrollDisabled) {\n      return;\n    }\n    let scrollNode;\n    let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n    let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n    // Check whether we should start scrolling any of the parent containers.\n    this._parentPositions.positions.forEach((position, element) => {\n      // We have special handling for the `document` below. Also this would be\n      // nicer with a  for...of loop, but it requires changing a compiler flag.\n      if (element === this._document || !position.clientRect || scrollNode) {\n        return;\n      }\n      if (isPointerNearDomRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n        [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, this._direction, pointerX, pointerY);\n        if (verticalScrollDirection || horizontalScrollDirection) {\n          scrollNode = element;\n        }\n      }\n    });\n    // Otherwise check if we can start scrolling the viewport.\n    if (!verticalScrollDirection && !horizontalScrollDirection) {\n      const {\n        width,\n        height\n      } = this._viewportRuler.getViewportSize();\n      const domRect = {\n        width,\n        height,\n        top: 0,\n        right: width,\n        bottom: height,\n        left: 0\n      };\n      verticalScrollDirection = getVerticalScrollDirection(domRect, pointerY);\n      horizontalScrollDirection = getHorizontalScrollDirection(domRect, pointerX);\n      scrollNode = window;\n    }\n    if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection || horizontalScrollDirection !== this._horizontalScrollDirection || scrollNode !== this._scrollNode)) {\n      this._verticalScrollDirection = verticalScrollDirection;\n      this._horizontalScrollDirection = horizontalScrollDirection;\n      this._scrollNode = scrollNode;\n      if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n        this._ngZone.runOutsideAngular(this._startScrollInterval);\n      } else {\n        this._stopScrolling();\n      }\n    }\n  }\n  /** Stops any currently-running auto-scroll sequences. */\n  _stopScrolling() {\n    this._stopScrollTimers.next();\n  }\n  /** Starts the dragging sequence within the list. */\n  _draggingStarted() {\n    const styles = this._container.style;\n    this.beforeStarted.next();\n    this._isDragging = true;\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n    // Prevent the check from running on apps not using an alternate container. Ideally we\n    // would always run it, but introducing it at this stage would be a breaking change.\n    this._container !== coerceElement(this.element)) {\n      for (const drag of this._draggables) {\n        if (!drag.isDragging() && drag.getVisibleElement().parentNode !== this._container) {\n          throw new Error('Invalid DOM structure for drop list. All items must be placed directly inside of the element container.');\n        }\n      }\n    }\n    // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n    // scrolling. The browser seems to round the value based on the snapping points which means\n    // that we can't increment/decrement the scroll position.\n    this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n    styles.scrollSnapType = styles.msScrollSnapType = 'none';\n    this._sortStrategy.start(this._draggables);\n    this._cacheParentPositions();\n    this._viewportScrollSubscription.unsubscribe();\n    this._listenToScrollEvents();\n  }\n  /** Caches the positions of the configured scrollable parents. */\n  _cacheParentPositions() {\n    this._parentPositions.cache(this._scrollableElements);\n    // The list element is always in the `scrollableElements`\n    // so we can take advantage of the cached `DOMRect`.\n    this._domRect = this._parentPositions.positions.get(this._container).clientRect;\n  }\n  /** Resets the container to its initial state. */\n  _reset() {\n    this._isDragging = false;\n    const styles = this._container.style;\n    styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n    this._siblings.forEach(sibling => sibling._stopReceiving(this));\n    this._sortStrategy.reset();\n    this._stopScrolling();\n    this._viewportScrollSubscription.unsubscribe();\n    this._parentPositions.clear();\n  }\n  /**\n   * Checks whether the user's pointer is positioned over the container.\n   * @param x Pointer position along the X axis.\n   * @param y Pointer position along the Y axis.\n   */\n  _isOverContainer(x, y) {\n    return this._domRect != null && isInsideClientRect(this._domRect, x, y);\n  }\n  /**\n   * Figures out whether an item should be moved into a sibling\n   * drop container, based on its current position.\n   * @param item Drag item that is being moved.\n   * @param x Position of the item along the X axis.\n   * @param y Position of the item along the Y axis.\n   */\n  _getSiblingContainerFromPosition(item, x, y) {\n    return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n  }\n  /**\n   * Checks whether the drop list can receive the passed-in item.\n   * @param item Item that is being dragged into the list.\n   * @param x Position of the item along the X axis.\n   * @param y Position of the item along the Y axis.\n   */\n  _canReceive(item, x, y) {\n    if (!this._domRect || !isInsideClientRect(this._domRect, x, y) || !this.enterPredicate(item, this)) {\n      return false;\n    }\n    const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n    // If there's no element at the pointer position, then\n    // the client rect is probably scrolled out of the view.\n    if (!elementFromPoint) {\n      return false;\n    }\n    // The `DOMRect`, that we're using to find the container over which the user is\n    // hovering, doesn't give us any information on whether the element has been scrolled\n    // out of the view or whether it's overlapping with other containers. This means that\n    // we could end up transferring the item into a container that's invisible or is positioned\n    // below another one. We use the result from `elementFromPoint` to get the top-most element\n    // at the pointer position and to find whether it's one of the intersecting drop containers.\n    return elementFromPoint === this._container || this._container.contains(elementFromPoint);\n  }\n  /**\n   * Called by one of the connected drop lists when a dragging sequence has started.\n   * @param sibling Sibling in which dragging has started.\n   */\n  _startReceiving(sibling, items) {\n    const activeSiblings = this._activeSiblings;\n    if (!activeSiblings.has(sibling) && items.every(item => {\n      // Note that we have to add an exception to the `enterPredicate` for items that started off\n      // in this drop list. The drag ref has logic that allows an item to return to its initial\n      // container, if it has left the initial container and none of the connected containers\n      // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n      return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n    })) {\n      activeSiblings.add(sibling);\n      this._cacheParentPositions();\n      this._listenToScrollEvents();\n      this.receivingStarted.next({\n        initiator: sibling,\n        receiver: this,\n        items\n      });\n    }\n  }\n  /**\n   * Called by a connected drop list when dragging has stopped.\n   * @param sibling Sibling whose dragging has stopped.\n   */\n  _stopReceiving(sibling) {\n    this._activeSiblings.delete(sibling);\n    this._viewportScrollSubscription.unsubscribe();\n    this.receivingStopped.next({\n      initiator: sibling,\n      receiver: this\n    });\n  }\n  /**\n   * Starts listening to scroll events on the viewport.\n   * Used for updating the internal state of the list.\n   */\n  _listenToScrollEvents() {\n    this._viewportScrollSubscription = this._dragDropRegistry.scrolled(this._getShadowRoot()).subscribe(event => {\n      if (this.isDragging()) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n          this._sortStrategy.updateOnScroll(scrollDifference.top, scrollDifference.left);\n        }\n      } else if (this.isReceiving()) {\n        this._cacheParentPositions();\n      }\n    });\n  }\n  /**\n   * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n   * than saving it in property directly on init, because we want to resolve it as late as possible\n   * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n   * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n   */\n  _getShadowRoot() {\n    if (!this._cachedShadowRoot) {\n      const shadowRoot = _getShadowRoot(this._container);\n      this._cachedShadowRoot = shadowRoot || this._document;\n    }\n    return this._cachedShadowRoot;\n  }\n  /** Notifies any siblings that may potentially receive the item. */\n  _notifyReceivingSiblings() {\n    const draggedItems = this._sortStrategy.getActiveItemsSnapshot().filter(item => item.isDragging());\n    this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n  }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n  const {\n    top,\n    bottom,\n    height\n  } = clientRect;\n  const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n  if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n    return AutoScrollVerticalDirection.UP;\n  } else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n    return AutoScrollVerticalDirection.DOWN;\n  }\n  return AutoScrollVerticalDirection.NONE;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n  const {\n    left,\n    right,\n    width\n  } = clientRect;\n  const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n  if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n    return AutoScrollHorizontalDirection.LEFT;\n  } else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n    return AutoScrollHorizontalDirection.RIGHT;\n  }\n  return AutoScrollHorizontalDirection.NONE;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param direction Layout direction of the drop list.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, direction, pointerX, pointerY) {\n  const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n  const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n  let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n  let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n  // Note that we here we do some extra checks for whether the element is actually scrollable in\n  // a certain direction and we only assign the scroll direction if it is. We do this so that we\n  // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n  // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n  if (computedVertical) {\n    const scrollTop = element.scrollTop;\n    if (computedVertical === AutoScrollVerticalDirection.UP) {\n      if (scrollTop > 0) {\n        verticalScrollDirection = AutoScrollVerticalDirection.UP;\n      }\n    } else if (element.scrollHeight - scrollTop > element.clientHeight) {\n      verticalScrollDirection = AutoScrollVerticalDirection.DOWN;\n    }\n  }\n  if (computedHorizontal) {\n    const scrollLeft = element.scrollLeft;\n    if (direction === 'rtl') {\n      if (computedHorizontal === AutoScrollHorizontalDirection.RIGHT) {\n        // In RTL `scrollLeft` will be negative when scrolled.\n        if (scrollLeft < 0) {\n          horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n        }\n      } else if (element.scrollWidth + scrollLeft > element.clientWidth) {\n        horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n      }\n    } else {\n      if (computedHorizontal === AutoScrollHorizontalDirection.LEFT) {\n        if (scrollLeft > 0) {\n          horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n        }\n      } else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n        horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n      }\n    }\n  }\n  return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: false,\n  capture: true\n});\n/** Keeps track of the apps currently containing drag items. */\nconst activeApps = /*#__PURE__*/new Set();\n/**\n * Component used to load the drag&drop reset styles.\n * @docs-private\n */\nlet _ResetsLoader = /*#__PURE__*/(() => {\n  class _ResetsLoader {\n    static {\n      this.ɵfac = function _ResetsLoader_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || _ResetsLoader)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: _ResetsLoader,\n        selectors: [[\"ng-component\"]],\n        hostAttrs: [\"cdk-drag-resets-container\", \"\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 0,\n        vars: 0,\n        template: function _ResetsLoader_Template(rf, ctx) {},\n        styles: [\"@layer cdk-resets{.cdk-drag-preview{background:none;border:none;padding:0;color:inherit}}.cdk-drag-placeholder *,.cdk-drag-preview *{pointer-events:none !important}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return _ResetsLoader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n// TODO(crisbeto): remove generics when making breaking changes.\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\nlet DragDropRegistry = /*#__PURE__*/(() => {\n  class DragDropRegistry {\n    constructor(_ngZone, _document) {\n      this._ngZone = _ngZone;\n      this._appRef = inject(ApplicationRef);\n      this._environmentInjector = inject(EnvironmentInjector);\n      /** Registered drop container instances. */\n      this._dropInstances = new Set();\n      /** Registered drag item instances. */\n      this._dragInstances = new Set();\n      /** Drag item instances that are currently being dragged. */\n      this._activeDragInstances = signal([]);\n      /** Keeps track of the event listeners that we've bound to the `document`. */\n      this._globalListeners = new Map();\n      /**\n       * Predicate function to check if an item is being dragged.  Moved out into a property,\n       * because it'll be called a lot and we don't want to create a new function every time.\n       */\n      this._draggingPredicate = item => item.isDragging();\n      /**\n       * Emits the `touchmove` or `mousemove` events that are dispatched\n       * while the user is dragging a drag item instance.\n       */\n      this.pointerMove = new Subject();\n      /**\n       * Emits the `touchend` or `mouseup` events that are dispatched\n       * while the user is dragging a drag item instance.\n       */\n      this.pointerUp = new Subject();\n      /**\n       * Emits when the viewport has been scrolled while the user is dragging an item.\n       * @deprecated To be turned into a private member. Use the `scrolled` method instead.\n       * @breaking-change 13.0.0\n       */\n      this.scroll = new Subject();\n      /**\n       * Event listener that will prevent the default browser action while the user is dragging.\n       * @param event Event whose default action should be prevented.\n       */\n      this._preventDefaultWhileDragging = event => {\n        if (this._activeDragInstances().length > 0) {\n          event.preventDefault();\n        }\n      };\n      /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n      this._persistentTouchmoveListener = event => {\n        if (this._activeDragInstances().length > 0) {\n          // Note that we only want to prevent the default action after dragging has actually started.\n          // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n          // but it could be pushed back if the user has set up a drag delay or threshold.\n          if (this._activeDragInstances().some(this._draggingPredicate)) {\n            event.preventDefault();\n          }\n          this.pointerMove.next(event);\n        }\n      };\n      this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n      if (!this._dropInstances.has(drop)) {\n        this._dropInstances.add(drop);\n      }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n      this._dragInstances.add(drag);\n      // The `touchmove` event gets bound once, ahead of time, because WebKit\n      // won't preventDefault on a dynamically-added `touchmove` listener.\n      // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n      if (this._dragInstances.size === 1) {\n        this._ngZone.runOutsideAngular(() => {\n          // The event handler has to be explicitly active,\n          // because newer browsers make it passive by default.\n          this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        });\n      }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n      this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n      this._dragInstances.delete(drag);\n      this.stopDragging(drag);\n      if (this._dragInstances.size === 0) {\n        this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n      }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n      // Do not process the same drag twice to avoid memory leaks and redundant listeners\n      if (this._activeDragInstances().indexOf(drag) > -1) {\n        return;\n      }\n      this._loadResets();\n      this._activeDragInstances.update(instances => [...instances, drag]);\n      if (this._activeDragInstances().length === 1) {\n        const isTouchEvent = event.type.startsWith('touch');\n        // We explicitly bind __active__ listeners here, because newer browsers will default to\n        // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n        // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n        this._globalListeners.set(isTouchEvent ? 'touchend' : 'mouseup', {\n          handler: e => this.pointerUp.next(e),\n          options: true\n        }).set('scroll', {\n          handler: e => this.scroll.next(e),\n          // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n          // the document. See https://github.com/angular/components/issues/17144.\n          options: true\n        })\n        // Preventing the default action on `mousemove` isn't enough to disable text selection\n        // on Safari so we need to prevent the selection event as well. Alternatively this can\n        // be done by setting `user-select: none` on the `body`, however it has causes a style\n        // recalculation which can be expensive on pages with a lot of elements.\n        .set('selectstart', {\n          handler: this._preventDefaultWhileDragging,\n          options: activeCapturingEventOptions\n        });\n        // We don't have to bind a move event for touch drag sequences, because\n        // we already have a persistent global one bound from `registerDragItem`.\n        if (!isTouchEvent) {\n          this._globalListeners.set('mousemove', {\n            handler: e => this.pointerMove.next(e),\n            options: activeCapturingEventOptions\n          });\n        }\n        this._ngZone.runOutsideAngular(() => {\n          this._globalListeners.forEach((config, name) => {\n            this._document.addEventListener(name, config.handler, config.options);\n          });\n        });\n      }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n      this._activeDragInstances.update(instances => {\n        const index = instances.indexOf(drag);\n        if (index > -1) {\n          instances.splice(index, 1);\n          return [...instances];\n        }\n        return instances;\n      });\n      if (this._activeDragInstances().length === 0) {\n        this._clearGlobalListeners();\n      }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n      return this._activeDragInstances().indexOf(drag) > -1;\n    }\n    /**\n     * Gets a stream that will emit when any element on the page is scrolled while an item is being\n     * dragged.\n     * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n     *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n     *   be used to include an additional top-level listener at the shadow root level.\n     */\n    scrolled(shadowRoot) {\n      const streams = [this.scroll];\n      if (shadowRoot && shadowRoot !== this._document) {\n        // Note that this is basically the same as `fromEvent` from rxjs, but we do it ourselves,\n        // because we want to guarantee that the event is bound outside of the `NgZone`. With\n        // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n        streams.push(new Observable(observer => {\n          return this._ngZone.runOutsideAngular(() => {\n            const eventOptions = true;\n            const callback = event => {\n              if (this._activeDragInstances().length) {\n                observer.next(event);\n              }\n            };\n            shadowRoot.addEventListener('scroll', callback, eventOptions);\n            return () => {\n              shadowRoot.removeEventListener('scroll', callback, eventOptions);\n            };\n          });\n        }));\n      }\n      return merge(...streams);\n    }\n    ngOnDestroy() {\n      this._dragInstances.forEach(instance => this.removeDragItem(instance));\n      this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n      this._clearGlobalListeners();\n      this.pointerMove.complete();\n      this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n      this._globalListeners.forEach((config, name) => {\n        this._document.removeEventListener(name, config.handler, config.options);\n      });\n      this._globalListeners.clear();\n    }\n    // TODO(crisbeto): abstract this away into something reusable.\n    /** Loads the CSS resets needed for the module to work correctly. */\n    _loadResets() {\n      if (!activeApps.has(this._appRef)) {\n        activeApps.add(this._appRef);\n        const componentRef = createComponent(_ResetsLoader, {\n          environmentInjector: this._environmentInjector\n        });\n        this._appRef.onDestroy(() => {\n          activeApps.delete(this._appRef);\n          if (activeApps.size === 0) {\n            componentRef.destroy();\n          }\n        });\n      }\n    }\n    static {\n      this.ɵfac = function DragDropRegistry_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || DragDropRegistry)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: DragDropRegistry,\n        factory: DragDropRegistry.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return DragDropRegistry;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n  dragStartThreshold: 5,\n  pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nlet DragDrop = /*#__PURE__*/(() => {\n  class DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n      this._document = _document;\n      this._ngZone = _ngZone;\n      this._viewportRuler = _viewportRuler;\n      this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n      return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n      return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n    static {\n      this.ɵfac = function DragDrop_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || DragDrop)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.ViewportRuler), i0.ɵɵinject(DragDropRegistry));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: DragDrop,\n        factory: DragDrop.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return DragDrop;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = /*#__PURE__*/new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n  if (node.nodeType !== 1) {\n    throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n  }\n}\n\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = /*#__PURE__*/new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nlet CdkDragHandle = /*#__PURE__*/(() => {\n  class CdkDragHandle {\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n      this._stateChanges.next(this);\n    }\n    constructor(element, _parentDrag) {\n      this.element = element;\n      this._parentDrag = _parentDrag;\n      /** Emits when the state of the handle has changed. */\n      this._stateChanges = new Subject();\n      this._disabled = false;\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        assertElementNode(element.nativeElement, 'cdkDragHandle');\n      }\n      _parentDrag?._addHandle(this);\n    }\n    ngOnDestroy() {\n      this._parentDrag?._removeHandle(this);\n      this._stateChanges.complete();\n    }\n    static {\n      this.ɵfac = function CdkDragHandle_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkDragHandle)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 12));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkDragHandle,\n        selectors: [[\"\", \"cdkDragHandle\", \"\"]],\n        hostAttrs: [1, \"cdk-drag-handle\"],\n        inputs: {\n          disabled: [2, \"cdkDragHandleDisabled\", \"disabled\", booleanAttribute]\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CDK_DRAG_HANDLE,\n          useExisting: CdkDragHandle\n        }]), i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return CdkDragHandle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = /*#__PURE__*/new InjectionToken('CDK_DRAG_CONFIG');\nconst DRAG_HOST_CLASS = 'cdk-drag';\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = /*#__PURE__*/new InjectionToken('CdkDropList');\n/** Element that can be moved inside a CdkDropList container. */\nlet CdkDrag = /*#__PURE__*/(() => {\n  class CdkDrag {\n    static {\n      this._dragInstances = [];\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n      return this._disabled || this.dropContainer && this.dropContainer.disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n      this._dragRef.disabled = this._disabled;\n    }\n    constructor( /** Element that the draggable is attached to. */\n    element, /** Droppable container that the draggable is a part of. */\n    dropContainer,\n    /**\n     * @deprecated `_document` parameter no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle, _parentDrag) {\n      this.element = element;\n      this.dropContainer = dropContainer;\n      this._ngZone = _ngZone;\n      this._viewContainerRef = _viewContainerRef;\n      this._dir = _dir;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._selfHandle = _selfHandle;\n      this._parentDrag = _parentDrag;\n      this._destroyed = new Subject();\n      this._handles = new BehaviorSubject([]);\n      /**\n       * If the parent of the dragged element has a `scale` transform, it can throw off the\n       * positioning when the user starts dragging. Use this input to notify the CDK of the scale.\n       */\n      this.scale = 1;\n      /** Emits when the user starts dragging the item. */\n      this.started = new EventEmitter();\n      /** Emits when the user has released a drag item, before any animations have started. */\n      this.released = new EventEmitter();\n      /** Emits when the user stops dragging an item in the container. */\n      this.ended = new EventEmitter();\n      /** Emits when the user has moved the item into a new container. */\n      this.entered = new EventEmitter();\n      /** Emits when the user removes the item its container by dragging it into another container. */\n      this.exited = new EventEmitter();\n      /** Emits when the user drops the item inside a container. */\n      this.dropped = new EventEmitter();\n      /**\n       * Emits as the user is dragging the item. Use with caution,\n       * because this event will fire for every pixel that the user has dragged.\n       */\n      this.moved = new Observable(observer => {\n        const subscription = this._dragRef.moved.pipe(map(movedEvent => ({\n          source: this,\n          pointerPosition: movedEvent.pointerPosition,\n          event: movedEvent.event,\n          delta: movedEvent.delta,\n          distance: movedEvent.distance\n        }))).subscribe(observer);\n        return () => {\n          subscription.unsubscribe();\n        };\n      });\n      this._injector = inject(Injector);\n      this._dragRef = dragDrop.createDrag(element, {\n        dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n        pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ? config.pointerDirectionChangeThreshold : 5,\n        zIndex: config?.zIndex\n      });\n      this._dragRef.data = this;\n      // We have to keep track of the drag instances in order to be able to match an element to\n      // a drag instance. We can't go through the global registry of `DragRef`, because the root\n      // element could be different.\n      CdkDrag._dragInstances.push(this);\n      if (config) {\n        this._assignDefaults(config);\n      }\n      // Note that usually the container is assigned when the drop list is picks up the item, but in\n      // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n      // where there are no items on the first change detection pass, but the items get picked up as\n      // soon as the user triggers another pass by dragging. This is a problem, because the item would\n      // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n      // is too late since the two modes save different kinds of information. We work around it by\n      // assigning the drop container both from here and the list.\n      if (dropContainer) {\n        this._dragRef._withDropContainer(dropContainer._dropListRef);\n        dropContainer.addItem(this);\n        // The drop container reads this so we need to sync it here.\n        dropContainer._dropListRef.beforeStarted.pipe(takeUntil(this._destroyed)).subscribe(() => {\n          this._dragRef.scale = this.scale;\n        });\n      }\n      this._syncInputs(this._dragRef);\n      this._handleEvents(this._dragRef);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n      return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n      return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n      this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n      return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n      this._dragRef.setFreeDragPosition(value);\n    }\n    ngAfterViewInit() {\n      // We need to wait until after render, in order for the reference\n      // element to be in the proper place in the DOM. This is mostly relevant\n      // for draggable elements inside portals since they get stamped out in\n      // their original DOM position, and then they get transferred to the portal.\n      afterNextRender(() => {\n        this._updateRootElement();\n        this._setupHandlesListener();\n        this._dragRef.scale = this.scale;\n        if (this.freeDragPosition) {\n          this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n      }, {\n        injector: this._injector\n      });\n    }\n    ngOnChanges(changes) {\n      const rootSelectorChange = changes['rootElementSelector'];\n      const positionChange = changes['freeDragPosition'];\n      // We don't have to react to the first change since it's being\n      // handled in the `afterNextRender` queued up in the constructor.\n      if (rootSelectorChange && !rootSelectorChange.firstChange) {\n        this._updateRootElement();\n      }\n      // Scale affects the free drag position so we need to sync it up here.\n      this._dragRef.scale = this.scale;\n      // Skip the first change since it's being handled in the `afterNextRender` queued up in the\n      // constructor.\n      if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n        this._dragRef.setFreeDragPosition(this.freeDragPosition);\n      }\n    }\n    ngOnDestroy() {\n      if (this.dropContainer) {\n        this.dropContainer.removeItem(this);\n      }\n      const index = CdkDrag._dragInstances.indexOf(this);\n      if (index > -1) {\n        CdkDrag._dragInstances.splice(index, 1);\n      }\n      // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n      this._ngZone.runOutsideAngular(() => {\n        this._handles.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n      });\n    }\n    _addHandle(handle) {\n      const handles = this._handles.getValue();\n      handles.push(handle);\n      this._handles.next(handles);\n    }\n    _removeHandle(handle) {\n      const handles = this._handles.getValue();\n      const index = handles.indexOf(handle);\n      if (index > -1) {\n        handles.splice(index, 1);\n        this._handles.next(handles);\n      }\n    }\n    _setPreviewTemplate(preview) {\n      this._previewTemplate = preview;\n    }\n    _resetPreviewTemplate(preview) {\n      if (preview === this._previewTemplate) {\n        this._previewTemplate = null;\n      }\n    }\n    _setPlaceholderTemplate(placeholder) {\n      this._placeholderTemplate = placeholder;\n    }\n    _resetPlaceholderTemplate(placeholder) {\n      if (placeholder === this._placeholderTemplate) {\n        this._placeholderTemplate = null;\n      }\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n      const element = this.element.nativeElement;\n      let rootElement = element;\n      if (this.rootElementSelector) {\n        rootElement = element.closest !== undefined ? element.closest(this.rootElementSelector) :\n        // Comment tag doesn't have closest method, so use parent's one.\n        element.parentElement?.closest(this.rootElementSelector);\n      }\n      if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        assertElementNode(rootElement, 'cdkDrag');\n      }\n      this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n      const boundary = this.boundaryElement;\n      if (!boundary) {\n        return null;\n      }\n      if (typeof boundary === 'string') {\n        return this.element.nativeElement.closest(boundary);\n      }\n      return coerceElement(boundary);\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n      ref.beforeStarted.subscribe(() => {\n        if (!ref.isDragging()) {\n          const dir = this._dir;\n          const dragStartDelay = this.dragStartDelay;\n          const placeholder = this._placeholderTemplate ? {\n            template: this._placeholderTemplate.templateRef,\n            context: this._placeholderTemplate.data,\n            viewContainer: this._viewContainerRef\n          } : null;\n          const preview = this._previewTemplate ? {\n            template: this._previewTemplate.templateRef,\n            context: this._previewTemplate.data,\n            matchSize: this._previewTemplate.matchSize,\n            viewContainer: this._viewContainerRef\n          } : null;\n          ref.disabled = this.disabled;\n          ref.lockAxis = this.lockAxis;\n          ref.scale = this.scale;\n          ref.dragStartDelay = typeof dragStartDelay === 'object' && dragStartDelay ? dragStartDelay : coerceNumberProperty(dragStartDelay);\n          ref.constrainPosition = this.constrainPosition;\n          ref.previewClass = this.previewClass;\n          ref.withBoundaryElement(this._getBoundaryElement()).withPlaceholderTemplate(placeholder).withPreviewTemplate(preview).withPreviewContainer(this.previewContainer || 'global');\n          if (dir) {\n            ref.withDirection(dir.value);\n          }\n        }\n      });\n      // This only needs to be resolved once.\n      ref.beforeStarted.pipe(take(1)).subscribe(() => {\n        // If we managed to resolve a parent through DI, use it.\n        if (this._parentDrag) {\n          ref.withParent(this._parentDrag._dragRef);\n          return;\n        }\n        // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n        // the item was projected into another item by something like `ngTemplateOutlet`.\n        let parent = this.element.nativeElement.parentElement;\n        while (parent) {\n          if (parent.classList.contains(DRAG_HOST_CLASS)) {\n            ref.withParent(CdkDrag._dragInstances.find(drag => {\n              return drag.element.nativeElement === parent;\n            })?._dragRef || null);\n            break;\n          }\n          parent = parent.parentElement;\n        }\n      });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n      ref.started.subscribe(startEvent => {\n        this.started.emit({\n          source: this,\n          event: startEvent.event\n        });\n        // Since all of these events run outside of change detection,\n        // we need to ensure that everything is marked correctly.\n        this._changeDetectorRef.markForCheck();\n      });\n      ref.released.subscribe(releaseEvent => {\n        this.released.emit({\n          source: this,\n          event: releaseEvent.event\n        });\n      });\n      ref.ended.subscribe(endEvent => {\n        this.ended.emit({\n          source: this,\n          distance: endEvent.distance,\n          dropPoint: endEvent.dropPoint,\n          event: endEvent.event\n        });\n        // Since all of these events run outside of change detection,\n        // we need to ensure that everything is marked correctly.\n        this._changeDetectorRef.markForCheck();\n      });\n      ref.entered.subscribe(enterEvent => {\n        this.entered.emit({\n          container: enterEvent.container.data,\n          item: this,\n          currentIndex: enterEvent.currentIndex\n        });\n      });\n      ref.exited.subscribe(exitEvent => {\n        this.exited.emit({\n          container: exitEvent.container.data,\n          item: this\n        });\n      });\n      ref.dropped.subscribe(dropEvent => {\n        this.dropped.emit({\n          previousIndex: dropEvent.previousIndex,\n          currentIndex: dropEvent.currentIndex,\n          previousContainer: dropEvent.previousContainer.data,\n          container: dropEvent.container.data,\n          isPointerOverContainer: dropEvent.isPointerOverContainer,\n          item: this,\n          distance: dropEvent.distance,\n          dropPoint: dropEvent.dropPoint,\n          event: dropEvent.event\n        });\n      });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n      const {\n        lockAxis,\n        dragStartDelay,\n        constrainPosition,\n        previewClass,\n        boundaryElement,\n        draggingDisabled,\n        rootElementSelector,\n        previewContainer\n      } = config;\n      this.disabled = draggingDisabled == null ? false : draggingDisabled;\n      this.dragStartDelay = dragStartDelay || 0;\n      if (lockAxis) {\n        this.lockAxis = lockAxis;\n      }\n      if (constrainPosition) {\n        this.constrainPosition = constrainPosition;\n      }\n      if (previewClass) {\n        this.previewClass = previewClass;\n      }\n      if (boundaryElement) {\n        this.boundaryElement = boundaryElement;\n      }\n      if (rootElementSelector) {\n        this.rootElementSelector = rootElementSelector;\n      }\n      if (previewContainer) {\n        this.previewContainer = previewContainer;\n      }\n    }\n    /** Sets up the listener that syncs the handles with the drag ref. */\n    _setupHandlesListener() {\n      // Listen for any newly-added handles.\n      this._handles.pipe(\n      // Sync the new handles with the DragRef.\n      tap(handles => {\n        const handleElements = handles.map(handle => handle.element);\n        // Usually handles are only allowed to be a descendant of the drag element, but if\n        // the consumer defined a different drag root, we should allow the drag element\n        // itself to be a handle too.\n        if (this._selfHandle && this.rootElementSelector) {\n          handleElements.push(this.element);\n        }\n        this._dragRef.withHandles(handleElements);\n      }),\n      // Listen if the state of any of the handles changes.\n      switchMap(handles => {\n        return merge(...handles.map(item => item._stateChanges.pipe(startWith(item))));\n      }), takeUntil(this._destroyed)).subscribe(handleInstance => {\n        // Enabled/disable the handle that changed in the DragRef.\n        const dragRef = this._dragRef;\n        const handle = handleInstance.element.nativeElement;\n        handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n      });\n    }\n    static {\n      this.ɵfac = function CdkDrag_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkDrag)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(CDK_DROP_LIST, 12), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8), i0.ɵɵdirectiveInject(i1$1.Directionality, 8), i0.ɵɵdirectiveInject(DragDrop), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(CDK_DRAG_HANDLE, 10), i0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 12));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkDrag,\n        selectors: [[\"\", \"cdkDrag\", \"\"]],\n        hostAttrs: [1, \"cdk-drag\"],\n        hostVars: 4,\n        hostBindings: function CdkDrag_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n          }\n        },\n        inputs: {\n          data: [0, \"cdkDragData\", \"data\"],\n          lockAxis: [0, \"cdkDragLockAxis\", \"lockAxis\"],\n          rootElementSelector: [0, \"cdkDragRootElement\", \"rootElementSelector\"],\n          boundaryElement: [0, \"cdkDragBoundary\", \"boundaryElement\"],\n          dragStartDelay: [0, \"cdkDragStartDelay\", \"dragStartDelay\"],\n          freeDragPosition: [0, \"cdkDragFreeDragPosition\", \"freeDragPosition\"],\n          disabled: [2, \"cdkDragDisabled\", \"disabled\", booleanAttribute],\n          constrainPosition: [0, \"cdkDragConstrainPosition\", \"constrainPosition\"],\n          previewClass: [0, \"cdkDragPreviewClass\", \"previewClass\"],\n          previewContainer: [0, \"cdkDragPreviewContainer\", \"previewContainer\"],\n          scale: [2, \"cdkDragScale\", \"scale\", numberAttribute]\n        },\n        outputs: {\n          started: \"cdkDragStarted\",\n          released: \"cdkDragReleased\",\n          ended: \"cdkDragEnded\",\n          entered: \"cdkDragEntered\",\n          exited: \"cdkDragExited\",\n          dropped: \"cdkDragDropped\",\n          moved: \"cdkDragMoved\"\n        },\n        exportAs: [\"cdkDrag\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CDK_DRAG_PARENT,\n          useExisting: CdkDrag\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return CdkDrag;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = /*#__PURE__*/new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nlet CdkDropListGroup = /*#__PURE__*/(() => {\n  class CdkDropListGroup {\n    constructor() {\n      /** Drop lists registered inside the group. */\n      this._items = new Set();\n      /** Whether starting a dragging sequence from inside this group is disabled. */\n      this.disabled = false;\n    }\n    ngOnDestroy() {\n      this._items.clear();\n    }\n    static {\n      this.ɵfac = function CdkDropListGroup_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkDropListGroup)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkDropListGroup,\n        selectors: [[\"\", \"cdkDropListGroup\", \"\"]],\n        inputs: {\n          disabled: [2, \"cdkDropListGroupDisabled\", \"disabled\", booleanAttribute]\n        },\n        exportAs: [\"cdkDropListGroup\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CDK_DROP_LIST_GROUP,\n          useExisting: CdkDropListGroup\n        }]), i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return CdkDropListGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/** Container that wraps a set of draggable items. */\nlet CdkDropList = /*#__PURE__*/(() => {\n  class CdkDropList {\n    /** Keeps track of the drop lists that are currently on the page. */\n    static {\n      this._dropLists = [];\n    }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n      return this._disabled || !!this._group && this._group.disabled;\n    }\n    set disabled(value) {\n      // Usually we sync the directive and ref state right before dragging starts, in order to have\n      // a single point of failure and to avoid having to use setters for everything. `disabled` is\n      // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n      // the user in a disabled state, so we also need to sync it as it's being set.\n      this._dropListRef.disabled = this._disabled = value;\n    }\n    constructor( /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group, config) {\n      this.element = element;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._scrollDispatcher = _scrollDispatcher;\n      this._dir = _dir;\n      this._group = _group;\n      /** Emits when the list has been destroyed. */\n      this._destroyed = new Subject();\n      /**\n       * Other draggable containers that this container is connected to and into which the\n       * container's items can be transferred. Can either be references to other drop containers,\n       * or their unique IDs.\n       */\n      this.connectedTo = [];\n      /**\n       * Unique ID for the drop zone. Can be used as a reference\n       * in the `connectedTo` of another `CdkDropList`.\n       */\n      this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n      /**\n       * Function that is used to determine whether an item\n       * is allowed to be moved into a drop container.\n       */\n      this.enterPredicate = () => true;\n      /** Functions that is used to determine whether an item can be sorted into a particular index. */\n      this.sortPredicate = () => true;\n      /** Emits when the user drops an item inside the container. */\n      this.dropped = new EventEmitter();\n      /**\n       * Emits when the user has moved a new drag item into this container.\n       */\n      this.entered = new EventEmitter();\n      /**\n       * Emits when the user removes an item from the container\n       * by dragging it into another container.\n       */\n      this.exited = new EventEmitter();\n      /** Emits as the user is swapping items while actively dragging. */\n      this.sorted = new EventEmitter();\n      /**\n       * Keeps track of the items that are registered with this container. Historically we used to\n       * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n       * well which means that we can't handle cases like dragging the headers of a `mat-table`\n       * correctly. What we do instead is to have the items register themselves with the container\n       * and then we sort them based on their position in the DOM.\n       */\n      this._unsortedItems = new Set();\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        assertElementNode(element.nativeElement, 'cdkDropList');\n      }\n      this._dropListRef = dragDrop.createDropList(element);\n      this._dropListRef.data = this;\n      if (config) {\n        this._assignDefaults(config);\n      }\n      this._dropListRef.enterPredicate = (drag, drop) => {\n        return this.enterPredicate(drag.data, drop.data);\n      };\n      this._dropListRef.sortPredicate = (index, drag, drop) => {\n        return this.sortPredicate(index, drag.data, drop.data);\n      };\n      this._setupInputSyncSubscription(this._dropListRef);\n      this._handleEvents(this._dropListRef);\n      CdkDropList._dropLists.push(this);\n      if (_group) {\n        _group._items.add(this);\n      }\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n      this._unsortedItems.add(item);\n      if (this._dropListRef.isDragging()) {\n        this._syncItemsWithRef();\n      }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n      this._unsortedItems.delete(item);\n      if (this._dropListRef.isDragging()) {\n        this._syncItemsWithRef();\n      }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n      return Array.from(this._unsortedItems).sort((a, b) => {\n        const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n        // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        // tslint:disable-next-line:no-bitwise\n        return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n      });\n    }\n    ngOnDestroy() {\n      const index = CdkDropList._dropLists.indexOf(this);\n      if (index > -1) {\n        CdkDropList._dropLists.splice(index, 1);\n      }\n      if (this._group) {\n        this._group._items.delete(this);\n      }\n      this._unsortedItems.clear();\n      this._dropListRef.dispose();\n      this._destroyed.next();\n      this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n      if (this._dir) {\n        this._dir.change.pipe(startWith(this._dir.value), takeUntil(this._destroyed)).subscribe(value => ref.withDirection(value));\n      }\n      ref.beforeStarted.subscribe(() => {\n        const siblings = coerceArray(this.connectedTo).map(drop => {\n          if (typeof drop === 'string') {\n            const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n            if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n              console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n            }\n            return correspondingDropList;\n          }\n          return drop;\n        });\n        if (this._group) {\n          this._group._items.forEach(drop => {\n            if (siblings.indexOf(drop) === -1) {\n              siblings.push(drop);\n            }\n          });\n        }\n        // Note that we resolve the scrollable parents here so that we delay the resolution\n        // as long as possible, ensuring that the element is in its final place in the DOM.\n        if (!this._scrollableParentsResolved) {\n          const scrollableParents = this._scrollDispatcher.getAncestorScrollContainers(this.element).map(scrollable => scrollable.getElementRef().nativeElement);\n          this._dropListRef.withScrollableParents(scrollableParents);\n          // Only do this once since it involves traversing the DOM and the parents\n          // shouldn't be able to change without the drop list being destroyed.\n          this._scrollableParentsResolved = true;\n        }\n        if (this.elementContainerSelector) {\n          const container = this.element.nativeElement.querySelector(this.elementContainerSelector);\n          if (!container && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw new Error(`CdkDropList could not find an element container matching the selector \"${this.elementContainerSelector}\"`);\n          }\n          ref.withElementContainer(container);\n        }\n        ref.disabled = this.disabled;\n        ref.lockAxis = this.lockAxis;\n        ref.sortingDisabled = this.sortingDisabled;\n        ref.autoScrollDisabled = this.autoScrollDisabled;\n        ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n        ref.connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef)).withOrientation(this.orientation);\n      });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n      ref.beforeStarted.subscribe(() => {\n        this._syncItemsWithRef();\n        this._changeDetectorRef.markForCheck();\n      });\n      ref.entered.subscribe(event => {\n        this.entered.emit({\n          container: this,\n          item: event.item.data,\n          currentIndex: event.currentIndex\n        });\n      });\n      ref.exited.subscribe(event => {\n        this.exited.emit({\n          container: this,\n          item: event.item.data\n        });\n        this._changeDetectorRef.markForCheck();\n      });\n      ref.sorted.subscribe(event => {\n        this.sorted.emit({\n          previousIndex: event.previousIndex,\n          currentIndex: event.currentIndex,\n          container: this,\n          item: event.item.data\n        });\n      });\n      ref.dropped.subscribe(dropEvent => {\n        this.dropped.emit({\n          previousIndex: dropEvent.previousIndex,\n          currentIndex: dropEvent.currentIndex,\n          previousContainer: dropEvent.previousContainer.data,\n          container: dropEvent.container.data,\n          item: dropEvent.item.data,\n          isPointerOverContainer: dropEvent.isPointerOverContainer,\n          distance: dropEvent.distance,\n          dropPoint: dropEvent.dropPoint,\n          event: dropEvent.event\n        });\n        // Mark for check since all of these events run outside of change\n        // detection and we're not guaranteed for something else to have triggered it.\n        this._changeDetectorRef.markForCheck();\n      });\n      merge(ref.receivingStarted, ref.receivingStopped).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n      const {\n        lockAxis,\n        draggingDisabled,\n        sortingDisabled,\n        listAutoScrollDisabled,\n        listOrientation\n      } = config;\n      this.disabled = draggingDisabled == null ? false : draggingDisabled;\n      this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n      this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n      this.orientation = listOrientation || 'vertical';\n      if (lockAxis) {\n        this.lockAxis = lockAxis;\n      }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n      this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n    static {\n      this.ɵfac = function CdkDropList_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkDropList)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DragDrop), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ScrollDispatcher), i0.ɵɵdirectiveInject(i1$1.Directionality, 8), i0.ɵɵdirectiveInject(CDK_DROP_LIST_GROUP, 12), i0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkDropList,\n        selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]],\n        hostAttrs: [1, \"cdk-drop-list\"],\n        hostVars: 7,\n        hostBindings: function CdkDropList_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"id\", ctx.id);\n            i0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n          }\n        },\n        inputs: {\n          connectedTo: [0, \"cdkDropListConnectedTo\", \"connectedTo\"],\n          data: [0, \"cdkDropListData\", \"data\"],\n          orientation: [0, \"cdkDropListOrientation\", \"orientation\"],\n          id: \"id\",\n          lockAxis: [0, \"cdkDropListLockAxis\", \"lockAxis\"],\n          disabled: [2, \"cdkDropListDisabled\", \"disabled\", booleanAttribute],\n          sortingDisabled: [2, \"cdkDropListSortingDisabled\", \"sortingDisabled\", booleanAttribute],\n          enterPredicate: [0, \"cdkDropListEnterPredicate\", \"enterPredicate\"],\n          sortPredicate: [0, \"cdkDropListSortPredicate\", \"sortPredicate\"],\n          autoScrollDisabled: [2, \"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\", booleanAttribute],\n          autoScrollStep: [0, \"cdkDropListAutoScrollStep\", \"autoScrollStep\"],\n          elementContainerSelector: [0, \"cdkDropListElementContainer\", \"elementContainerSelector\"]\n        },\n        outputs: {\n          dropped: \"cdkDropListDropped\",\n          entered: \"cdkDropListEntered\",\n          exited: \"cdkDropListExited\",\n          sorted: \"cdkDropListSorted\"\n        },\n        exportAs: [\"cdkDropList\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([\n        // Prevent child drop lists from picking up the same group as their parent.\n        {\n          provide: CDK_DROP_LIST_GROUP,\n          useValue: undefined\n        }, {\n          provide: CDK_DROP_LIST,\n          useExisting: CdkDropList\n        }]), i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return CdkDropList;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = /*#__PURE__*/new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nlet CdkDragPreview = /*#__PURE__*/(() => {\n  class CdkDragPreview {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n      this._drag = inject(CDK_DRAG_PARENT, {\n        optional: true\n      });\n      /** Whether the preview should preserve the same size as the item that is being dragged. */\n      this.matchSize = false;\n      this._drag?._setPreviewTemplate(this);\n    }\n    ngOnDestroy() {\n      this._drag?._resetPreviewTemplate(this);\n    }\n    static {\n      this.ɵfac = function CdkDragPreview_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkDragPreview)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkDragPreview,\n        selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]],\n        inputs: {\n          data: \"data\",\n          matchSize: [2, \"matchSize\", \"matchSize\", booleanAttribute]\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CDK_DRAG_PREVIEW,\n          useExisting: CdkDragPreview\n        }]), i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return CdkDragPreview;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = /*#__PURE__*/new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nlet CdkDragPlaceholder = /*#__PURE__*/(() => {\n  class CdkDragPlaceholder {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n      this._drag = inject(CDK_DRAG_PARENT, {\n        optional: true\n      });\n      this._drag?._setPlaceholderTemplate(this);\n    }\n    ngOnDestroy() {\n      this._drag?._resetPlaceholderTemplate(this);\n    }\n    static {\n      this.ɵfac = function CdkDragPlaceholder_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CdkDragPlaceholder)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkDragPlaceholder,\n        selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]],\n        inputs: {\n          data: \"data\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CDK_DRAG_PLACEHOLDER,\n          useExisting: CdkDragPlaceholder\n        }])]\n      });\n    }\n  }\n  return CdkDragPlaceholder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst DRAG_DROP_DIRECTIVES = [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder];\nlet DragDropModule = /*#__PURE__*/(() => {\n  class DragDropModule {\n    static {\n      this.ɵfac = function DragDropModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || DragDropModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: DragDropModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [DragDrop],\n        imports: [CdkScrollableModule]\n      });\n    }\n  }\n  return DragDropModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n","import nls from '../../framework/resources/nls/dashboard';\n\nexport const widgetForm = [\n  {\n    name: 'color',\n    label: nls.color,\n    options: [],\n    errorMessage: [],\n    defaultValue: '#450d59',\n    required: false,\n    id: 'color',\n    type: 'color',\n    model: 'color',\n    pattern: ''\n  },\n  {\n    name: 'transparency',\n    label: nls.transparency,\n    options: [],\n    errorMessage: [],\n    defaultValue: '100',\n    required: false,\n    id: 'transparency',\n    type: 'slider',\n    model: 'transparency',\n    pattern: '',\n    min: 0,\n    max: 100\n  },\n\n  {\n    name: 'title',\n    label: nls.title,\n    options: [],\n    errorMessage: [\n      {\n        type: 'required',\n        message: nls.titleRequired,\n      },\n      {\n        type: 'pattern',\n        message: nls.invalidTitle,\n      },\n    ],\n    required: true,\n    id: 'title',\n    type: 'text',\n    model: 'title',\n    pattern: \"^(?=.{1,18}$)[A-Za-z][A-Za-z\\' \\\\-]*[A-Za-z]$\",\n    maxlength: 18\n  },\n  {\n    name: 'target',\n    label: nls.target,\n    options: [],\n    errorMessage: [],\n    required: false,\n    id: 'target',\n    type: 'text',\n    model: 'target',\n    pattern: '',\n    maxlength: 25\n  },\n  {\n    name: 'type',\n    label: nls.widgetType,\n    options: [\n      {\n        label: 'Daily',\n        value: 'DAILY',\n      },\n      {\n        label: 'Weekly',\n        value: 'WEEKLY',\n      }\n    ],\n    errorMessage: [{ type: 'required', message: nls.typeRequired }],\n    required: true,\n    id: 'type',\n    type: 'select',\n    model: 'type',\n  },\n  {\n    name: 'motivation',\n    label: nls.motivation,\n    options: [],\n    errorMessage: [\n      {\n        type: 'required',\n        message: nls.motivationRequired,\n      },\n      {\n        type: 'maxSize',\n        message: nls.maxSizeError\n      }\n    ],\n    required: true,\n    id: 'motivation',\n    type: 'file',\n    model: 'motivation',\n    pattern: '',\n    accept: \".png,.svg,.webp,.jpg,.jpeg\",\n    maxSize: 500 * 1024 //500 kB\n  }\n]\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-fab-button',\n  standalone: true,\n  imports: [MatIconModule, MatRippleModule,\n    MatButtonModule,\n  ],\n  templateUrl: './fab-button.component.html',\n  styleUrl: './fab-button.component.scss'\n})\nexport class FabButtonComponent {\n  @Output('on-click') onClick = new EventEmitter();\n  @Input('disabled') disabled = false;\n  constructor() { }\n\n  onClickButton(event: MouseEvent): void {\n    this.onClick.emit(event);\n  }\n}\n","<div class=\"add-fab-button\">\n  <div class=\"container\">\n    <div class=\"d-flex justify-content-end align-items-center px-3\">\n      <button mat-fab color=\"primary\" aria-label=\"Add\" (click)=\"onClickButton($event)\" [disabled]=\"disabled\">\n        <mat-icon>add</mat-icon>\n      </button>\n    </div>\n  </div>\n</div>","import { Component, inject, signal, WritableSignal } from '@angular/core';\nimport nls from '../../framework/resources/nls/dashboard';\nimport {\n  DashboardCards,\n} from '../../framework/resources/dashboard-cards';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RouterModule } from '@angular/router';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDividerModule } from '@angular/material/divider';\nimport {\n  CdkDrag,\n  CdkDragDrop,\n  CdkDragPlaceholder,\n  CdkDropList,\n  moveItemInArray,\n  transferArrayItem,\n} from '@angular/cdk/drag-drop';\nimport { RightPanelComponent } from '../../framework/right-panel/right-panel.component';\nimport { FormComponent } from \"../../framework/form/form.component\";\nimport { FormFields } from '../../framework/form/form.interfaces';\nimport { ModalWindowComponent } from \"../../framework/modal-window/modal-window.component\";\nimport { BehaviorSubject } from 'rxjs';\nimport { ApiService } from '../../services/api.service';\nimport { widgetForm } from './widget.resources';\nimport { MessagesService } from '../../services/messages.service';\nimport { FabButtonComponent } from \"../../framework/fab-button/fab-button.component\";\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatRippleModule,\n    MatButtonModule,\n    RouterModule,\n    MatMenuModule,\n    CdkDropList,\n    CdkDrag,\n    CdkDragPlaceholder,\n    RightPanelComponent,\n    FormComponent,\n    MatDividerModule,\n    ModalWindowComponent,\n    FabButtonComponent\n  ],\n  templateUrl: './dashboard.component.html',\n  styleUrl: './dashboard.component.scss',\n})\nexport class DashboardComponent {\n\n  private _api: ApiService = inject(ApiService);\n  private _message: MessagesService = inject(MessagesService);\n\n  greeting: string = '';\n  name: string = 'Fitty';\n  nls = nls;\n  rightPanelOpen: WritableSignal<boolean> = signal(false);\n  widgetFormFields: WritableSignal<FormFields[]> = signal(widgetForm);\n  addWidgetData: any = null;\n  dashboardCards: WritableSignal<DashboardCards[]> = signal([]);\n  reorderEbabled: boolean = false;\n  isModalOpen: WritableSignal<boolean> = signal(false);\n  isDeleteModalOpen: WritableSignal<boolean> = signal(false);\n  isEdit = new BehaviorSubject<any>(null);\n\n  constructor() {\n    this.setGreeting();\n    this.isEditSubscription();\n    this.getWidgets();\n  }\n  async setGreeting() {\n    const currentTime = new Date();\n    const currentHour = currentTime.getHours();\n    // console.log(currentHour,currentTime.getTimezoneOffset());\n    if (currentHour < 12) {\n      this.greeting = this.nls.greeting.morning;\n    } else if (currentHour < 18) {\n      this.greeting = this.nls.greeting.afternoon;\n    } else {\n      this.greeting = this.nls.greeting.evening;\n    }\n    let user = await this._api.local_get('user');\n    if (user) {\n      this.name = user.first_name\n    }\n  }\n  isEditSubscription() {\n    this.isEdit.subscribe(value => {\n      if (value) {\n        widgetForm.map((el: any) => {\n          el.defaultValue = value[el.name];\n          if (el.type === 'file') {\n            el.required = false;\n          }\n          return el;\n        });\n      } else {\n        widgetForm.map((el: any) => {\n          el.defaultValue = '';\n          if (el.type === 'file') {\n            el.required = true;\n          }\n          if (el.type === 'slider') {\n            el.defaultValue = 100;\n          }\n          if (el.type === 'color') {\n            el.defaultValue = '#450d59';\n          }\n          return el;\n        });\n      }\n    });\n\n  }\n  onDrop(event: CdkDragDrop<DashboardCards[]>): void {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(this.dashboardCards(), event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex,\n      );\n    }\n  }\n  async getWidgets(): Promise<void> {\n    let result = await this._api.local_get('widgets');\n    result = result.map((item: DashboardCards) => {\n      item.to = '/logging/' + item.id;\n      return item;\n    });\n    this.dashboardCards.set(result);\n  }\n  async setWidget(data: DashboardCards[]): Promise<void> {\n    await this._api.local_put('widgets', data);\n    this.getWidgets();\n    this._message.success(nls.reorderWidgetSuccess)\n  }\n  async createWidget(data: DashboardCards): Promise<void> {\n    await this._api.local_post('widgets', data);\n    this.getWidgets();\n    this._message.success(nls.addWidgetSuccess)\n  }\n  async updateWidget(data: DashboardCards): Promise<void> {\n    await this._api.local_put('widgets', data)\n    this.getWidgets();\n    this._message.success(nls.updateWidgetSuccess)\n\n  }\n  async deleteWidget(id: string): Promise<void> {\n    await this._api.local_delete('widgets', id);\n    this.getWidgets();\n    this._message.success(nls.deleteWidgetSuccess)\n\n  }\n\n  enableReorder(event: MouseEvent): void {\n    if (this.reorderEbabled) {\n      this.setWidget(this.dashboardCards());\n    }\n    this.reorderEbabled = !this.reorderEbabled;\n  }\n  mapToHex(value: number): string {\n    const mappedValue = Math.round((value / 100) * 255);\n    let hexString = mappedValue.toString(16);\n    if (hexString.length < 2) {\n      hexString = '0' + hexString;\n    }\n    return hexString;\n  }\n  convertToBlob(file: any): Promise<string> {\n    return new Promise((resolve, reject) => {\n      if (!file) {\n        // console.log(\"before reject\")\n\n        reject(\"No file provided\");\n        return;\n      }\n\n      const reader = new FileReader();\n      // console.log(\"after reader declare\")\n\n      reader.onload = () => {\n        const blob = reader.result as string;\n        // console.log(\"before resolve\", blob)\n        resolve(blob);\n      };\n\n      reader.onerror = () => {\n        reject(\"Error reading file\");\n      };\n\n      // console.log(\"befrore reading as url\", file)\n      reader.readAsDataURL(file);\n    });\n  }\n  async handleFormChange(data: any) {\n    this.addWidgetData = data;\n    // console.log(\"before converting blob condition\", this.addWidgetData.motivation);\n    if (this.addWidgetData.motivation && typeof this.addWidgetData.motivation === 'object') {\n      // console.log(\"before converting blob\", this.addWidgetData.motivation);\n      const blob = await this.convertToBlob(this.addWidgetData.motivation);\n      // console.log(blob);\n      this.addWidgetData.motivation = blob;\n    }\n  }\n  togglePanel(state: boolean) {\n    this.rightPanelOpen.set(state);\n  }\n  closePanel(data: any): void {\n    this.isModalOpen.set(true);\n  }\n  submitPanel(data: any): void {\n    this.rightPanelOpen.set(false);\n    if (this.isEdit.getValue()) {\n      let updateData = { ...this.addWidgetData, id: this.isEdit.getValue().id };\n      this.updateWidget(updateData);\n      this.isEdit.next(null);\n\n    } else {\n      this.createWidget(this.addWidgetData);\n    }\n  }\n  toggleModal(state: boolean) {\n    this.isModalOpen.set(state);\n  }\n  toggleDeleteModal(state: boolean) {\n    this.isDeleteModalOpen.set(state);\n  }\n\n  submitModal(state: boolean) {\n    this.isModalOpen.set(state);\n    this.togglePanel(false);\n    if (this.isEdit.getValue()) {\n      this.isEdit.next(null);\n    }\n  }\n  submitDeleteModal(state: boolean) {\n    this.isDeleteModalOpen.set(state);\n    this.togglePanel(false);\n    this.deleteWidget(this.isEdit.getValue().id);\n    this.isEdit.next(null);\n  }\n  editWidget(item: any) {\n    this.isEdit.next(item);\n    this.togglePanel(true);\n  }\n}\n","<div class=\"my-3\">\n  <div class=\"d-flex justify-content-start align-items-center column-gap-3\">\n    <div>\n      <img src=\"../../../assets/images/ic_launcher_round.png\" alt=\"Woman Athlete\" class=\"dashboard-header-image\" />\n    </div>\n    <div class=\"\">\n      <span class=\"greeting-text\">{{greeting}}, <span>{{name}}</span></span>\n    </div>\n  </div>\n  <div class=\"mt-2 text-secondary\">\n    <span class=\"mb-0\">{{nls.trackHealth}}</span>\n  </div>\n</div>\n<div class=\"container-fluid\">\n  <div class=\"mb-2 d-flex justify-content-between align-items-center\">\n    <span class=\"h6 mb-0\">{{nls.myWidgets}}</span>\n    <button mat-icon-button [color]=\"reorderEbabled?'primary':'warn'\" (click)=\"enableReorder($event)\"\n      [disabled]=\"dashboardCards().length===0\">\n      <mat-icon>{{reorderEbabled?'save':'move_down'}}</mat-icon>\n    </button>\n  </div>\n  <div *ngIf=\"dashboardCards().length===0\" class=\"no-data-placeholder\">\n    <div class=\"no-data-image\"></div>\n    <p class=\"h6 text-secondary text-center\">{{nls.addWidgetsUsingPlusButton}}</p>\n  </div>\n  @if (reorderEbabled) {\n  <div class=\"my-dashboard-cards-container justify-content-start align-items-center\" cdkDropList\n    (cdkDropListDropped)=\"onDrop($event)\">\n    <div *ngFor=\"let item of dashboardCards()\" [class]=\"'my-dashboard-cards reorder-card '\" cdkDrag\n      cdkDragBoundary=\".my-dashboard-cards-container\"\n      [ngStyle]=\"{'background-color':item.color+mapToHex(item.transparency)}\">\n      <div class=\"my-dashboard-cards drag-placeholder\" *cdkDragPlaceholder></div>\n      <div class=\"dashboard-card-card\">\n        <div class=\"dashboard-card-item\">\n          <span class=\"dashboard-card-item-title m-0 flex-grow-1\">{{item.title}}</span>\n        </div>\n        <div class=\"dashboard-card-item-2\">\n          <img [alt]=\"item.title\" [src]=\"item.motivation\" height=\"50px\" />\n        </div>\n        <div class=\"dashboard-card-item-2 pt-2\">\n          <span class=\"dashboard-card-item-target m-0\">{{item.target}}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n  }\n  @if(!reorderEbabled){\n  <div class=\"my-dashboard-cards-container justify-content-evenly align-items-center\">\n    <div *ngFor=\"let item of dashboardCards()\" [class]=\"'my-dashboard-cards'\" mat-ripple\n      [ngStyle]=\"{'background-color':item.color+mapToHex(item.transparency)}\">\n      <div class=\"dashboard-card-card\" [routerLink]=\"item.to\">\n        <div class=\"dashboard-card-item\">\n          <span class=\"dashboard-card-item-title m-0 flex-grow-1\">{{item.title}}</span>\n        </div>\n        <div class=\"dashboard-card-item-2\">\n          <img [alt]=\"item.title\" [src]=\"item.motivation\" height=\"50px\" />\n        </div>\n        <div class=\"dashboard-card-item-2 pt-2\">\n          <span class=\"dashboard-card-item-target m-0\">{{item.target}}</span>\n        </div>\n      </div>\n      <mat-icon class=\"dashboard-item-icon\" (click)=\"editWidget(item)\">edit</mat-icon>\n    </div>\n  </div>\n  }\n</div>\n<app-fab-button (on-click)=\"togglePanel(true)\" />\n\n<app-right-panel [isOpen]=\"rightPanelOpen()\" (onCancel)=\"closePanel($event)\" (onSubmit)=\"submitPanel($event)\"\n  [panel-heading]=\"isEdit.getValue()?nls.editWidget:nls.addWidget\" [type]=\"'info'\">\n  <ng-template>\n    <app-form (on-submit)=\"submitPanel($event)\" [form-fields]=\"widgetFormFields()\" [submit-button-title]=\"nls.save\"\n      [cancel-button-title]=\"nls.cancel\" (on-cancel)=\"closePanel($event)\"\n      (on-change)=\"handleFormChange($event)\"></app-form>\n\n    <div class=\"d-flex justify-content-evenly align-items-center mt-4 flex-column\" *ngIf=\"addWidgetData\">\n      <mat-divider class=\"w-100 mb-2\"></mat-divider>\n      <p>{{nls.preview}}</p>\n      <div class=\"d-flex justify-content-evenly align-items-center w-100\">\n        <div class=\"my-dashboard-cards preview\"\n          [ngStyle]=\"{'background-color':addWidgetData.color+mapToHex(addWidgetData.transparency)}\">\n          <div class=\"dashboard-card-card\">\n            <div class=\"dashboard-card-item\">\n              <span class=\"dashboard-card-item-title m-0 flex-grow-1\">{{addWidgetData.title}}</span>\n            </div>\n            <div class=\"dashboard-card-item-2\">\n              <img [alt]=\"addWidgetData.title\" [src]=\"addWidgetData.motivation\" height=\"50px\" />\n            </div>\n            <div class=\"dashboard-card-item-2 pt-2\">\n              <span class=\"dashboard-card-item-target m-0\">{{addWidgetData.target}}</span>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"isEdit.getValue()\">\n          <button mat-fab color=\"error\" aria-label=\"Delete Widget\" (click)=\"toggleDeleteModal(true)\">\n            <mat-icon>delete</mat-icon>\n          </button>\n\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</app-right-panel>\n\n<app-modal-window [isOpen]=\"isModalOpen()\" (onCancel)=\"toggleModal($event)\" (onSubmit)=\"submitModal($event)\"\n  [type]=\"'confirm'\" [modal-heading]=\"nls.addWidget\">\n  <ng-template>\n    <p>{{nls.cancelWidget}}</p>\n  </ng-template>\n</app-modal-window>\n<app-modal-window [isOpen]=\"isDeleteModalOpen()\" (onCancel)=\"toggleDeleteModal($event)\"\n  (onSubmit)=\"submitDeleteModal($event)\" [type]=\"'confirm'\" [modal-heading]=\"nls.deleteWidget\">\n  <ng-template>\n    <p>{{nls.deleteWidgetText}}</p>\n  </ng-template>\n</app-modal-window>","import generic from \"./generic\";\n\nconst nls = {\n  ...generic,\n  selectSchedule: \"Select Schedule\",\n  loggingDate: \"Choose noting date\",\n  editLog: \"Edit Note\",\n  addLog: \"New Note\",\n  CancelAddEdit: \"You want to cancel this note action.\",\n  pleaseAddSchedule: \"Please create a schedule to start noting this activity.\",\n  BasicDetails: \"Noting Details\",\n  achieved: \"Achieved\",\n  target: \"Target\"\n}\nexport default nls;","import { FormFields } from \"../../framework/form/form.interfaces\";\nimport nls from \"../../framework/resources/nls/logging\";\n\nexport const loggingViewFormFieldsInitial: FormFields[] = [\n  {\n    name: \"scheduleId\",\n    label: nls.selectSchedule,\n    required: true,\n    type: \"select\",\n    options: [],\n    defaultValue: ''\n  },\n  {\n    name: \"loggingDate\",\n    label: nls.loggingDate,\n    required: true,\n    type: \"date\",\n  }\n]\nexport const loggingAddFormFieldsInitial: FormFields[] = [\n  {\n    name: \"scheduleId\",\n    label: nls.selectSchedule,\n    required: true,\n    type: \"select\",\n    options: [],\n    defaultValue: '',\n    disabled: true\n  },\n  {\n    name: \"loggingDate\",\n    label: nls.loggingDate,\n    required: true,\n    type: \"date\",\n    disabled: true\n  }\n]","import { CommonModule } from '@angular/common';\nimport { Component, inject, OnInit, signal, WritableSignal } from '@angular/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { FormFields } from '../../framework/form/form.interfaces';\nimport { loggingViewFormFieldsInitial, loggingAddFormFieldsInitial } from './logging.resources';\nimport { FormComponent } from \"../../framework/form/form.component\";\nimport { ApiService, delay } from '../../services/api.service';\nimport { FabButtonComponent } from \"../../framework/fab-button/fab-button.component\";\nimport { RightPanelComponent } from \"../../framework/right-panel/right-panel.component\";\nimport nls from '../../framework/resources/nls/logging';\nimport { ModalWindowComponent } from \"../../framework/modal-window/modal-window.component\";\nimport moment from 'moment';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MessagesService } from '../../services/messages.service';\n\n@Component({\n  selector: 'app-logging',\n  standalone: true,\n  imports: [CommonModule, MatRippleModule, FormComponent, FabButtonComponent, RightPanelComponent, ModalWindowComponent, MatDividerModule, MatButtonModule],\n  templateUrl: './logging.component.html',\n  styleUrl: './logging.component.scss'\n})\nexport class LoggingComponent implements OnInit {\n  private _api: ApiService = inject(ApiService);\n  private _message: MessagesService = inject(MessagesService);\n\n  widgetId: string = '';\n  widgetData = new BehaviorSubject<any>(null);\n  loggingViewFormFields = new BehaviorSubject<FormFields[]>([]);\n  loggingAddFormFields = new BehaviorSubject<any>({});\n  scheduleList = new BehaviorSubject<any[]>([]);\n  selectedScheduleData = new BehaviorSubject<any>(null);\n  rightPanelOpen: WritableSignal<boolean> = signal(false);\n  isEdit = new BehaviorSubject<boolean>(false);\n  loggingViewFormData = new BehaviorSubject<any>(null);\n  isModalOpen: WritableSignal<boolean> = signal(false);\n  modalInfo: WritableSignal<string[]> = signal(['', '', '']);\n  weekly = new BehaviorSubject<boolean>(false);\n  scheduledTasks = new BehaviorSubject<any[]>([]);\n  selectedTask = new BehaviorSubject<any>(null);\n  nls = nls;\n  moment = moment\n  loggingData = new BehaviorSubject<any>({});\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.widgetId = params['log_type'];\n      this.setWidgetData();\n      this.setScheduleSelectFormFields((new Date()).toISOString());\n    });\n  }\n  async setWidgetData() {\n    let widgets = await this._api.local_get('widgets');\n    let filteredWidget = widgets.find((widget: any) => widget.id === this.widgetId);\n    this.weekly.next(filteredWidget && filteredWidget.type === 'WEEKLY')\n    this.widgetData.next(filteredWidget);\n  }\n  async setScheduleSelectFormFields(day: any) {\n    this.loggingViewFormFields.next([])\n    let today = (new Date()).toISOString();\n    await delay(20);\n    let options = await this.buildScheduleOptions(day);\n    let fields: FormFields[] = [...loggingViewFormFieldsInitial];\n    let defaultSchedule = options[0]?.value;\n\n    fields.map((field: FormFields) => {\n      if (this.loggingViewFormData.getValue()) {\n        if (field.name === 'loggingDate') {\n          field.defaultValue = this.loggingViewFormData.getValue().loggingDate;\n          field.max = today\n        }\n      } else {\n        if (field.name === 'loggingDate') {\n          field.defaultValue = today;\n          field.max = today\n        }\n      }\n      if (field.name === 'scheduleId') {\n        field.options = options;\n        field.defaultValue = defaultSchedule;\n      }\n\n      return field;\n    });\n    this.loggingViewFormFields.next(fields)\n  }\n  async buildScheduleOptions(today: any) {\n    let schedules = await this._api.local_get('schedules');\n    let filteredSchedule;\n    if (this.weekly.getValue()) {\n      filteredSchedule = schedules.filter((schedule: any) => schedule.widgetId === this.widgetId && schedule.startDay == moment(today).day());\n    } else {\n      filteredSchedule = schedules.filter((schedule: any) => schedule.widgetId === this.widgetId);\n    }\n\n    let options: { label: any; value: any; }[] = [];\n    filteredSchedule.forEach((schedule: any) => {\n      let option = { label: schedule.scheduleName, value: schedule.id };\n      options.push(option);\n    });\n    this.scheduleList.next(filteredSchedule);\n    return options;\n  }\n  async handleLoggingViewFormChange(data: any) {\n    let selectedSchedule = this.scheduleList.getValue().find((schedule) => schedule.id === data.scheduleId);\n    this.selectedScheduleData.next(selectedSchedule);\n    this.scheduledTasks.next(await this.getScheduledTasks());\n    if (moment(this.loggingViewFormData.getValue()?.loggingDate).format('L') !== moment(data.loggingDate).format('L')) {\n      this.setScheduleSelectFormFields(data.loggingDate);\n    }\n    this.loggingViewFormData.next(data);\n    // console.log(this.selectedScheduleData.getValue())\n  }\n  toggleModal(state: boolean) {\n    this.isModalOpen.set(state);\n  }\n  async submitModal(data: any) {\n    this.togglePanel(false);\n    this.toggleModal(false);\n    this.modalInfo.set(['', '', '', '']);\n    this.isEdit.next(false);\n    this.selectedTask.next(null);\n\n  }\n  async getScheduledTasks() {\n    let tasks = await this._api.local_get('tasks');\n    let filteredTasks = tasks.filter((task: any) => {\n      return task.widgetId === this.widgetId && this.selectedScheduleData.getValue()?.tasks?.includes(task.id)\n    });\n    // console.log(filteredTasks);\n\n    return filteredTasks;\n  }\n  async createLogging(task: any) {\n    this.togglePanel(true);\n    let scheduleOptions = await this.buildScheduleOptions(this.loggingViewFormData.getValue().loggingDate);\n\n    //get existing log\n    let existingLog = await this._api.local_get_by_id('logging', {\n      scheduleId: this.loggingViewFormData.getValue().scheduleId,\n      widgetId: this.widgetData.getValue().id,\n      taskId: task.id\n    });\n    existingLog = existingLog?.find((log: any) => {\n      return moment(log.loggingDate).format('L') === moment(this.loggingViewFormData.getValue().loggingDate).format('L')\n    });\n    // console.log('Existing Log: ', existingLog);\n\n    //basic fields\n    let basicFields = [...loggingAddFormFieldsInitial];\n\n    basicFields.map((field: FormFields) => {\n      if (field.name === \"scheduleId\") {\n        field.defaultValue = this.loggingViewFormData.getValue().scheduleId;\n        field.options = scheduleOptions\n      }\n      if (field.name === 'loggingDate') {\n        field.defaultValue = this.loggingViewFormData.getValue().loggingDate\n      }\n      return field;\n    });\n\n    let fields = { basic: { fields: basicFields } };\n\n    task.items.forEach((taskItem: any, index: number) => {\n      let taskFields = taskItem.formFields;\n\n      taskFields = taskFields.filter((field: any) => field.name !== 'itemName')\n      taskFields.map((taskField: FormFields) => {\n        taskField.deletable = false;\n        taskField.disabled = false;\n        taskField.defaultValue = existingLog && existingLog.logs[taskItem.id] ? existingLog.logs[taskItem.id].achieved[taskField.name] : '';\n        return taskField;\n      });\n      fields = { ...fields, [`item${index}`]: { fields: taskFields, id: taskItem.id, oldvalue: taskItem.formData } };\n    });\n    // console.log(fields);\n    this.selectedTask.next(task);\n    this.loggingData.next({ scheduleId: this.loggingViewFormData.getValue().scheduleId, loggingDate: this.loggingViewFormData.getValue().loggingDate })\n    this.loggingAddFormFields.next(fields);\n  }\n  async togglePanel(state: boolean) {\n    this.rightPanelOpen.set(state);\n  }\n  closePanel(data: any): void {\n    this.togglePanel(false);\n    // this.isModalOpen.set(true);\n    // if (this.isEdit.getValue()) {\n    //   this.modalInfo.set(['add-edit', nls.editLog, 'confirm']);\n\n    // } else {\n    //   this.modalInfo.set(['add-edit', nls.addLog, 'confirm']);\n    // }\n  }\n\n  async handleAddLoggingFormSubmit(data: any, taskItem: any) {\n    let result;\n    let loggingDate = this.loggingData.getValue().loggingDate;\n\n    let existingLog = await this._api.local_get_by_id('logging', {\n      scheduleId: this.loggingData.getValue().scheduleId,\n      widgetId: this.widgetData.getValue().id,\n      taskId: this.selectedTask.getValue().id\n    });\n    existingLog = existingLog?.find((log: any) => {\n      return moment(log.loggingDate).format('L') === moment(loggingDate).format('L')\n    });\n    if (taskItem.id) {\n      data.itemName = taskItem.oldvalue.itemName\n      if (existingLog) {\n        existingLog.logs[taskItem.id] = {\n          fields: taskItem.fields,\n          target: taskItem.oldvalue,\n          achieved: data\n        }\n        result = await this._api.local_put('logging', existingLog);\n      } else {\n        let logData = {\n          widget: this.widgetData.getValue(),\n          schedule: this.selectedScheduleData.getValue(),\n          logs: {\n            [taskItem.id]: {\n              fields: taskItem.fields,\n              target: taskItem.oldvalue,\n              achieved: data\n            }\n          },\n          taskId: this.selectedTask.getValue()?.id,\n          scheduleId: this.selectedScheduleData.getValue().id,\n          widgetId: this.widgetData.getValue().id,\n          loggingDate: loggingDate\n        };\n        result = await this._api.local_post('logging', logData);\n      }\n      // if (result.success) {\n      //   this._message.success(result.message);\n      // } else {\n      //   this._message.error(result.message)\n      // }\n\n    }\n  }\n  getFlatFieldItems(): any[] {\n    return Object.keys(this.loggingAddFormFields.getValue());\n  }\n  getDisabledFormTarget(fields: any[], data: any): any[] {\n    [...fields].map((field: any) => {\n      field.defaultValue = data[field.name];\n      field.disabled = true;\n      return field\n    })\n    return fields\n  }\n}\n","<div class=\"py-2 d-flex flex-column gap-2\">\n  <app-form [form-fields]=\"loggingViewFormFields.getValue()\" *ngIf=\"loggingViewFormFields.getValue().length\"\n    [submittable]=\"false\" (on-change)=\"handleLoggingViewFormChange($event)\"></app-form>\n  <div class=\"scheduled-tasks-container\">\n    <div *ngFor=\"let task of scheduledTasks.getValue(); let index=index;\" class=\"task-item mb-3\"\n      (click)=\"createLogging(task)\">\n      <div class=\"task-item-content\">\n        <div class=\"flex-grow-1\">\n          <p class=\"m-0 task-name\">{{task.taskName}}</p>\n          <p class=\"m-0 task-description\">{{task.taskDescription}}</p>\n        </div>\n      </div>\n      <mat-divider class=\"w-100\"></mat-divider>\n    </div>\n  </div>\n  <div *ngIf=\"scheduleList.getValue().length<=0\" class=\"no-data-placeholder\">\n    <div class=\"no-data-image\"></div>\n    <p class=\"text-center text-secondary\">{{nls.pleaseAddSchedule}}</p>\n  </div>\n</div>\n<app-right-panel [isOpen]=\"rightPanelOpen()\" (onCancel)=\"closePanel($event)\"\n  [panel-heading]=\"isEdit.getValue()?nls.editLog:nls.addLog\" [type]=\"'info'\">\n  <ng-template>\n\n    @for (item of getFlatFieldItems(); track $index) {\n    <div class=\"logging-form-divider\">\n      @if (loggingAddFormFields.getValue()[item].oldvalue) {\n      <p class=\" text-center logging-task-name\">{{loggingAddFormFields.getValue()[item].oldvalue.itemName}}</p>\n      }\n      <div class=\"logging-form-container\" [class.d-flex]=\"$index!==0\">\n        <div *ngIf=\"$index!==0\" [class.max-width]=\"$index!==0\">\n          <p>{{nls.target}}</p>\n          <app-form\n            [form-fields]=\"getDisabledFormTarget(loggingAddFormFields.getValue()[item].fields,loggingAddFormFields.getValue()[item].oldvalue)\"\n            [submittable]=\"false\" />\n        </div>\n        <div [class.max-width]=\"$index!==0\">\n          <p *ngIf=\"$index!==0\">{{nls.achieved}}</p>\n          <app-form [form-fields]=\"loggingAddFormFields.getValue()[item].fields\"\n            (on-change)=\"handleAddLoggingFormSubmit($event, loggingAddFormFields.getValue()[item])\"\n            [submittable]=\"false\" />\n        </div>\n      </div>\n    </div>\n    @if ($index===0) {\n    <p class=\"h6 text-center py-2 mb-2 logging-form-divider\">{{selectedTask.getValue().taskName}}</p>\n    }\n    }\n\n  </ng-template>\n</app-right-panel>\n\n<app-modal-window [isOpen]=\"isModalOpen()\" (onCancel)=\"toggleModal($event)\" (onSubmit)=\"submitModal($event)\"\n  [modal-heading]=\"modalInfo()[1]\" [type]=\"modalInfo()[2]\">\n  <ng-template>\n    <p *ngIf=\"modalInfo()[0]==='add-edit'\">{{nls.CancelAddEdit}}</p>\n  </ng-template>\n</app-modal-window>","import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Optional, Input, Directive, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Injection token that can be used to provide the default options the card module. */\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"], [\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"], [\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"], [\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"], [\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], \"*\"];\nconst _c2 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"[mat-card-image], [matCardImage],\\n                    [mat-card-sm-image], [matCardImageSmall],\\n                    [mat-card-md-image], [matCardImageMedium],\\n                    [mat-card-lg-image], [matCardImageLarge],\\n                    [mat-card-xl-image], [matCardImageXLarge]\", \"*\"];\nconst _c3 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c4 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst MAT_CARD_CONFIG = /*#__PURE__*/new InjectionToken('MAT_CARD_CONFIG');\n/**\n * Material Design card component. Cards contain content and actions about a single subject.\n * See https://material.io/design/components/cards.html\n *\n * MatCard provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCard = /*#__PURE__*/(() => {\n  class MatCard {\n    constructor(config) {\n      this.appearance = config?.appearance || 'raised';\n    }\n    static {\n      this.ɵfac = function MatCard_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatCard)(i0.ɵɵdirectiveInject(MAT_CARD_CONFIG, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatCard,\n        selectors: [[\"mat-card\"]],\n        hostAttrs: [1, \"mat-mdc-card\", \"mdc-card\"],\n        hostVars: 4,\n        hostBindings: function MatCard_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-mdc-card-outlined\", ctx.appearance === \"outlined\")(\"mdc-card--outlined\", ctx.appearance === \"outlined\");\n          }\n        },\n        inputs: {\n          appearance: \"appearance\"\n        },\n        exportAs: [\"matCard\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 1,\n        vars: 0,\n        template: function MatCard_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n          }\n        },\n        styles: [\".mat-mdc-card{display:flex;flex-direction:column;box-sizing:border-box;position:relative;border-style:solid;border-width:0;background-color:var(--mdc-elevated-card-container-color, var(--mat-app-surface));border-color:var(--mdc-elevated-card-container-color, var(--mat-app-surface));border-radius:var(--mdc-elevated-card-container-shape, var(--mat-app-corner-medium));box-shadow:var(--mdc-elevated-card-container-elevation, var(--mat-app-level1))}.mat-mdc-card::after{position:absolute;top:0;left:0;width:100%;height:100%;border:solid 1px rgba(0,0,0,0);content:\\\"\\\";display:block;pointer-events:none;box-sizing:border-box;border-radius:var(--mdc-elevated-card-container-shape, var(--mat-app-corner-medium))}.mat-mdc-card-outlined{background-color:var(--mdc-outlined-card-container-color, var(--mat-app-surface));border-radius:var(--mdc-outlined-card-container-shape, var(--mat-app-corner-medium));border-width:var(--mdc-outlined-card-outline-width);border-color:var(--mdc-outlined-card-outline-color, var(--mat-app-outline-variant));box-shadow:var(--mdc-outlined-card-container-elevation, var(--mat-app-level0))}.mat-mdc-card-outlined::after{border:none}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:\\\"\\\"}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mat-mdc-card-actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mat-mdc-card-title{font-family:var(--mat-card-title-text-font, var(--mat-app-title-large-font));line-height:var(--mat-card-title-text-line-height, var(--mat-app-title-large-line-height));font-size:var(--mat-card-title-text-size, var(--mat-app-title-large-size));letter-spacing:var(--mat-card-title-text-tracking, var(--mat-app-title-large-tracking));font-weight:var(--mat-card-title-text-weight, var(--mat-app-title-large-weight))}.mat-mdc-card-subtitle{color:var(--mat-card-subtitle-text-color, var(--mat-app-on-surface));font-family:var(--mat-card-subtitle-text-font, var(--mat-app-title-medium-font));line-height:var(--mat-card-subtitle-text-line-height, var(--mat-app-title-medium-line-height));font-size:var(--mat-card-subtitle-text-size, var(--mat-app-title-medium-size));letter-spacing:var(--mat-card-subtitle-text-tracking, var(--mat-app-title-medium-tracking));font-weight:var(--mat-card-subtitle-text-weight, var(--mat-app-title-medium-weight))}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatCard;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n// TODO(jelbourn): add `MatActionCard`, which is a card that acts like a button (and has a ripple).\n// Supported in MDC with `.mdc-card__primary-action`. Will require additional a11y docs for users.\n/**\n * Title of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for one variety of card title; any custom title element may be used in its place.\n *\n * MatCardTitle provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardTitle = /*#__PURE__*/(() => {\n  class MatCardTitle {\n    static {\n      this.ɵfac = function MatCardTitle_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatCardTitle)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardTitle,\n        selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-title\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardTitle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Container intended to be used within the `<mat-card>` component. Can contain exactly one\n * `<mat-card-title>`, one `<mat-card-subtitle>` and one content image of any size\n * (e.g. `<img matCardLgImage>`).\n */\nlet MatCardTitleGroup = /*#__PURE__*/(() => {\n  class MatCardTitleGroup {\n    static {\n      this.ɵfac = function MatCardTitleGroup_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatCardTitleGroup)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatCardTitleGroup,\n        selectors: [[\"mat-card-title-group\"]],\n        hostAttrs: [1, \"mat-mdc-card-title-group\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c2,\n        decls: 4,\n        vars: 0,\n        template: function MatCardTitleGroup_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c1);\n            i0.ɵɵelementStart(0, \"div\");\n            i0.ɵɵprojection(1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵprojection(2, 1);\n            i0.ɵɵprojection(3, 2);\n          }\n        },\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatCardTitleGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Content of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for use with other convenience elements, such as `<mat-card-title>`; any custom\n * content block element may be used in its place.\n *\n * MatCardContent provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardContent = /*#__PURE__*/(() => {\n  class MatCardContent {\n    static {\n      this.ɵfac = function MatCardContent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatCardContent)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardContent,\n        selectors: [[\"mat-card-content\"]],\n        hostAttrs: [1, \"mat-mdc-card-content\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardContent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Sub-title of a card, intended for use within `<mat-card>` beneath a `<mat-card-title>`. This\n * component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`.\n *\n * MatCardSubtitle provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardSubtitle = /*#__PURE__*/(() => {\n  class MatCardSubtitle {\n    static {\n      this.ɵfac = function MatCardSubtitle_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatCardSubtitle)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardSubtitle,\n        selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-subtitle\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardSubtitle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Bottom area of a card that contains action buttons, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom action block element may be used in its place.\n *\n * MatCardActions provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardActions = /*#__PURE__*/(() => {\n  class MatCardActions {\n    constructor() {\n      // TODO(jelbourn): deprecate `align` in favor of `actionPosition` or `actionAlignment`\n      // as to not conflict with the native `align` attribute.\n      /** Position of the actions inside the card. */\n      this.align = 'start';\n    }\n    static {\n      this.ɵfac = function MatCardActions_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatCardActions)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardActions,\n        selectors: [[\"mat-card-actions\"]],\n        hostAttrs: [1, \"mat-mdc-card-actions\", \"mdc-card__actions\"],\n        hostVars: 2,\n        hostBindings: function MatCardActions_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-mdc-card-actions-align-end\", ctx.align === \"end\");\n          }\n        },\n        inputs: {\n          align: \"align\"\n        },\n        exportAs: [\"matCardActions\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardActions;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Header region of a card, intended for use within `<mat-card>`. This header captures\n * a card title, subtitle, and avatar.  This component is an optional convenience for use with\n * other convenience elements, such as `<mat-card-footer>`; any custom header block element may be\n * used in its place.\n *\n * MatCardHeader provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardHeader = /*#__PURE__*/(() => {\n  class MatCardHeader {\n    static {\n      this.ɵfac = function MatCardHeader_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatCardHeader)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatCardHeader,\n        selectors: [[\"mat-card-header\"]],\n        hostAttrs: [1, \"mat-mdc-card-header\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c4,\n        decls: 4,\n        vars: 0,\n        consts: [[1, \"mat-mdc-card-header-text\"]],\n        template: function MatCardHeader_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c3);\n            i0.ɵɵprojection(0);\n            i0.ɵɵelementStart(1, \"div\", 0);\n            i0.ɵɵprojection(2, 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵprojection(3, 2);\n          }\n        },\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatCardHeader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Footer area a card, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom footer block element may be used in its place.\n *\n * MatCardFooter provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardFooter = /*#__PURE__*/(() => {\n  class MatCardFooter {\n    static {\n      this.ɵfac = function MatCardFooter_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatCardFooter)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardFooter,\n        selectors: [[\"mat-card-footer\"]],\n        hostAttrs: [1, \"mat-mdc-card-footer\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardFooter;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n// TODO(jelbourn): deprecate the \"image\" selectors to replace with \"media\".\n// TODO(jelbourn): support `.mdc-card__media-content`.\n/**\n * Primary image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom media element may be used in its place.\n *\n * MatCardImage provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardImage = /*#__PURE__*/(() => {\n  class MatCardImage {\n    static {\n      this.ɵfac = function MatCardImage_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatCardImage)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardImage,\n        selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-image\", \"mdc-card__media\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Same as `MatCardImage`, but small. */\nlet MatCardSmImage = /*#__PURE__*/(() => {\n  class MatCardSmImage {\n    static {\n      this.ɵfac = function MatCardSmImage_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatCardSmImage)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardSmImage,\n        selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-sm-image\", \"mdc-card__media\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardSmImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Same as `MatCardImage`, but medium. */\nlet MatCardMdImage = /*#__PURE__*/(() => {\n  class MatCardMdImage {\n    static {\n      this.ɵfac = function MatCardMdImage_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatCardMdImage)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardMdImage,\n        selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-md-image\", \"mdc-card__media\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardMdImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Same as `MatCardImage`, but large. */\nlet MatCardLgImage = /*#__PURE__*/(() => {\n  class MatCardLgImage {\n    static {\n      this.ɵfac = function MatCardLgImage_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatCardLgImage)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardLgImage,\n        selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-lg-image\", \"mdc-card__media\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardLgImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Same as `MatCardImage`, but extra-large. */\nlet MatCardXlImage = /*#__PURE__*/(() => {\n  class MatCardXlImage {\n    static {\n      this.ɵfac = function MatCardXlImage_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatCardXlImage)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardXlImage,\n        selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-xl-image\", \"mdc-card__media\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardXlImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Avatar image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`; any custom media element may be used in its place.\n *\n * MatCardAvatar provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardAvatar = /*#__PURE__*/(() => {\n  class MatCardAvatar {\n    static {\n      this.ɵfac = function MatCardAvatar_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatCardAvatar)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardAvatar,\n        selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-avatar\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardAvatar;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst CARD_DIRECTIVES = [MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage];\nlet MatCardModule = /*#__PURE__*/(() => {\n  class MatCardModule {\n    static {\n      this.ɵfac = function MatCardModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatCardModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatCardModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, CommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatCardModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CARD_CONFIG, MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n","import {\n  Component,\n  OnInit,\n  Signal,\n  WritableSignal,\n  computed,\n  inject,\n  signal,\n} from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport nls from '../../framework/resources/nls/authentication';\nimport { FormFields } from '../../framework/form/form.interfaces';\nimport { FormComponent } from '../../framework/form/form.component';\nimport { authFormFields } from './auth.resources';\nimport { ModalWindowComponent } from \"../../framework/modal-window/modal-window.component\";\n\ndeclare var window: any;\n\n@Component({\n  selector: 'app-authentication',\n  standalone: true,\n  imports: [\n    MatButtonModule,\n    MatFormFieldModule,\n    MatCardModule,\n    MatInputModule,\n    FormsModule,\n    CommonModule,\n    FormComponent,\n    ModalWindowComponent\n  ],\n  templateUrl: './authentication.component.html',\n  styleUrl: './authentication.component.scss',\n})\nexport class AuthenticationComponent {\n  authService: AuthenticationService = inject(AuthenticationService);\n  nls = nls;\n\n  authType: WritableSignal<string> = signal('login');\n  authFields: Signal<FormFields[]> = computed(() => {\n    return authFormFields[this.authType()];\n  });\n\n  changeAuthType(): void {\n    this.authType.update((val) => {\n      return val === 'login' ? 'signup' : 'login';\n    });\n  }\n\n  loginWithUserPass(data: any) {\n    this.authService.loginWithUserPass(data);\n  }\n\n  signupWithUserPass(data: any) {\n    // console.warn(data);\n    this.authService.signupWithUserPass(data);\n  }\n\n  submit(data: any) {\n    if (this.authType() === 'login') {\n      this.loginWithUserPass(data);\n    } else {\n      this.signupWithUserPass(data);\n    }\n  }\n  biometricEnabled(): boolean {\n    let isBiometricEnabled = window.localStorage.getItem('isBiometricEnabled');\n    if (isBiometricEnabled === 'enabled') {\n      return true;\n    }\n    return false;\n  }\n}","<div class=\"auth-container\">\n    <div class=\"auth-form-container\">\n        <div class=\"auth-form-logo mb-2\">\n            <img height=\"100px\" width=\"100px\" src=\"../../../assets/images/loader-logo.webp\"\n                style=\"filter: invert(100%);\" />\n            <p class=\"mb-0\">{{nls.welcome}}</p>\n            <h2 class=\"h2\">{{authType()==='login'?nls.LoginSubheading:nls.SignupSubheading}}</h2>\n        </div>\n        <ng-container *ngIf=\"authType()==='login'\">\n            <app-form (on-submit)=\"submit($event)\" [form-fields]=\"authFields()\"\n                [submit-button-title]=\"nls.Login\"></app-form>\n        </ng-container>\n        <ng-container *ngIf=\"authType()==='signup'\">\n            <app-form (on-submit)=\"submit($event)\" [form-fields]=\"authFields()\"\n                [submit-button-title]=\"nls.Signup\"></app-form>\n        </ng-container>\n        <button *ngIf=\"authType()==='login' && biometricEnabled()\" mat-raised-button type=\"button\"\n            (click)=\"authService.launchBiometric()\" color=\"accent\"\n            class=\"w-100 mt-3\">{{nls.loginUsingBiometric}}</button>\n        <div class=\"pt-4\">\n            <p class=\"text-center auth-form-footer-links\" (click)=\"changeAuthType()\">{{ authType() === 'login' ?\n                nls.createAccount : nls.loginExisting }}</p>\n        </div>\n    </div>\n</div>\n\n<app-modal-window [isOpen]=\"authService.isModalOpen.getValue()\" (onCancel)=\"authService.toggleModal($event)\"\n    (onSubmit)=\"authService.submitModal($event)\" [type]=\"'confirm'\" [modal-heading]=\"nls.EnableBiometric\"\n    [message-title]=\"nls.BiometricEnrolledOnDevice\">\n    <ng-template>\n        <p>{{nls.EnableBiometricMessage}}</p>\n    </ng-template>\n</app-modal-window>","import generic from './generic';\nconst nls = {\n  ...generic,\n  addTasks: \"New Task\",\n  editTask: \"Edit Task\",\n  CancelAddEdit: \"You want to cancel this task action.\",\n  deleteTaskMessage: \"You want to delete this task.\",\n  deleteTask: \"Delete Task\",\n  CancelAddHeader: \"New Task\",\n  SelectedWidget: \"Select Activity\",\n  taskName: \"Task Name\",\n  taskDescription: \"Task Description\",\n  notasksFound: \"No tasks found. Use plus button to add a task.\",\n  created: \"Added:\",\n  updated: \"Edited:\",\n  AddTaskItem: \"New To-Do\",\n  EditTaskItem: \"Edit To-Do\",\n  createTask: \"Create To-Do\"\n}\nexport default nls;","import { ChangeDetectorRef, Component, inject, OnInit, signal, WritableSignal } from '@angular/core';\nimport { FabButtonComponent } from \"../../framework/fab-button/fab-button.component\";\nimport { FormComponent } from \"../../framework/form/form.component\";\nimport { RightPanelComponent } from \"../../framework/right-panel/right-panel.component\";\nimport { BehaviorSubject } from 'rxjs';\nimport nls from '../../framework/resources/nls/tasks';\nimport { FormFields } from '../../framework/form/form.interfaces';\nimport { ModalWindowComponent } from \"../../framework/modal-window/modal-window.component\";\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ApiService } from '../../services/api.service';\nimport { MessagesService } from '../../services/messages.service';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport moment from 'moment';\nimport { FormBuilder, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport interface TaskItem {\n  name: string;\n  [key: string]: any;\n}\n\n@Component({\n  selector: 'app-tasks',\n  standalone: true,\n  imports: [\n    FabButtonComponent,\n    FormComponent,\n    RightPanelComponent,\n    ModalWindowComponent,\n    CommonModule,\n    MatButtonModule,\n    MatRippleModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSelectModule\n  ],\n  templateUrl: './tasks.component.html',\n  styleUrl: './tasks.component.scss'\n})\nexport class TasksComponent implements OnInit {\n  _api: ApiService = inject(ApiService);\n  _message: MessagesService = inject(MessagesService);\n  private cdRef: ChangeDetectorRef = inject(ChangeDetectorRef);\n  private fb: FormBuilder = inject(FormBuilder);\n\n  moment = moment;\n  nls = nls;\n  rightPanelOpen: WritableSignal<boolean> = signal(false);\n  isModalOpen: WritableSignal<boolean> = signal(false);\n  isEdit = new BehaviorSubject<boolean>(false);\n  taskFormFields = new BehaviorSubject<FormFields[]>([]);\n  widgetSelectFormFields = new BehaviorSubject<FormFields[]>([]);\n  modalInfo: WritableSignal<string[]> = signal(['', '', '']);\n  tasksList: WritableSignal<any[]> = signal([]);\n  selectedWidget: WritableSignal<any> = signal('');\n  selelctedTask: WritableSignal<string> = signal('');\n  addTaskFormFields = new BehaviorSubject<FormFields[]>([{\n    name: 'itemName',\n    label: 'To-Do Name',\n    required: true,\n    type: 'text'\n  }]);\n\n  addTaskItems: WritableSignal<any[]> = signal([]);\n  addTaskFormData = new BehaviorSubject<any>({});\n  panelSubmitButtonDisbale: WritableSignal<boolean> = signal(true);\n\n  ngOnInit(): void {\n    this.settaskFormFields();\n    this.getTasksList();\n    this.addTaskFormData.subscribe((value) => {\n      let formKeys = Object.keys(value);\n      // console.log(formKeys, value);\n      let valid = true;\n      for (let key of formKeys) {\n        if (!value[key] || !value.items || value.items.length === 0) {\n          valid = false;\n        }\n      }\n      this.panelSubmitButtonDisbale.set(!valid);\n    })\n  }\n  async getTasksList() {\n    let tasks = await this._api.local_get('tasks');\n    this.tasksList.set(tasks);\n  }\n  async settaskFormFields() {\n    let data = await this.getInitialFormFields();\n    this.taskFormFields.next(data);\n\n    let widgetemp = { ...data[0] };\n    widgetemp.defaultValue = (widgetemp as any).options[0]?.value\n    this.widgetSelectFormFields.next([widgetemp])\n  }\n  async getInitialFormFields(): Promise<FormFields[]> {\n    let options = await this.buildWidgetOptions();\n    // console.log(this.selectedWidget());\n    return [\n      {\n        name: 'widgetId', label: nls.SelectedWidget, type: 'select', required: true, options: options, defaultValue: this.selectedWidget() ? this.selectedWidget().widgetId : options[0]?.value\n      },\n      {\n        name: 'taskName', label: nls.taskName, type: 'text', required: true,\n      },\n      {\n        name: 'taskDescription', label: nls.taskDescription, type: 'text', required: true,\n      },\n    ];\n  }\n  async buildWidgetOptions() {\n    let widgets = await this._api.local_get('widgets');\n    let options: { label: any; value: any; }[] = [];\n    widgets.forEach((element: any) => {\n      options.push({ label: element.title, value: element.id })\n    });\n    return options;\n  }\n  async handleFormChange(data: any) {\n    this.selectedWidget.set(data);\n    let tasks = await this._api.local_get('tasks');\n    tasks = tasks.filter((item: any) => item.widgetId === data.widgetId);\n    this.tasksList.set(tasks);\n  }\n  async handleAddTaskFormChange(data: any) {\n    let values = this.addTaskFormData.getValue();\n    this.addTaskFormData.next({ ...values, ...data });\n  }\n\n  closePanel(data: any): void {\n    this.isModalOpen.set(true);\n    this.modalInfo.set(['add-edit', nls.CancelAddHeader, 'confirm']);\n  }\n\n  async togglePanel(state: boolean) {\n    this.rightPanelOpen.set(state);\n    if (!state) {\n      this.selelctedTask.set('');\n      this.addTaskFormData.next({});\n      this.addTaskItems.set([]);\n      this.toggleModal(false);\n      this.modalInfo.set(['', '', '', '']);\n    }\n  }\n  async submitPanel(data: any): Promise<void> {\n    //do something\n    data = this.addTaskFormData.getValue();\n\n    let result;\n    if (this.selelctedTask()) {\n      data.id = this.selelctedTask();\n      result = await this._api.local_put('tasks', data);\n\n    } else {\n      result = await this._api.local_post('tasks', data);\n    }\n    if (result.success) {\n      this._message.success(result.message);\n      this.handleFormChange(this.selectedWidget());\n      this.togglePanel(false);\n    } else {\n      this._message.error(result.message)\n    }\n  }\n\n  onClickAddItem() {\n    if (this.addTaskItems().length) {\n      let formFields = this.addTaskItems()[0].formFields;\n      formFields.map((item: any) => {\n        item.defaultValue = '';\n        item.deletable = false;\n        return item;\n      })\n      this.addTaskFormFields.next(formFields)\n    } else {\n      this.addTaskFormFields.next([{\n        name: 'itemName',\n        label: 'To-Do Name',\n        required: true,\n        type: 'text'\n      }])\n    }\n\n    this.isModalOpen.set(true);\n    this.modalInfo.set(['add-task-item', nls.AddField, 'info']);\n\n  }\n  async copyEditAdd(item: any) {\n    this.isEdit.next(false);\n    this.selelctedTask.set('');\n    this.togglePanel(true);\n\n    let data = await this.getInitialFormFields();\n    // console.log(data);\n    data.map((field: FormFields) => {\n      field.defaultValue = item[field.name];\n      return field;\n    })\n\n    this.taskFormFields.next(data);\n    this.addTaskItems.set(item.items);\n    this.addTaskFormData.next(item);\n  }\n  async createTask() {\n    this.togglePanel(true);\n    this.isEdit.next(false);\n    this.taskFormFields.next(await this.getInitialFormFields())\n  }\n  async onClickTaskItem(item: any) {\n    // console.log(item);\n    this.selelctedTask.set(item.id);\n    this.isEdit.next(true);\n    this.togglePanel(true);\n\n    let data = await this.getInitialFormFields();\n    // console.log(data);\n    data.map((field: FormFields) => {\n      field.defaultValue = item[field.name];\n      return field;\n    })\n\n    this.taskFormFields.next(data);\n    this.addTaskItems.set(item.items);\n    this.addTaskFormData.next(item);\n  }\n  deleteSelectedTask() {\n    this.isModalOpen.set(true);\n    this.modalInfo.set(['delete-task', nls.deleteTask, 'confirm']);\n  }\n  toggleModal(state: boolean) {\n    this.isModalOpen.set(state);\n  }\n  async submitModal(data: any) {\n    if (this.modalInfo()[0] === 'add-edit') {\n      this.togglePanel(false);\n    } else if (this.modalInfo()[0] === 'delete-task') {\n      // console.log(this.selelctedTask());\n      let result = await this._api.local_delete('tasks', this.selelctedTask());\n      this._message.success(result.message);\n      this.handleFormChange(this.selectedWidget());\n      this.selelctedTask.set('');\n      this.togglePanel(false);\n    }\n    this.toggleModal(false);\n    this.modalInfo.set(['', '', '', '']);\n    this.addTaskFormData.next({});\n    this.addTaskItems.set([])\n  }\n  onSubmitAddField(data: any): void {\n    // console.log(data, this.modalInfo()[3]);\n    if (this.modalInfo()[3]) {\n      let oldItems = this.addTaskItems();\n      let newItems = oldItems.map((item: any) => {\n        // console.log(item)\n        if (item.id === this.modalInfo()[3]) {\n          item = { ...item, ...data }\n        }\n        return item;\n      });\n      // console.log(newItems);\n      this.addTaskItems.set(newItems)\n    } else {\n      data.id = uuidv4();\n      let oldItems = this.addTaskItems();\n      this.addTaskItems.set([...oldItems, data])\n    }\n    let values = this.addTaskFormData.getValue();\n    this.addTaskFormData.next({ ...values, items: this.addTaskItems() });\n    this.toggleModal(false);\n    this.modalInfo.set(['', '', '', '']);\n  }\n  onClickEditTaskItemFromAddPanel(data: any) {\n    let formFields = data.formFields;\n    formFields.map((item: any) => {\n      item.defaultValue = data.formData[item.name];\n      item.deletable = item.name !== 'itemName';\n      return item;\n    });\n    this.addTaskFormFields.next(formFields)\n    this.modalInfo.set(['add-task-item', nls.EditTaskItem, 'info', data.id]);\n    this.isModalOpen.set(true);\n  }\n  onClickDeleteTaskItemFromAddPanel(data: any) {\n    let oldItems = this.addTaskItems();\n    let filteredItems = oldItems.filter((item: any) => {\n      return item.id !== data.id;\n    })\n    this.addTaskItems.set(filteredItems);\n    let values = this.addTaskFormData.getValue();\n    this.addTaskFormData.next({ ...values, items: this.addTaskItems() });\n  }\n}\n","<div class=\"py-2 d-flex flex-column gap-2\">\n  <app-form [submit-button-title]=\"nls.okay\" [submittable]=\"false\" (on-change)=\"handleFormChange($event)\"\n    [form-fields]=\"widgetSelectFormFields.getValue()\" *ngIf=\"widgetSelectFormFields.getValue().length\">\n  </app-form>\n\n  <div class=\"task-item p-2 bg-white\" *ngFor=\"let item of tasksList(); let index=index;\">\n    <div class=\"task-content\" (click)=\"onClickTaskItem(item)\" mat-ripple>\n      <p class=\"task-name m-0\">{{item.taskName}}</p>\n      <p class=\"task-description m-0\">{{item.taskDescription}}</p>\n      <div class=\"task-timestamp\">\n        <p class=\"item text-muted m-0\"><mat-icon class=\"icon\">note_add</mat-icon> {{moment(item.createdAt).format('L')}}\n          {{moment(item.createdAt).format('LT')}}</p>\n        <p class=\"item text-muted m-0\"><mat-icon class=\"icon\">edit_document</mat-icon>\n          {{moment(item.createdAt).format('L')}}\n          {{moment(item.createdAt).format('LT')}}</p>\n      </div>\n    </div>\n    <div class=\"task-duplicate\" mat-ripple (click)=\"copyEditAdd(item)\">\n      <mat-icon>content_copy</mat-icon>\n    </div>\n  </div>\n  <div *ngIf=\"!tasksList().length\" class=\"no-data-placeholder\">\n    <div class=\"no-data-image\"></div>\n    <p class=\"text-center text-secondary\">{{nls.notasksFound}}</p>\n  </div>\n</div>\n\n\n<app-fab-button (on-click)=\"createTask()\" [disabled]=\"selectedWidget().widgetId===''\" />\n<app-right-panel [isOpen]=\"rightPanelOpen()\" (onCancel)=\"closePanel($event)\"\n  [panel-heading]=\"isEdit.getValue()?nls.editTask:nls.addTasks\" [type]=\"'info'\">\n  <ng-template>\n    <app-form [form-fields]=\"taskFormFields.getValue()\" [submittable]=\"false\"\n      (on-change)=\"handleAddTaskFormChange($event)\">\n    </app-form>\n\n    <ng-container *ngFor=\"let item of addTaskItems(); let index=index;\">\n      <div class=\"task-item p-2 bg-white mb-2\">\n        <div class=\"task-content\">\n          <div *ngFor=\"let field of item.formFields;\" class=\"d-flex gap-2 align-items-center\">\n            <p class=\"task-name m-0\">{{field.label}}</p>\n            <p class=\"task-name m-0\">:</p>\n            <p class=\"task-description m-0\">{{item.formData[field.name]}}</p>\n          </div>\n        </div>\n        <div>\n          <div class=\"task-duplicate\" mat-ripple (click)=\"onClickEditTaskItemFromAddPanel(item)\">\n            <mat-icon>edit</mat-icon>\n          </div>\n          <div class=\"task-duplicate\" mat-ripple (click)=\"onClickDeleteTaskItemFromAddPanel(item)\">\n            <mat-icon>delete</mat-icon>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n    <button mat-raised-button class=\"w-100 mt-3\" (click)=\"onClickAddItem()\">{{nls.AddTaskItem}}</button>\n    <button *ngIf=\"isEdit.getValue()\" class=\"w-100 mt-3\" mat-raised-button color=\"accent\" (click)=\"deleteSelectedTask()\"\n      type=\"button\">{{nls.delete}}</button>\n    <button mat-raised-button class=\"w-100 mt-3\" (click)=\"submitPanel($event)\" [disabled]=\"panelSubmitButtonDisbale()\"\n      color=\"primary\">{{nls.okay}}</button>\n  </ng-template>\n</app-right-panel>\n\n<app-modal-window [isOpen]=\"isModalOpen()\" (onCancel)=\"toggleModal($event)\" (onSubmit)=\"submitModal($event)\"\n  [modal-heading]=\"modalInfo()[1]\" [type]=\"modalInfo()[2]\">\n  <ng-template>\n    <p *ngIf=\"modalInfo()[0]==='add-edit'\">{{nls.CancelAddEdit}}</p>\n    <p *ngIf=\"modalInfo()[0]==='delete-task'\">{{nls.deleteTaskMessage}}</p>\n\n    <app-form *ngIf=\"modalInfo()[0]==='add-task-item'\" [dynamic-form-fields]=\"addTaskFormFields\"\n      [cancel-button-title]=\"nls.cancel\" [submit-button-title]=\"nls.okay\" (on-cancel)=\"toggleModal(false)\"\n      (on-submit)=\"onSubmitAddField($event)\">\n    </app-form>\n\n  </ng-template>\n</app-modal-window>","import generic from \"./generic\"\nconst nls = {\n  ...generic,\n  SelectedWidget: \"Select Activity\",\n  addSchedule: \"New Schedule\",\n  editSchedule: \"Edit Schedule\",\n  CancelAddHeader: \"New Schedule\",\n  CancelAddEdit: \"You want to cancel this schedule action.\",\n  scheduleName: \"Schedule Name\",\n  scheduleDescription: \"Schedule Description\",\n  selectTasks: \"Select Tasks\",\n  noOfTasks: \"tasks added\",\n  noSchedulesFound: \"No schedules found. Use plus button to add a schedule.\",\n  startDay: \"Start Day\"\n}\nexport default nls;","import { Component, inject, OnInit, signal, WritableSignal } from '@angular/core';\nimport { FormComponent } from \"../../framework/form/form.component\";\nimport { CommonModule } from '@angular/common';\nimport nls from '../../framework/resources/nls/schedules';\nimport { BehaviorSubject } from 'rxjs';\nimport { FormFields } from '../../framework/form/form.interfaces';\nimport { ApiService } from '../../services/api.service';\nimport { FabButtonComponent } from \"../../framework/fab-button/fab-button.component\";\nimport { RightPanelComponent } from \"../../framework/right-panel/right-panel.component\";\nimport { ModalWindowComponent } from \"../../framework/modal-window/modal-window.component\";\nimport { MessagesService } from '../../services/messages.service';\nimport moment from 'moment';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRippleModule } from '@angular/material/core';\nimport { weeklyField } from './schedule.resources';\n\n@Component({\n  selector: 'app-schedules',\n  standalone: true,\n  imports: [CommonModule, FormComponent, FabButtonComponent, RightPanelComponent, ModalWindowComponent, MatIconModule, MatRippleModule],\n  templateUrl: './schedules.component.html',\n  styleUrl: './schedules.component.scss'\n})\nexport class SchedulesComponent implements OnInit {\n  private _api: ApiService = inject(ApiService);\n  private _message: MessagesService = inject(MessagesService);\n\n  nls = nls;\n  moment = moment;\n\n  widgetSelectFormFields = new BehaviorSubject<FormFields[]>([]);\n  selectedWidget: WritableSignal<any> = signal('');\n  rightPanelOpen: WritableSignal<boolean> = signal(false);\n  isEdit = new BehaviorSubject<boolean>(false);\n  isModalOpen: WritableSignal<boolean> = signal(false);\n  modalInfo: WritableSignal<string[]> = signal(['', '', '']);\n  scheduleFormFields = new BehaviorSubject<FormFields[]>([]);\n  schedulesList: WritableSignal<any[]> = signal([]);\n  selelctedSchedule: WritableSignal<string> = signal('');\n\n  ngOnInit(): void {\n    this.setWidgetSelectFormFields();\n  }\n\n  private isWeekly(widgets: any[], widgetId: string): boolean {\n    return widgets.some(widget => widget.id === widgetId && widget.type === \"WEEKLY\");\n  }\n  async setScheduleFormFields() {\n    let widgetData = await this.buildWidgetOptions()\n    let widgetOptions = widgetData.options;\n    let defaultWidget = this.selectedWidget() ? this.selectedWidget().widgetId : widgetOptions[0].value;\n    let taskOptions = await this.buildTasksOptions(defaultWidget);\n    let weekly: boolean = this.isWeekly(widgetData.widgets, defaultWidget);\n\n    let data = await this.getInitialFormFields(widgetOptions, defaultWidget, taskOptions, weekly);\n\n    this.scheduleFormFields.next(data);\n  }\n\n  async getInitialFormFields(widgetOptions: any, defaultWidget: any, taskOptions: any, weekly: boolean = false): Promise<FormFields[]> {\n    // console.log(defaultWidget);\n    let scheduleFields: FormFields[] = [\n      {\n        name: 'widgetId', label: nls.SelectedWidget, type: 'select', required: true, options: widgetOptions, defaultValue: defaultWidget\n      },\n      {\n        name: 'scheduleName', label: nls.scheduleName, type: 'text', required: true, maxlength: 28\n      },\n      {\n        name: 'scheduleDescription', label: nls.scheduleDescription, type: 'text', required: true,\n      },\n      {\n        name: 'tasks', label: nls.selectTasks, type: 'select', required: true, multiple: true, options: taskOptions\n      },\n    ];\n    if (weekly) {\n      weeklyField.defaultValue = '';\n      scheduleFields.splice(3, 0, weeklyField);\n    }\n    // console.log(scheduleFields);\n    return scheduleFields;\n  }\n\n  async setWidgetSelectFormFields() {\n    let options = (await this.buildWidgetOptions()).options;\n    let defaultValue = this.selectedWidget() ? this.selectedWidget().widgetId : options[0]?.value\n    let field = {\n      name: 'widgetId', label: nls.SelectedWidget, type: 'select', required: true, options: options, defaultValue: defaultValue\n    }\n    this.widgetSelectFormFields.next([field])\n  }\n  async buildWidgetOptions() {\n    let widgets = await this._api.local_get('widgets');\n    let options: { label: any; value: any; }[] = [];\n    widgets.forEach((element: any) => {\n      options.push({ label: element.title, value: element.id })\n    });\n    return { options, widgets };\n  }\n  async buildTasksOptions(widget: string) {\n    let tasks = await this._api.local_get('tasks');\n    let filteredTasks = tasks.filter((task: any) => {\n      return task.widgetId === widget;\n    })\n    let options: { label: any; value: any; }[] = [];\n    filteredTasks.forEach((element: any) => {\n      options.push({ label: element.taskName, value: element.id })\n    });\n    return options;\n  }\n  async handleFormChange(data: any) {\n    this.selectedWidget.set(data);\n    let schedules = await this._api.local_get('schedules');\n    schedules = schedules.filter((item: any) => item.widgetId === data.widgetId);\n    this.schedulesList.set(schedules);\n  }\n  prevFormData: any = {};\n  async handleAddScheduleFormChange(data: any) {\n    // console.log(data)\n    if (this.prevFormData && this.prevFormData.widgetId !== data.widgetId) {\n      // this.scheduleFormFields.next([]);\n      // await delay(20);\n\n      let widgetData = await this.buildWidgetOptions()\n      let widgetOptions = widgetData.options;\n      let defaultWidget = data.widgetId;\n      let taskOptions = await this.buildTasksOptions(defaultWidget);\n\n      let weekly: boolean = this.isWeekly(widgetData.widgets, defaultWidget);\n\n      let fields = await this.getInitialFormFields(widgetOptions, defaultWidget, taskOptions, weekly);\n      fields.map((field: FormFields) => {\n        field.defaultValue = data[field.name];\n        if (field.name === 'tasks' || field.name === 'startDay') {\n          field.defaultValue = ''\n        }\n\n        return field;\n      });\n      this.scheduleFormFields.next(fields);\n    }\n    this.prevFormData = data;\n  }\n\n  async togglePanel(state: boolean) {\n    this.rightPanelOpen.set(state);\n  }\n  closePanel(data: any): void {\n    this.isModalOpen.set(true);\n    if (this.isEdit.getValue()) {\n      this.modalInfo.set(['add-edit', nls.editSchedule, 'confirm']);\n\n    } else {\n      this.modalInfo.set(['add-edit', nls.CancelAddHeader, 'confirm']);\n    }\n  }\n  async createSchedule() {\n    this.togglePanel(true);\n    this.setScheduleFormFields();\n  }\n  toggleModal(state: boolean) {\n    this.isModalOpen.set(state);\n  }\n  async submitModal(data: any) {\n    this.togglePanel(false);\n    this.toggleModal(false);\n    this.modalInfo.set(['', '', '', '']);\n    this.selelctedSchedule.set('');\n    this.isEdit.next(false);\n\n  }\n  async submitAddSchedule(data: any) {\n    let result;\n    if (this.isEdit.getValue()) {\n      data.id = this.selelctedSchedule();\n      result = await this._api.local_put('schedules', data);\n    } else {\n      result = await this._api.local_post('schedules', data)\n    }\n    if (result.success) {\n      this._message.success(result.message);\n      this.handleFormChange(this.selectedWidget());\n      this.togglePanel(false);\n      this.selelctedSchedule.set('');\n      this.isEdit.next(false);\n    } else {\n      this._message.error(result.message)\n    }\n  }\n  async onClickScheduleItem(data: any) {\n    this.selelctedSchedule.set(data.id);\n    this.isEdit.next(true);\n    this.togglePanel(true);\n\n    let widgetData = await this.buildWidgetOptions()\n    let widgetOptions = widgetData.options;\n\n    let defaultWidget = data.widgetId;\n    let taskOptions = await this.buildTasksOptions(defaultWidget);\n\n    let weekly: boolean = widgetData.widgets.find((item: any) => item.id === defaultWidget)?.type === \"WEEKLY\";\n\n    let fields = await this.getInitialFormFields(widgetOptions, defaultWidget, taskOptions, weekly);\n    fields.map((field: FormFields) => {\n      field.defaultValue = data[field.name];\n      return field;\n    });\n    this.scheduleFormFields.next(fields);\n  }\n  async copyEditAdd(data: any) {\n    this.togglePanel(true);\n\n    let widgetData = await this.buildWidgetOptions()\n    let widgetOptions = widgetData.options;\n\n    let defaultWidget = data.widgetId;\n    let taskOptions = await this.buildTasksOptions(defaultWidget);\n\n    let weekly: boolean = widgetData.widgets.find((item: any) => item.id === defaultWidget)?.type === \"WEEKLY\";\n\n    let fields = await this.getInitialFormFields(widgetOptions, defaultWidget, taskOptions, weekly);\n    fields.map((field: FormFields) => {\n      field.defaultValue = data[field.name];\n      return field;\n    });\n    this.scheduleFormFields.next(fields);\n\n  }\n}\n","<div class=\"py-2 d-flex flex-column gap-2\">\n  <app-form [submit-button-title]=\"nls.okay\" [submittable]=\"false\" (on-change)=\"handleFormChange($event)\"\n    [form-fields]=\"widgetSelectFormFields.getValue()\" *ngIf=\"widgetSelectFormFields.getValue().length\">\n  </app-form>\n  <div class=\"schedule-item p-2 bg-white\" *ngFor=\"let item of schedulesList(); let index=index;\">\n    <div class=\"schedule-content\" (click)=\"onClickScheduleItem(item)\" mat-ripple>\n      <p class=\"schedule-name m-0\">{{item.scheduleName}}</p>\n      <p class=\"schedule-description m-0\">{{item.scheduleDescription}}</p>\n      <p class=\"schedule-description m-0\">{{item.tasks.length}} {{nls.noOfTasks}}</p>\n      <div class=\"schedule-timestamp\">\n        <p class=\"item m-0\"><mat-icon class=\"icon\">note_add</mat-icon> {{moment(item.createdAt).format('L')}}\n          {{moment(item.createdAt).format('LT')}}</p>\n        <p class=\"item m-0\"><mat-icon class=\"icon\">edit_document</mat-icon>\n          {{moment(item.createdAt).format('L')}}\n          {{moment(item.createdAt).format('LT')}}</p>\n      </div>\n    </div>\n    <div class=\"schedule-duplicate\" mat-ripple (click)=\"copyEditAdd(item)\">\n      <mat-icon>content_copy</mat-icon>\n    </div>\n  </div>\n  <div *ngIf=\"!schedulesList().length\" class=\"no-data-placeholder\">\n    <div class=\"no-data-image\"></div>\n    <p class=\"text-center text-secondary\">{{nls.noSchedulesFound}}</p>\n  </div>\n</div>\n<app-fab-button (on-click)=\"createSchedule()\" [disabled]=\"selectedWidget().widgetId===''\" />\n<app-right-panel [isOpen]=\"rightPanelOpen()\" (onCancel)=\"closePanel($event)\"\n  [panel-heading]=\"isEdit.getValue()?nls.editSchedule:nls.addSchedule\" [type]=\"'info'\">\n  <ng-template>\n    <app-form [form-fields]=\"scheduleFormFields.getValue()\" [cancel-button-title]=\"nls.cancel\"\n      [submit-button-title]=\"nls.okay\" (on-cancel)=\"closePanel($event)\" (on-submit)=\"submitAddSchedule($event)\"\n      (on-change)=\"handleAddScheduleFormChange($event)\">\n    </app-form>\n\n  </ng-template>\n</app-right-panel>\n\n<app-modal-window [isOpen]=\"isModalOpen()\" (onCancel)=\"toggleModal($event)\" (onSubmit)=\"submitModal($event)\"\n  [modal-heading]=\"modalInfo()[1]\" [type]=\"modalInfo()[2]\">\n  <ng-template>\n    <p *ngIf=\"modalInfo()[0]==='add-edit'\">{{nls.CancelAddEdit}}</p>\n  </ng-template>\n</app-modal-window>","import { FormFields } from \"../../framework/form/form.interfaces\"\nimport nls from \"../../framework/resources/nls/schedules\"\n\nexport const days = {\n  MONDAY: 1,\n  TUESDAY: 2,\n  WEDNESDAY: 3,\n  THURSDAY: 4,\n  FRIDAY: 5,\n  SATURDAY: 6,\n  SUNDAY: 0\n}\n\nexport const dayOptions = [\n  { value: days.MONDAY, label: \"Monday\" },\n  { value: days.TUESDAY, label: \"Tuesday\" },\n  { value: days.WEDNESDAY, label: \"Wednesday\" },\n  { value: days.THURSDAY, label: \"Thursday\" },\n  { value: days.FRIDAY, label: \"Friday\" },\n  { value: days.SATURDAY, label: \"Saturday\" },\n  { value: days.SUNDAY, label: \"Sunday\" },\n]\n\nexport const weeklyField: FormFields = {\n  name: 'startDay', label: nls.startDay, type: 'select', required: true, options: dayOptions, defaultValue: ''\n}","import { Routes } from '@angular/router';\nimport { AccountComponent } from '../account/account.component';\nimport { ReportsComponent } from '../reports/reports.component';\nimport { DashboardComponent } from '../dashboard/dashboard.component';\nimport { LoggingComponent } from '../logging/logging.component';\nimport { AuthenticationComponent } from '../authentication/authentication.component';\nimport { TasksComponent } from '../tasks/tasks.component';\nimport { SchedulesComponent } from '../schedules/schedules.component';\n\nexport const routes: Routes = [\n    { path: '', component: DashboardComponent },\n    { path: 'reports', component: ReportsComponent },\n    { path: 'add-tasks', component: TasksComponent },\n    { path: 'add-schedules', component: SchedulesComponent },\n    { path: 'account', component: AccountComponent },\n    { path: 'logging/:log_type', component: LoggingComponent },\n    { path: 'auth', component: AuthenticationComponent }\n];\n","/**\n * @license Angular v18.2.5\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, ɵChangeDetectionScheduler, ɵRuntimeError, Injectable, InjectionToken, ɵperformanceMarkFeature, makeEnvironmentProviders, RendererFactory2, NgZone, ANIMATION_MODULE_TYPE } from '@angular/core';\nimport { ɵDomRendererFactory2 } from '@angular/platform-browser';\nconst ANIMATION_PREFIX = '@';\nlet AsyncAnimationRendererFactory = /*#__PURE__*/(() => {\n  class AsyncAnimationRendererFactory {\n    /**\n     *\n     * @param moduleImpl allows to provide a mock implmentation (or will load the animation module)\n     */\n    constructor(doc, delegate, zone, animationType, moduleImpl) {\n      this.doc = doc;\n      this.delegate = delegate;\n      this.zone = zone;\n      this.animationType = animationType;\n      this.moduleImpl = moduleImpl;\n      this._rendererFactoryPromise = null;\n      this.scheduler = inject(ɵChangeDetectionScheduler, {\n        optional: true\n      });\n      this.loadingSchedulerFn = inject(ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN, {\n        optional: true\n      });\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      // When the root view is removed, the renderer defers the actual work to the\n      // `TransitionAnimationEngine` to do this, and the `TransitionAnimationEngine` doesn't actually\n      // remove the DOM node, but just calls `markElementAsRemoved()`. The actual DOM node is not\n      // removed until `TransitionAnimationEngine` \"flushes\".\n      // Note: we already flush on destroy within the `InjectableAnimationEngine`. The injectable\n      // engine is not provided when async animations are used.\n      this._engine?.flush();\n    }\n    /**\n     * @internal\n     */\n    loadImpl() {\n      // Note on the `.then(m => m)` part below: Closure compiler optimizations in g3 require\n      // `.then` to be present for a dynamic import (or an import should be `await`ed) to detect\n      // the set of imported symbols.\n      const loadFn = () => this.moduleImpl ?? import('@angular/animations/browser').then(m => m);\n      let moduleImplPromise;\n      if (this.loadingSchedulerFn) {\n        moduleImplPromise = this.loadingSchedulerFn(loadFn);\n      } else {\n        moduleImplPromise = loadFn();\n      }\n      return moduleImplPromise.catch(e => {\n        throw new ɵRuntimeError(5300 /* RuntimeErrorCode.ANIMATION_RENDERER_ASYNC_LOADING_FAILURE */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Async loading for animations package was ' + 'enabled, but loading failed. Angular falls back to using regular rendering. ' + \"No animations will be displayed and their styles won't be applied.\");\n      }).then(({\n        ɵcreateEngine,\n        ɵAnimationRendererFactory\n      }) => {\n        // We can't create the renderer yet because we might need the hostElement and the type\n        // Both are provided in createRenderer().\n        this._engine = ɵcreateEngine(this.animationType, this.doc);\n        const rendererFactory = new ɵAnimationRendererFactory(this.delegate, this._engine, this.zone);\n        this.delegate = rendererFactory;\n        return rendererFactory;\n      });\n    }\n    /**\n     * This method is delegating the renderer creation to the factories.\n     * It uses default factory while the animation factory isn't loaded\n     * and will rely on the animation factory once it is loaded.\n     *\n     * Calling this method will trigger as side effect the loading of the animation module\n     * if the renderered component uses animations.\n     */\n    createRenderer(hostElement, rendererType) {\n      const renderer = this.delegate.createRenderer(hostElement, rendererType);\n      if (renderer.ɵtype === 0 /* AnimationRendererType.Regular */) {\n        // The factory is already loaded, this is an animation renderer\n        return renderer;\n      }\n      // We need to prevent the DomRenderer to throw an error because of synthetic properties\n      if (typeof renderer.throwOnSyntheticProps === 'boolean') {\n        renderer.throwOnSyntheticProps = false;\n      }\n      // Using a dynamic renderer to switch the renderer implementation once the module is loaded.\n      const dynamicRenderer = new DynamicDelegationRenderer(renderer);\n      // Kick off the module loading if the component uses animations but the module hasn't been\n      // loaded yet.\n      if (rendererType?.data?.['animation'] && !this._rendererFactoryPromise) {\n        this._rendererFactoryPromise = this.loadImpl();\n      }\n      this._rendererFactoryPromise?.then(animationRendererFactory => {\n        const animationRenderer = animationRendererFactory.createRenderer(hostElement, rendererType);\n        dynamicRenderer.use(animationRenderer);\n        this.scheduler?.notify(10 /* NotificationSource.AsyncAnimationsLoaded */);\n      }).catch(e => {\n        // Permanently use regular renderer when loading fails.\n        dynamicRenderer.use(renderer);\n      });\n      return dynamicRenderer;\n    }\n    begin() {\n      this.delegate.begin?.();\n    }\n    end() {\n      this.delegate.end?.();\n    }\n    whenRenderingDone() {\n      return this.delegate.whenRenderingDone?.() ?? Promise.resolve();\n    }\n    static {\n      this.ɵfac = function AsyncAnimationRendererFactory_Factory(__ngFactoryType__) {\n        i0.ɵɵinvalidFactory();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: AsyncAnimationRendererFactory,\n        factory: AsyncAnimationRendererFactory.ɵfac\n      });\n    }\n  }\n  return AsyncAnimationRendererFactory;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The class allows to dynamicly switch between different renderer implementations\n * by changing the delegate renderer.\n */\nclass DynamicDelegationRenderer {\n  constructor(delegate) {\n    this.delegate = delegate;\n    // List of callbacks that need to be replayed on the animation renderer once its loaded\n    this.replay = [];\n    this.ɵtype = 1 /* AnimationRendererType.Delegated */;\n  }\n  use(impl) {\n    this.delegate = impl;\n    if (this.replay !== null) {\n      // Replay queued actions using the animation renderer to apply\n      // all events and properties collected while loading was in progress.\n      for (const fn of this.replay) {\n        fn(impl);\n      }\n      // Set to `null` to indicate that the queue was processed\n      // and we no longer need to collect events and properties.\n      this.replay = null;\n    }\n  }\n  get data() {\n    return this.delegate.data;\n  }\n  destroy() {\n    this.replay = null;\n    this.delegate.destroy();\n  }\n  createElement(name, namespace) {\n    return this.delegate.createElement(name, namespace);\n  }\n  createComment(value) {\n    return this.delegate.createComment(value);\n  }\n  createText(value) {\n    return this.delegate.createText(value);\n  }\n  get destroyNode() {\n    return this.delegate.destroyNode;\n  }\n  appendChild(parent, newChild) {\n    this.delegate.appendChild(parent, newChild);\n  }\n  insertBefore(parent, newChild, refChild, isMove) {\n    this.delegate.insertBefore(parent, newChild, refChild, isMove);\n  }\n  removeChild(parent, oldChild, isHostElement) {\n    this.delegate.removeChild(parent, oldChild, isHostElement);\n  }\n  selectRootElement(selectorOrNode, preserveContent) {\n    return this.delegate.selectRootElement(selectorOrNode, preserveContent);\n  }\n  parentNode(node) {\n    return this.delegate.parentNode(node);\n  }\n  nextSibling(node) {\n    return this.delegate.nextSibling(node);\n  }\n  setAttribute(el, name, value, namespace) {\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n  removeAttribute(el, name, namespace) {\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n  addClass(el, name) {\n    this.delegate.addClass(el, name);\n  }\n  removeClass(el, name) {\n    this.delegate.removeClass(el, name);\n  }\n  setStyle(el, style, value, flags) {\n    this.delegate.setStyle(el, style, value, flags);\n  }\n  removeStyle(el, style, flags) {\n    this.delegate.removeStyle(el, style, flags);\n  }\n  setProperty(el, name, value) {\n    // We need to keep track of animation properties set on default renderer\n    // So we can also set them also on the animation renderer\n    if (this.shouldReplay(name)) {\n      this.replay.push(renderer => renderer.setProperty(el, name, value));\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n  setValue(node, value) {\n    this.delegate.setValue(node, value);\n  }\n  listen(target, eventName, callback) {\n    // We need to keep track of animation events registred by the default renderer\n    // So we can also register them against the animation renderer\n    if (this.shouldReplay(eventName)) {\n      this.replay.push(renderer => renderer.listen(target, eventName, callback));\n    }\n    return this.delegate.listen(target, eventName, callback);\n  }\n  shouldReplay(propOrEventName) {\n    //`null` indicates that we no longer need to collect events and properties\n    return this.replay !== null && propOrEventName.startsWith(ANIMATION_PREFIX);\n  }\n}\n/**\n * Provides a custom scheduler function for the async loading of the animation package.\n *\n * Private token for investigation purposes\n */\nconst ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN = /*#__PURE__*/new InjectionToken(ngDevMode ? 'async_animation_loading_scheduler_fn' : '');\n\n/**\n * Returns the set of dependency-injection providers\n * to enable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * When you use this function instead of the eager `provideAnimations()`, animations won't be\n * rendered until the renderer is loaded.\n *\n * @usageNotes\n *\n * The function is useful when you want to enable animations in an application\n * bootstrapped using the `bootstrapApplication` function. In this scenario there\n * is no need to import the `BrowserAnimationsModule` NgModule at all, just add\n * providers returned by this function to the `providers` list as show below.\n *\n * ```typescript\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideAnimationsAsync()\n *   ]\n * });\n * ```\n *\n * @param type pass `'noop'` as argument to disable animations.\n *\n * @publicApi\n */\nfunction provideAnimationsAsync(type = 'animations') {\n  ɵperformanceMarkFeature('NgAsyncAnimations');\n  return makeEnvironmentProviders([{\n    provide: RendererFactory2,\n    useFactory: (doc, renderer, zone) => {\n      return new AsyncAnimationRendererFactory(doc, renderer, zone, type);\n    },\n    deps: [DOCUMENT, ɵDomRendererFactory2, NgZone]\n  }, {\n    provide: ANIMATION_MODULE_TYPE,\n    useValue: type === 'noop' ? 'NoopAnimations' : 'BrowserAnimations'\n  }]);\n}\n\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation browser package.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { provideAnimationsAsync, ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN, AsyncAnimationRendererFactory as ɵAsyncAnimationRendererFactory };\n","import { ApplicationConfig } from '@angular/core';\nimport { provideRouter } from '@angular/router';\n\nimport { routes } from './app.routes';\nimport { provideClientHydration } from '@angular/platform-browser';\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideRouter(routes),\n    provideClientHydration(),\n    provideAnimationsAsync(),\n  ],\n};\n","import nls from \"./nls/generic\";\n\nexport interface NavItem {\n  name: string;\n  icon: string;\n  id: string;\n  to: string;\n}\n\nexport const navItemsList: NavItem[] = [\n  {\n    name: nls.navbar.home,\n    icon: 'home_app_logo',\n    id: 'home-link-navbar',\n    to: '/',\n  },\n  {\n    name: nls.navbar.tasks,\n    icon: 'add_task',\n    id: 'add-tasks-link-navbar',\n    to: '/add-tasks',\n  },\n\n  {\n    name: nls.navbar.schedule,\n    icon: 'calendar_month',\n    id: 'schedule-link-navbar',\n    to: '/add-schedules',\n  },\n  {\n    name: nls.navbar.account,\n    icon: 'account_circle',\n    id: 'account-link-navbar',\n    to: '/account',\n  },\n];\n\nexport interface Path {\n  to: string;\n  subname: string[];\n  name: string;\n}\nexport const allPaths: Path[] = [\n  {\n    name: nls.navbar.home,\n    to: '/',\n    subname: []\n  },\n  {\n    name: nls.navbar.reports,\n    to: '/reports',\n    subname: []\n  },\n  {\n    name: nls.navbar.tasks,\n    to: '/add-tasks',\n    subname: []\n  },\n  {\n    name: nls.navbar.schedule,\n    to: '/add-schedules',\n    subname: []\n  },\n  {\n    name: nls.navbar.account,\n    to: '/account',\n    subname: []\n  },\n]","import { Component, inject, OnInit, signal, WritableSignal } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Router, NavigationEnd } from '@angular/router';\nimport { BehaviorSubject, filter } from 'rxjs';\nimport { NavItem, Path, allPaths, navItemsList } from '../resources/nav-items';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { ApiService } from '../../services/api.service';\nimport nls from '../resources/nls/generic';\n\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [MatIconModule, MatButtonModule, CommonModule, RouterModule],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.scss',\n})\nexport class NavbarComponent implements OnInit {\n  private router: Router = inject(Router);\n  private _authService = inject(AuthenticationService);\n  private _api: ApiService = inject(ApiService);\n\n  private bottomBarShowCase: string[] = ['/', '/account', '/reports', '/add-tasks', '/add-schedules'];\n  currentPage: WritableSignal<Path> = signal(allPaths[0]);\n  showBottomBar: WritableSignal<boolean> = signal(true);\n  showTopBar: WritableSignal<boolean> = signal(false);\n  navItems: NavItem[] = navItemsList;\n  paths = new BehaviorSubject<Path[]>(allPaths);\n  nls = nls\n\n  ngOnInit() {\n    this.buildPathsFromWidgets()\n    this.subscribeRouterEvents();\n  }\n\n  subscribeRouterEvents() {\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        const currentRouterState = this.router.routerState;\n        const activeNavItem = this.paths.getValue().filter((item) => {\n          if (currentRouterState.snapshot.url.includes(item.to)) {\n            return true;\n          }\n          return false;\n        });\n        this.currentPage.set(activeNavItem[activeNavItem.length - 1]);\n\n        if (this.bottomBarShowCase.includes(currentRouterState.snapshot.url)) {\n          this.showBottomBar.set(true);\n          this.showTopBar.set(false);\n        } else {\n          this.showBottomBar.set(false);\n          this.showTopBar.set(true);\n        }\n        if (currentRouterState.snapshot.url.includes('/auth')) {\n          this.showBottomBar.set(false);\n          this.showTopBar.set(false);\n        }\n\n        if (this._authService.isAuthenticated.getValue() && currentRouterState.snapshot.url.includes('/auth')) {\n          this.router.navigate(['']);\n        }\n        if (!this._authService.isAuthenticated.getValue()) {\n          this.router.navigate(['/auth']);\n        }\n      });\n\n  }\n  async buildPathsFromWidgets() {\n    let widgets = await this._api.local_get('widgets');\n    let widgetPaths: Path[] = [];\n    widgets.forEach((element: any) => {\n      let path: Path = {\n        to: '/logging/' + encodeURIComponent(element.id),\n        subname: [element.title],\n        name: nls.navbar.logging\n      }\n      widgetPaths.push(path);\n    });\n    this.paths.next([...allPaths, ...widgetPaths]);\n\n  }\n  goBack(): void {\n    this.router.navigate(['../']);\n  }\n  goToHome(): void {\n    this.router.navigate(['/']);\n  }\n}\n","<nav *ngIf=\"showBottomBar()\" class=\"fixed-bottom themed-nav\">\n  <div class=\"container\">\n    <div class=\"row align-items-center justify-content-between text-center\">\n      <div *ngFor=\"let item of navItems\" class=\"col-3\">\n        <button [routerLink]=\"item.to\"\n          class=\"w-100 d-flex flex-column align-items-center justify-content-center text-center my-button-nav\"\n          mat-button [attr.aria-label]=\"item.name\" [id]=\"item.id\" [class.active-nav-item]=\"currentPage().to===item.to?'primary':''\">\n          <mat-icon>{{item.icon}}</mat-icon>\n          <span><small>{{item.name}}</small></span>\n        </button>\n      </div>\n    </div>\n  </div>\n</nav>\n<nav class=\"fixed-top themed-nav py-2\" *ngIf=\"showTopBar()\">\n  <div class=\"container\">\n    <div class=\"row align-items-center justify-content-between text-center brand-name-container\">\n      <div class=\"col-2\">\n        <button mat-icon-button (click)=\"goBack()\">\n          <mat-icon>arrow_back</mat-icon>\n        </button>\n      </div>\n      <div class=\"col\">\n        <span class=\"h6 d-flex justify-content-center pt-2\">\n          {{currentPage().name}}\n          <span *ngFor=\"let subname of currentPage().subname\" class=\"d-flex justify-content-center\">\n            <mat-icon class=\"navbar-header-icon\">navigate_next</mat-icon>\n            {{subname}}\n          </span>\n        </span>\n      </div>\n      <div class=\"col-2\">\n        <button mat-icon-button (click)=\"goToHome()\">\n          <mat-icon>home_app_logo</mat-icon>\n        </button>\n      </div>\n    </div>\n  </div>\n</nav>\n\n<nav class=\"fixed-top themed-nav py-2\" *ngIf=\"showBottomBar()\">\n  <div class=\"container\">\n    <div class=\"row align-items-center justify-content-between text-center py-2 brand-name-container\">\n      <div class=\"col\">\n        <span class=\"h5 brand-name\">{{nls.navbar.brand}}</span>\n      </div>\n    </div>\n  </div>\n</nav>","import * as i0 from '@angular/core';\nimport { InjectionToken, ANIMATION_MODULE_TYPE, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, Input, ViewChild, NgModule } from '@angular/core';\nimport { NgTemplateOutlet, CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst _c0 = [\"determinateSpinner\"];\nfunction MatProgressSpinner_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 11);\n    i0.ɵɵelement(1, \"circle\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"viewBox\", ctx_r0._viewBox());\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"stroke-dasharray\", ctx_r0._strokeCircumference(), \"px\")(\"stroke-dashoffset\", ctx_r0._strokeCircumference() / 2, \"px\")(\"stroke-width\", ctx_r0._circleStrokeWidth(), \"%\");\n    i0.ɵɵattribute(\"r\", ctx_r0._circleRadius());\n  }\n}\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('mat-progress-spinner-default-options', {\n  providedIn: 'root',\n  factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    diameter: BASE_SIZE\n  };\n}\n/**\n * Base reference size of the spinner.\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n */\nconst BASE_STROKE_WIDTH = 10;\nlet MatProgressSpinner = /*#__PURE__*/(() => {\n  class MatProgressSpinner {\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n    /**\n     * Theme color of the progress spinner. This API is supported in M2 themes only, it\n     * has no effect in M3 themes.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/theming#using-component-color-variants.\n     */\n    get color() {\n      return this._color || this._defaultColor;\n    }\n    set color(value) {\n      this._color = value;\n    }\n    constructor(_elementRef, animationMode, defaults) {\n      this._elementRef = _elementRef;\n      this._defaultColor = 'primary';\n      this._value = 0;\n      this._diameter = BASE_SIZE;\n      this._noopAnimations = animationMode === 'NoopAnimations' && !!defaults && !defaults._forceAnimations;\n      this.mode = _elementRef.nativeElement.nodeName.toLowerCase() === 'mat-spinner' ? 'indeterminate' : 'determinate';\n      if (defaults) {\n        if (defaults.color) {\n          this.color = this._defaultColor = defaults.color;\n        }\n        if (defaults.diameter) {\n          this.diameter = defaults.diameter;\n        }\n        if (defaults.strokeWidth) {\n          this.strokeWidth = defaults.strokeWidth;\n        }\n      }\n    }\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() {\n      return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(v) {\n      this._value = Math.max(0, Math.min(100, v || 0));\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() {\n      return this._diameter;\n    }\n    set diameter(size) {\n      this._diameter = size || 0;\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n      return this._strokeWidth ?? this.diameter / 10;\n    }\n    set strokeWidth(value) {\n      this._strokeWidth = value || 0;\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _circleRadius() {\n      return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _viewBox() {\n      const viewBox = this._circleRadius() * 2 + this.strokeWidth;\n      return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _strokeCircumference() {\n      return 2 * Math.PI * this._circleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _strokeDashOffset() {\n      if (this.mode === 'determinate') {\n        return this._strokeCircumference() * (100 - this._value) / 100;\n      }\n      return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _circleStrokeWidth() {\n      return this.strokeWidth / this.diameter * 100;\n    }\n    static {\n      this.ɵfac = function MatProgressSpinner_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatProgressSpinner)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatProgressSpinner,\n        selectors: [[\"mat-progress-spinner\"], [\"mat-spinner\"]],\n        viewQuery: function MatProgressSpinner_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._determinateCircle = _t.first);\n          }\n        },\n        hostAttrs: [\"role\", \"progressbar\", \"tabindex\", \"-1\", 1, \"mat-mdc-progress-spinner\", \"mdc-circular-progress\"],\n        hostVars: 18,\n        hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-valuemin\", 0)(\"aria-valuemax\", 100)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n            i0.ɵɵclassMap(\"mat-\" + ctx.color);\n            i0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\")(\"--mdc-circular-progress-size\", ctx.diameter + \"px\")(\"--mdc-circular-progress-active-indicator-width\", ctx.diameter + \"px\");\n            i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations)(\"mdc-circular-progress--indeterminate\", ctx.mode === \"indeterminate\");\n          }\n        },\n        inputs: {\n          color: \"color\",\n          mode: \"mode\",\n          value: [2, \"value\", \"value\", numberAttribute],\n          diameter: [2, \"diameter\", \"diameter\", numberAttribute],\n          strokeWidth: [2, \"strokeWidth\", \"strokeWidth\", numberAttribute]\n        },\n        exportAs: [\"matProgressSpinner\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        decls: 14,\n        vars: 11,\n        consts: [[\"circle\", \"\"], [\"determinateSpinner\", \"\"], [\"aria-hidden\", \"true\", 1, \"mdc-circular-progress__determinate-container\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"focusable\", \"false\", 1, \"mdc-circular-progress__determinate-circle-graphic\"], [\"cx\", \"50%\", \"cy\", \"50%\", 1, \"mdc-circular-progress__determinate-circle\"], [\"aria-hidden\", \"true\", 1, \"mdc-circular-progress__indeterminate-container\"], [1, \"mdc-circular-progress__spinner-layer\"], [1, \"mdc-circular-progress__circle-clipper\", \"mdc-circular-progress__circle-left\"], [3, \"ngTemplateOutlet\"], [1, \"mdc-circular-progress__gap-patch\"], [1, \"mdc-circular-progress__circle-clipper\", \"mdc-circular-progress__circle-right\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"focusable\", \"false\", 1, \"mdc-circular-progress__indeterminate-circle-graphic\"], [\"cx\", \"50%\", \"cy\", \"50%\"]],\n        template: function MatProgressSpinner_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, MatProgressSpinner_ng_template_0_Template, 2, 8, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n            i0.ɵɵelementStart(2, \"div\", 2, 1);\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(4, \"svg\", 3);\n            i0.ɵɵelement(5, \"circle\", 4);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵnamespaceHTML();\n            i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"div\", 7);\n            i0.ɵɵelementContainer(9, 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"div\", 9);\n            i0.ɵɵelementContainer(11, 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"div\", 10);\n            i0.ɵɵelementContainer(13, 8);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            const circle_r2 = i0.ɵɵreference(1);\n            i0.ɵɵadvance(4);\n            i0.ɵɵattribute(\"viewBox\", ctx._viewBox());\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"stroke-dasharray\", ctx._strokeCircumference(), \"px\")(\"stroke-dashoffset\", ctx._strokeDashOffset(), \"px\")(\"stroke-width\", ctx._circleStrokeWidth(), \"%\");\n            i0.ɵɵattribute(\"r\", ctx._circleRadius());\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngTemplateOutlet\", circle_r2);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngTemplateOutlet\", circle_r2);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngTemplateOutlet\", circle_r2);\n          }\n        },\n        dependencies: [NgTemplateOutlet],\n        styles: [\".mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0;position:relative;direction:ltr;transition:opacity 250ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1;animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color, var(--mat-app-primary))}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatProgressSpinner;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @deprecated Import Progress Spinner instead. Note that the\n *    `mat-spinner` selector isn't deprecated.\n * @breaking-change 16.0.0\n */\n// tslint:disable-next-line:variable-name\nconst MatSpinner = MatProgressSpinner;\nlet MatProgressSpinnerModule = /*#__PURE__*/(() => {\n  class MatProgressSpinnerModule {\n    static {\n      this.ɵfac = function MatProgressSpinnerModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatProgressSpinnerModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatProgressSpinnerModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [CommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatProgressSpinnerModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n","import { Component, inject, OnInit } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { LoaderService } from '../../services/loader.service';\n@Component({\n  selector: 'app-loader',\n  standalone: true,\n  imports: [MatProgressSpinnerModule],\n  templateUrl: './loader.component.html',\n  styleUrl: './loader.component.scss'\n})\nexport class LoaderComponent {\n}\n","<div class=\"loader-container loader-show\">\n  <div class=\"loader-body\">\n    <img src=\"../../../assets/images/loader-logo.webp\" alt=\"Logo\" class=\"logo\" />\n  </div>\n</div>\n","import { Component, inject, Signal } from '@angular/core';\nimport { Message, MessagesService } from '../../services/messages.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-messages',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './messages.component.html',\n  styleUrl: './messages.component.scss'\n})\nexport class MessagesComponent {\n  private messageService = inject(MessagesService);\n  messages: Signal<Message[]> = this.messageService.messages;\n}\n","<div *ngFor=\"let message of messages()\" [class]=\"message.type\" class=\"message\">\n  {{ message.text }}\n</div>","import { ChangeDetectorRef, Component, HostListener, inject, OnInit, Renderer2, signal, WritableSignal } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { NavbarComponent } from '../../framework/navbar/navbar.component';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { LoaderComponent } from '../../framework/loader/loader.component';\nimport { LoaderService } from '../../services/loader.service';\nimport { MessagesComponent } from '../../framework/messages/messages.component';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModalWindowComponent } from \"../../framework/modal-window/modal-window.component\";\nimport { AppService } from '../../services/app.service';\nimport { MessagesService } from '../../services/messages.service';\nimport nls from '../../framework/resources/nls/generic';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, MatButtonModule, NavbarComponent, LoaderComponent, MessagesComponent, NgClass, HttpClientModule, ModalWindowComponent, CommonModule],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent implements OnInit {\n  _authService: AuthenticationService = inject(AuthenticationService);\n  _loader: LoaderService = inject(LoaderService);\n  _appService: AppService = inject(AppService);\n  private _message: MessagesService = inject(MessagesService);\n  private cdr: ChangeDetectorRef = inject(ChangeDetectorRef);\n  private renderer: Renderer2 = inject(Renderer2);\n\n  isModalOpen: WritableSignal<boolean> = signal(false);\n  modalInfo: WritableSignal<string[]> = signal(['', '', '']);\n  window: any;\n  nls = nls;\n\n  ngOnInit(): void {\n    this.window = this._appService.getWindow();\n\n    console.log(this.window.cordova);\n    this.applySystemTheme();\n\n    this.window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {\n      this.applySystemTheme();\n    });\n    this.window.document.addEventListener('backbutton', this.onBackButtonPressed.bind(this), false);\n  }\n  applySystemTheme() {\n    const prefersDark = this.window.matchMedia('(prefers-color-scheme: dark)').matches;\n    const themePreference = this.window.localStorage.getItem('theme-mode');\n\n    const applyTheme = (theme: string) => {\n      this.renderer.removeClass(document.body, theme === 'dark' ? 'light-theme' : 'dark-theme');\n      this.renderer.addClass(document.body, `${theme}-theme`);\n    };\n\n    // Use themePreference if available, else apply system preference\n    if (themePreference) {\n      applyTheme(themePreference);\n    } else {\n      applyTheme(prefersDark ? 'dark' : 'light');\n    }\n  }\n\n  @HostListener('backbutton')\n  onBackButtonPressed(event: Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const isHomePage = this.window.location.pathname === '/';\n\n    if (isHomePage) {\n      this.toggleModal(true);\n    } else {\n      this._message.warning(\"Back button is not allowed.\")\n    }\n    this.cdr.detectChanges();\n    setTimeout(() => {\n      this.cdr.detectChanges();\n    }, 3001);\n  }\n  toggleModal(state: any) {\n    this.isModalOpen.set(state);\n    if (state) {\n      this.modalInfo.set(['close-app', nls.exitApp, 'confirm'])\n    }\n    this.cdr.detectChanges();\n  }\n  submitModal(data: any) {\n    (navigator as any).app.exitApp();\n  }\n}\n","<div>\n    <app-navbar />\n    <div class=\"container app-container custom-scrollbar\">\n        <router-outlet />\n    </div>\n</div>\n<app-messages />\n@if(_loader.isLoading()){\n<app-loader />\n}\n<app-modal-window [isOpen]=\"isModalOpen()\" (onCancel)=\"toggleModal($event)\" (onSubmit)=\"submitModal($event)\"\n    [modal-heading]=\"modalInfo()[1]\" [type]=\"modalInfo()[2]\">\n    <ng-template>\n        <p *ngIf=\"modalInfo()[0]==='close-app'\">{{nls.exitAppMessage}}</p>\n    </ng-template>\n</app-modal-window>","import { bootstrapApplication } from '@angular/platform-browser';\nimport { appConfig } from './app/components/app/app.config';\nimport { AppComponent } from './app/components/app/app.component';\n\nbootstrapApplication(AppComponent, appConfig)\n  .catch((err) => console.error(err));\n"],"mappings":"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","names":["require_moment","__commonJSMin","exports","module","global","factory","hookCallback","hooks","setHookCallback","callback","isArray","input","isObject","hasOwnProp","a","b","isObjectEmpty","obj","k","isUndefined","isNumber","isDate","map","arr","fn","res","i","arrLen","extend","createUTC","format","locale","strict","createLocalOrUTC","defaultParsingFlags","getParsingFlags","m","some","fun","t","len","isValid","flags","parsedParts","isNowValid","createInvalid","momentProperties","updateInProgress","copyConfig","to","from","prop","val","momentPropertiesLen","Moment","config","isMoment","warn","msg","deprecate","firstTime","args","arg","key","argLen","deprecations","deprecateSimple","name","isFunction","set","mergeConfigs","parentConfig","childConfig","Locale","keys","defaultCalendar","calendar","mom","now","output","zeroFill","number","targetLength","forceSign","absNumber","zerosToFill","sign","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","func","removeFormattingTokens","makeFormatFunction","array","length","formatMoment","expandFormat","replaceLongDateFormatTokens","defaultLongDateFormat","longDateFormat","formatUpper","tok","defaultInvalidDate","invalidDate","defaultOrdinal","defaultDayOfMonthOrdinalParse","defaultRelativeTime","relativeTime","withoutSuffix","string","isFuture","pastFuture","diff","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedInput","normalizedProp","priorities","getPrioritizedUnits","unitsObj","u","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchTimestamp","matchWord","match1to2NoLeadingZero","match1to2HasZero","regexes","addRegexToken","regex","strictRegex","isStrict","localeData","getParseRegexForToken","unescapeFormat","regexEscape","matched","p1","p2","p3","p4","absFloor","toInt","argumentForCoercion","coercedNumber","value","tokens","addParseToken","tokenLen","addWeekParseToken","addTimeToArrayFromToken","isLeapYear","year","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","y","daysInYear","getSetYear","makeGetSet","getIsLeapYear","unit","keepTime","set$1","get","isUTC","d","month","date","stringGet","stringSet","prioritized","prioritizedLen","mod","n","x","indexOf","o","daysInMonth","modMonth","defaultLocaleMonths","defaultLocaleMonthsShort","MONTHS_IN_FORMAT","defaultMonthsShortRegex","defaultMonthsRegex","localeMonths","localeMonthsShort","handleStrictParse","monthName","ii","llc","localeMonthsParse","setMonth","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","monthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","shortP","longP","createDate","h","M","s","ms","createUTCDate","firstWeekOffset","dow","doy","fwd","fwdlw","dayOfYearFromWeeks","week","weekday","localWeekday","weekOffset","dayOfYear","resYear","resDayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","defaultLocaleWeek","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","parseWeekday","parseIsoWeekday","shiftWeekdays","ws","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","localeWeekdays","weekdays","localeWeekdaysShort","localeWeekdaysMin","handleStrictParse$1","weekdayName","localeWeekdaysParse","getSetDayOfWeek","day","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","weekdaysShortRegex","weekdaysMinRegex","minPieces","minp","shortp","longp","hFormat","kFormat","meridiem","lowercase","matchMeridiem","kInput","pos","pos1","pos2","localeIsPM","defaultLocaleMeridiemParse","getSetHour","localeMeridiem","hours","minutes","isLower","baseConfig","locales","localeFamilies","globalLocale","commonPrefix","arr1","arr2","minl","normalizeLocale","chooseLocale","names","j","next","split","loadLocale","isLocaleNameSane","oldLocale","aliasedRequire","__require","getSetGlobalLocale","values","data","getLocale","defineLocale","updateLocale","tmpLocale","listLocales","checkOverflow","overflow","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","rfc2822","obsOffsets","configFromISO","l","match","allowTime","dateFormat","timeFormat","tzFormat","isoDatesLen","isoTimesLen","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","preprocessRFC2822","checkWeekday","weekdayStr","parsedInput","weekdayProvided","weekdayActual","calculateOffset","obsOffset","militaryOffset","numOffset","hm","configFromRFC2822","parsedArray","configFromString","defaults","c","currentDateArray","nowValue","configFromArray","currentDate","expectedWeekday","yearToUse","dayOfYearFromWeekInfo","w","weekYear","temp","weekdayOverflow","curWeek","createLocal","skipped","stringLength","totalParsedInputLength","era","meridiemFixWrap","hour","isPm","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","validFormatFound","bestFormatIsValid","configfLen","configFromObject","dayOrDate","createFromConfig","prepareConfig","configFromInput","prototypeMin","other","prototypeMax","pickBy","moments","min","max","ordering","isDurationValid","unitHasDecimal","orderLen","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","months","weeks","days","seconds","milliseconds","isDuration","absRound","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","offset","separator","offsetFromString","chunkOffset","matcher","matches","chunk","parts","cloneWithOffset","model","getDateOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","setOffsetToParsedOffset","tZone","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","isLocal","isUtcOffset","isUtc","aspNetRegex","isoRegex","ret","diffRes","parseIso","momentsDifference","inp","positiveMomentsDifference","base","createAdder","direction","period","dur","tmp","isAdding","updateOffset","add","subtract","isString","isMomentInput","isNumberOrStringArray","isMomentInputObject","objectTest","propertyTest","properties","property","propertyLen","arrayTest","dataTypeTest","item","isCalendarSpec","getCalendarFormat","myMoment","calendar$1","time","formats","sod","clone","isAfter","localInput","isBefore","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","monthDiff","wholeMonthDiff","anchor","anchor2","adjust","toString","toISOString","keepOffset","utc","inspect","zone","prefix","datetime","suffix","inputString","fromNow","toNow","newLocaleData","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","startOf","startOfDate","endOf","valueOf","unix","toDate","toArray","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","matchEraAbbr","matchEraName","matchEraNarrow","matchEraYearOrdinal","localeEras","eras","localeErasParse","eraName","abbr","narrow","localeErasConvertYear","dir","getEraName","getEraNarrow","getEraAbbr","getEraYear","erasNameRegex","computeErasParse","erasAbbrRegex","erasNarrowRegex","abbrPieces","namePieces","narrowPieces","erasName","erasAbbr","erasNarrow","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","getISOWeeksInYear","getISOWeeksInISOWeekYear","getWeeksInYear","weekInfo","getWeeksInWeekYear","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfMonth","getSetDayOfYear","getSetMinute","getSetSecond","getSetMillisecond","parseMs","getZoneAbbr","getZoneName","proto","createUnix","createInZone","preParsePostFormat","proto$1","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","abs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","valueOf$1","clone$1","get$2","makeGetter","round","thresholds","substituteTimeAgo","relativeTime$1","posNegDuration","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","humanize","argWithSuffix","argThresholds","withSuffix","th","abs$1","toISOString$1","total","totalSign","ymSign","daysSign","hmsSign","proto$2","HttpHandler","HttpBackend","HttpHeaders","_HttpHeaders","headers","line","index","name","key","value","values","lcName","update","other","clone","base","toDelete","existing","headerValues","fn","HttpUrlEncodingCodec","key","standardEncoding","value","paramParser","rawParams","codec","map","param","eqIdx","val","list","STANDARD_ENCODING_REGEX","STANDARD_ENCODING_REPLACEMENTS","v","s","t","valueToString","HttpParams","_HttpParams","options","values","res","params","updates","_value","eKey","update","clone","base","idx","HttpContext","token","value","mightHaveBody","method","isArrayBuffer","isBlob","isFormData","isUrlSearchParams","HttpRequest","_HttpRequest","url","third","fourth","options","HttpHeaders","HttpParams","params","qIdx","sep","update","responseType","transferCache","body","withCredentials","reportProgress","headers","context","name","param","HttpEventType","HttpResponseBase","init","defaultStatus","defaultStatusText","HttpHeaderResponse","_HttpHeaderResponse","HttpResponse","_HttpResponse","HttpErrorResponse","HTTP_STATUS_CODE_OK","HTTP_STATUS_CODE_NO_CONTENT","addBody","options","body","HttpClient","handler","first","url","req","HttpRequest","headers","HttpHeaders","params","HttpParams","events$","of","concatMap","res$","filter","event","HttpResponse","map","res","callbackParam","__ngFactoryType__","ɵɵinject","HttpHandler","ɵɵdefineInjectable","XSSI_PREFIX$1","REQUEST_URL_HEADER","getResponseUrl$1","response","xRequestUrl","FetchBackend","inject","FetchFactory","args","NgZone","request","Observable","observer","aborter","noop","error","HttpErrorResponse","signal","__async","init","fetchPromise","__spreadValues","silenceSuperfluousUnhandledPromiseRejection","HttpEventType","statusText","status","HttpHeaderResponse","contentLength","chunks","reader","receivedLength","decoder","partialText","reqZone","done","value","reportProgress","chunksAll","contentType","HTTP_STATUS_CODE_OK","binContent","text","credentials","name","values","detectedType","totalLength","position","chunk","promise","interceptorChainEndFn","finalHandlerFn","adaptLegacyInterceptorToChain","chainTailFn","interceptor","initialRequest","downstreamRequest","chainedInterceptorFn","interceptorFn","injector","runInInjectionContext","HTTP_INTERCEPTORS","InjectionToken","HTTP_INTERCEPTOR_FNS","HTTP_ROOT_INTERCEPTOR_FNS","REQUESTS_CONTRIBUTE_TO_STABILITY","legacyInterceptorFnFactory","chain","pendingTasks","PendingTasks","taskId","finalize","HttpInterceptorHandler","HttpHandler","backend","injector","inject","PendingTasks","REQUESTS_CONTRIBUTE_TO_STABILITY","initialRequest","dedupedInterceptorFns","HTTP_INTERCEPTOR_FNS","HTTP_ROOT_INTERCEPTOR_FNS","nextSequencedFn","interceptorFn","chainedInterceptorFn","interceptorChainEndFn","taskId","downstreamRequest","finalize","__ngFactoryType__","ɵɵinject","HttpBackend","EnvironmentInjector","ɵɵdefineInjectable","XSSI_PREFIX","getResponseUrl","xhr","HttpXhrBackend","xhrFactory","req","RuntimeError","from","of","switchMap","Observable","observer","name","values","detectedType","responseType","reqBody","headerResponse","partialFromXhr","statusText","headers","HttpHeaders","url","HttpHeaderResponse","onLoad","status","body","HTTP_STATUS_CODE_NO_CONTENT","HTTP_STATUS_CODE_OK","ok","originalBody","error","HttpResponse","HttpErrorResponse","onError","res","sentHeaders","onDownProgress","event","progressEvent","HttpEventType","onUpProgress","progress","__ngFactoryType__","ɵɵinject","XhrFactory","ɵɵdefineInjectable","XSRF_ENABLED","InjectionToken","XSRF_DEFAULT_COOKIE_NAME","XSRF_COOKIE_NAME","XSRF_DEFAULT_HEADER_NAME","XSRF_HEADER_NAME","HttpXsrfTokenExtractor","HttpXsrfCookieExtractor","doc","platform","cookieName","cookieString","parseCookieValue","DOCUMENT","PLATFORM_ID","xsrfInterceptorFn","next","lcUrl","inject","token","headerName","HttpFeatureKind","makeHttpFeature","kind","providers","provideHttpClient","features","HttpClient","HttpXhrBackend","HttpInterceptorHandler","HttpHandler","HttpBackend","inject","FetchBackend","HTTP_INTERCEPTOR_FNS","xsrfInterceptorFn","XSRF_ENABLED","HttpXsrfTokenExtractor","HttpXsrfCookieExtractor","feature","makeEnvironmentProviders","LEGACY_INTERCEPTOR_FN","InjectionToken","withInterceptorsFromDi","makeHttpFeature","HttpFeatureKind","legacyInterceptorFnFactory","HTTP_INTERCEPTOR_FNS","HttpClientModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","provideHttpClient","withInterceptorsFromDi","HTTP_TRANSFER_CACHE_ORIGIN_MAP","InjectionToken","BODY","HEADERS","STATUS","STATUS_TEXT","REQ_URL","RESPONSE_TYPE","CACHE_OPTIONS","ALLOWED_METHODS","transferCacheInterceptorFn","req","next","_a","inject","isCacheActive","globalOptions","__objRest","requestOptions","requestMethod","hasAuthHeaders","transferState","TransferState","originMap","isServer","isPlatformServer","PLATFORM_ID","RuntimeError","requestUrl","mapRequestOriginUrl","storeKey","makeCacheKey","response","headersToInclude","undecodedBody","responseType","httpHeaders","status","statusText","url","body","headers","HttpHeaders","of","HttpResponse","tap","event","getFilteredHeaders","includeHeaders","headersMap","key","values","sortAndConcatParams","params","k","request","mappedRequestUrl","method","encodedParams","serializedBody","hash","generateHash","value","char","withHttpTransferCache","cacheOptions","performanceMarkFeature","__spreadValues","HTTP_ROOT_INTERCEPTOR_FNS","APP_BOOTSTRAP_LISTENER","appRef","ApplicationRef","cacheState","whenStable","mapRequestOriginUrl","url","originMap","origin","mappedOrigin","GenericBrowserDomAdapter","DomAdapter","BrowserDomAdapter","_BrowserDomAdapter","setRootDomAdapter","el","evt","listener","node","tagName","doc","target","href","getBaseElementHref","relativePath","baseElement","name","parseCookieValue","url","BrowserXhr","__ngFactoryType__","ɵɵdefineInjectable","EVENT_MANAGER_PLUGINS","InjectionToken","EventManager","plugins","_zone","plugin","element","eventName","handler","RuntimeError","ɵɵinject","NgZone","EventManagerPlugin","_doc","APP_ID_ATTRIBUTE_NAME","SharedStylesHost","doc","appId","nonce","platformId","isPlatformServer","styles","style","styleNodesInDOM","node","hostNode","host","styleRef","styleMap","delta","map","styleRefValue","styleEl","styleElRef","hostNodes","DOCUMENT","APP_ID","CSP_NONCE","PLATFORM_ID","NAMESPACE_URIS","COMPONENT_REGEX","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT","REMOVE_STYLES_ON_COMPONENT_DESTROY","shimContentAttribute","componentShortId","shimHostAttribute","shimStylesContent","compId","s","DomRendererFactory2","eventManager","sharedStylesHost","removeStylesOnCompDestroy","ngZone","DefaultDomRenderer2","type","ViewEncapsulation$1","__spreadProps","__spreadValues","renderer","EmulatedEncapsulationDomRenderer2","NoneEncapsulationDomRenderer","rendererByCompId","platformIsServer","ShadowDomRenderer","name","namespace","value","parent","newChild","isTemplateNode","refChild","_parent","oldChild","selectorOrNode","preserveContent","el","namespaceUri","flags","RendererStyleFlags2","target","event","callback","getDOM","eventHandler","isTemplateNode","node","ShadowDomRenderer","DefaultDomRenderer2","eventManager","sharedStylesHost","hostEl","component","doc","ngZone","nonce","platformIsServer","styles","shimStylesContent","style","styleEl","parent","newChild","refChild","_parent","oldChild","NoneEncapsulationDomRenderer","removeStylesOnCompDestroy","compId","EmulatedEncapsulationDomRenderer2","appId","shimContentAttribute","shimHostAttribute","element","name","el","DomEventsPlugin","EventManagerPlugin","eventName","handler","target","callback","__ngFactoryType__","ɵɵinject","DOCUMENT","ɵɵdefineInjectable","EventDelegationPlugin","inject","GLOBAL_EVENT_DELEGATION","MODIFIER_KEYS","_keyMap","MODIFIER_KEY_GETTERS","event","KeyEventsPlugin","parsedEvent","outsideHandler","getDOM","parts","domEventName","key","fullKey","codeIX","modifierName","index","result","fullKeyCode","keycode","modifierGetter","zone","keyName","bootstrapApplication","rootComponent","options","internalCreateApplication","__spreadValues","createProvidersConfig","createProvidersConfig","options","BROWSER_MODULE_PROVIDERS","INTERNAL_BROWSER_PLATFORM_PROVIDERS","initDomAdapter","BrowserDomAdapter","errorHandler","ErrorHandler","_document","setDocument","INTERNAL_BROWSER_PLATFORM_PROVIDERS","PLATFORM_ID","PLATFORM_BROWSER_ID","PLATFORM_INITIALIZER","DOCUMENT","BROWSER_MODULE_PROVIDERS","INJECTOR_SCOPE","ErrorHandler","errorHandler","EVENT_MANAGER_PLUGINS","DomEventsPlugin","DOCUMENT","NgZone","PLATFORM_ID","KeyEventsPlugin","EventDelegationPlugin","DomRendererFactory2","SharedStylesHost","EventManager","RendererFactory2","XhrFactory","BrowserXhr","Title","_doc","newTitle","__ngFactoryType__","ɵɵinject","DOCUMENT","ɵɵdefineInjectable","DomSanitizer","__ngFactoryType__","ɵɵdefineInjectable","__ngConditionalFactory__","ɵɵinject","DomSanitizerImpl","_doc","ctx","value","SecurityContext","allowSanitizationBypassAndThrow","unwrapSafeValue","_sanitizeHtml","RuntimeError","_sanitizeUrl","bypassSanitizationTrustHtml","bypassSanitizationTrustStyle","bypassSanitizationTrustScript","bypassSanitizationTrustUrl","bypassSanitizationTrustResourceUrl","DOCUMENT","HydrationFeatureKind","provideClientHydration","features","providers","featuresKind","hasHttpTransferCacheOptions","HydrationFeatureKind","ɵproviders","ɵkind","makeEnvironmentProviders","withDomHydration","withHttpTransferCache","PRIMARY_OUTLET","RouteTitleKey","ParamsAsMap","params","name","v","convertToParamMap","defaultUrlMatcher","segments","segmentGroup","route","parts","posParams","index","part","segment","shallowEqualArrays","a","b","i","shallowEqual","k1","getDataKeys","k2","key","equalArraysOrString","obj","aSorted","bSorted","val","last","wrapIntoObservable","value","isObservable","isPromise","from","of","pathCompareMap","equalSegmentGroups","containsSegmentGroup","paramCompareMap","equalParams","containsParams","containsTree","container","containee","options","matrixParams","equalPath","matrixParamsMatch","c","containsSegmentGroupHelper","containeePaths","current","next","containerPaths","containeeSegment","UrlTree","root","UrlSegmentGroup","queryParams","fragment","DEFAULT_SERIALIZER","children","serializePaths","UrlSegment","path","parameters","serializePath","equalSegments","as","bs","mapChildrenIntoArray","fn","res","childOutlet","child","UrlSerializer","__ngFactoryType__","ɵɵdefineInjectable","DefaultUrlSerializer","url","p","UrlParser","tree","serializeSegment","query","serializeQueryParams","encodeUriFragment","primary","k","encodeUriString","s","encodeUriQuery","encodeUriSegment","decode","decodeQuery","serializeMatrixParams","strParams","SEGMENT_RE","matchSegments","str","match","MATRIX_PARAM_SEGMENT_RE","matchMatrixKeySegments","QUERY_PARAM_RE","matchQueryParams","QUERY_PARAM_VALUE_RE","matchUrlQueryParamValue","RuntimeError","valueMatch","decodedKey","decodedVal","currentVal","allowPrimary","outletName","createRoot","rootCandidate","squashSegmentGroup","newChildren","childCandidate","grandChildOutlet","grandChild","mergeTrivialChildren","isUrlTree","createUrlTreeFromSnapshot","relativeTo","commands","relativeToUrlSegmentGroup","createSegmentGroupFromRoute","createUrlTreeFromSegmentGroup","targetGroup","createSegmentGroupFromRouteRecursive","currentRoute","childOutlets","childSnapshot","rootSegmentGroup","nav","computeNavigation","position","findStartingPositionForTargetGroup","newSegmentGroup","updateSegmentGroupChildren","updateSegmentGroup","isMatrixParams","command","isCommandWithOutlets","oldRoot","oldSegmentGroup","qp","replaceSegment","newRoot","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","cmdWithOutlet","cmd","cmdIdx","outlets","urlPart","partIndex","Position","processChildren","target","modifier","createPositionApplyingDoubleDots","group","g","ci","dd","getOutlets","startIndex","m","prefixedWith","slicedCommands","createNewSegmentGroup","o","childrenOfEmptyChild","outlet","currentCommandIndex","currentPathIndex","noMatch","curr","compare","paths","createNewSegmentChildren","stringify","IMPERATIVE_NAVIGATION","EventType","RouterEvent","id","NavigationStart","navigationTrigger","restoredState","NavigationEnd","urlAfterRedirects","NavigationCancellationCode","NavigationSkippedCode","NavigationCancel","reason","code","NavigationSkipped","NavigationError","error","RoutesRecognized","state","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","RouteConfigLoadEnd","ChildActivationStart","snapshot","ChildActivationEnd","ActivationStart","ActivationEnd","Scroll","routerEvent","anchor","pos","BeforeActivateRoutes","RedirectRequest","navigationBehaviorOptions","getOrCreateRouteInjectorIfNeeded","route","currentInjector","createEnvironmentInjector","getOutlet","route","PRIMARY_OUTLET","sortByMatchingOutlets","routes","outletName","sortedConfig","r","getClosestRouteInjector","snapshot","s","OutletContext","_","rootInjector","ChildrenOutletContexts","childName","outlet","context","contexts","__ngFactoryType__","ɵɵinject","EnvironmentInjector","ɵɵdefineInjectable","Tree","root","t","p","n","findNode","findPath","c","cc","value","node","child","path","TreeNode","children","nodeChildrenAsMap","map","RouterState","setRouterState","createEmptyState","rootComponent","createEmptyStateSnapshot","emptyUrl","BehaviorSubject","UrlSegment","emptyParams","emptyData","emptyQueryParams","fragment","activated","ActivatedRoute","ActivatedRouteSnapshot","RouterStateSnapshot","urlSubject","paramsSubject","queryParamsSubject","fragmentSubject","dataSubject","component","futureSnapshot","d","RouteTitleKey","of","convertToParamMap","getInherited","parent","paramsInheritanceStrategy","inherited","routeConfig","__spreadValues","hasStaticTitle","url","params","queryParams","data","resolve","segment","matched","serializeNode","state","advanceActivatedRoute","currentSnapshot","nextSnapshot","shallowEqual","shallowEqualArrays","equalParamsAndUrlSegments","a","b","equalUrlParams","equalSegments","parentsMismatch","config","RouterOutlet","EventEmitter","inject","ViewContainerRef","ChangeDetectorRef","INPUT_BINDER","changes","firstChange","previousValue","RuntimeError","cmp","ref","activatedRoute","environmentInjector","location","childContexts","injector","OutletInjector","ɵɵdefineDirective","ɵɵNgOnChangesFeature","_OutletInjector","parentInjector","token","notFoundValue","InjectionToken","RoutedComponentInputBinder","dataSubscription","combineLatest","switchMap","index","mirror","reflectComponentType","templateName","createRouterState","routeReuseStrategy","curr","prevState","createNode","createOrReuseChildren","detachedRouteHandle","tree","createActivatedRoute","RedirectCommand","redirectTo","navigationBehaviorOptions","NAVIGATION_CANCELING_ERROR","redirectingNavigationError","urlSerializer","redirect","isUrlTree","error","navigationCancelingError","NavigationCancellationCode","message","code","isRedirectingNavigationCancelingError","isNavigationCancelingError","activateRoutes","rootContexts","routeReuseStrategy","forwardEvent","inputBindingEnabled","map","t","ActivateRoutes","futureState","currState","parentContexts","futureRoot","currRoot","advanceActivatedRoute","futureNode","currNode","contexts","children","nodeChildrenAsMap","futureChild","childOutletName","v","parentContext","future","curr","context","route","treeNode","componentRef","c","ActivationEnd","ChildActivationEnd","stored","CanActivate","path","CanDeactivate","component","getAllRouteGuards","getChildRouteGuards","getCanActivateChild","p","canActivateChild","getTokenOrFunctionIdentity","tokenOrFunction","injector","NOT_FOUND","result","isInjectable","futurePath","checks","prevChildren","getRouteGuards","k","deactivateRouteAndItsChildren","shouldRun","shouldRunGuardsAndResolvers","mode","equalPath","shallowEqual","equalParamsAndUrlSegments","childName","node","isFunction","isBoolean","isCanLoad","guard","isCanActivate","isCanActivateChild","isCanDeactivate","isCanMatch","isEmptyError","e","EmptyError","INITIAL_VALUE","prioritizedGuardValue","switchMap","obs","combineLatest","o","take","startWith","results","isRedirect","filter","item","val","isUrlTree","RedirectCommand","checkGuards","mergeMap","targetSnapshot","currentSnapshot","canActivateChecks","canDeactivateChecks","of","__spreadProps","__spreadValues","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","guardsResult","futureRSS","currRSS","from","check","runCanDeactivate","first","futureSnapshot","concatMap","concat","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","snapshot","ActivationStart","ChildActivationStart","futureARS","canActivate","canActivateObservables","defer","closestInjector","getClosestRouteInjector","guardVal","runInInjectionContext","wrapIntoObservable","canActivateChildGuardsMapped","_","d","guardsMapped","currARS","canDeactivateObservables","runCanLoadGuards","segments","urlSerializer","canLoad","canLoadObservables","injectionToken","redirectIfUrlTree","pipe","tap","redirectingNavigationError","runCanMatchGuards","canMatch","canMatchObservables","NoMatch","segmentGroup","AbsoluteRedirect","urlTree","noMatch$1","throwError","namedOutletsRedirect","redirectTo","throwError","RuntimeError","canLoadFails","route","navigationCancelingError","NavigationCancellationCode","ApplyRedirects","urlSerializer","urlTree","res","c","of","PRIMARY_OUTLET","segments","posParams","currentSnapshot","injector","redirectToFn","queryParams","fragment","routeConfig","url","outlet","params","data","title","newRedirect","runInInjectionContext","UrlTree","AbsoluteRedirect","newTree","newRoot","redirectToParams","actualParams","k","v","sourceName","group","updatedSegments","children","name","child","UrlSegmentGroup","redirectToSegments","actualSegments","s","redirectToUrlSegment","pos","idx","noMatch","matchWithChecks","segmentGroup","result","match","getOrCreateRouteInjectorIfNeeded","runCanMatchGuards","map","__spreadValues","createWildcardMatchResult","defaultUrlMatcher","parameters","last","split","consumedSegments","slicedSegments","config","containsEmptyPathMatchesWithNamedOutlets","createChildrenForEmptyPaths","containsEmptyPathMatches","addEmptyPathsToChildrenIfNeeded","routes","r","emptyPathMatch","getOutlet","primarySegment","noLeftoversInUrl","NoLeftoversInUrl","recognize$1","configLoader","rootComponentType","paramsInheritanceStrategy","Recognizer","MAX_ALLOWED_REDIRECTS","e","rootSegmentGroup","rootSnapshot","rootNode","TreeNode","routeState","RouterStateSnapshot","tree","createUrlTreeFromSnapshot","ActivatedRouteSnapshot","catchError","NoMatch","parentRoute","childOutlets","from","concatMap","childOutlet","sortedConfig","sortByMatchingOutlets","scan","outletChildren","defaultIfEmpty","mergeMap","noMatch$1","mergedChildren","mergeEmptyPathMatches","sortActivatedRouteSnapshots","allowRedirects","first","x","isEmptyError","rawSegment","matched","positionalParamSegments","remainingSegments","getData","getResolve","inherited","getInherited","newSegments","matchResult","switchMap","childConfig","childInjector","snapshot","matchedOnOutlet","runCanLoadGuards","shouldLoadResult","tap","cfg","nodes","a","b","hasEmptyPathConfig","node","mergedNodes","duplicateEmptyPathNode","resultNode","mergedNode","n","getData","route","getResolve","recognize","injector","configLoader","rootComponentType","config","serializer","paramsInheritanceStrategy","mergeMap","t","recognize$1","map","targetSnapshot","urlAfterRedirects","__spreadProps","__spreadValues","resolveData","canActivateChecks","of","routesWithResolversToRun","check","routesNeedingDataUpdates","newRoute","flattenRouteTree","routesProcessed","from","concatMap","runResolve","getInherited","tap","takeLast","_","EMPTY","descendants","child","futureARS","futureRSS","resolve","hasStaticTitle","RouteTitleKey","resolveNode","resolvedData","keys","getDataKeys","data","key","getResolver","first","value","RedirectCommand","redirectingNavigationError","DefaultUrlSerializer","mapTo","catchError","e","isEmptyError","throwError","injectionToken","closestInjector","getClosestRouteInjector","resolver","getTokenOrFunctionIdentity","resolverValue","runInInjectionContext","wrapIntoObservable","switchTap","next","switchMap","v","nextResult","TitleStrategy","snapshot","pageTitle","PRIMARY_OUTLET","__ngFactoryType__","ɵɵdefineInjectable","inject","DefaultTitleStrategy","title","ɵɵinject","Title","ROUTER_CONFIGURATION","InjectionToken","ɵEmptyOutletComponent","ɵɵdefineComponent","ɵɵStandaloneFeature","rf","ctx","ɵɵelement","RouterOutlet","standardizeConfig","r","children","c","ROUTES","RouterConfigLoader","Compiler","loadRunner","maybeUnwrapDefaultExport","component","finalize","loader","ConnectableObservable","Subject","refCount","parentInjector","loadChildren","compiler","onLoadEndListener","NgModuleFactory$1","factoryOrRoutes","rawRoutes","requireStandaloneComponents","isWrappedDefaultExport","input","UrlHandlingStrategy","DefaultUrlHandlingStrategy","url","newUrlPart","wholeUrl","CREATE_VIEW_TRANSITION","VIEW_TRANSITION_OPTIONS","createViewTransition","to","transitionOptions","document","DOCUMENT","NgZone","resolveViewTransitionStarted","viewTransitionStarted","transition","createRenderPromise","onViewTransitionCreated","afterNextRender","NAVIGATION_ERROR_HANDLER","NavigationTransitions","EnvironmentInjector","UrlSerializer","ChildrenOutletContexts","Location","INPUT_BINDER","onLoadStart","RouteConfigLoadStart","onLoadEnd","RouteConfigLoadEnd","request","id","router","initialUrlTree","initialRouterState","BehaviorSubject","IMPERATIVE_NAVIGATION","filter","overallTransitionState","completed","errored","NavigationCancellationCode","urlTransition","onSameUrlNavigation","reason","NavigationSkipped","NavigationSkippedCode","NavigationStart","routesRecognized","RoutesRecognized","extractedUrl","source","restoredState","extras","navStart","createEmptyState","guardsStart","GuardsCheckStart","getAllRouteGuards","checkGuards","evt","guardsEnd","GuardsCheckEnd","resolveStart","ResolveStart","dataResolved","resolveEnd","ResolveEnd","loadComponents","loaders","loadedComponent","combineLatest","defaultIfEmpty","take","currentSnapshot","targetRouterState","createRouterState","BeforeActivateRoutes","activateRoutes","NavigationEnd","takeUntil","err","isNavigationCancelingError","NavigationCancel","isRedirectingNavigationCancelingError","RedirectRequest","navigationError","NavigationError","navigationErrorHandlerResult","message","cancellationCode","errorHandlerResult","ee","code","navCancel","currentBrowserUrl","targetBrowserUrl","isBrowserTriggeredNavigation","RouteReuseStrategy","DefaultRouteReuseStrategy","BaseRouteReuseStrategy","detachedTree","future","curr","ɵDefaultRouteReuseStrategy_BaseFactory","ɵɵgetInheritedFactory","StateManager","HistoryStateManager","UrlTree","listener","event","currentTransition","rawUrl","path","currentBrowserPageId","state","navigation","restoringFromCaughtError","targetPagePosition","navigationId","routerPageId","ɵHistoryStateManager_BaseFactory","NavigationResult","afterNextNavigation","action","result","defaultErrorHandler","error","exactMatchOptions","subsetMatchOptions","Router","Console","PendingTasks","Subscription","subscription","currentNavigation","opts","mergedTree","isPublicRouterEvent","stateCopy","urlTree","commands","navigationExtras","relativeTo","queryParams","fragment","queryParamsHandling","preserveFragment","f","q","relativeToUrlSegmentGroup","relativeToSnapshot","createSegmentGroupFromRoute","createUrlTreeFromSegmentGroup","isUrlTree","validateCommands","matchOptions","options","containsTree","params","priorPromise","reject","promise","res","rej","taskId","i","RuntimeError","RouterLink","tabIndexAttribute","renderer","el","locationStrategy","tagName","s","newTabIndex","changes","commandsOrUrlTree","button","ctrlKey","shiftKey","altKey","metaKey","sanitizedValue","ɵɵsanitizeUrlOrResourceUrl","attrName","attrValue","nativeElement","ɵɵdirectiveInject","ActivatedRoute","ɵɵinjectAttribute","Renderer2","ElementRef","LocationStrategy","ɵɵdefineDirective","ɵɵlistener","$event","ɵɵattribute","booleanAttribute","ɵɵInputTransformsFeature","ɵɵNgOnChangesFeature","PreloadingStrategy","RouterPreloader","router","compiler","injector","preloadingStrategy","loader","filter","NavigationEnd","concatMap","routes","res","route","createEnvironmentInjector","injectorForCurrentRoute","injectorForChildren","from","mergeAll","loadedChildren$","of","recursiveLoadChildren$","mergeMap","config","loadComponent$","__ngFactoryType__","ɵɵinject","Router","Compiler","EnvironmentInjector","PreloadingStrategy","RouterConfigLoader","ɵɵdefineInjectable","ROUTER_SCROLLER","InjectionToken","RouterScroller","urlSerializer","transitions","viewportScroller","zone","options","NavigationStart","NavigationSkipped","NavigationSkippedCode","Scroll","routerEvent","anchor","ɵɵinvalidFactory","provideRouter","features","makeEnvironmentProviders","ROUTES","ActivatedRoute","rootRoute","APP_BOOTSTRAP_LISTENER","getBootstrapListener","feature","routerFeature","kind","providers","getBootstrapListener","injector","inject","Injector","bootstrappedComponentRef","ref","ApplicationRef","router","Router","bootstrapDone","BOOTSTRAP_DONE","INITIAL_NAVIGATION","ROUTER_PRELOADER","InjectFlags","ROUTER_SCROLLER","InjectionToken","Subject","withEnabledBlockingInitialNavigation","routerFeature","APP_INITIALIZER","locationInitialized","LOCATION_INITIALIZED","resolve","afterNextNavigation","NavigationTransitions","of","withDisabledInitialNavigation","ROUTER_PRELOADER","InjectionToken","withPreloading","preloadingStrategy","routerFeature","RouterPreloader","PreloadingStrategy","withComponentInputBinding","routerFeature","RoutedComponentInputBinder","INPUT_BINDER","withViewTransitions","options","providers","CREATE_VIEW_TRANSITION","createViewTransition","VIEW_TRANSITION_OPTIONS","__spreadValues","ROUTER_FORROOT_GUARD","InjectionToken","ROUTER_PROVIDERS","Location","UrlSerializer","DefaultUrlSerializer","Router","ChildrenOutletContexts","ActivatedRoute","rootRoute","RouterConfigLoader","RouterModule","guard","routes","config","ROUTES","provideForRootGuard","Optional","SkipSelf","ROUTER_CONFIGURATION","provideHashLocationStrategy","providePathLocationStrategy","provideRouterScroller","withPreloading","provideInitialNavigation","withComponentInputBinding","withViewTransitions","provideRouterInitializer","__ngFactoryType__","ɵɵinject","ɵɵdefineNgModule","ɵɵdefineInjector","ROUTER_SCROLLER","viewportScroller","inject","ViewportScroller","zone","NgZone","transitions","NavigationTransitions","urlSerializer","RouterScroller","LocationStrategy","HashLocationStrategy","PathLocationStrategy","router","withDisabledInitialNavigation","withEnabledBlockingInitialNavigation","ROUTER_INITIALIZER","getBootstrapListener","APP_BOOTSTRAP_LISTENER","nls","authFailed","passwordPlaceHolder","emailPlaceHolder","email","password","emailRequired","passwordRequired","invalidEmail","invalidPassword","fname","lname","gender","phone","lnameRequired","genderRequired","fnameRequired","createAccount","loginExisting","Signup","Login","welcome","SignupSubheading","LoginSubheading","logoutSuccess","loginSuccess","confirmpassword","passwordMatchError","phoneRequired","invalidMobileFormat","SignupError","UserSessionExpired","EnableBiometric","EnableBiometricMessage","BiometricEnrolledOnDevice","BiometricLoginError","CannotUseBiometric","loginUsingBiometric","authentication_default","MessagesService","currentId","messages","signal","showMessage","type","text","id","message","update","currentMessages","setTimeout","removeMessage","success","error","warning","filter","msg","factory","ɵfac","providedIn","LoaderService","isLoading","signal","changeLoaderState","state","set","factory","ɵfac","providedIn","bind","fn","thisArg","toString","getPrototypeOf","kindOf","cache","thing","str","kindOfTest","type","typeOfTest","isArray","isUndefined","isBuffer","val","isFunction","isArrayBuffer","isArrayBufferView","result","isString","isNumber","isObject","isBoolean","isPlainObject","prototype","isDate","isFile","isBlob","isFileList","isStream","isFormData","kind","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","trim","forEach","obj","fn","allOwnKeys","i","l","keys","len","key","findKey","_key","_global","isContextDefined","context","merge","caseless","assignValue","targetKey","extend","a","b","thisArg","bind","stripBOM","content","inherits","constructor","superConstructor","props","descriptors","toFlatObject","sourceObj","destObj","filter","propFilter","prop","merged","endsWith","searchString","position","lastIndex","toArray","arr","isTypedArray","TypedArray","forEachEntry","iterator","pair","matchAll","regExp","matches","isHTMLForm","toCamelCase","m","p1","p2","hasOwnProperty","isRegExp","reduceDescriptors","reducer","reducedDescriptors","descriptor","name","ret","freezeMethods","value","toObjectSet","arrayOrString","delimiter","define","noop","toFiniteNumber","defaultValue","ALPHA","DIGIT","ALPHABET","generateString","size","alphabet","length","isSpecCompliantForm","toJSONObject","stack","visit","source","target","reducedValue","isAsyncFn","isThenable","_setImmediate","setImmediateSupported","postMessageSupported","token","callbacks","data","cb","asap","utils_default","AxiosError","message","code","config","request","response","utils_default","prototype","descriptors","error","customProps","axiosError","obj","prop","AxiosError_default","null_default","isVisitable","thing","utils_default","removeBrackets","key","renderKey","path","dots","token","i","isFlatArray","arr","predicates","prop","toFormData","obj","formData","options","null_default","option","source","metaTokens","visitor","defaultVisitor","indexes","useBlob","convertValue","value","AxiosError_default","el","index","stack","exposedHelpers","build","toFormData_default","encode","str","charMap","match","AxiosURLSearchParams","params","options","toFormData_default","prototype","name","value","encoder","_encode","pair","AxiosURLSearchParams_default","encode","val","buildURL","url","params","options","_encode","serializeFn","serializedParams","utils_default","AxiosURLSearchParams_default","hashmarkIndex","InterceptorManager","fulfilled","rejected","options","id","fn","utils_default","h","InterceptorManager_default","transitional_default","URLSearchParams_default","AxiosURLSearchParams_default","FormData_default","Blob_default","browser_default","URLSearchParams_default","FormData_default","Blob_default","utils_exports","__export","hasBrowserEnv","hasStandardBrowserEnv","hasStandardBrowserWebWorkerEnv","_navigator","origin","platform_default","__spreadValues","utils_exports","browser_default","toURLEncodedForm","data","options","toFormData_default","platform_default","value","key","path","helpers","utils_default","parsePropPath","name","utils_default","match","arrayToObject","arr","obj","keys","i","len","key","formDataToJSON","formData","buildPath","path","value","target","index","isNumericKey","isLast","formDataToJSON_default","stringifySafely","rawValue","parser","encoder","utils_default","e","defaults","transitional_default","data","headers","contentType","hasJSONContentType","isObjectPayload","formDataToJSON_default","isFileList","toURLEncodedForm","_FormData","toFormData_default","transitional","forcedJSONParsing","JSONRequested","strictJSONParsing","AxiosError_default","platform_default","status","method","defaults_default","ignoreDuplicateOf","utils_default","parseHeaders_default","rawHeaders","parsed","key","val","i","line","$internals","normalizeHeader","header","normalizeValue","value","utils_default","parseTokens","str","tokens","tokensRE","match","isValidHeaderName","matchHeaderValue","context","filter","isHeaderNameFilter","formatHeader","w","char","buildAccessors","obj","accessorName","methodName","arg1","arg2","arg3","AxiosHeaders","headers","valueOrRewrite","rewrite","self","setHeader","_value","_header","_rewrite","lHeader","key","setHeaders","parseHeaders_default","parser","matcher","deleted","deleteHeader","keys","i","format","normalized","targets","asStrings","thing","first","computed","target","accessors","prototype","defineAccessor","mapped","headerValue","AxiosHeaders_default","transformData","fns","response","config","defaults_default","context","headers","AxiosHeaders_default","data","utils_default","fn","isCancel","value","CanceledError","message","config","request","AxiosError_default","utils_default","CanceledError_default","settle","resolve","reject","response","validateStatus","AxiosError_default","parseProtocol","url","match","speedometer","samplesCount","min","bytes","timestamps","head","tail","firstSampleTS","chunkLength","now","startedAt","i","bytesCount","passed","speedometer_default","throttle","fn","freq","timestamp","threshold","lastArgs","timer","invoke","args","now","passed","throttle_default","progressEventReducer","listener","isDownloadStream","freq","bytesNotified","_speedometer","speedometer_default","throttle_default","e","loaded","total","progressBytes","rate","inRange","data","progressEventDecorator","throttled","lengthComputable","asyncDecorator","fn","args","utils_default","isURLSameOrigin_default","platform_default","msie","urlParsingNode","originURL","resolveURL","url","href","requestURL","parsed","utils_default","cookies_default","platform_default","name","value","expires","path","domain","secure","cookie","utils_default","match","isAbsoluteURL","url","combineURLs","baseURL","relativeURL","buildFullPath","baseURL","requestedURL","isAbsoluteURL","combineURLs","headersToObject","thing","AxiosHeaders_default","__spreadValues","mergeConfig","config1","config2","config","getMergedValue","target","source","caseless","utils_default","mergeDeepProperties","a","valueFromConfig2","defaultToConfig2","mergeDirectKeys","prop","mergeMap","merge","configValue","resolveConfig_default","config","newConfig","mergeConfig","data","withXSRFToken","xsrfHeaderName","xsrfCookieName","headers","auth","AxiosHeaders_default","buildURL","buildFullPath","contentType","utils_default","platform_default","type","tokens","token","isURLSameOrigin_default","xsrfValue","cookies_default","isXHRAdapterSupported","xhr_default","config","resolve","reject","_config","resolveConfig_default","requestData","requestHeaders","AxiosHeaders_default","responseType","onUploadProgress","onDownloadProgress","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","done","request","onloadend","responseHeaders","response","settle","value","err","AxiosError_default","timeoutErrorMessage","transitional","transitional_default","utils_default","val","key","progressEventReducer","cancel","CanceledError_default","protocol","parseProtocol","platform_default","composeSignals","signals","timeout","length","controller","aborted","onabort","reason","unsubscribe","err","AxiosError_default","CanceledError_default","timer","signal","utils_default","composeSignals_default","streamChunk","chunk","chunkSize","len","pos","end","readBytes","iterable","__asyncGenerator","iter","__forAwait","readStream","more","temp","error","__await","__yieldStar","stream","reader","done","value","trackStream","onProgress","onFinish","iterator","bytes","_onFinish","e","controller","__async","loadedBytes","err","reason","isFetchSupported","isReadableStreamSupported","encodeText","encoder","str","__async","test","fn","args","supportsRequestStream","duplexAccessed","hasContentType","platform_default","DEFAULT_CHUNK_SIZE","supportsResponseStream","utils_default","resolvers","res","type","_","config","AxiosError_default","getBodyLength","body","resolveBodyLength","headers","length","fetch_default","url","method","data","signal","cancelToken","timeout","onDownloadProgress","onUploadProgress","responseType","withCredentials","fetchOptions","resolveConfig_default","composedSignal","composeSignals_default","request","unsubscribe","requestContentLength","_request","contentTypeHeader","onProgress","flush","progressEventDecorator","progressEventReducer","asyncDecorator","trackStream","isCredentialsSupported","__spreadProps","__spreadValues","response","isStreamResponse","options","prop","responseContentLength","responseData","resolve","reject","settle","AxiosHeaders_default","err","knownAdapters","null_default","xhr_default","fetch_default","utils_default","fn","value","renderReason","reason","isResolvedHandle","adapter","adapters_default","adapters","length","nameOrAdapter","rejectedReasons","i","id","AxiosError_default","reasons","state","s","throwIfCancellationRequested","config","CanceledError_default","dispatchRequest","AxiosHeaders_default","transformData","adapters_default","defaults_default","response","reason","isCancel","VERSION","validators","type","i","thing","deprecatedWarnings","validator","version","message","formatMessage","opt","desc","VERSION","value","opts","AxiosError_default","assertOptions","options","schema","allowUnknown","keys","result","validator_default","validators","validator_default","Axios","instanceConfig","InterceptorManager_default","configOrUrl","config","__async","err","dummy","stack","mergeConfig","transitional","paramsSerializer","headers","utils_default","contextHeaders","method","AxiosHeaders_default","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","promise","i","len","chain","dispatchRequest","newConfig","onFulfilled","onRejected","error","fullPath","buildFullPath","buildURL","url","generateHTTPMethod","isForm","data","Axios_default","CancelToken","_CancelToken","executor","resolvePromise","resolve","token","cancel","i","onfulfilled","_resolve","promise","message","config","request","CanceledError_default","listener","index","controller","abort","err","c","CancelToken_default","spread","callback","arr","isAxiosError","payload","utils_default","HttpStatusCode","key","value","HttpStatusCode_default","createInstance","defaultConfig","context","Axios_default","instance","bind","utils_default","instanceConfig","mergeConfig","axios","defaults_default","CanceledError_default","CancelToken_default","isCancel","VERSION","toFormData_default","AxiosError_default","promises","spread","isAxiosError","AxiosHeaders_default","thing","formDataToJSON_default","adapters_default","HttpStatusCode_default","axios_default","Axios","AxiosError","CanceledError","isCancel","CancelToken","VERSION","all","Cancel","isAxiosError","spread","toFormData","AxiosHeaders","HttpStatusCode","formToJSON","getAdapter","mergeConfig","axios_default","nls","okay","cancel","save","delete","areYouSure","addField","AddField","fieldName","fieldType","FieldNameInvlaid","addNewField","resolveError","createBackupError","createBackupSuccess","saveBackupError","backupFileName","backupMyData","importMyData","import","backupFile","backupFileIsRequired","readBackupFileError","restoreFromBackupSuccessful","parseBackupFileError","navbar","logging","brand","home","reports","tasks","schedule","account","exitApp","exitAppMessage","generic_default","byteToHex","i","unsafeStringify","arr","offset","getRandomValues","rnds8","rng","randomUUID","native_default","v4","options","buf","offset","native_default","rnds","rng","i","unsafeStringify","v4_default","CordovaService","_message","inject","MessagesService","constructor","resolveFS","fileName","data","checkAndRequestPermissions","createBackupDirectory","window","resolveLocalFileSystemURL","cordova","file","externalRootDirectory","entry","dirEntry","createFile","error","nls","resolveError","dataObj","getDirectory","create","exclusive","getFile","fileEntry","writeFile","createBackupError","createWriter","fileWriter","onwriteend","success","createBackupSuccess","onerror","saveBackupError","write","storageOpration","permissions","plugins","checkPermission","WRITE_EXTERNAL_STORAGE","status","hasPermission","requestPermission","showPermissionDeniedAlert","confirm","openAppSettings","diagnostic","switchToSettings","factory","ɵfac","providedIn","delay","ms","Promise","resolve","setTimeout","ApiService","_base_url","_storage","localStorage","_loader","inject","LoaderService","_message","MessagesService","_cordovaService","CordovaService","getSavingKey","key","userString","getItem","JSON","parse","email","Error","hit","endpoint","method","data","__async","changeLoaderState","result","config","headers","local_get","response","axios","get","post","put","success","error","local_post","value","newData","prevData","order","length","id","uuidv4","createdAt","Date","now","updatedAt","push","setItem","stringify","message","item","parsedItem","sort","a","b","local_get_by_id","filter","log","matched","keys","Object","local_put","Array","isArray","map","index","oldData","local_delete","newdata","removeItem","listKeys","local_clear","i","user","startsWith","backupData","backup","backupFile","nls","backupFileName","parsedData","__spreadProps","__spreadValues","split","jsonStr","blob","Blob","type","cordova","resolveFS","url","URL","createObjectURL","link","document","createElement","download","href","click","revokeObjectURL","createBackupSuccess","restoreBackupData","file","reader","FileReader","onload","e","fileContent","target","parsedRestoreData","forEach","mergedData","mergeUnique","restoreFromBackupSuccessful","parseBackupFileError","onerror","readBackupFileError","readAsText","restoredData","mergedMap","Map","set","has","from","values","factory","ɵfac","providedIn","AuthenticationService","isAuthenticated","BehaviorSubject","isModalOpen","_router","inject","Router","_api","ApiService","messageService","MessagesService","currentUser","signal","constructor","getCurrentUser","subscribe","value","navigate","launchBiometric","__async","window","localStorage","getItem","isBiometricAvailable","userPreferences","JSON","parse","authenticate","loginWithUserPass","error","nls","CannotUseBiometric","BiometricLoginError","console","log","signupWithUserPass","data","email","toLowerCase","result","hit","success","message","userCreds","local_post","accessToken","user","set","toggleModal","next","local_delete","UserSessionExpired","logout","logoutSuccess","state","submitModal","setItem","stringify","Promise","resolve","reject","Fingerprint","isAvailable","show","title","subtitle","clientId","clientSecret","disableBackup","localizedFallbackTitle","localizedReason","biometricOnly","confirmationRequired","factory","ɵfac","providedIn","fadeZoomInOut","trigger","state","style","opacity","transform","transition","animate","slideInOut","right","hasV8BreakIterator","Platform","_platformId","isPlatformBrowser","__ngFactoryType__","ɵɵinject","PLATFORM_ID","ɵɵdefineInjectable","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","featureTestInput","value","supportsPassiveEvents","supportsPassiveEventListeners","normalizePassiveListenerOptions","options","scrollBehaviorSupported","supportsScrollBehavior","scrollToFunction","shadowDomIsSupported","_supportsShadowDom","head","_getShadowRoot","element","rootNode","_getFocusedElementPierceShadowDom","activeElement","newActiveElement","_getEventTarget","event","_isTestEnvironment","hasModifierKey","event","modifiers","modifier","coerceBooleanProperty","value","coerceNumberProperty","fallbackValue","_isNumberValue","coerceArray","coerceCssPixelValue","coerceElement","elementOrRef","ElementRef","coerceStringArray","separator","result","sourceValues","sourceValue","trimmedString","shouldIgnoreRecord","record","i","MutationObserverFactory","callback","__ngFactoryType__","ɵɵdefineInjectable","ContentObserver","_mutationObserverFactory","inject","NgZone","_","element","elementOrRef","coerceElement","Observable","observer","subscription","map","records","filter","stream","Subject","mutations","ɵɵinject","CdkObserveContent","value","coerceNumberProperty","_contentObserver","_elementRef","EventEmitter","debounceTime","ɵɵdirectiveInject","ElementRef","ɵɵdefineDirective","booleanAttribute","ɵɵInputTransformsFeature","ObserversModule","ɵɵdefineNgModule","ɵɵdefineInjector","mediaQueriesForWebkitCompatibility","mediaQueryStyleNode","MediaMatcher","_platform","_nonce","noopMatchMedia","query","createEmptyStyleRule","__ngFactoryType__","ɵɵinject","Platform","CSP_NONCE","ɵɵdefineInjectable","nonce","BreakpointObserver","_mediaMatcher","_zone","Subject","value","splitQueries","coerceArray","mediaQuery","observables","stateObservable","combineLatest","concat","take","skip","debounceTime","map","breakpointStates","response","matches","mql","output","Observable","observer","handler","e","startWith","takeUntil","NgZone","queries","a1","a2","ID_DELIMITER","addAriaReferencedId","el","attr","id","ids","getAriaReferenceIds","existingId","removeAriaReferencedId","filteredIds","val","DEFAULT_TYPEAHEAD_DEBOUNCE_INTERVAL_MS","Typeahead","initialItems","config","Subject","typeAheadInterval","index","items","event","keyCode","tap","letter","debounceTime","filter","map","inputString","i","item","ListKeyManager","_items","injector","Subscription","QueryList","newItems","isSignal","effect","predicate","shouldWrap","enabled","direction","keys","debounceInterval","delta","previousActiveItem","isModifierAllowed","modifier","targetIndex","itemsLength","hasModifierKey","itemArray","activeItem","fallbackDelta","newIndex","ActiveDescendantKeyManager","InteractivityChecker","_platform","element","hasGeometry","frameElement","getFrameElement","getWindow","getTabIndexValue","nodeName","tabIndexValue","isPotentiallyTabbableIOS","config","isPotentiallyFocusable","__ngFactoryType__","ɵɵinject","Platform","ɵɵdefineInjectable","window","isNativeFormElement","isHiddenInput","isInputElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","tabIndex","inputType","node","FocusTrap","value","_element","_checker","_ngZone","_document","deferAnchors","_injector","startAnchor","endAnchor","options","resolve","bound","markers","redirectToElement","focusableChild","root","children","i","tabbableChild","anchor","isEnabled","enabled","fn","afterNextRender","FocusTrapFactory","inject","Injector","deferCaptureElements","NgZone","DOCUMENT","CdkTrapFocus","_elementRef","_focusTrapFactory","changes","autoCaptureChange","_getFocusedElementPierceShadowDom","ɵɵdirectiveInject","ElementRef","ɵɵdefineDirective","booleanAttribute","ɵɵInputTransformsFeature","ɵɵNgOnChangesFeature","isFakeMousedownFromScreenReader","event","isFakeTouchstartFromScreenReader","touch","INPUT_MODALITY_DETECTOR_OPTIONS","InjectionToken","INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS","TOUCH_BUFFER_MS","modalityEventListenerOptions","normalizePassiveListenerOptions","InputModalityDetector","_platform","ngZone","document","options","BehaviorSubject","keyCode","_getEventTarget","__spreadValues","skip","distinctUntilChanged","__ngFactoryType__","ɵɵinject","Platform","NgZone","DOCUMENT","ɵɵdefineInjectable","LIVE_ANNOUNCER_ELEMENT_TOKEN","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LIVE_ANNOUNCER_DEFAULT_OPTIONS","uniqueIds","LiveAnnouncer","elementToken","_ngZone","_document","_defaultOptions","message","args","defaultOptions","politeness","duration","resolve","elementClass","previousElements","liveEl","i","id","modals","modal","ariaOwns","FocusMonitorDetectionMode","FOCUS_MONITOR_DEFAULT_OPTIONS","InjectionToken","captureEventListenerOptions","normalizePassiveListenerOptions","FocusMonitor","_ngZone","_platform","_inputModalityDetector","document","options","Subject","event","target","_getEventTarget","element","checkChildren","nativeElement","coerceElement","of","rootNode","_getShadowRoot","cachedInfo","info","elementInfo","origin","focusedElement","currentElement","_info","focusEventTarget","isFromInteraction","ms","TOUCH_BUFFER_MS","rootNodeFocusListeners","takeUntil","modality","results","mostRecentTarget","mostRecentModality","labels","i","__ngFactoryType__","ɵɵinject","NgZone","Platform","InputModalityDetector","DOCUMENT","ɵɵdefineInjectable","CdkMonitorFocus","_elementRef","_focusMonitor","EventEmitter","ɵɵdirectiveInject","ElementRef","ɵɵdefineDirective","HighContrastMode","BLACK_ON_WHITE_CSS_CLASS","WHITE_ON_BLACK_CSS_CLASS","HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS","HighContrastModeDetector","inject","BreakpointObserver","testElement","documentWindow","computedStyle","computedColor","bodyClasses","mode","A11yModule","highContrastModeDetector","ɵɵdefineNgModule","ɵɵdefineInjector","ObserversModule","DIR_DOCUMENT","InjectionToken","DIR_DOCUMENT_FACTORY","inject","DOCUMENT","RTL_LOCALE_PATTERN","_resolveDirectionality","rawValue","value","Directionality","_document","EventEmitter","bodyDir","htmlDir","__ngFactoryType__","ɵɵinject","ɵɵdefineInjectable","BidiModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","_c2","_c3","_c4","MatOption_Conditional_0_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","MatOption_Conditional_5_Template","MatOption_Conditional_6_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","_c5","_c6","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","InjectionToken","MatCommonModule","highContrastModeDetector","_sanityChecks","_document","name","_isTestEnvironment","__ngFactoryType__","ɵɵinject","HighContrastModeDetector","DOCUMENT","ɵɵdefineNgModule","ɵɵdefineInjector","BidiModule","_ErrorStateTracker","_defaultMatcher","ngControl","_parentFormGroup","_parentForm","_stateChanges","oldState","parent","matcher","control","newState","MAT_DATE_LOCALE","InjectionToken","MAT_DATE_LOCALE_FACTORY","inject","LOCALE_ID","DateAdapter","Subject","obj","value","locale","first","second","firstValid","secondValid","date","min","max","MAT_DATE_FORMATS","ISO_8601_REGEX","range","length","valueFunction","valuesArray","i","NativeDateAdapter","matDateLocale","style","dtf","year","month","result","parseFormat","displayFormat","__spreadProps","__spreadValues","years","months","newDate","days","d","n","__ngFactoryType__","ɵɵinject","ɵɵdefineInjectable","MAT_NATIVE_DATE_FORMATS","provideNativeDateAdapter","formats","MAT_NATIVE_DATE_FORMATS","DateAdapter","NativeDateAdapter","MAT_DATE_FORMATS","ErrorStateMatcher","control","form","__ngFactoryType__","ɵɵdefineInjectable","RippleState","RippleRef","_renderer","element","config","_animationForciblyDisabledThroughCss","passiveCapturingEventOptions$1","normalizePassiveListenerOptions","RippleEventManager","event","target","_getEventTarget","handlers","handler","ngZone","name","handlersForEvent","handlersForElement","defaultRippleAnimationConfig","ignoreMouseEventsTimeout","passiveCapturingEventOptions","pointerDownEvents","pointerUpEvents","RippleRenderer","_RippleRenderer","_target","_ngZone","elementOrElementRef","_platform","coerceElement","x","y","containerRect","animationConfig","__spreadValues","radius","distanceToFurthestCorner","offsetX","offsetY","enterDuration","ripple","computedStyles","userTransitionProperty","userTransitionDuration","animationForciblyDisabledThroughCss","rippleRef","eventListeners","onTransitionEnd","fallbackTimer","onTransitionCancel","rippleEl","type","isMostRecentTransientRipple","persistent","isFakeMousedown","isFakeMousedownFromScreenReader","isSyntheticEvent","isFakeTouchstartFromScreenReader","touches","i","isVisible","trigger","rect","distX","distY","MAT_RIPPLE_GLOBAL_OPTIONS","InjectionToken","MatRipple","value","_elementRef","platform","globalOptions","_animationMode","configOrX","__ngFactoryType__","ɵɵdirectiveInject","ElementRef","NgZone","Platform","ANIMATION_MODULE_TYPE","ɵɵdefineDirective","rf","ctx","ɵɵclassProp","MatRippleModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","MatPseudoCheckbox","ɵɵdefineComponent","ɵɵStandaloneFeature","MatPseudoCheckboxModule","MAT_OPTION_PARENT_COMPONENT","MAT_OPTGROUP","InjectionToken","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","MatOption","value","_element","_changeDetectorRef","_parent","group","EventEmitter","Subject","emitEvent","_origin","options","element","event","hasModifierKey","viewValue","__ngFactoryType__","ɵɵdirectiveInject","ElementRef","ChangeDetectorRef","MAT_OPTION_PARENT_COMPONENT","MAT_OPTGROUP","ɵɵdefineComponent","rf","ctx","ɵɵviewQuery","_c2","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵlistener","$event","ɵɵhostProperty","ɵɵattribute","ɵɵclassProp","booleanAttribute","ɵɵInputTransformsFeature","ɵɵStandaloneFeature","_c4","ɵɵprojectionDef","_c3","ɵɵtemplate","MatOption_Conditional_0_Template","ɵɵprojection","ɵɵelementStart","ɵɵelementEnd","MatOption_Conditional_5_Template","MatOption_Conditional_6_Template","ɵɵelement","ɵɵconditional","ɵɵadvance","ɵɵproperty","MatPseudoCheckbox","MatRipple","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","groups","groupCounter","i","_getOptionScrollPosition","optionOffset","optionHeight","currentScrollPosition","panelHeight","MatOptionModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatRippleModule","MatCommonModule","MatPseudoCheckboxModule","eventListenerOptions","rippleInteractionEvents","matRippleUninitialized","matRippleClassName","matRippleCentered","matRippleDisabled","MatRippleLoader","inject","DOCUMENT","ANIMATION_MODULE_TYPE","MAT_RIPPLE_GLOBAL_OPTIONS","Platform","NgZone","eventTarget","_getEventTarget","hosts","host","config","disabled","ripple","existingRipple","rippleEl","ɵɵdefineInjectable","_MatInternalFormField","_c5","_c6","_c0","policy","getPolicy","ttWindow","s","trustedHTMLFromString","html","getMatIconNameNotFoundError","iconName","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","SvgIconConfig","svgText","options","MatIconRegistry","_httpClient","_sanitizer","document","_errorHandler","namespace","resolver","cleanLiteral","SecurityContext","trustedLiteral","alias","classNames","safeUrl","cachedIcon","of","cloneSvg","tap","svg","map","name","key","iconKey","config","iconSetConfigs","throwError","namedIcon","iconSetFetchRequests","iconSetConfig","catchError","err","errorMessage","forkJoin","foundIcon","i","iconSet","iconSource","iconElement","str","div","element","attributes","value","iconConfig","withCredentials","inProgressFetch","req","finalize","share","configNamespace","result","isSafeUrlWithOptions","__ngFactoryType__","ɵɵinject","HttpClient","DomSanitizer","DOCUMENT","ErrorHandler","ɵɵdefineInjectable","cloneSvg","svg","iconKey","namespace","name","isSafeUrlWithOptions","value","MAT_ICON_DEFAULT_OPTIONS","InjectionToken","MAT_ICON_LOCATION","MAT_ICON_LOCATION_FACTORY","_document","inject","DOCUMENT","_location","funcIriAttributes","funcIriAttributeSelector","attr","funcIriPattern","MatIcon","newValue","_elementRef","_iconRegistry","ariaHidden","_errorHandler","defaults","Subscription","iconName","parts","cachedElements","newPath","path","layoutElement","childCount","child","elem","fontSetClasses","className","elements","attrs","element","elementsWithFuncIri","i","elementWithReference","match","attributes","rawName","take","err","errorMessage","__ngFactoryType__","ɵɵdirectiveInject","ElementRef","MatIconRegistry","ɵɵinjectAttribute","ErrorHandler","ɵɵdefineComponent","rf","ctx","ɵɵattribute","ɵɵclassMap","ɵɵclassProp","booleanAttribute","ɵɵInputTransformsFeature","ɵɵStandaloneFeature","_c0","ɵɵprojectionDef","ɵɵprojection","MatIconModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","MatDivider","value","coerceBooleanProperty","__ngFactoryType__","ɵɵdefineComponent","rf","ctx","ɵɵattribute","ɵɵclassProp","ɵɵStandaloneFeature","MatDividerModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","_c0","_c1","_c2","_c4","_c5","_c8","_c9","MAT_BUTTON_CONFIG","InjectionToken","HOST_SELECTOR_MDC_CLASS_PAIR","MatButtonBase","v","value","_elementRef","_platform","_ngZone","_animationMode","inject","FocusMonitor","MatRippleLoader","config","MAT_BUTTON_CONFIG","element","classList","attribute","mdcClasses","origin","options","__ngFactoryType__","ɵɵinvalidFactory","ɵɵdefineDirective","booleanAttribute","ɵɵInputTransformsFeature","MatButton","MatButtonBase","elementRef","platform","ngZone","animationMode","__ngFactoryType__","ɵɵdirectiveInject","ElementRef","Platform","NgZone","ANIMATION_MODULE_TYPE","ɵɵdefineComponent","rf","ctx","ɵɵattribute","ɵɵclassMap","ɵɵclassProp","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","_c0","_c2","ɵɵprojectionDef","_c1","ɵɵelement","ɵɵprojection","ɵɵelementStart","ɵɵelementEnd","MAT_FAB_DEFAULT_OPTIONS","InjectionToken","MAT_FAB_DEFAULT_OPTIONS_FACTORY","defaults","MatFabButton","MatButtonBase","elementRef","platform","ngZone","animationMode","_options","__ngFactoryType__","ɵɵdirectiveInject","ElementRef","Platform","NgZone","ANIMATION_MODULE_TYPE","ɵɵdefineComponent","rf","ctx","ɵɵattribute","ɵɵclassMap","ɵɵclassProp","booleanAttribute","ɵɵInputTransformsFeature","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","_c5","_c2","ɵɵprojectionDef","_c1","ɵɵelement","ɵɵprojection","ɵɵelementStart","ɵɵelementEnd","MatIconButton","MatButtonBase","elementRef","platform","ngZone","animationMode","__ngFactoryType__","ɵɵdirectiveInject","ElementRef","Platform","NgZone","ANIMATION_MODULE_TYPE","ɵɵdefineComponent","rf","ctx","ɵɵattribute","ɵɵclassMap","ɵɵclassProp","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","_c8","_c9","ɵɵprojectionDef","ɵɵelement","ɵɵprojection","_c4","MatButtonModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","MatRippleModule","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","heading","ɵɵlistener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","cancelModal","ɵɵtemplate","ModalWindowComponent_div_1_div_1_span_2_Template","ModalWindowComponent_div_1_div_1_button_3_Template","ɵɵproperty","showCloseButton","ModalWindowComponent_div_1_div_4_ng_template_1_Template","content","ModalWindowComponent_div_1_div_5_ng_template_6_Template","_r3","submitModal","messageTitle","nls","cancel","okay","ModalWindowComponent_div_1_div_1_Template","ModalWindowComponent_div_1_div_4_Template","ModalWindowComponent_div_1_div_5_Template","undefined","showHeader","type","ModalWindowComponent","isOpen","areYouSure","onCancel","EventEmitter","onSubmit","emit","selectors","contentQueries","rf","ctx","dirIndex","TemplateRef","ModalWindowComponent_div_0_Template","ModalWindowComponent_div_1_Template","CommonModule","NgIf","NgTemplateOutlet","MatIconModule","MatIcon","MatDividerModule","MatDivider","MatButtonModule","MatButton","MatIconButton","styles","data","animation","fadeZoomInOut","nls","__spreadProps","__spreadValues","generic","logout","logoutText","ViewProfile","EditProfile","ChangePassword","Logout","HelpSupport","About","MyPlan","fname","lname","email","phone","verified","lastLogin","memberSince","done","unverified","ChangePasswordRequired","ChangePasswordRequiredNew","invalidPassword","incorrectPassword","lnameRequired","fnameRequired","emailRequired","phoneRequired","invlaidPhone","aboutApp","aboutText1","aboutText2","owner","aboutText3","appOwnership","contactMessage","supportText1","supportEmail","supportEmailValue","resetAccount","resetText","backupData","SwitchTheme","BiometricSettings","accounts_default","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","compareWith","Subject","value","values","changed","oldValues","newSelectedSet","flushEvent","predicate","inputValue","selection","selectedValue","BaseControlValueAccessor","_renderer","_elementRef","_","key","value","fn","isDisabled","__ngFactoryType__","ɵɵdirectiveInject","Renderer2","ElementRef","ɵɵdefineDirective","BuiltInControlValueAccessor","ɵBuiltInControlValueAccessor_BaseFactory","ɵɵgetInheritedFactory","ɵɵInheritDefinitionFeature","NG_VALUE_ACCESSOR","InjectionToken","DEFAULT_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","DefaultValueAccessor","_isAndroid","userAgent","getDOM","COMPOSITION_BUFFER_MODE","InjectionToken","BaseControlValueAccessor","renderer","elementRef","_compositionMode","value","normalizedValue","__ngFactoryType__","ɵɵdirectiveInject","Renderer2","ElementRef","ɵɵdefineDirective","rf","ctx","ɵɵlistener","$event","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","isEmptyInputValue","hasValidLength","NG_VALIDATORS","NG_ASYNC_VALIDATORS","EMAIL_REGEXP","Validators","min","minValidator","max","maxValidator","control","requiredValidator","requiredTrueValidator","emailValidator","minLength","minLengthValidator","maxLength","maxLengthValidator","pattern","patternValidator","nullValidator","validators","compose","composeAsync","regex","regexStr","isPresent","o","toObservable","isPromise","from","mergeErrors","arrayOfErrors","res","errors","__spreadValues","executeValidators","validator","isValidatorFn","normalizeValidators","c","presentValidators","composeValidators","observables","forkJoin","map","composeAsyncValidators","mergeValidators","controlValidators","dirValidator","getControlValidators","getControlAsyncValidators","makeValidatorsArray","hasValidator","addValidators","currentValidators","current","v","removeValidators","AbstractControlDirective","fn","errorCode","path","ControlContainer","NgControl","AbstractControlStatus","cd","ngControlStatusHost","ngGroupStatusHost","__spreadProps","NgControlStatus","ɵɵclassProp","NgControlStatusGroup","VALID","INVALID","PENDING","DISABLED","ControlEvent","ValueChangeEvent","value","source","PristineChangeEvent","pristine","TouchedChangeEvent","touched","StatusChangeEvent","status","FormSubmittedEvent","FormResetEvent","pickValidators","validatorOrOpts","isOptionsObj","coerceToValidator","validator","composeValidators","pickAsyncValidators","asyncValidator","coerceToAsyncValidator","composeAsyncValidators","assertControlPresent","parent","isGroup","key","controls","RuntimeError","assertAllValuesPresent","control","_","AbstractControl","validators","asyncValidators","computed","signal","Subject","validatorFn","asyncValidatorFn","untracked","v","addValidators","removeValidators","hasValidator","opts","changed","sourceControl","__spreadProps","__spreadValues","skipPristineCheck","changeFn","shouldHaveEmitted","ctrl","emitEvent","obs","toObservable","errors","path","currPath","name","errorCode","x","changedControl","EventEmitter","newPristine","fn","onlySelf","parentDirty","FormGroup","options","controlName","acc","subtreeUpdated","updated","child","cb","condition","initValue","res","FormRecord","FormGroup","CALL_SET_DISABLED_STATE","InjectionToken","setDisabledStateDefault","controlPath","name","parent","setUpControl","control","dir","callSetDisabledState","setUpValidators","setUpViewChangePipeline","setUpModelChangePipeline","setUpBlurPipeline","setUpDisabledChangeHandler","cleanUpControl","validateControlPresenceOnChange","noop","cleanUpValidators","registerOnValidatorChange","validators","onChange","validator","onDisabledChange","isDisabled","getControlValidators","mergeValidators","asyncValidators","getControlAsyncValidators","onValidatorChange","isControlUpdated","updatedValidators","updatedAsyncValidators","asyncValidator","newValue","updateControl","emitModelEvent","setUpFormContainer","cleanUpFormContainer","isPropertyUpdated","changes","viewModel","change","isBuiltInAccessor","valueAccessor","BuiltInControlValueAccessor","syncPendingControls","form","directives","dir","control","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","v","DefaultValueAccessor","removeListItem$1","list","el","index","formDirectiveProvider$1","ControlContainer","forwardRef","NgForm","resolvedPromise$1","untracked","validators","asyncValidators","callSetDisabledState","computed","signal","EventEmitter","FormGroup","composeValidators","composeAsyncValidators","dir","container","setUpControl","group","setUpFormContainer","value","$event","syncPendingControls","path","__ngFactoryType__","ɵɵdirectiveInject","NG_VALIDATORS","NG_ASYNC_VALIDATORS","CALL_SET_DISABLED_STATE","ɵɵdefineDirective","rf","ctx","ɵɵlistener","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","removeListItem","list","el","index","isFormControlState","formState","FormControl","AbstractControl","validatorOrOpts","asyncValidator","pickValidators","pickAsyncValidators","isOptionsObj","options","changeFn","condition","fn","cb","isFormControl","control","FormControl","ɵNgNoValidate","__ngFactoryType__","ɵɵdefineDirective","NG_MODEL_WITH_FORM_CONTROL_WARNING","InjectionToken","formDirectiveProvider","ControlContainer","forwardRef","FormGroupDirective","untracked","value","validators","asyncValidators","callSetDisabledState","computed","signal","EventEmitter","changes","cleanUpValidators","dir","ctrl","setUpControl","cleanUpControl","removeListItem$1","$event","syncPendingControls","FormSubmittedEvent","FormResetEvent","oldCtrl","newCtrl","isFormControl","setUpFormContainer","cleanUpFormContainer","setUpValidators","__ngFactoryType__","ɵɵdirectiveInject","NG_VALIDATORS","NG_ASYNC_VALIDATORS","CALL_SET_DISABLED_STATE","ɵɵdefineDirective","rf","ctx","ɵɵlistener","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","controlNameBinding","NgControl","forwardRef","FormControlName","isDisabled","parent","validators","asyncValidators","valueAccessors","_ngModelWarningConfig","EventEmitter","selectValueAccessor","changes","isPropertyUpdated","newValue","controlPath","__ngFactoryType__","ɵɵdirectiveInject","ControlContainer","NG_VALIDATORS","NG_ASYNC_VALIDATORS","NG_VALUE_ACCESSOR","NG_MODEL_WITH_FORM_CONTROL_WARNING","ɵɵdefineDirective","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","toInteger","value","AbstractValidatorDirective","nullValidator","changes","input","control","fn","__ngFactoryType__","ɵɵdefineDirective","ɵɵNgOnChangesFeature","REQUIRED_VALIDATOR","NG_VALIDATORS","forwardRef","RequiredValidator","RequiredValidator","AbstractValidatorDirective","booleanAttribute","input","requiredValidator","ɵRequiredValidator_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineDirective","rf","ctx","ɵɵattribute","ɵɵProvidersFeature","REQUIRED_VALIDATOR","ɵɵInheritDefinitionFeature","MAX_LENGTH_VALIDATOR","NG_VALIDATORS","forwardRef","MaxLengthValidator","AbstractValidatorDirective","input","toInteger","maxlength","maxLengthValidator","ɵMaxLengthValidator_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineDirective","rf","ctx","ɵɵattribute","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","PATTERN_VALIDATOR","PatternValidator","patternValidator","ɵPatternValidator_BaseFactory","ɵInternalFormsSharedModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","FormArray","AbstractControl","controls","validatorOrOpts","asyncValidator","pickValidators","pickAsyncValidators","index","control","options","adjustedIndex","value","assertAllValuesPresent","newValue","assertControlPresent","subtreeUpdated","updated","child","cb","condition","name","isAbstractControlOptions","options","FormBuilder","nnfb","controls","reducedControls","newOptions","FormGroup","FormRecord","formState","validatorOrOpts","asyncValidator","FormControl","__spreadProps","__spreadValues","createdControls","c","FormArray","controlName","AbstractControl","value","validator","__ngFactoryType__","ɵɵdefineInjectable","FormsModule","opts","CALL_SET_DISABLED_STATE","setDisabledStateDefault","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","ɵInternalFormsSharedModule","ReactiveFormsModule","NG_MODEL_WITH_FORM_CONTROL_WARNING","_c0","_c1","_c2","_c3","_c4","_c5","LIST_OPTION","InjectionToken","MatListItemTitle","_elementRef","__ngFactoryType__","ɵɵdirectiveInject","ElementRef","ɵɵdefineDirective","MatListItemLine","MatListItemMeta","_MatListItemGraphicBase","_listOption","rf","ctx","ɵɵclassProp","MatListItemAvatar","ɵMatListItemAvatar_BaseFactory","ɵɵgetInheritedFactory","ɵɵInheritDefinitionFeature","MatListItemIcon","ɵMatListItemIcon_BaseFactory","MAT_LIST_CONFIG","MatListBase","inject","value","coerceBooleanProperty","ɵɵattribute","MatListItemBase","lines","coerceNumberProperty","_ngZone","_listBase","_platform","globalRippleOptions","animationMode","Subscription","RippleRenderer","merge","recheckUnscopedContent","numberOfLines","unscopedContentEl","treatAsTitle","numOfLines","node","NgZone","Platform","MAT_RIPPLE_GLOBAL_OPTIONS","ANIMATION_MODULE_TYPE","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","MatList","MatListBase","ɵMatList_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","_c0","rf","ctx","ɵɵprojectionDef","ɵɵprojection","_c1","MatListItem","MatListItemBase","activated","coerceBooleanProperty","element","ngZone","listBase","platform","globalRippleOptions","animationMode","ɵɵdirectiveInject","ElementRef","NgZone","Platform","MAT_RIPPLE_GLOBAL_OPTIONS","ANIMATION_MODULE_TYPE","dirIndex","ɵɵcontentQuery","MatListItemLine","MatListItemTitle","MatListItemMeta","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","_c2","_c3","ɵɵattribute","ɵɵclassProp","_c5","_r1","ɵɵgetCurrentView","_c4","ɵɵelementStart","ɵɵlistener","ɵɵrestoreView","ɵɵresetView","ɵɵelementEnd","ɵɵelement","CdkObserveContent","MatListModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","ObserversModule","CommonModule","MatCommonModule","MatRippleModule","MatPseudoCheckboxModule","MatDividerModule","import_moment","AppService","router","cordova","window","constructor","Window","getCordova","getWindow","ɵɵinject","Router","factory","ɵfac","providedIn","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","heading","ɵɵlistener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","cancelPanel","ɵɵtemplate","RightPanelComponent_div_1_div_1_span_2_Template","RightPanelComponent_div_1_div_1_button_3_Template","ɵɵproperty","showCloseButton","_r3","submitPanel","nls","cancel","okay","RightPanelComponent_div_1_div_1_Template","RightPanelComponent_div_1_ng_template_4_Template","RightPanelComponent_div_1_div_5_Template","undefined","showHeader","content","type","RightPanelComponent","_appService","inject","AppService","isOpen","onCancel","EventEmitter","onSubmit","emit","selectors","contentQueries","rf","ctx","dirIndex","TemplateRef","RightPanelComponent_div_0_Template","RightPanelComponent_div_1_Template","CommonModule","NgIf","NgTemplateOutlet","MatIconModule","MatIcon","MatRippleModule","MatButtonModule","MatButton","MatIconButton","MatDividerModule","MatDivider","styles","data","animation","slideInOut","SingleBoxSharedResizeObserver","_box","Subject","entries","target","Observable","observer","subscription","filter","entry","shareReplay","takeUntil","SharedResizeObserver","inject","NgZone","options","box","__ngFactoryType__","ɵɵdefineInjectable","_c0","_c1","_c2","_c3","_c4","_c5","_c6","_c7","_c8","_c9","MatFormField_ng_template_0_Conditional_0_Conditional_2_Template","rf","ctx","ɵɵelement","MatFormField_ng_template_0_Conditional_0_Template","ɵɵelementStart","ɵɵprojection","ɵɵtemplate","ɵɵelementEnd","ctx_r1","ɵɵnextContext","ɵɵproperty","ɵɵattribute","ɵɵadvance","ɵɵconditional","MatFormField_ng_template_0_Template","MatFormField_Conditional_4_Template","MatFormField_Conditional_6_Conditional_1_ng_template_0_Template","MatFormField_Conditional_6_Conditional_1_Template","labelTemplate_r3","ɵɵreference","MatFormField_Conditional_6_Template","MatFormField_Conditional_7_Template","MatFormField_Conditional_8_Template","MatFormField_Conditional_10_ng_template_0_Template","MatFormField_Conditional_10_Template","MatFormField_Conditional_12_Template","MatFormField_Conditional_13_Template","MatFormField_Conditional_14_Template","MatFormField_Case_16_Template","MatFormField_Case_17_Conditional_1_Template","ɵɵtext","ɵɵtextInterpolate","MatFormField_Case_17_Template","MatLabel","__ngFactoryType__","ɵɵdefineDirective","MAT_ERROR","InjectionToken","nextUniqueId$1","MatHint","__ngFactoryType__","ɵɵdefineDirective","rf","ctx","ɵɵhostProperty","ɵɵattribute","ɵɵclassProp","MAT_PREFIX","InjectionToken","MAT_SUFFIX","InjectionToken","MatSuffix","value","__ngFactoryType__","ɵɵdefineDirective","ɵɵProvidersFeature","FLOATING_LABEL_PARENT","MatFormFieldFloatingLabel","_elementRef","inject","SharedResizeObserver","NgZone","Subscription","estimateScrollWidth","ɵɵdirectiveInject","ElementRef","rf","ctx","ɵɵclassProp","element","htmlEl","clone","scrollWidth","ACTIVATE_CLASS","DEACTIVATING_CLASS","MatFormFieldLineRipple","ngZone","event","classList","isDeactivating","MatFormFieldNotchedOutline","_ngZone","label","labelWidth","ɵɵdefineComponent","ɵɵviewQuery","_c0","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵStandaloneFeature","_c1","_c2","ɵɵprojectionDef","ɵɵelement","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","matFormFieldAnimations","trigger","state","style","transition","animate","MatFormFieldControl","MAT_FORM_FIELD","InjectionToken","MAT_FORM_FIELD_DEFAULT_OPTIONS","nextUniqueId","DEFAULT_APPEARANCE","DEFAULT_FLOAT_LABEL","DEFAULT_SUBSCRIPT_SIZING","FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM","MatFormField","value","coerceBooleanProperty","oldValue","newAppearance","_elementRef","_changeDetectorRef","_unusedNgZone","_dir","_platform","_defaults","_animationMode","_unusedDocument","contentChild","MatLabel","Subject","inject","Injector","computed","previousControl","control","classPrefix","takeUntil","p","s","merge","afterRender","prop","ids","startHint","hint","endHint","error","floatingLabel","iconPrefixContainer","textPrefixContainer","iconSuffixContainer","textSuffixContainer","iconPrefixContainerWidth","textPrefixContainerWidth","iconSuffixContainerWidth","textSuffixContainerWidth","negate","prefixWidth","labelHorizontalOffset","prefixAndSuffixWidth","element","rootNode","__ngFactoryType__","ɵɵdirectiveInject","ElementRef","ChangeDetectorRef","NgZone","Directionality","Platform","ANIMATION_MODULE_TYPE","DOCUMENT","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuerySignal","ɵɵcontentQuery","MatFormFieldControl","MAT_PREFIX","MAT_SUFFIX","MAT_ERROR","MatHint","ɵɵqueryAdvance","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","_c3","_c4","_c5","_c6","_c7","MatFormFieldFloatingLabel","MatFormFieldNotchedOutline","MatFormFieldLineRipple","ɵɵclassProp","ɵɵProvidersFeature","FLOATING_LABEL_PARENT","ɵɵStandaloneFeature","_c9","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","_c8","ɵɵtemplate","MatFormField_ng_template_0_Template","ɵɵtemplateRefExtractor","ɵɵelementStart","ɵɵlistener","$event","ɵɵrestoreView","ɵɵresetView","MatFormField_Conditional_4_Template","MatFormField_Conditional_6_Template","MatFormField_Conditional_7_Template","MatFormField_Conditional_8_Template","MatFormField_Conditional_10_Template","ɵɵprojection","ɵɵelementEnd","MatFormField_Conditional_12_Template","MatFormField_Conditional_13_Template","MatFormField_Conditional_14_Template","MatFormField_Case_16_Template","MatFormField_Case_17_Template","tmp_16_0","ɵɵadvance","ɵɵconditional","NgTemplateOutlet","matFormFieldAnimations","MatFormFieldModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","CommonModule","ObserversModule","listenerOptions","normalizePassiveListenerOptions","AutofillMonitor","_platform","_ngZone","elementOrRef","EMPTY","element","coerceElement","info","result","Subject","cssClass","listener","event","_info","__ngFactoryType__","ɵɵinject","Platform","NgZone","ɵɵdefineInjectable","TextFieldModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","MAT_INPUT_VALUE_ACCESSOR","InjectionToken","MAT_INPUT_INVALID_TYPES","nextUniqueId","MatInput","value","coerceBooleanProperty","Validators","getSupportedInputTypes","_elementRef","_platform","ngControl","parentForm","parentFormGroup","defaultErrorStateMatcher","inputValueAccessor","_autofillMonitor","_ngZone","_formField","Subject","t","event","el","element","nodeName","_ErrorStateTracker","options","isFocused","newValue","placeholder","validity","selectElement","firstOption","ids","__ngFactoryType__","ɵɵdirectiveInject","ElementRef","Platform","NgControl","NgForm","FormGroupDirective","ErrorStateMatcher","AutofillMonitor","NgZone","MAT_FORM_FIELD","ɵɵdefineDirective","rf","ctx","ɵɵlistener","ɵɵhostProperty","ɵɵattribute","ɵɵclassProp","ɵɵProvidersFeature","MatFormFieldControl","ɵɵNgOnChangesFeature","MatInputModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","MatFormFieldModule","TextFieldModule","MatProgressBar_Conditional_2_Template","rf","ctx","ɵɵelement","MAT_PROGRESS_BAR_DEFAULT_OPTIONS","InjectionToken","MatProgressBar","_elementRef","_ngZone","_changeDetectorRef","_animationMode","defaults","EventEmitter","event","value","v","clamp","__ngFactoryType__","ɵɵdirectiveInject","ElementRef","NgZone","ChangeDetectorRef","ANIMATION_MODULE_TYPE","MAT_PROGRESS_BAR_DEFAULT_OPTIONS","ɵɵdefineComponent","rf","ctx","ɵɵattribute","ɵɵclassMap","ɵɵclassProp","numberAttribute","ɵɵInputTransformsFeature","ɵɵStandaloneFeature","ɵɵelementStart","ɵɵelement","ɵɵtemplate","MatProgressBar_Conditional_2_Template","ɵɵelementEnd","ɵɵadvance","ɵɵstyleProp","ɵɵconditional","min","max","MatProgressBarModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","DEFAULT_SCROLL_TIME","ScrollDispatcher","_ngZone","_platform","document","Subject","scrollable","scrollableReference","auditTimeInMs","Observable","observer","subscription","auditTime","of","_","container","elementOrElementRef","ancestors","filter","target","scrollingContainers","_subscription","element","coerceElement","scrollableElement","window","fromEvent","__ngFactoryType__","ɵɵinject","NgZone","Platform","DOCUMENT","ɵɵdefineInjectable","DEFAULT_RESIZE_TIME","ViewportRuler","_platform","ngZone","document","Subject","event","window","output","scrollPosition","width","height","documentElement","documentRect","top","left","throttleTime","auditTime","__ngFactoryType__","ɵɵinject","Platform","NgZone","DOCUMENT","ɵɵdefineInjectable","CdkScrollableModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","ScrollingModule","BidiModule","Portal","host","ComponentPortal","component","viewContainerRef","injector","componentFactoryResolver","projectableNodes","TemplatePortal","templateRef","context","DomPortal","element","ElementRef","BasePortalOutlet","portal","fn","DomPortalOutlet","BasePortalOutlet","outletElement","_componentFactoryResolver","_appRef","_defaultInjector","_document","portal","element","anchorNode","componentFactory","componentRef","Injector","viewContainer","viewRef","rootNode","index","CdkPortalOutlet","BasePortalOutlet","_componentFactoryResolver","_viewContainerRef","_document","EventEmitter","portal","element","anchorNode","viewContainerRef","componentFactory","ref","viewRef","nativeElement","__ngFactoryType__","ɵɵdirectiveInject","ComponentFactoryResolver$1","ViewContainerRef","DOCUMENT","ɵɵdefineDirective","ɵɵInheritDefinitionFeature","PortalModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","scrollBehaviorSupported","supportsScrollBehavior","BlockScrollStrategy","_viewportRuler","document","root","coerceCssPixelValue","html","body","htmlStyle","bodyStyle","previousHtmlScrollBehavior","previousBodyScrollBehavior","viewport","CloseScrollStrategy","_scrollDispatcher","_ngZone","_viewportRuler","_config","overlayRef","stream","filter","scrollable","scrollPosition","NoopScrollStrategy","isElementScrolledOutsideView","element","scrollContainers","containerBounds","outsideAbove","outsideBelow","outsideLeft","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategy","throttle","overlayRect","width","height","ScrollStrategyOptions","document","config","BlockScrollStrategy","__ngFactoryType__","ɵɵinject","ScrollDispatcher","ViewportRuler","NgZone","DOCUMENT","ɵɵdefineInjectable","OverlayConfig","configKeys","key","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","BaseOverlayDispatcher","document","overlayRef","index","__ngFactoryType__","ɵɵinject","DOCUMENT","ɵɵdefineInjectable","OverlayKeyboardDispatcher","_ngZone","event","overlays","i","keydownEvents","NgZone","OverlayOutsideClickDispatcher","_platform","_getEventTarget","target","origin","containsPierceShadowDom","outsidePointerEvents","body","Platform","parent","child","supportsShadowRoot","current","OverlayContainer","containerClass","_isTestEnvironment","oppositePlatformContainers","container","OverlayRef","_portalOutlet","_host","_pane","_config","_keyboardDispatcher","_document","_location","_outsideClickDispatcher","_animationsDisabled","_injector","Subject","Subscription","untracked","afterRender","portal","attachResult","afterNextRender","detachmentResult","isAttached","strategy","sizeConfig","__spreadValues","dir","__spreadProps","classes","direction","style","coerceCssPixelValue","enablePointer","showingClass","backdropToDetach","element","cssClasses","isAdd","coerceArray","c","subscription","takeUntil","merge","scrollStrategy","backdrop","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_viewportRuler","_overlayContainer","originRect","overlayRect","viewportRect","containerRect","flexibleFits","fallback","pos","originPoint","overlayPoint","overlayFit","bestFit","bestScore","fit","score","extendStyles","lastPosition","scrollables","positions","margin","flexibleDimensions","growAfterOpen","canPush","isLocked","offset","selector","x","startX","endX","y","overlayStartX","overlayStartY","point","rawOverlayRect","viewport","position","overlay","getRoundedBoundingClientRect","offsetX","offsetY","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","visibleHeight","visibleArea","availableHeight","availableWidth","minHeight","getPixelValue","minWidth","verticalFit","horizontalFit","start","scrollPosition","overflowRight","overflowBottom","overflowTop","overflowLeft","pushX","pushY","scrollVisibility","compareScrollVisibility","changeEvent","ConnectedOverlayPositionChange","elements","xOrigin","yOrigin","isRtl","height","top","bottom","smallestDistanceToViewportEdge","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","width","left","right","previousWidth","boundingBoxRect","styles","maxHeight","maxWidth","hasExactPosition","hasFlexibleDimensions","config","transformString","documentHeight","horizontalStyleProperty","documentWidth","originBounds","overlayBounds","scrollContainerBounds","scrollable","isElementClippedByScrolling","isElementScrolledOutsideView","length","overflows","currentValue","currentOverflow","axis","cssClass","ElementRef","destination","source","key","input","value","units","clientRect","a","b","wrapperClass","GlobalPositionStrategy","overlayRef","config","value","offset","styles","parentStyles","width","height","maxWidth","maxHeight","shouldBeFlushHorizontally","shouldBeFlushVertically","xPosition","xOffset","isRtl","marginLeft","marginRight","justifyContent","parent","OverlayPositionBuilder","_viewportRuler","_document","_platform","_overlayContainer","origin","FlexibleConnectedPositionStrategy","__ngFactoryType__","ɵɵinject","ViewportRuler","DOCUMENT","Platform","OverlayContainer","ɵɵdefineInjectable","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_keyboardDispatcher","_injector","_ngZone","_directionality","_location","_outsideClickDispatcher","_animationsModuleType","host","pane","portalOutlet","overlayConfig","OverlayConfig","OverlayRef","EnvironmentInjector","ApplicationRef","DomPortalOutlet","ScrollStrategyOptions","ComponentFactoryResolver$1","OverlayKeyboardDispatcher","Injector","NgZone","Directionality","Location","OverlayOutsideClickDispatcher","ANIMATION_MODULE_TYPE","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","InjectionToken","overlay","inject","CdkOverlayOrigin","elementRef","ɵɵdirectiveInject","ElementRef","ɵɵdefineDirective","CdkConnectedOverlay","offsetX","offsetY","_overlay","templateRef","viewContainerRef","scrollStrategyFactory","_dir","Subscription","EventEmitter","TemplatePortal","changes","event","hasModifierKey","target","_getEventTarget","positionStrategy","positions","currentPosition","strategy","takeWhile","position","TemplateRef","ViewContainerRef","booleanAttribute","ɵɵInputTransformsFeature","ɵɵNgOnChangesFeature","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","OverlayModule","ɵɵdefineNgModule","ɵɵdefineInjector","BidiModule","PortalModule","ScrollingModule","_c0","_c1","_c2","_c3","MatSelect_Conditional_4_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r1","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","MatSelect_Conditional_5_Conditional_1_Template","ɵɵprojection","MatSelect_Conditional_5_Conditional_2_Template","MatSelect_Conditional_5_Template","ɵɵtemplate","ɵɵconditional","MatSelect_ng_template_10_Template","_r3","ɵɵgetCurrentView","ɵɵlistener","$event","ɵɵrestoreView","ɵɵresetView","ɵɵclassMapInterpolate1","ɵɵproperty","ɵɵattribute","matSelectAnimations","trigger","transition","query","animateChild","state","style","animate","nextUniqueId","MAT_SELECT_SCROLL_STRATEGY","InjectionToken","overlay","inject","Overlay","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MAT_SELECT_TRIGGER","MatSelectChange","source","value","MatSelect","index","option","panel","labelCount","_countGroupLabelsBeforeOption","element","_getOptionScrollPosition","Validators","fn","newValue","_viewportRuler","_changeDetectorRef","_unusedNgZone","defaultErrorStateMatcher","_elementRef","_dir","parentForm","parentFormGroup","_parentFormField","ngControl","tabIndex","scrollStrategyFactory","_liveAnnouncer","_defaultOptions","o1","o2","Subject","defer","options","startWith","switchMap","merge","EventEmitter","filter","o","map","_ErrorStateTracker","SelectionModel","distinctUntilChanged","takeUntil","event","newAriaLabelledby","changes","modal","panelId","removeAriaReferencedId","addAriaReferencedId","isDisabled","selectedOptions","keyCode","isArrowKey","isOpenKey","manager","hasModifierKey","previouslySelectedOption","selectedOption","isTyping","hasDeselectedOptions","opt","previouslyFocusedIndex","take","currentValue","correspondingOption","preferredOrigin","CdkOverlayOrigin","ActiveDescendantKeyManager","changedOrDestroyed","isUserInput","wasSelected","a","b","fallbackValue","valueToEmit","firstEnabledOptionIndex","labelId","labelExpression","isOpen","ids","__ngFactoryType__","ɵɵdirectiveInject","ViewportRuler","ChangeDetectorRef","NgZone","ErrorStateMatcher","ElementRef","Directionality","NgForm","FormGroupDirective","MAT_FORM_FIELD","NgControl","ɵɵinjectAttribute","LiveAnnouncer","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuery","MatOption","MAT_OPTGROUP","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","_c0","_c1","CdkConnectedOverlay","ɵɵlistener","$event","ɵɵattribute","ɵɵclassProp","booleanAttribute","numberAttribute","ɵɵProvidersFeature","MatFormFieldControl","MAT_OPTION_PARENT_COMPONENT","ɵɵInputTransformsFeature","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","_c3","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","_c2","ɵɵelementStart","ɵɵrestoreView","ɵɵresetView","ɵɵtemplate","MatSelect_Conditional_4_Template","MatSelect_Conditional_5_Template","ɵɵelementEnd","ɵɵnamespaceSVG","ɵɵelement","MatSelect_ng_template_10_Template","fallbackOverlayOrigin_r4","ɵɵreference","ɵɵadvance","ɵɵconditional","ɵɵproperty","NgClass","matSelectAnimations","MatSelectTrigger","ɵɵdefineDirective","MatSelectModule","ɵɵdefineNgModule","ɵɵdefineInjector","CommonModule","OverlayModule","MatOptionModule","MatCommonModule","CdkScrollableModule","MatFormFieldModule","_c0","_c1","MatSliderVisualThumb_Conditional_0_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","_c2","_c3","MatSlider_Conditional_6_Conditional_2_For_1_Template","ɵɵelement","tickMark_r1","ɵ$index_14_r2","ctx_r2","ɵɵclassMap","ɵɵstyleProp","MatSlider_Conditional_6_Conditional_2_Template","ɵɵrepeaterCreate","ɵɵrepeaterTrackByIndex","ɵɵrepeater","MatSlider_Conditional_6_Template","ɵɵtemplate","ɵɵconditional","MatSlider_Conditional_7_Template","ɵɵproperty","_MatThumb","_MatTickMark","MAT_SLIDER","InjectionToken","MAT_SLIDER_THUMB","MAT_SLIDER_RANGE_THUMB","MAT_SLIDER_VISUAL_THUMB","MatSliderVisualThumb","_cdr","_ngZone","_elementRef","_slider","inject","Platform","event","rect","isHovered","sliderInput","input","rippleRef","RippleState","animation","ignoreGlobalRippleConfig","_MatThumb","sibling","__ngFactoryType__","ɵɵdirectiveInject","ChangeDetectorRef","NgZone","ElementRef","MAT_SLIDER","ɵɵdefineComponent","rf","ctx","ɵɵviewQuery","MatRipple","_c0","_c1","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵProvidersFeature","MAT_SLIDER_VISUAL_THUMB","ɵɵStandaloneFeature","ɵɵtemplate","MatSliderVisualThumb_Conditional_0_Template","ɵɵelement","ɵɵconditional","ɵɵadvance","ɵɵproperty","MatSlider","v","endInput","startInput","min","prevMin","oldEndValue","oldStartValue","oldValue","max","prevMax","step","prevStartValue","_dir","_globalRippleOptions","animationMode","value","eInput","sInput","thumb","thumbPosition","styles","trackStyle","index","source","input1","input2","sourceThumb","valuetext","visualThumb","percentage","activePercentage","numActive","numInactive","_MatTickMark","endValue","startValue","numInactiveBeforeStartThumb","numInactiveAfterEndThumb","withAnimation","radius","centerX","centerY","dx","dy","Directionality","MAT_RIPPLE_GLOBAL_OPTIONS","ANIMATION_MODULE_TYPE","dirIndex","ɵɵcontentQuery","MAT_SLIDER_THUMB","MAT_SLIDER_RANGE_THUMB","_c2","ɵɵclassMap","ɵɵclassProp","booleanAttribute","numberAttribute","ɵɵInputTransformsFeature","_c3","ɵɵprojectionDef","ɵɵprojection","ɵɵelementStart","ɵɵelementEnd","MatSlider_Conditional_6_Template","MatSlider_Conditional_7_Template","MAT_SLIDER_THUMB_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","MatSliderThumb","MatSliderThumb","numberAttribute","value","stringValue","v","booleanAttribute","_ngZone","_elementRef","_cdr","_slider","EventEmitter","_MatThumb","signal","Subject","inject","Platform","event","isCursorOnSliderThumb","xPos","width","step","numSteps","percentage","impreciseValue","prevValue","min","max","options","fn","isDisabled","__ngFactoryType__","ɵɵdirectiveInject","NgZone","ElementRef","ChangeDetectorRef","MAT_SLIDER","ɵɵdefineDirective","rf","ctx","ɵɵlistener","ɵɵattribute","ɵɵProvidersFeature","MAT_SLIDER_THUMB_VALUE_ACCESSOR","MAT_SLIDER_THUMB","ɵɵInputTransformsFeature","MatSliderModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","MatRippleModule","addFieldFormFields","name","label","nls","fieldName","required","type","pattern","maxlength","errorMessage","message","FieldNameInvlaid","fieldType","options","value","_c0","_forTrack0","$index","$item","_forTrack1","MatCalendarBody_Conditional_0_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵstyleProp","ɵɵattribute","ɵɵtextInterpolate1","MatCalendarBody_For_2_Conditional_1_Template","MatCalendarBody_For_2_For_3_Template","_r2","ɵɵgetCurrentView","ɵɵlistener","$event","item_r3","ɵɵrestoreView","ɵɵresetView","ɵɵelement","ɵ$index_14_r4","ɵ$index_7_r5","ɵɵclassProp","ɵɵproperty","MatCalendarBody_For_2_Template","ɵɵtemplate","ɵɵrepeaterCreate","row_r6","ɵɵconditional","ɵɵrepeater","MatMonthView_For_4_Template","day_r1","ɵɵtextInterpolate","_c1","MatCalendar_ng_template_0_Template","MatCalendar_Case_2_Template","_r1","ɵɵtwoWayListener","ctx_r1","ɵɵtwoWayBindingSet","ɵɵtwoWayProperty","MatCalendar_Case_3_Template","_r3","MatCalendar_Case_4_Template","_r4","MatDatepickerContent_ng_template_2_Template","_c2","_c3","_c4","MatDatepickerToggle_Conditional_2_Template","ɵɵnamespaceSVG","MatDatepickerIntl","Subject","start","end","__ngFactoryType__","ɵɵdefineInjectable","uniqueIdCounter$1","MatCalendarCell","value","displayValue","ariaLabel","enabled","cssClasses","compareValue","rawValue","calendarBodyId","activeCapturingEventOptions","normalizePassiveListenerOptions","passiveCapturingEventOptions","passiveEventOptions","MatCalendarBody","_elementRef","_ngZone","inject","Platform","EventEmitter","Injector","row","event","cell","target","getActualTouchTarget","getCellElement","cellElement","element","changes","columnChanges","rows","numCols","rowIndex","colIndex","cellNumber","movePreview","afterNextRender","activeCell","isStart","isEnd","isInRange","previousCell","previousRow","nextCell","nextRow","col","ɵɵdirectiveInject","ElementRef","NgZone","ɵɵdefineComponent","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","_c0","rf","ctx","ɵɵtemplate","MatCalendarBody_Conditional_0_Template","ɵɵrepeaterCreate","MatCalendarBody_For_2_Template","_forTrack0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵconditional","ɵɵadvance","ɵɵrepeater","ɵɵproperty","ɵɵtextInterpolate1","NgClass","isTableCell","node","rangeEnabled","touchLocation","DateRange","MatDateSelectionModel","selection","_adapter","source","oldValue","date","ɵɵinvalidFactory","MatSingleDateSelectionModel","adapter","clone","ɵɵinject","DateAdapter","MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY","parent","adapter","MatSingleDateSelectionModel","MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER","MatDateSelectionModel","Optional","SkipSelf","DateAdapter","MAT_DATE_RANGE_SELECTION_STRATEGY","InjectionToken","DAYS_PER_WEEK","uniqueIdCounter","MatMonthView","value","oldActiveDate","validDate","DateRange","_changeDetectorRef","_dateFormats","_dateAdapter","_dir","_rangeStrategy","Subscription","EventEmitter","startWith","changes","comparisonChange","event","date","selectedDate","rangeStartDate","rangeEndDate","month","isRtl","hasModifierKey","firstOfMonth","movePreview","cell","previewRange","dragRange","dragDropResult","dayOfMonth","firstDayOfWeek","narrowWeekdays","weekdays","long","i","daysInMonth","dateNames","enabled","ariaLabel","cellClasses","MatCalendarCell","d1","d2","year","day","selectedValue","__ngFactoryType__","ɵɵdirectiveInject","ChangeDetectorRef","MAT_DATE_FORMATS","DateAdapter","Directionality","MAT_DATE_RANGE_SELECTION_STRATEGY","ɵɵdefineComponent","rf","ctx","ɵɵviewQuery","MatCalendarBody","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","ɵɵelementStart","ɵɵrepeaterCreate","MatMonthView_For_4_Template","_forTrack1","ɵɵelementEnd","ɵɵelement","ɵɵlistener","$event","ɵɵadvance","ɵɵrepeater","ɵɵproperty","yearsPerPage","yearsPerRow","MatMultiYearView","isSameMultiYearView","minYearOfPage","getActiveOffset","row","selectedYear","activeMonth","yearName","firstOfYear","displayValue","dateAdapter","date1","date2","minDate","maxDate","year1","year2","startingYear","getStartingYear","activeDate","activeYear","euclideanModulo","a","b","MatYearView","selectedMonth","monthNames","normalizedDate","monthName","maxYear","maxMonth","minYear","minMonth","calendarHeaderId","MatCalendarHeader","_intl","calendar","changeDetectorRef","maxYearOfPage","minYearLabel","maxYearLabel","MatDatepickerIntl","forwardRef","MatCalendar","_c1","ɵɵprojectionDef","ɵɵtext","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ɵɵprojection","ɵɵtextInterpolate","ɵɵattribute","ɵɵclassProp","MatButton","MatIconButton","viewChangedResult","Subject","ComponentPortal","minDateChange","maxDateChange","changeRequiringRerender","view","normalizedYear","normalizedMonth","ɵɵProvidersFeature","MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER","ɵɵtemplate","MatCalendar_ng_template_0_Template","MatCalendar_Case_2_Template","MatCalendar_Case_3_Template","MatCalendar_Case_4_Template","tmp_1_0","ɵɵconditional","CdkPortalOutlet","CdkMonitorFocus","matDatepickerAnimations","trigger","transition","animate","keyframes","style","state","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","InjectionToken","overlay","inject","Overlay","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MatDatepickerContent","_elementRef","_globalModel","_rangeSelectionStrategy","intl","selection","isRange","newSelection","portal","forceRerender","ElementRef","MatDateSelectionModel","ɵɵsyntheticHostListener","ɵɵsyntheticHostProperty","ɵɵclassMap","MatDatepickerContent_ng_template_2_Template","tmp_3_0","CdkTrapFocus","MatDatepickerBase","coerceStringArray","_overlay","_unusedNgZone","_viewContainerRef","scrollStrategy","_model","DOCUMENT","Injector","positionChange","positionStrategy","FlexibleConnectedPositionStrategy","input","_getFocusedElementPierceShadowDom","canRestoreFocus","completeClose","instance","location","take","activeElement","isDialog","overlayRef","OverlayConfig","keyCode","afterNextRender","strategy","primaryX","secondaryX","primaryY","secondaryY","ctrlShiftMetaModifiers","merge","filter","modifier","NgZone","ViewContainerRef","ɵɵdefineDirective","booleanAttribute","ɵɵInputTransformsFeature","MatDatepicker","ɵMatDatepicker_BaseFactory","ɵɵgetInheritedFactory","ɵɵInheritDefinitionFeature","MatDatepickerInputEvent","target","targetElement","MatDatepickerInputBase","newValue","element","model","control","controlValue","min","max","dateInputsHaveChanged","fn","c","isDisabled","lastValueWasValid","hasChanged","adapter","keys","key","previousValue","currentValue","MAT_DATEPICKER_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","MatDatepickerInput","MAT_DATEPICKER_VALIDATORS","NG_VALIDATORS","datepicker","validValue","wasMatchingValue","elementRef","dateFormats","_formField","signal","Validators","modelValue","MAT_FORM_FIELD","ɵɵhostProperty","MAT_INPUT_VALUE_ACCESSOR","MatDatepickerToggleIcon","MatDatepickerToggle","defaultTabIndex","parsedTabIndex","datepickerStateChanged","of","inputStateChanged","datepickerToggled","ɵɵinjectAttribute","dirIndex","ɵɵcontentQuery","_c2","_c4","_c3","MatDatepickerToggle_Conditional_2_Template","MatDatepickerModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","MatDatepickerIntl","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","CommonModule","MatButtonModule","OverlayModule","A11yModule","PortalModule","MatCommonModule","MatDatepickerContent","MatDatepickerToggle","MatCalendarHeader","CdkScrollableModule","ɵɵelement","ɵɵproperty","item_r2","required","name","id","i_r3","type","pattern","min","max","maxlength","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","option_r4","label","ɵɵtemplate","FormComponent_ng_container_1_mat_form_field_3_mat_select_4_Conditional_1_Conditional_1_div_1_Template","ctx_r4","getSelectedOption","FormComponent_ng_container_1_mat_form_field_3_mat_select_4_Conditional_1_Conditional_1_Template","ɵɵconditional","appForm","controls","value","length","option_r6","FormComponent_ng_container_1_mat_form_field_3_mat_select_4_Conditional_1_Template","ɵɵrepeaterCreate","FormComponent_ng_container_1_mat_form_field_3_mat_select_4_For_3_Template","ɵɵrepeaterTrackByIdentity","multiple","ɵɵrepeater","options","picker_r7","message_r8","message","FormComponent_ng_container_1_mat_form_field_3_div_6_div_1_span_1_Template","errors","FormComponent_ng_container_1_mat_form_field_3_div_6_div_1_Template","errorMessage","message_r9","FormComponent_ng_container_1_mat_form_field_3_div_7_div_1_span_1_Template","FormComponent_ng_container_1_mat_form_field_3_div_7_div_1_Template","getPasswordStrengthNum","getPasswordProgressColor","FormComponent_ng_container_1_mat_form_field_3_input_3_Template","FormComponent_ng_container_1_mat_form_field_3_mat_select_4_Template","FormComponent_ng_container_1_mat_form_field_3_div_5_Template","FormComponent_ng_container_1_mat_form_field_3_div_6_Template","FormComponent_ng_container_1_mat_form_field_3_div_7_Template","FormComponent_ng_container_1_mat_form_field_3_mat_progress_bar_8_Template","touched","step","thumbLabel","inputFileMaxSizeError","ɵɵlistener","$event","ɵɵrestoreView","_r10","ɵɵnextContext","ɵɵresetView","onFileSelected","FormComponent_ng_container_1_div_5_div_7_Template","ɵɵtextInterpolate2","accept","_r11","$implicit","deleteAddedField","ɵɵclassProp","deletable","ɵɵelementContainerStart","FormComponent_ng_container_1_mat_form_field_3_Template","FormComponent_ng_container_1_div_4_Template","FormComponent_ng_container_1_div_5_Template","FormComponent_ng_container_1_div_6_Template","_r12","toggleModal","nls","addNewField","_r13","cancelForm","canButtonTitle","FormComponent_div_3_button_1_Template","valid","subButtonTitle","item_r16","i_r17","option_r18","FormComponent_ng_template_5_ng_container_1_mat_select_5_For_2_Template","message_r19","FormComponent_ng_template_5_ng_container_1_div_6_div_1_span_1_Template","appAddFormFieldForm","FormComponent_ng_template_5_ng_container_1_div_6_div_1_Template","FormComponent_ng_template_5_ng_container_1_input_4_Template","FormComponent_ng_template_5_ng_container_1_mat_select_5_Template","FormComponent_ng_template_5_ng_container_1_div_6_Template","_r14","onSubmitAddField","FormComponent_ng_template_5_ng_container_1_Template","addFieldFormFields","cancel","okay","FormComponent","fb","inject","FormBuilder","cdRef","ChangeDetectorRef","formFields","dynamicFormFields","BehaviorSubject","onSubmit","EventEmitter","onCancel","onChange","formType","submittable","inputFileField","uploadedFile","isModalOpen","signal","ngOnInit","subscribeDynamicForm","buildAddFormFieldForm","detectChanges","subscribeValueChanges","item","controlValue","filter","option","includes","formGroupItems","forEach","defaultValue","group","buildForm","subscribe","disabled","emit","__spreadValues","valueChanges","password","confirmpassword","passwordMatching","setErrors","event","inputFile","target","input","files","file","maxSize","size","updateValueAndValidity","setValue","errMsg","find","submitForm","preventDefault","data","getValue","formData","getPasswordStrength","failedCriteria","test","push","state","set","newFields","map","next","prevFields","fieldName","replace","toLowerCase","trim","fieldType","selectors","inputs","outputs","standalone","features","ɵɵProvidersFeature","provideNativeDateAdapter","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","FormComponent_ng_container_1_Template","FormComponent_div_2_Template","FormComponent_div_3_Template","FormComponent_ng_template_5_Template","addField","MatFormFieldModule","MatFormField","MatLabel","MatSuffix","MatInputModule","MatInput","FormsModule","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","MaxLengthValidator","PatternValidator","ReactiveFormsModule","FormGroupDirective","FormControlName","CommonModule","NgForOf","NgIf","MatButtonModule","MatButton","MatProgressBarModule","MatProgressBar","MatSelectModule","MatSelect","MatSelectTrigger","MatOption","MatSliderModule","MatSlider","MatSliderThumb","ModalWindowComponent","MatIconModule","MatIcon","MatRippleModule","MatRipple","MatDatepickerModule","MatDatepicker","MatDatepickerInput","MatDatepickerToggle","styles","passwordPattern","emailPattern","phonePattern","authFormFields","login","name","label","nls","email","options","errorMessage","type","message","emailRequired","invalidEmail","required","id","model","pattern","password","passwordRequired","signup","fname","fnameRequired","lname","lnameRequired","phone","phoneRequired","invalidMobileFormat","invalidPassword","confirmpassword","passwordMatchError","matching","chnagePasswordFields","name","label","errorMessage","type","message","nls","ChangePasswordRequired","required","id","model","pattern","options","ChangePasswordRequiredNew","invalidPassword","passwordPattern","accountItems","ViewProfile","EditProfile","ChangePassword","resetAccount","backupData","HelpSupport","About","BiometricSettings","SwitchTheme","editProfileFields","fname","fnameRequired","lname","lnameRequired","email","emailRequired","disabled","phone","phoneRequired","invlaidPhone","phonePattern","backupDataFormFields","backupFile","backupFileName","backupFileIsRequired","accept","_c0","_c1","MatSlideToggle_Conditional_10_Template","rf","ctx","ɵɵelementStart","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","InjectionToken","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","MatSlideToggle","MatSlideToggleChange","source","checked","nextUniqueId","isChecked","value","_elementRef","_focusMonitor","_changeDetectorRef","tabIndex","defaults","animationMode","_","EventEmitter","focusOrigin","changes","fn","control","isDisabled","__ngFactoryType__","ɵɵdirectiveInject","ElementRef","FocusMonitor","ChangeDetectorRef","ɵɵinjectAttribute","ANIMATION_MODULE_TYPE","ɵɵdefineComponent","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵhostProperty","ɵɵattribute","ɵɵclassMap","ɵɵclassProp","booleanAttribute","numberAttribute","ɵɵProvidersFeature","NG_VALIDATORS","ɵɵInputTransformsFeature","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","ɵɵlistener","ɵɵrestoreView","ɵɵresetView","ɵɵtemplate","$event","ɵɵprojection","switch_r2","ɵɵreference","ɵɵproperty","ɵɵadvance","ɵɵconditional","MatRipple","_MatInternalFormField","MatSlideToggleModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","MatSlideToggle","MatCommonModule","ɵɵelementStart","ɵɵtext","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r2","themeMode","ɵɵproperty","toLowerCase","ɵɵtemplate","AccountComponent_mat_list_item_9_div_1_span_3_Template","item_r2","label","id","isBiometricEnabled","ɵɵlistener","ɵɵrestoreView","_r1","$implicit","ɵɵnextContext","ɵɵresetView","onClickAccountItem","disabled","AccountComponent_mat_list_item_9_div_1_Template","AccountComponent_mat_list_item_9_div_2_Template","isBiometricAvailable","nls","logoutText","resetText","fname","myProfileData","first_name","lname","last_name","email","phone","ɵɵtextInterpolate1","verified","ɵɵclassProp","done","unverified","lastLogin","moment","last_login","format","memberSince","createdAt","_r4","toggleModal","aboutApp","aboutText1","appOwnership","aboutText2","owner","aboutText3","contactMessage","okay","_r5","HelpSupport","supportText1","supportEmail","supportEmailValue","ɵɵsanitizeUrl","_r6","backupData","restorePanelOpen","backupMyData","importMyData","cancel","AccountComponent_ng_template_13_p_0_Template","AccountComponent_ng_template_13_p_1_Template","AccountComponent_ng_template_13_div_2_Template","AccountComponent_ng_template_13_div_3_Template","AccountComponent_ng_template_13_div_4_Template","AccountComponent_ng_template_13_div_5_Template","modalId","$event","_r7","submitPanel","togglePanel","handleFormChange","changePasswordFields","save","_r8","editProfileFields","_r9","backupDataFormFields","import","AccountComponent_ng_template_15_app_form_0_Template","AccountComponent_ng_template_15_app_form_1_Template","AccountComponent_ng_template_15_app_form_2_Template","panelId","AccountComponent","_authService","inject","AuthenticationService","_api","ApiService","_message","MessagesService","_appService","AppService","renderer","Renderer2","window","isModalOpen","signal","modalType","accountItems","modalHeading","rightPanelOpen","panelHeading","chnagePasswordFields","constructor","getWindow","getMyProfileData","getCurrentTheme","checkBiometricAvailable","checkBiometricEnabled","__async","set","localStorage","getItem","prefersDark","matchMedia","matches","themePreference","data","currentUser","logout","EditProfile","ChangePassword","filledEditProfileField","map","item","defaultValue","name","About","resetAccount","switchTheme","switchBiometric","removeItem","setItem","getAccountItems","filter","removeClass","document","body","addClass","state","submitModal","local_clear","result","hit","success","message","userPreferences","JSON","parse","user","local_get","password","new_password","stringify","error","incorrectPassword","isAuthenticated","local_post","local_delete","restoreBackupData","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","AccountComponent_mat_list_item_9_Template","AccountComponent_ng_template_13_Template","AccountComponent_ng_template_15_Template","ɵɵtextInterpolate2","CommonModule","NgForOf","NgIf","ModalWindowComponent","MatIconModule","MatButtonModule","MatButton","MatRippleModule","MatRipple","MatListModule","MatList","MatListItem","MatDivider","RightPanelComponent","FormComponent","MatSlideToggleModule","MatSlideToggle","styles","ReportsComponent","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","nls","__spreadProps","__spreadValues","generic","trackHealth","myWidgets","greeting","morning","afternoon","evening","addWidget","reorder","title","titleRequired","invalidTitle","target","color","transparency","motivation","maxSizeError","motivationRequired","preview","cancelWidget","editWidget","deleteWidget","deleteWidgetText","addWidgetsUsingPlusButton","addWidgetSuccess","updateWidgetSuccess","deleteWidgetSuccess","widgetError","reorderWidgetSuccess","widgetType","typeRequired","dashboard_default","matMenuAnimations","trigger","state","style","transition","animate","fadeInItems","transformMenu","MAT_MENU_SCROLL_STRATEGY","InjectionToken","overlay","inject","Overlay","MAT_MENU_SCROLL_STRATEGY_FACTORY","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","MatMenuModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","CommonModule","MatRippleModule","MatCommonModule","OverlayModule","CdkScrollableModule","deepCloneNode","node","clone","descendantsWithId","nodeName","i","transferCanvasData","transferInputData","transferData","selector","callback","descendantElements","cloneElements","cloneUniqueId","source","context","getMutableClientRect","element","rect","isInsideClientRect","clientRect","x","y","top","bottom","left","right","adjustDomRect","domRect","isPointerNearDomRect","threshold","pointerX","pointerY","width","height","xThreshold","yThreshold","ParentPositionTracker","_document","elements","event","target","_getEventTarget","cachedPosition","scrollPosition","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","position","getRootNode","viewRef","rootNodes","wrapper","extendStyles","dest","importantProperties","key","value","toggleNativeDragInteractions","enable","userSelect","toggleVisibility","combineTransforms","transform","initialTransform","matchElementSize","sourceRect","getTransform","parseCssTimeUnitsToMs","multiplier","getTransformTransitionDurationInMs","computedStyle","transitionedProperties","parseCssPropertyValue","property","prop","propertyIndex","rawDurations","rawDelays","name","part","PreviewRef","_rootElement","_direction","_initialDomRect","_previewTemplate","_previewClass","_pickupPositionOnPage","_initialTransform","_zIndex","parent","supportsPopover","className","handler","previewConfig","previewClass","previewTemplate","preview","rootRect","passiveEventListenerOptions","normalizePassiveListenerOptions","activeEventListenerOptions","activeCapturingEventOptions$1","MOUSE_EVENT_IGNORE_TIME","dragImportantProperties","DragRef","handle","_config","_ngZone","_viewportRuler","_dragDropRegistry","signal","Subject","Subscription","targetHandle","pointerPosition","distanceX","distanceY","isDelayElapsed","container","constrainedPointerPosition","offset","activeTransform","handles","coerceElement","disabledHandles","template","rootElement","boundaryElement","direction","shadowDomSelectStart","isTouchEvent","shadowRoot","dropContainer","placeholder","anchor","referenceElement","isDragging","isTouchSequence","isAuxiliaryMouseButton","isSyntheticEvent","isFakeEvent","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","rootStyles","scrollEvent","currentIndex","distance","isPointerOverContainer","rawX","rawY","newContainer","placeholderRect","duration","resolve","timeout","placeholderConfig","placeholderTemplate","elementRect","handleElement","referenceRect","point","svgMatrix","svgPoint","dropContainerLock","pickupX","pickupY","boundaryRect","previewWidth","previewHeight","minY","maxY","minX","maxX","clamp$1","pointerPositionOnPage","delta","positionSinceLastChange","changeX","changeY","shouldEnable","scale","styles","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","scrollDifference","_getShadowRoot","initialParent","previewContainer","documentRef","min","max","moveItemInArray","array","fromIndex","toIndex","from","clamp","to","transferArrayItem","currentArray","targetArray","targetIndex","clamp","value","max","SingleAxisSortStrategy","_dragDropRegistry","items","item","pointerX","pointerY","pointerDelta","siblings","newIndex","isHorizontal","currentIndex","currentItem","siblingAtNewPosition","currentPosition","newPosition","delta","itemOffset","siblingOffset","oldOrder","moveItemInArray","sibling","index","isDraggedItem","offset","elementToOffset","transformAmount","combineTransforms","adjustDomRect","isInsideClientRect","activeDraggables","placeholder","newPositionReference","element","predicate","rootElement","initialTransform","p","topDifference","leftDifference","clientRect","drag","container","elementToMeasure","getMutableClientRect","a","b","immediateSibling","start","end","itemPositions","lastItemRect","firstItemRect","direction","MixedSortStrategy","_document","childNodes","i","node","previousSwap","toSwapWith","previousIndex","current","overlapElement","newOverlapElement","enterIndex","targetItem","root","nextSibling","elementAtPoint","_getShadowRoot","minDistance","minIndex","x","y","distance","DROP_PROXIMITY_THRESHOLD","SCROLL_PROXIMITY_THRESHOLD","AutoScrollVerticalDirection","AutoScrollHorizontalDirection","DropListRef","_ngZone","_viewportRuler","Subject","Subscription","interval","animationFrameScheduler","takeUntil","scrollStep","coercedElement","coerceElement","ParentPositionTracker","previousContainer","isPointerOverContainer","dropPoint","event","previousItems","connectedTo","orientation","strategy","elements","oldContainerIndex","newContainerIndex","isPointerNearDomRect","result","scrollNode","verticalScrollDirection","horizontalScrollDirection","position","getElementScrollDirections","width","height","domRect","getVerticalScrollDirection","getHorizontalScrollDirection","styles","elementFromPoint","activeSiblings","scrollDifference","shadowRoot","draggedItems","top","bottom","yThreshold","left","right","xThreshold","computedVertical","computedHorizontal","scrollTop","scrollLeft","activeCapturingEventOptions","normalizePassiveListenerOptions","activeApps","_ResetsLoader","__ngFactoryType__","ɵɵdefineComponent","ɵɵStandaloneFeature","rf","ctx","DragDropRegistry","inject","ApplicationRef","EnvironmentInjector","signal","drop","instances","isTouchEvent","e","config","name","streams","Observable","observer","callback","merge","instance","componentRef","createComponent","ɵɵinject","NgZone","DOCUMENT","ɵɵdefineInjectable","DEFAULT_CONFIG","DragDrop","DragRef","ViewportRuler","CDK_DRAG_PARENT","InjectionToken","CDK_DRAG_HANDLE","InjectionToken","CDK_DRAG_CONFIG","InjectionToken","DRAG_HOST_CLASS","CDK_DROP_LIST","CdkDrag","value","element","dropContainer","_document","_ngZone","_viewContainerRef","config","_dir","dragDrop","_changeDetectorRef","_selfHandle","_parentDrag","Subject","BehaviorSubject","EventEmitter","Observable","observer","subscription","map","movedEvent","inject","Injector","takeUntil","afterNextRender","changes","rootSelectorChange","positionChange","index","handle","handles","preview","placeholder","rootElement","boundary","coerceElement","ref","dir","dragStartDelay","coerceNumberProperty","take","parent","drag","startEvent","releaseEvent","endEvent","enterEvent","exitEvent","dropEvent","lockAxis","constrainPosition","previewClass","boundaryElement","draggingDisabled","rootElementSelector","previewContainer","tap","handleElements","switchMap","merge","item","startWith","handleInstance","dragRef","__ngFactoryType__","ɵɵdirectiveInject","ElementRef","DOCUMENT","NgZone","ViewContainerRef","Directionality","DragDrop","ChangeDetectorRef","CDK_DRAG_HANDLE","CDK_DRAG_PARENT","ɵɵdefineDirective","rf","ctx","ɵɵclassProp","booleanAttribute","numberAttribute","ɵɵProvidersFeature","ɵɵInputTransformsFeature","ɵɵNgOnChangesFeature","CDK_DROP_LIST_GROUP","_uniqueIdCounter","CdkDropList","value","element","dragDrop","_changeDetectorRef","_scrollDispatcher","_dir","_group","config","Subject","EventEmitter","drag","drop","index","item","a","b","ref","startWith","takeUntil","siblings","coerceArray","correspondingDropList","list","scrollableParents","scrollable","container","coerceNumberProperty","event","dropEvent","merge","lockAxis","draggingDisabled","sortingDisabled","listAutoScrollDisabled","listOrientation","__ngFactoryType__","ɵɵdirectiveInject","ElementRef","DragDrop","ChangeDetectorRef","ScrollDispatcher","Directionality","CDK_DROP_LIST_GROUP","CDK_DRAG_CONFIG","ɵɵdefineDirective","rf","ctx","ɵɵattribute","ɵɵclassProp","booleanAttribute","ɵɵProvidersFeature","CDK_DROP_LIST","ɵɵInputTransformsFeature","CDK_DRAG_PLACEHOLDER","InjectionToken","CdkDragPlaceholder","templateRef","inject","CDK_DRAG_PARENT","__ngFactoryType__","ɵɵdirectiveInject","TemplateRef","ɵɵdefineDirective","ɵɵProvidersFeature","widgetForm","name","label","nls","color","options","errorMessage","defaultValue","required","id","type","model","pattern","transparency","min","max","title","message","titleRequired","invalidTitle","maxlength","target","widgetType","value","typeRequired","motivation","motivationRequired","maxSizeError","accept","maxSize","FabButtonComponent","onClick","EventEmitter","disabled","constructor","onClickButton","event","emit","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵlistener","$event","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","MatIconModule","MatIcon","MatRippleModule","MatButtonModule","MatFabButton","styles","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","nls","addWidgetsUsingPlusButton","ɵɵtemplate","DashboardComponent_Conditional_20_div_1_div_1_Template","ɵɵclassMap","ɵɵproperty","ɵɵpureFunction1","_c0","item_r3","color","mapToHex","transparency","title","motivation","ɵɵsanitizeUrl","target","ɵɵlistener","$event","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","onDrop","DashboardComponent_Conditional_20_div_1_Template","dashboardCards","item_r5","_r4","$implicit","editWidget","to","DashboardComponent_Conditional_21_div_1_Template","_r7","toggleDeleteModal","DashboardComponent_ng_template_24_div_1_div_15_Template","preview","addWidgetData","isEdit","getValue","_r6","submitPanel","closePanel","handleFormChange","DashboardComponent_ng_template_24_div_1_Template","widgetFormFields","save","cancel","cancelWidget","deleteWidgetText","DashboardComponent","_api","inject","ApiService","_message","MessagesService","greeting","name","rightPanelOpen","signal","widgetForm","reorderEbabled","isModalOpen","isDeleteModalOpen","BehaviorSubject","constructor","setGreeting","isEditSubscription","getWidgets","__async","currentHour","Date","getHours","morning","afternoon","evening","user","local_get","first_name","subscribe","value","map","el","defaultValue","type","required","event","previousContainer","container","moveItemInArray","previousIndex","currentIndex","transferArrayItem","data","result","item","id","set","setWidget","local_put","success","reorderWidgetSuccess","createWidget","local_post","addWidgetSuccess","updateWidget","updateWidgetSuccess","deleteWidget","local_delete","deleteWidgetSuccess","enableReorder","hexString","Math","round","toString","length","convertToBlob","file","Promise","resolve","reject","reader","FileReader","onload","blob","onerror","readAsDataURL","togglePanel","state","updateData","__spreadProps","__spreadValues","next","toggleModal","submitModal","submitDeleteModal","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","DashboardComponent_div_19_Template","DashboardComponent_Conditional_20_Template","DashboardComponent_Conditional_21_Template","DashboardComponent_ng_template_24_Template","DashboardComponent_ng_template_26_Template","DashboardComponent_ng_template_28_Template","ɵɵtextInterpolate1","trackHealth","myWidgets","ɵɵconditional","addWidget","CommonModule","NgForOf","NgIf","NgStyle","MatIconModule","MatIcon","MatRippleModule","MatRipple","MatButtonModule","MatIconButton","MatFabButton","RouterModule","RouterLink","MatMenuModule","CdkDropList","CdkDrag","CdkDragPlaceholder","RightPanelComponent","FormComponent","MatDividerModule","MatDivider","ModalWindowComponent","FabButtonComponent","styles","nls","__spreadProps","__spreadValues","generic","selectSchedule","loggingDate","editLog","addLog","CancelAddEdit","pleaseAddSchedule","BasicDetails","achieved","target","logging_default","loggingViewFormFieldsInitial","name","label","nls","selectSchedule","required","type","options","defaultValue","loggingDate","loggingAddFormFieldsInitial","disabled","import_moment","ɵɵelementStart","ɵɵlistener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","handleLoggingViewFormChange","ɵɵelementEnd","ɵɵproperty","loggingViewFormFields","getValue","task_r4","_r3","$implicit","createLogging","ɵɵtext","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","taskName","taskDescription","nls","pleaseAddSchedule","loggingAddFormFields","item_r6","oldvalue","itemName","ɵɵclassProp","$index_r8","target","getDisabledFormTarget","fields","achieved","selectedTask","ɵɵtemplate","LoggingComponent_ng_template_6_For_1_Conditional_1_Template","LoggingComponent_ng_template_6_For_1_div_3_Template","LoggingComponent_ng_template_6_For_1_p_5_Template","_r5","handleAddLoggingFormSubmit","LoggingComponent_ng_template_6_For_1_Conditional_7_Template","ɵɵconditional","ɵɵrepeaterCreate","LoggingComponent_ng_template_6_For_1_Template","ɵɵrepeaterTrackByIndex","ɵɵrepeater","getFlatFieldItems","CancelAddEdit","LoggingComponent_ng_template_8_p_0_Template","modalInfo","LoggingComponent","route","_api","inject","ApiService","_message","MessagesService","widgetId","widgetData","BehaviorSubject","scheduleList","selectedScheduleData","rightPanelOpen","signal","isEdit","loggingViewFormData","isModalOpen","weekly","scheduledTasks","moment","loggingData","constructor","ngOnInit","params","subscribe","setWidgetData","setScheduleSelectFormFields","Date","toISOString","__async","filteredWidget","local_get","find","widget","id","next","type","day","today","delay","options","buildScheduleOptions","loggingViewFormFieldsInitial","defaultSchedule","value","map","field","name","defaultValue","loggingDate","max","schedules","filteredSchedule","filter","schedule","startDay","forEach","option","label","scheduleName","push","data","selectedSchedule","scheduleId","getScheduledTasks","format","toggleModal","state","set","submitModal","togglePanel","task","tasks","includes","scheduleOptions","existingLog","local_get_by_id","taskId","log","basicFields","loggingAddFormFieldsInitial","basic","items","taskItem","index","taskFields","formFields","taskField","deletable","disabled","logs","__spreadProps","__spreadValues","formData","closePanel","result","local_put","logData","local_post","Object","keys","ɵɵdirectiveInject","ActivatedRoute","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","LoggingComponent_app_form_1_Template","LoggingComponent_div_3_Template","LoggingComponent_div_4_Template","LoggingComponent_ng_template_6_Template","LoggingComponent_ng_template_8_Template","length","editLog","addLog","CommonModule","NgForOf","NgIf","MatRippleModule","FormComponent","RightPanelComponent","ModalWindowComponent","MatDividerModule","MatDivider","MatButtonModule","styles","MatCardModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","CommonModule","ɵɵelementContainerStart","ɵɵelementStart","ɵɵlistener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","submit","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","authFields","nls","Login","_r3","Signup","_r4","authService","launchBiometric","ɵɵtext","ɵɵtextInterpolate","loginUsingBiometric","EnableBiometricMessage","AuthenticationComponent","inject","AuthenticationService","authType","signal","computed","authFormFields","changeAuthType","update","val","loginWithUserPass","data","signupWithUserPass","biometricEnabled","window","localStorage","getItem","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ɵɵelement","ɵɵtemplate","AuthenticationComponent_ng_container_8_Template","AuthenticationComponent_ng_container_9_Template","AuthenticationComponent_button_10_Template","toggleModal","submitModal","AuthenticationComponent_ng_template_15_Template","welcome","LoginSubheading","SignupSubheading","createAccount","loginExisting","isModalOpen","getValue","EnableBiometric","BiometricEnrolledOnDevice","MatButtonModule","MatButton","MatFormFieldModule","MatCardModule","MatInputModule","FormsModule","CommonModule","NgIf","FormComponent","ModalWindowComponent","styles","nls","__spreadProps","__spreadValues","generic","addTasks","editTask","CancelAddEdit","deleteTaskMessage","deleteTask","CancelAddHeader","SelectedWidget","taskName","taskDescription","notasksFound","created","updated","AddTaskItem","EditTaskItem","createTask","tasks_default","import_moment","ɵɵelementStart","ɵɵlistener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","handleFormChange","ɵɵelementEnd","ɵɵproperty","nls","okay","widgetSelectFormFields","getValue","item_r4","_r3","$implicit","onClickTaskItem","ɵɵtext","copyEditAdd","ɵɵadvance","ɵɵtextInterpolate","taskName","taskDescription","ɵɵtextInterpolate2","moment","createdAt","format","ɵɵelement","notasksFound","field_r7","label","item_r8","formData","name","ɵɵelementContainerStart","ɵɵtemplate","TasksComponent_ng_template_6_ng_container_1_div_3_Template","_r6","onClickEditTaskItemFromAddPanel","onClickDeleteTaskItemFromAddPanel","formFields","_r9","deleteSelectedTask","delete","_r5","handleAddTaskFormChange","TasksComponent_ng_template_6_ng_container_1_Template","onClickAddItem","TasksComponent_ng_template_6_button_4_Template","submitPanel","taskFormFields","addTaskItems","AddTaskItem","isEdit","panelSubmitButtonDisbale","CancelAddEdit","deleteTaskMessage","_r10","toggleModal","onSubmitAddField","addTaskFormFields","cancel","TasksComponent_ng_template_8_p_0_Template","TasksComponent_ng_template_8_p_1_Template","TasksComponent_ng_template_8_app_form_2_Template","modalInfo","TasksComponent","_api","inject","ApiService","_message","MessagesService","cdRef","ChangeDetectorRef","fb","FormBuilder","rightPanelOpen","signal","isModalOpen","BehaviorSubject","tasksList","selectedWidget","selelctedTask","required","type","addTaskFormData","ngOnInit","settaskFormFields","getTasksList","subscribe","value","formKeys","Object","keys","valid","key","items","length","set","__async","tasks","local_get","data","getInitialFormFields","next","widgetemp","__spreadValues","defaultValue","options","buildWidgetOptions","SelectedWidget","widgetId","widgets","forEach","element","push","title","id","filter","item","values","closePanel","CancelAddHeader","togglePanel","state","result","local_put","local_post","success","message","error","map","deletable","AddField","field","createTask","deleteTask","submitModal","local_delete","newItems","uuidv4","oldItems","__spreadProps","EditTaskItem","filteredItems","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","TasksComponent_app_form_1_Template","TasksComponent_div_2_Template","TasksComponent_div_3_Template","TasksComponent_ng_template_6_Template","TasksComponent_ng_template_8_Template","editTask","addTasks","FabButtonComponent","FormComponent","RightPanelComponent","ModalWindowComponent","CommonModule","NgForOf","NgIf","MatButtonModule","MatButton","MatRippleModule","MatRipple","MatIconModule","MatIcon","MatFormFieldModule","MatInputModule","FormsModule","ReactiveFormsModule","MatSelectModule","styles","nls","__spreadProps","__spreadValues","generic","SelectedWidget","addSchedule","editSchedule","CancelAddHeader","CancelAddEdit","scheduleName","scheduleDescription","selectTasks","noOfTasks","noSchedulesFound","startDay","schedules_default","import_moment","days","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY","dayOptions","value","label","weeklyField","name","nls","startDay","type","required","options","defaultValue","ɵɵelementStart","ɵɵlistener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","handleFormChange","ɵɵelementEnd","ɵɵproperty","nls","okay","widgetSelectFormFields","getValue","item_r4","_r3","$implicit","onClickScheduleItem","ɵɵtext","copyEditAdd","ɵɵadvance","ɵɵtextInterpolate","scheduleName","scheduleDescription","ɵɵtextInterpolate2","tasks","length","noOfTasks","moment","createdAt","format","ɵɵelement","noSchedulesFound","_r5","closePanel","submitAddSchedule","handleAddScheduleFormChange","scheduleFormFields","cancel","CancelAddEdit","ɵɵtemplate","SchedulesComponent_ng_template_8_p_0_Template","modalInfo","SchedulesComponent","_api","inject","ApiService","_message","MessagesService","BehaviorSubject","selectedWidget","signal","rightPanelOpen","isEdit","isModalOpen","schedulesList","selelctedSchedule","ngOnInit","setWidgetSelectFormFields","isWeekly","widgets","widgetId","some","widget","id","type","setScheduleFormFields","__async","widgetData","buildWidgetOptions","widgetOptions","options","defaultWidget","value","taskOptions","buildTasksOptions","weekly","data","getInitialFormFields","next","scheduleFields","name","label","SelectedWidget","required","defaultValue","maxlength","selectTasks","multiple","weeklyField","splice","field","local_get","forEach","element","push","title","filteredTasks","filter","task","taskName","set","schedules","item","prevFormData","fields","map","togglePanel","state","editSchedule","CancelAddHeader","createSchedule","toggleModal","submitModal","result","local_put","local_post","success","message","error","find","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","SchedulesComponent_app_form_1_Template","SchedulesComponent_div_2_Template","SchedulesComponent_div_3_Template","SchedulesComponent_ng_template_6_Template","SchedulesComponent_ng_template_8_Template","addSchedule","CommonModule","NgForOf","NgIf","FormComponent","FabButtonComponent","RightPanelComponent","ModalWindowComponent","MatIconModule","MatIcon","MatRippleModule","MatRipple","styles","routes","path","component","DashboardComponent","ReportsComponent","TasksComponent","SchedulesComponent","AccountComponent","LoggingComponent","AuthenticationComponent","ANIMATION_PREFIX","AsyncAnimationRendererFactory","doc","delegate","zone","animationType","moduleImpl","inject","ChangeDetectionScheduler","ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN","loadFn","m","moduleImplPromise","e","RuntimeError","ɵcreateEngine","ɵAnimationRendererFactory","rendererFactory","hostElement","rendererType","renderer","dynamicRenderer","DynamicDelegationRenderer","animationRendererFactory","animationRenderer","__ngFactoryType__","ɵɵinvalidFactory","ɵɵdefineInjectable","impl","fn","name","namespace","value","parent","newChild","refChild","isMove","oldChild","isHostElement","selectorOrNode","preserveContent","node","el","style","flags","target","eventName","callback","propOrEventName","InjectionToken","provideAnimationsAsync","type","performanceMarkFeature","makeEnvironmentProviders","RendererFactory2","DOCUMENT","DomRendererFactory2","NgZone","ANIMATION_MODULE_TYPE","appConfig","providers","provideRouter","routes","provideClientHydration","provideAnimationsAsync","navItemsList","name","nls","navbar","home","icon","id","to","tasks","schedule","account","allPaths","subname","reports","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵclassProp","ctx_r1","currentPage","to","item_r1","ɵɵproperty","id","ɵɵtextInterpolate","icon","name","ɵɵtemplate","NavbarComponent_nav_0_div_3_Template","navItems","ɵɵtextInterpolate1","subname_r4","ɵɵlistener","ɵɵrestoreView","_r3","ɵɵnextContext","ɵɵresetView","goBack","NavbarComponent_nav_1_span_10_Template","goToHome","subname","nls","navbar","brand","NavbarComponent","router","inject","Router","_authService","AuthenticationService","_api","ApiService","bottomBarShowCase","signal","allPaths","showBottomBar","showTopBar","navItemsList","paths","BehaviorSubject","ngOnInit","buildPathsFromWidgets","subscribeRouterEvents","events","pipe","filter","event","NavigationEnd","subscribe","currentRouterState","routerState","activeNavItem","getValue","item","snapshot","url","includes","set","length","isAuthenticated","navigate","__async","widgets","local_get","widgetPaths","forEach","element","path","encodeURIComponent","title","logging","push","next","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","NavbarComponent_nav_0_Template","NavbarComponent_nav_1_Template","NavbarComponent_nav_2_Template","MatIconModule","MatIcon","MatButtonModule","MatButton","MatIconButton","CommonModule","NgForOf","NgIf","RouterModule","RouterLink","styles","MatProgressSpinnerModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","CommonModule","MatCommonModule","LoaderComponent","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","MatProgressSpinnerModule","styles","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵclassMap","message_r1","type","ɵɵadvance","ɵɵtextInterpolate1","text","MessagesComponent","messageService","inject","MessagesService","messages","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ɵɵtemplate","MessagesComponent_div_0_Template","ɵɵproperty","CommonModule","NgForOf","styles","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","nls","exitAppMessage","ɵɵtemplate","AppComponent_ng_template_7_p_0_Template","ɵɵproperty","modalInfo","AppComponent","_authService","inject","AuthenticationService","_loader","LoaderService","_appService","AppService","_message","MessagesService","cdr","ChangeDetectorRef","renderer","Renderer2","isModalOpen","signal","window","ngOnInit","getWindow","console","log","cordova","applySystemTheme","matchMedia","addEventListener","document","onBackButtonPressed","bind","prefersDark","matches","themePreference","localStorage","getItem","applyTheme","theme","removeClass","body","addClass","event","preventDefault","stopPropagation","location","pathname","toggleModal","warning","detectChanges","setTimeout","state","set","exitApp","submitModal","data","navigator","app","selectors","hostBindings","rf","ctx","ɵɵlistener","AppComponent_Conditional_5_Template","$event","AppComponent_ng_template_7_Template","ɵɵconditional","isLoading","RouterOutlet","MatButtonModule","NavbarComponent","LoaderComponent","MessagesComponent","HttpClientModule","ModalWindowComponent","CommonModule","NgIf","styles","bootstrapApplication","AppComponent","appConfig","catch","err","console","error"],"x_google_ignoreList":[0,1,2,3,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,66,67,68,69,70,71,72,73,74,75,76,80,81,82,88,89,90,91,92,93,94,95,96,97,99,104,108,109,119,130,135]}